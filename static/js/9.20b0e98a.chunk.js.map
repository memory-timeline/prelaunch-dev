{"version":3,"sources":["components/simple_snackbar.jsx","hooks/title.jsx","hooks/date.jsx","hooks/story.jsx","pages/memory/RemovePhotoIcon.jsx","pages/memory/UpdateMemoryIcon.jsx","pages/memory/DeleteMemoryIcon.jsx","components/confirmation.jsx","pages/memory/MemoryActions.jsx","pages/memory/MemoryContentStructure.jsx","pages/memory/MemoryImageSlide.jsx","pages/memory/MemoryCarousel.jsx","pages/memory/MemoryTitle.jsx","pages/memory/MemoryDate.jsx","pages/memory/MemoryStory.jsx","pages/memory/MemoryImages.jsx","pages/memory/MemoryContent.jsx","static/data/loading_album.js","pages/memory/MemoryContentLoading.jsx","pages/memory/ViewMemory.jsx"],"names":["SimpleSnackbar","snackBarOpen","message","onClose","error","useState","open","setOpen","snackMessage","setSnackMessage","useEffect","handleClose","action","size","color","onClick","fontSize","console","log","autoHideDuration","direction","spacing","justifyContents","alignItems","sx","anchorOrigin","vertical","horizontal","defaultProps","useTitle","initialValue","title","setTitle","e","target","value","useDate","initialDate","date","setDate","newDate","Date","formattedDate","toLocaleDateString","day","month","year","useStory","initialState","editorState","setEditorState","newEditorState","RemovePhotoIcon","handleClick","bgcolor","alpha","position","top","right","UpdateMemoryIcon","Box","IconButton","DeleteMemoryIcon","Confirm","confirm","handleCallback","handleCloseCallback","Dialog","backgroundColor","DialogTitle","p","Typography","pb","Stack","Button","variant","MemoryActions","deleteItem","updateItem","snackBar","confirmMessage","handleDeleteObject","handleEditClick","setConfirm","anchorEl","setAnchorEl","Boolean","event","currentTarget","Menu","id","MenuListProps","borderRadius","MenuItem","bucket","authURL","memoryID","memoryDeleteCallback","a","api","deleteMemory","deleteResults","MemoryContentStructure","className","header","subheader","photoLayout","storyLayout","preview","snack","setSnack","theme","useTheme","useMediaQuery","breakpoints","down","handleSnackMessage","msg","status","actions","to","replace","Card","boxShadow","CardHeader","Divider","display","justifyContent","flexDirection","lg","xs","height","my","width","overflowY","mt","px","EnhancedSwipeableViews","bindKeyboard","autoPlay","virtualize","SwipeableViews","MemoryImageSlide","ind","images","handleNext","handleStepChange","activeStep","setActiveStep","loadedImages","setLoadedImages","setDisplay","length","handleImageLoad","prevLoaded","index","onChangeIndex","enableMouseEvents","animateTransitions","interval","style","slideRenderer","props","key","virtNum","count","total","modulus","mod","srcSet","map","src","join","component","onLoad","boxSizing","cursor","objectFit","alt","NextPic","edge","transform","PreviousPic","left","MemoryCarousel","handleBack","handleChange","fullScreen","padding","MemoryTitle","editable","text","handleTitleUpdate","handleTitleChange","edit","setEdit","startEdit","setStartEdit","TextField","label","onChange","defaultValue","maxWidth","MemoryDate","prevDate","handleDateUpdate","handleDateChange","LocalizationProvider","dateAdapter","AdapterDateFns","placeholder","inputFormat","maxDate","renderInput","readOnly","required","MemoryStory","prevEditorState","handleEditorStateUpdate","handleEditorStateChange","storyRef","useRef","JSON","stringify","convertToRaw","getCurrentContent","m","border","borderColor","minHeight","current","focus","autoFocus","ref","OptionsButton","children","name","updateOp","AddPhotos","type","hidden","multiple","accept","MemoryPhotoAlbum","handlePhotoClick","renderPhoto","arrangement","setArrangement","twidth","theight","forEach","layout","photos","MemoryImages","handleThumbnailUpdate","deleteImage","addImage","setUpdateOp","thumbnail","setThumbnail","handleOpUpdate","op","OptionsRow","updatePanel","layoutOptions","imageProps","restImageProps","deleted","find","image","handleImageDelete","FormControlLabel","control","Radio","checked","thumbnailImage","handleThumbnailChange","pr","borderLeft","bottom","BackButton","paddingX","paddingY","Link","href","underline","paddingRight","MemoryContent","memTitle","memDate","memEditorState","memImages","activeIndex","setActiveIndex","setImages","newImages","setNewImages","newImagesCount","setNewImagesCount","errorUploadImages","setErrorUploadImages","addImageOpen","setAddImageOpen","uploadImageProgress","setUploadImageProgress","uploadImageStatus","setUploadImageStatus","maxSteps","UpdateDetails","item","updateMemoryDetails","resp","UpdateThumbnail","updateMemoryImage","ok","filter","details","handleNewImages","entries","img","det","file","then","response","putURL","photo","fetch","body","method","uploadResp","pics","concat","errImgs","setTimeout","handleImageAdd","files","Array","from","Image","onload","naturalHeight","naturalWidth","resImages","resHeight","Math","ceil","creationDate","now","newName","imageDetails","URL","createObjectURL","revokeObjectURL","memoryTitle","memoryDate","state","updateDone","margin","prevActiveStep","step","fullWidth","textAlign","CardContent","py","EditorState","createWithText","imageLoading","MemoryContentLoading","Skeleton","md","loadingAlbum","getMemory","memoryId","handleMemoryCallback","handleMemoryError","viewMemory","memoryData","ViewMemory","useParams","memory","setMemory","handleMemory","mem","memError","setMemError","handleSnackBarClose","results","setInterval","clearInterval","pictures","createWithContent","convertFromRaw","contentState"],"mappings":"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","file":"static/js/9.20b0e98a.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Stack from '@mui/material/Stack';\nimport DoneIcon from '@mui/icons-material/Done';\nimport Typography from '@mui/material/Typography';\n\nexport default function SimpleSnackbar({\n  snackBarOpen, message, onClose, error,\n}) {\n  const [open, setOpen] = useState(snackBarOpen);\n  const [snackMessage, setSnackMessage] = useState(message);\n\n  useEffect(() => setOpen(snackBarOpen), [snackBarOpen]);\n  useEffect(() => setSnackMessage(message), [message]);\n\n  const handleClose = () => {\n    /*    if (reason === 'clickaway') { */\n    /* return; */\n    /* } */\n\n    setOpen(false);\n    setSnackMessage(null);\n    onClose();\n  };\n\n  const snackText = () => {\n    if (error === true) {\n      return (\n        <Stack direction=\"row\" spacing={2} justifyContents=\"space-between\" alignItems=\"center\">\n          <CloseIcon fontSize=\"small\" sx={{ color: 'error' }} />\n          <Typography>{snackMessage}</Typography>\n        </Stack>\n      );\n    }\n    return (\n      <Stack direction=\"row\" spacing={2} justifyContents=\"space-between\" alignItems=\"center\">\n        <DoneIcon fontSize=\"small\" sx={{ color: 'success' }} />\n        <Typography>{snackMessage}</Typography>\n      </Stack>\n    );\n  };\n\n  const action = (\n    <IconButton\n      size=\"small\"\n      aria-label=\"close\"\n      color=\"inherit\"\n      onClick={handleClose}\n    >\n      <CloseIcon fontSize=\"small\" />\n    </IconButton>\n  );\n\n  console.log('in snackbar', open, message);\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      message={snackText}\n      action={action}\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n    />\n  );\n}\n\nSimpleSnackbar.defaultProps = {\n  error: false,\n};\n\nSimpleSnackbar.propTypes = {\n  message: PropTypes.string.isRequired,\n  snackBarOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  error: PropTypes.bool,\n};\n","import { useState, useEffect } from 'react';\n\nexport default function useTitle(initialValue) {\n  const [title, setTitle] = useState(initialValue);\n  useEffect(() => setTitle(initialValue), [initialValue]);\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  return [title, setTitle, handleTitleChange];\n}\n","import { useState } from 'react';\n\nexport default function useDate(initialDate) {\n  const [date, setDate] = useState(initialDate);\n  const handleDateChange = (e) => {\n    const newDate = new Date(e);\n    if (e) {\n      const formattedDate = newDate.toLocaleDateString('en-in', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric',\n      });\n      setDate(formattedDate);\n    } else {\n      setDate(null);\n    }\n  };\n  return [date, setDate, handleDateChange];\n}\n","import { useState } from 'react';\n\nexport default function useStory(initialState) {\n  const [editorState, setEditorState] = useState(initialState);\n  const handleEditorStateChange = (newEditorState) => setEditorState(newEditorState);\n  return [editorState, setEditorState, handleEditorStateChange];\n}\n","import PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { alpha } from '@mui/material/styles';\n\nexport default function RemovePhotoIcon({ size, handleClick }) {\n  return (\n    <IconButton\n      size={size}\n      sx={{\n        color: 'black',\n        bgcolor: alpha('#fff', 0.4),\n        position: 'absolute',\n        top: 10,\n        right: 12,\n      }}\n      onClick={handleClick}\n    >\n      <CloseIcon size={size} />\n    </IconButton>\n  );\n}\n\nRemovePhotoIcon.defaultProps = {\n  size: 'small',\n};\n\nRemovePhotoIcon.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  size: PropTypes.string,\n};\n","import Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\n\nexport default function UpdateMemoryIcon() {\n  return (\n    <Box sx={{ alignItems: 'center' }} onClick={() => {}}>\n      <IconButton\n        aria-label=\"update\"\n        sx={{\n          bgcolor: 'form.input',\n        }}\n        onClick={() => {}}\n      >\n        <EditIcon />\n      </IconButton>\n      Edit\n    </Box>\n  );\n}\n","import Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport default function DeleteMemoryIcon() {\n  return (\n    <Box sx={{ alignItems: 'center' }}>\n      <IconButton\n        aria-label=\"delete\"\n        sx={{\n          bgcolor: 'form.input',\n        }}\n      >\n        <DeleteIcon />\n      </IconButton>\n      Delete\n    </Box>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@mui/material/Dialog';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function Confirm({\n  confirm, handleCallback, handleCloseCallback, title, message,\n}) {\n  const [open, setOpen] = useState(confirm);\n  useEffect(() => setOpen(confirm), [confirm]);\n\n  const handleClose = () => {\n    setOpen(false);\n    handleCloseCallback();\n  };\n\n  const handleSubmit = () => {\n    handleClose();\n    handleCallback();\n  };\n\n  console.log('in confirm', open);\n\n  return (\n    <Dialog open={open} sx={{ backgroundColor: 'faded.black' }}>\n      <DialogTitle>{title}</DialogTitle>\n      <Box sx={{ p: 2 }}>\n        <Typography sx={{ pb: 2 }}>{message}</Typography>\n        <Stack spacing={2} direction=\"row\">\n          <Button variant=\"contained\" onClick={handleClose}>Cancel</Button>\n          <Button variant=\"outlined\" onClick={handleSubmit}>OK</Button>\n        </Stack>\n      </Box>\n    </Dialog>\n  );\n}\n\nConfirm.propTypes = {\n  confirm: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  handleCallback: PropTypes.func.isRequired,\n  handleCloseCallback: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Confirm from '../../components/confirmation';\n\nexport default function MemoryActions({\n  deleteItem, updateItem, snackBar, confirmMessage, handleDeleteObject, handleEditClick,\n}) {\n  const [confirm, setConfirm] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n\n  const handleDeleteClick = () => {\n    setConfirm(true);\n    handleClose();\n  };\n\n  const handleEdit = () => {\n    handleEditClick();\n    handleClose();\n  };\n\n  return (\n    <div>\n      <MoreVertIcon onClick={handleClick} />\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n        sx={{ borderRadius: '10px' }}\n      >\n        <MenuItem onClick={handleEdit}>{updateItem}</MenuItem>\n        <MenuItem onClick={handleDeleteClick}>{deleteItem}</MenuItem>\n      </Menu>\n      <Confirm\n        title=\"Delete Memory\"\n        confirm={confirm}\n        handleCallback={handleDeleteObject}\n        handleCloseCallback={() => setConfirm(false)}\n        message={confirmMessage}\n      />\n      {snackBar}\n    </div>\n  );\n}\n\nMemoryActions.propTypes = {\n  deleteItem: PropTypes.node.isRequired,\n  updateItem: PropTypes.node.isRequired,\n  confirmMessage: PropTypes.string.isRequired,\n  snackBar: PropTypes.node.isRequired,\n  handleDeleteObject: PropTypes.func.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Navigate } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport Box from '@mui/material/Box';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Divider from '@mui/material/Divider';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport UpdateMemoryIcon from './UpdateMemoryIcon';\nimport DeleteMemoryIcon from './DeleteMemoryIcon';\nimport SimpleSnackbar from '../../components/simple_snackbar';\nimport MemoryActions from './MemoryActions';\nimport api from '../Api';\n\nasync function deleteMemory(bucket, authURL, memoryID, memoryDeleteCallback) {\n  try {\n    const deleteResults = await api.deleteMemory(bucket, authURL, memoryID);\n    memoryDeleteCallback(deleteResults);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default function MemoryContentStructure({\n  header, subheader, photoLayout, storyLayout, bucket, memoryID, authURL, handleEditClick, preview,\n}) {\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n  let className;\n  const theme = useTheme();\n  const lgdown = useMediaQuery(theme.breakpoints.down('lg'));\n  if (lgdown) className = '';\n  else className = 'vertical-scroll';\n\n  const handleSnackMessage = (msg) => setSnackMessage(msg);\n\n  const memoryDeleteCallback = (open) => {\n    if (open.status === 'ok') {\n      handleSnackMessage('Memory deleted successfully');\n    } else {\n      handleSnackMessage('Error while deleting memory');\n    }\n    setSnack(true);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n  };\n\n  const snackBar = (\n    <SimpleSnackbar\n      snackBarOpen={snack}\n      message={snackMessage}\n      onClose={handleSnackBarClose}\n    />\n  );\n\n  const actions = !preview ? (\n    <MemoryActions\n      confirmMessage=\"Do you want to delete this memory?\"\n      snackBar={snackBar}\n      handleDeleteObject={() => {\n        deleteMemory(bucket, authURL, memoryID, memoryDeleteCallback);\n      }}\n      deleteItem={<DeleteMemoryIcon />}\n      updateItem={<UpdateMemoryIcon />}\n      handleEditClick={handleEditClick}\n    />\n  ) : <MoreVertIcon />;\n\n  console.log('Rendering', snack, snackMessage);\n\n  return (snack === false) ? (\n    <Navigate to=\"/memories\" replace />\n  ) : (\n    <Card\n      sx={{\n        boxShadow: 0,\n        bgcolor: 'button.main',\n        p: 1,\n      }}\n    >\n      <CardHeader\n        title={header}\n        subheader={subheader}\n        action={actions}\n      />\n      <Divider />\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-start',\n          flexDirection: {\n            lg: 'row',\n            xs: 'column',\n          },\n          height: {\n            lg: '72vh',\n          },\n          my: 1,\n        }}\n      >\n        <Box\n          sx={{\n            width: {\n              lg: '70%',\n              xs: '100%',\n            },\n            overflowY: 'scroll',\n            borderRadius: 5,\n          }}\n          className={className}\n        >\n          {photoLayout}\n        </Box>\n        <Box\n          sx={{\n            width: { lg: '30%', sx: '100%' },\n            overflowY: 'scroll',\n            mt: {\n              lg: 0,\n              xs: 2,\n            },\n            p: {\n              lg: 1,\n            },\n            px: 1,\n          }}\n          className={className}\n        >\n          {storyLayout}\n        </Box>\n      </Box>\n    </Card>\n  );\n}\n\nMemoryContentStructure.propTypes = {\n  header: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  subheader: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  photoLayout: PropTypes.element.isRequired,\n  storyLayout: PropTypes.element.isRequired,\n  memoryID: PropTypes.string.isRequired,\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n  preview: PropTypes.bool.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// creates a function that invokes the given functions from right to left.\n//  import flowRight from 'lodash/flowRight';\n\nimport SwipeableViews from 'react-swipeable-views';\nimport Box from '@mui/material/Box';\nimport { autoPlay, virtualize, bindKeyboard } from 'react-swipeable-views-utils';\n\nconst EnhancedSwipeableViews = bindKeyboard(autoPlay(virtualize(SwipeableViews)));\n\nfunction mod(count, total) {\n  const modulus = count % total;\n  if (modulus < 0) {\n    return modulus + total;\n  }\n  return modulus;\n}\n\nexport default function MemoryImageSlide({\n  ind, images, handleNext, handleStepChange,\n}) {\n  const [activeStep, setActiveStep] = useState(ind);\n  const [loadedImages, setLoadedImages] = useState(0);\n  const [display, setDisplay] = useState(null);\n\n  useEffect(() => {\n    setActiveStep(ind);\n  }, [ind]);\n\n  useEffect(() => {\n    if (loadedImages < images.length) {\n      setDisplay('none');\n    } else {\n      setDisplay('flex');\n    }\n  }, [loadedImages]);\n\n  //  const handleStepChange = (step) => {\n  //  setActiveStep(step);\n  //  };\n\n  const handleImageLoad = () => setLoadedImages((prevLoaded) => prevLoaded + 1);\n\n  //  const imgElements = images.map((image) => {\n  //  const srcSetList = image.images ?\n  //  image.images.map(({ src, width }) => `${src} ${width}w`) : [];\n  //  const srcSet = srcSetList.join(',');\n  //  const style = {\n  //  display: 'block',\n  //  boxSizing: 'content-box',\n  //  cursor: 'pointer',\n  //  objectFit: 'contain',\n  //  height: '100vh',\n  //  };\n\n  //  return (\n  //  <Box\n  //  component=\"img\"\n  //  onLoad={handleImageLoad}\n  //  sx={{\n  //  display: { display },\n  //  justifyContents: 'center',\n  //  width: '100%',\n  //  bgcolor: '#1c1c1c',\n  //  }}\n  //  src={image.src}\n  //  srcSet={srcSet}\n  //  style={style}\n  //  alt={image.src}\n  //  key={image.src}\n  //  />\n  //  );\n  //  });\n\n  const slideRenderer = (props) => {\n    /* eslint-disable  react/prop-types */\n    const { index, key } = props;\n    const virtNum = mod(index, images.length);\n    console.log(index, key, images.length, virtNum);\n    const srcSetList = images[virtNum].images ? (\n      images[virtNum].images.map(({ src, width }) => `${src} ${width}w`)\n    ) : [];\n    const srcSet = srcSetList.join(',');\n    const style = {\n      display: 'block',\n      boxSizing: 'content-box',\n      cursor: 'pointer',\n      objectFit: 'contain',\n      height: '100vh',\n    };\n\n    return (\n      <Box\n        component=\"img\"\n        onLoad={handleImageLoad}\n        sx={{\n          display: { display },\n          justifyContents: 'center',\n          width: '100%',\n          bgcolor: '#1c1c1c',\n        }}\n        src={images[virtNum].src}\n        srcSet={srcSet}\n        style={style}\n        alt={images[virtNum].src}\n        key={key}\n      />\n    );\n  };\n\n  console.log(images, activeStep, ind);\n  return (\n    <EnhancedSwipeableViews\n      index={activeStep}\n      onChangeIndex={handleStepChange}\n      enableMouseEvents\n      animateTransitions\n      interval={10000}\n      onClick={handleNext}\n      style={{ backgroundColor: 'muted.main' }}\n      slideRenderer={slideRenderer}\n    />\n  );\n}\n\nMemoryImageSlide.defaultProps = {\n  ind: 0,\n};\n\nMemoryImageSlide.propTypes = {\n  ind: PropTypes.number,\n  handleNext: PropTypes.func.isRequired,\n  handleStepChange: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport CardHeader from '@mui/material/CardHeader';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport IconButton from '@mui/material/IconButton';\n\nimport MemoryImageSlide from './MemoryImageSlide';\nimport RemovePhotoIcon from './RemovePhotoIcon';\n\nfunction NextPic({ handleClick }) {\n  return (\n    <IconButton\n      edge=\"start\"\n      color=\"primary\"\n      aria-label=\"close\"\n      onClick={handleClick}\n      sx={{\n        position: 'absolute', top: '50%', right: 0, transform: 'translate(0%, -50%)',\n      }}\n    >\n      <KeyboardArrowRight sx={{ color: 'button.main', fontSize: '4.5rem' }} />\n    </IconButton>\n  );\n}\n\nfunction PreviousPic({ handleClick }) {\n  return (\n    <IconButton\n      edge=\"start\"\n      color=\"primary\"\n      aria-label=\"close\"\n      onClick={handleClick}\n      sx={{\n        position: 'absolute', top: '50%', left: 0, transform: 'translate(0%, -50%)',\n      }}\n    >\n      <KeyboardArrowLeft sx={{ color: 'button.main', fontSize: '4.5rem' }} />\n    </IconButton>\n  );\n}\n\nexport default function MemoryCarousel({\n  open, title, date, images, index, handleNext, handleBack, handleClose, handleChange,\n}) {\n  return (\n    <Dialog\n      open={open}\n      fullScreen\n    >\n      <MemoryImageSlide\n        images={images}\n        ind={index}\n        handleNext={handleNext}\n        handleStepChange={handleChange}\n      />\n      <CardHeader\n        title={title}\n        subheader={date}\n        sx={{\n          position: 'absolute',\n          top: 10,\n          left: 10,\n          bgcolor: 'button.main',\n          borderRadius: 3,\n          padding: 1,\n        }}\n      />\n      <PreviousPic handleClick={handleBack} />\n      <NextPic handleClick={handleNext} />\n      <RemovePhotoIcon size=\"large\" handleClick={handleClose} />\n    </Dialog>\n  );\n}\n\nNextPic.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nPreviousPic.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nMemoryCarousel.defaultProps = {\n  index: 0,\n};\n\nMemoryCarousel.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport useTitle from '../../hooks/title';\n\nexport default function MemoryTitle({ editable, text, handleTitleUpdate }) {\n  const [title, setTitle, handleTitleChange] = useTitle(text);\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n\n  useEffect(() => {\n    setEdit(editable);\n    setTitle(text);\n    setStartEdit(false);\n  }, [editable]);\n\n  console.log('Memory Title ', edit, startEdit, title);\n\n  if (!edit && !startEdit) {\n    return <Typography variant=\"h6\">{title}</Typography>;\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'center' }} spacing={2}>\n        <Typography variant=\"h6\">{title}</Typography>\n        <EditIcon fontSize=\"medium\" onClick={() => setStartEdit(true)} />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'flex-end', justifyContent: 'flex-start' }} spacing={2}>\n        <TextField\n          id=\"standard-basic\"\n          size=\"small\"\n          label=\"Title\"\n          onChange={handleTitleChange}\n          variant=\"standard\"\n          defaultValue={title}\n          sx={{ maxWidth: '200px' }}\n        />\n        <DoneTwoToneIcon\n          fontSize=\"medium\"\n          onClick={() => {\n            console.log(title);\n            handleTitleUpdate(title);\n            setStartEdit(false);\n          }}\n        />\n        <ClearIcon fontSize=\"medium\" onClick={() => { setTitle(text); setStartEdit(false); }} />\n      </Stack>\n    );\n  }\n}\n\nMemoryTitle.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  handleTitleUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DatePicker from '@mui/lab/DesktopDatePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\n\nimport useDate from '../../hooks/date';\n\nexport default function MemoryDate({ editable, prevDate, handleDateUpdate }) {\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n  const [date, setDate, handleDateChange] = useDate(prevDate);\n\n  useEffect(() => {\n    setEdit(editable);\n    setDate(prevDate);\n    setStartEdit(false);\n  }, [editable, prevDate]);\n  console.log('Memory Date ', edit, startEdit, date);\n\n  if (!edit && !startEdit) {\n    return <Typography>{date}</Typography>;\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'center' }} spacing={2}>\n        <Typography>{date}</Typography>\n        <EditIcon fontSize=\"medium\" onClick={() => setStartEdit(true)} />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'flex-end', justifyContent: 'flex-start', mt: 3 }} spacing={2}>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <DatePicker\n            label=\"Memory Date\"\n            value={date}\n            onChange={handleDateChange}\n            placeholder=\"dd/MM/yyyy\"\n            inputFormat=\"dd/MM/yyyy\"\n            maxDate={new Date()}\n            renderInput={(props) => (\n              <TextField\n                readOnly\n                required\n          // eslint-disable-next-line react/jsx-props-no-spreading\n                {...props}\n              />\n            )}\n          />\n        </LocalizationProvider>\n        <DoneTwoToneIcon\n          fontSize=\"medium\"\n          onClick={() => {\n            handleDateUpdate(date);\n            setStartEdit(false);\n          }}\n        />\n        <ClearIcon fontSize=\"medium\" onClick={() => { setDate(prevDate); setStartEdit(false); }} />\n      </Stack>\n    );\n  }\n}\n\nMemoryDate.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  prevDate: PropTypes.string.isRequired,\n  handleDateUpdate: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\nimport { Editor, EditorState, convertToRaw } from 'draft-js';\nimport Box from '@mui/material/Box';\nimport useStory from '../../hooks/story';\nimport './memory.css';\n\nexport default function MemoryStory({ editable, prevEditorState, handleEditorStateUpdate }) {\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n  const [editorState, setEditorState, handleEditorStateChange] = useStory(prevEditorState);\n  const storyRef = useRef();\n\n  useEffect(() => {\n    setEdit(editable);\n    setEditorState(prevEditorState);\n    setStartEdit(false);\n  }, [editable, prevEditorState]);\n  console.log('Memory Title ', edit, startEdit);\n\n  if (!edit && !startEdit) {\n    return (\n      <Editor\n        readOnly\n        editorState={editorState}\n      />\n    );\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"column\" spacing={2}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'muted.main' }}>Edit Story</Typography>\n          <EditIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              setStartEdit(true);\n            }}\n          />\n        </Stack>\n        <Divider sx={{ width: 1 }} />\n        <Editor\n          readOnly\n          editorState={editorState}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"column\" spacing={2}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'muted.main' }}>Editing Story</Typography>\n          <DoneTwoToneIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              handleEditorStateUpdate(\n                JSON.stringify(\n                  convertToRaw(editorState.getCurrentContent()),\n                ),\n                editorState,\n              );\n              setStartEdit(false);\n            }}\n          />\n          <ClearIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              setEditorState(prevEditorState);\n              setStartEdit(false);\n            }}\n          />\n        </Stack>\n        <Divider sx={{ width: 1 }} />\n        <Box\n          sx={{\n            p: 2,\n            m: 1,\n            my: 2,\n            border: 1,\n            borderColor: 'primary.main',\n            bgcolor: 'input.background',\n            minHeight: '200px',\n            borderRadius: 5,\n            width: '90%',\n          }}\n          onClick={() => storyRef.current.focus()}\n        >\n          <Editor\n            autoFocus\n            onChange={handleEditorStateChange}\n            editorState={editorState}\n            ref={storyRef}\n          />\n        </Box>\n      </Stack>\n    );\n  }\n}\n\nMemoryStory.propTypes = {\n  prevEditorState: PropTypes.instanceOf(EditorState).isRequired,\n  editable: PropTypes.bool.isRequired,\n  handleEditorStateUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport PhotoAlbum from 'react-photo-album';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n//  import EditIcon from '@mui/icons-material/Edit';\n//  import FormControl from '@mui/material/FormControl';\n//  import MenuItem from '@mui/material/MenuItem';\n//  import Select from '@mui/material/Select';\n//  import InputLabel from '@mui/material/InputLabel';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\n//  import ImageSelector from './ImageSelector';\nimport Button from '@mui/material/Button';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { alpha } from '@mui/material/styles';\n//  import Box from '@mui/material/Box';\n//  import rp from './RenderPhotos';\n\nfunction OptionsButton({\n  children, onClick, name, updateOp,\n}) {\n  //  console.log('options button', name, updateOp, (updateOp === name));\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: (updateOp === name) ? 'button.main' : 'muted.main',\n        borderRadius: 5,\n        backgroundColor: (updateOp === name) ? 'primary.main' : 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: (updateOp === name) ? 'button.main' : 'muted.main',\n          backgroundColor: (updateOp === name) ? 'primary.main' : 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nfunction AddPhotos({ handleChange, onClick, updateOp }) {\n  return (\n    <OptionsButton onClick={onClick} name=\"add\" updateOp={updateOp}>\n      <input type=\"file\" hidden multiple accept=\"image/*\" onChange={handleChange} />\n      <AddPhotoIcon sx={{ fontSize: '1.5rem' }} />\n      Add\n    </OptionsButton>\n  );\n}\n\nfunction MemoryPhotoAlbum({ images, handlePhotoClick, renderPhoto }) {\n  const [arrangement, setArrangement] = useState(null);\n  useEffect(() => {\n    let twidth = 0;\n    let theight = 0;\n    images.forEach(({ height, width }) => {\n      if (height > width) theight += 1;\n      else twidth += 1;\n    });\n    if (twidth > theight) setArrangement('rows');\n    else setArrangement('columns');\n  }, [images]);\n\n  return renderPhoto ? (\n    <PhotoAlbum\n      layout={arrangement}\n      photos={images}\n      onClick={handlePhotoClick}\n      spacing={2}\n      renderPhoto={renderPhoto}\n    />\n  ) : (\n    <PhotoAlbum\n      layout={arrangement}\n      photos={images}\n      onClick={handlePhotoClick}\n      spacing={2}\n    />\n  );\n}\n\nexport default function MemoryImages({\n  editable, images, handlePhotoClick, handleThumbnailUpdate, deleteImage, addImage,\n}) {\n  const [edit, setEdit] = useState(editable);\n  const [updateOp, setUpdateOp] = useState(null);\n  const [thumbnail, setThumbnail] = useState(null);\n\n  const handleOpUpdate = (op) => {\n    if (updateOp === op) {\n      setUpdateOp(null);\n    } else {\n      setUpdateOp(op);\n    }\n  };\n\n  console.log('memory images', updateOp, edit);\n  useEffect(() => {\n    setEdit(editable);\n    setUpdateOp(null);\n  }, [editable]);\n\n  const handleThumbnailChange = (name) => {\n    console.log('name', name);\n    console.log('images', images);\n    setThumbnail(name);\n    const thumbnailImage = images.find((image) => image.alt === name);\n    console.log('thumbnail image', thumbnailImage);\n    handleThumbnailUpdate(thumbnailImage);\n  };\n\n  const handleImageDelete = (name) => {\n    const deleted = images.find((image) => image.alt === name);\n    deleteImage(deleted);\n  };\n\n  const renderPhotosWithDeleteIcon = ({\n    layout,\n    layoutOptions,\n    imageProps: { alt, style, ...restImageProps },\n  }) => {\n    console.log(layout, layoutOptions);\n    return (\n      <Button component=\"div\">\n        <img\n          alt={alt}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          style={{ ...style, width: layout.width, padding: 0 }}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...restImageProps}\n        />\n        <IconButton\n          size=\"medium\"\n          sx={{\n            color: 'black',\n            bgcolor: alpha('#fff', 0.4),\n            position: 'absolute',\n            top: 10,\n            right: 12,\n          }}\n          onClick={() => handleImageDelete(alt)}\n        >\n          <CloseIcon size=\"medium\" />\n        </IconButton>\n      </Button>\n    );\n  };\n\n  const renderPhotosWithRadioButton = ({\n    layout,\n    layoutOptions,\n    imageProps: { alt, style, ...restImageProps },\n  }) => {\n    console.log(layoutOptions);\n    return (\n      <Button component=\"div\">\n        <img\n          alt={alt}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          style={{ ...style, width: layout.width, padding: 0 }}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...restImageProps}\n        />\n        <FormControlLabel\n          control={<Radio />}\n          label=\"\"\n          checked={alt === thumbnail}\n          onChange={() => handleThumbnailChange(alt)}\n          sx={{\n            pr: 1,\n            position: 'absolute',\n            bgcolor: alpha('#fff', 0.6),\n            color: 'black',\n            borderRadius: '0px 5px 5px 0px',\n            borderColor: 'secondary.main',\n            borderLeft: 0,\n            bottom: 20,\n            left: 15,\n          }}\n        />\n      </Button>\n    );\n  };\n\n  const OptionsRow = (\n    <Stack direction=\"row\" spacing={2}>\n      <AddPhotos handleChange={addImage} onClick={() => handleOpUpdate('add')} updateOp={updateOp} />\n      <OptionsButton onClick={() => handleOpUpdate('delete')} name=\"delete\" updateOp={updateOp}>\n        <DeleteIcon sx={{ fontSize: '1.5rem' }} />\n        Delete\n      </OptionsButton>\n      <OptionsButton onClick={() => handleOpUpdate('thumbnail')} name=\"thumbnail\" updateOp={updateOp}>Set Thumbnail</OptionsButton>\n    </Stack>\n  );\n\n  const updatePanel = (\n    <Stack direction=\"row\">\n      <Typography variant=\"h6\" color=\"muted.main\">\n        Images:\n        {images.length}\n      </Typography>\n    </Stack>\n  );\n\n  if (!edit) {\n    return (\n      <MemoryPhotoAlbum images={images} handlePhotoClick={handlePhotoClick} />\n    );\n  }\n\n  if (edit && updateOp === 'delete') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n          renderPhoto={renderPhotosWithDeleteIcon}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && updateOp === 'thumbnail') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n          renderPhoto={renderPhotosWithRadioButton}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && updateOp === 'add') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && !updateOp) {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum images={images} handlePhotoClick={handlePhotoClick} />\n      </Stack>\n    );\n  }\n}\n\nMemoryImages.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  handlePhotoClick: PropTypes.func.isRequired,\n  handleThumbnailUpdate: PropTypes.func.isRequired,\n  deleteImage: PropTypes.func.isRequired,\n  addImage: PropTypes.func.isRequired,\n};\n\nMemoryPhotoAlbum.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  handlePhotoClick: PropTypes.func.isRequired,\n  renderPhoto: PropTypes.func,\n};\n\nMemoryPhotoAlbum.defaultProps = {\n  renderPhoto: null,\n};\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  updateOp: PropTypes.string.isRequired,\n};\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n//  import PhotoAlbum from 'react-photo-album';\nimport { useState, useEffect } from 'react';\nimport { EditorState } from 'draft-js';\nimport Button from '@mui/material/Button';\nimport Link from '@mui/material/Link';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Divider from '@mui/material/Divider';\nimport Box from '@mui/material/Box';\nimport MemoryCarousel from './MemoryCarousel';\nimport MemoryContentStructure from './MemoryContentStructure';\nimport MemoryTitle from './MemoryTitle';\nimport MemoryDate from './MemoryDate';\nimport MemoryStory from './MemoryStory';\nimport MemoryImages from './MemoryImages';\nimport api from '../Api';\nimport SimpleSnackbar from '../../components/simple_snackbar';\nimport './memory.css';\n\nfunction BackButton({ preview }) {\n  if (preview === false) {\n    return (\n      <Stack\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        sx={{ backgroundColor: 'button.main', paddingX: 2, paddingY: 1 }}\n      >\n        <Link href=\"/\" underline=\"none\">\n          <Button\n            variant=\"contained\"\n            component=\"label\"\n            sx={{\n              color: 'primary.main',\n              backgroundColor: 'button.main',\n              padding: '6px 8px',\n              boxShadow: 0,\n              '&:hover': {\n                backgroundColor: 'button.main',\n              },\n            }}\n          >\n            <ArrowBackIcon size=\"medium\" sx={{ paddingRight: 1 }} />\n            <Typography variant=\"body1\" color=\"muted.main\">Memories</Typography>\n          </Button>\n        </Link>\n      </Stack>\n    );\n  }\n  return null;\n}\n\nexport default function MemoryContent({\n  memTitle,\n  memDate,\n  memEditorState,\n  memImages,\n  bucket,\n  memoryID,\n  authURL,\n  preview,\n}) {\n  const [open, setOpen] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [title, setTitle] = useState(memTitle);\n  const [date, setDate] = useState(memDate);\n  const [editorState, setEditorState] = useState(memEditorState);\n  const [images, setImages] = useState(memImages);\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n\n  const [newImages, setNewImages] = useState([]);\n  const [newImagesCount, setNewImagesCount] = useState(null);\n  const [errorUploadImages, setErrorUploadImages] = useState([]);\n  const [addImageOpen, setAddImageOpen] = useState(false);\n  const [uploadImageProgress, setUploadImageProgress] = useState(null);\n  const [uploadImageStatus, setUploadImageStatus] = useState(null);\n\n  console.log('images', images);\n  const maxSteps = images.length;\n\n  useEffect(() => setTitle(memTitle), [memTitle]);\n  useEffect(() => setDate(memDate), [memDate]);\n  useEffect(() => setEditorState(memEditorState), [memEditorState]);\n  useEffect(() => setImages(memImages), [memImages]);\n\n  const handleSnackMessage = (msg) => {\n    console.log('Setting snack message', msg);\n    setSnackMessage(msg);\n  };\n\n  const handleSnackBarClose = () => {\n    console.log('snack close, set snack false, message null');\n    setSnack(false);\n    setSnackMessage(null);\n  };\n\n  const UpdateDetails = async (item, value) => {\n    try {\n      const resp = await api.updateMemoryDetails(\n        bucket,\n        authURL,\n        memoryID,\n        item,\n        value,\n      );\n      if (resp) {\n        handleSnackMessage(`Memory ${item} updated successfully`);\n      } else {\n        handleSnackMessage(`Error while updating memory ${item}`);\n      }\n      setSnack(true);\n      return resp;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n\n  const UpdateThumbnail = async (image) => {\n    try {\n      const resp = await api.updateMemoryImage(\n        bucket,\n        authURL,\n        memoryID,\n        'thumbnail',\n        image,\n      );\n      console.log('Response', resp);\n      if (resp.ok) {\n        handleSnackMessage('Memory thumbnail updated successfully');\n      } else {\n        handleSnackMessage('Error while updating memory thumbnail');\n      }\n      setSnack(true);\n      return resp;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n\n  const deleteImage = async (image) => {\n    try {\n      let resp;\n      if (images.length > 1) {\n        resp = await api.updateMemoryImage(\n          bucket,\n          authURL,\n          memoryID,\n          'delete',\n          image,\n        );\n        console.log('Response', resp);\n        if (resp) {\n          console.log('set snack message - successfully deleted memory image');\n          handleSnackMessage('Memory image deleted successfully');\n          setImages(images.filter((item) => item.title !== image.title));\n        } else {\n          console.log('set snack message - error while deleting memory image');\n          handleSnackMessage('Error while deleting memory image');\n        }\n      } else {\n        console.log('set snack message - atleast one image is needed for memory');\n        handleSnackMessage('Atleast 1 image is needed for memory. Unable to delete');\n      }\n      setSnack(true);\n      return resp;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n\n  const addImage = async (details) => {\n    try {\n      console.log('addImage details', details);\n      const resp = await api.updateMemoryImage(\n        bucket,\n        authURL,\n        memoryID,\n        'add',\n        details,\n      );\n      return resp;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n\n  const handleNewImages = async () => {\n    /* eslint-disable  no-await-in-loop, no-restricted-syntax */\n    for (const [index, img] of newImages.entries()) {\n      const [det, file, src] = img;\n      console.log(det.name, src);\n      const putURL = await addImage(det).then((response) => response.text());\n      console.log('response for ', det.name, putURL);\n      const photo = {\n        key: `memories/${memoryID}/images/${det.name}`,\n        src,\n        alt: det.name,\n        title: det.name,\n        width: det.width,\n        height: det.height,\n        images: [],\n      };\n      const uploadResp = await fetch(putURL, { body: file, method: 'PUT' });\n      console.log('upload response', uploadResp);\n      if (uploadResp.ok) {\n        console.log(`Setting snack message - image ${det.name} add success`);\n        setUploadImageProgress(`Images uploaded: ${index + 1} / ${newImagesCount} `);\n        setImages((pics) => pics.concat([photo]));\n      } else {\n        console.log('Setting snack message - error uploading image');\n        setUploadImageStatus('Error while uploading memory image');\n        setErrorUploadImages((errImgs) => errImgs.concat([det.name]));\n      }\n    }\n  };\n\n  useEffect(async () => {\n    if (newImages.length === newImagesCount) {\n      setAddImageOpen(true);\n      console.log(newImages, newImagesCount);\n      await handleNewImages();\n      console.log('Resetting new image count and images');\n      console.log('Add done');\n      if (errorUploadImages.length > 0) {\n        setUploadImageStatus(`Error while uploading ${errorUploadImages.length} images`);\n      } else {\n        setUploadImageStatus(`${newImages.length} image(s) uploaded successfully`);\n      }\n      setErrorUploadImages([]);\n      setNewImagesCount(null);\n      setNewImages([]);\n      setTimeout(() => {\n        setAddImageOpen(false);\n        setUploadImageStatus(null);\n        setUploadImageProgress(null);\n      }, 3000);\n    } else if (newImages.length > 0) {\n      setUploadImageProgress('Preparing images for upload....');\n    }\n  }, [newImages]);\n\n  const handleImageAdd = async (event) => {\n    if (event.target.files) {\n      const files = Array.from(event.target.files);\n      console.log('files to add:', files.length, 'exsting images:', images.length);\n      setNewImagesCount(files.length);\n      if (images.length + files.length <= 15) {\n        files.forEach((file) => {\n          const image = new Image();\n          image.onload = async (e) => {\n            const height = e.target.naturalHeight;\n            const width = e.target.naturalWidth;\n            const size = file.size / (1024 * 1024);\n            const { name } = file;\n            const resImages = [500, 1000, 1500].map((resHeight) => ({\n              height: resHeight, width: Math.ceil((resHeight * width) / height),\n            }));\n            const creationDate = Date.now();\n            const newName = `${creationDate}-${name}`;\n            const imageDetails = [{\n              name: newName, size, height, width, images: resImages,\n            }, file, e.target.src];\n            setNewImages((pics) => pics.concat([imageDetails]));\n          };\n          image.src = URL.createObjectURL(file);\n        });\n        files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n      } else {\n        console.log('Setting snack message - error adding image as exceeding 15');\n        handleSnackMessage(`Unable to add ${files.length} images. Maximum images allowed per memory is 15`);\n        setSnack(true);\n      }\n      //  console.log('set snack true, handleImageAdd');\n    }\n  };\n\n  const updateTitle = (value) => {\n    const resp = UpdateDetails('title', value);\n    if (resp) {\n      setTitle(value);\n    }\n  };\n\n  const updateDate = (value) => {\n    const resp = UpdateDetails('date', value);\n    if (resp) {\n      setDate(value);\n    }\n  };\n\n  const updateEditorState = (value, state) => {\n    const resp = UpdateDetails('story', value);\n    if (resp) {\n      setEditorState(state);\n    }\n  };\n\n  const handleClose = () => setOpen(false);\n\n  const handleActiveIndexChange = (step) => setActiveIndex(step);\n\n  const handleBack = () => {\n    setActiveIndex(\n      (prevActiveStep) => (prevActiveStep - 1 + maxSteps) % maxSteps,\n    );\n  };\n\n  const handleNext = () => {\n    setActiveIndex((prevActiveStep) => (prevActiveStep + 1) % maxSteps);\n  };\n\n  const handlePhotoClick = (photo, event, index) => {\n    console.log(photo, event, index);\n    setOpen(true);\n    setActiveIndex(index);\n  };\n\n  const handleEditClick = () => setEdit(true);\n\n  const memoryTitle = (\n    <MemoryTitle\n      editable={edit}\n      text={title}\n      handleTitleUpdate={updateTitle}\n    />\n  );\n\n  const memoryDate = (\n    <MemoryDate editable={edit} prevDate={date} handleDateUpdate={updateDate} />\n  );\n\n  const storyLayout = (\n    <MemoryStory\n      editable={edit}\n      prevEditorState={editorState}\n      handleEditorStateUpdate={updateEditorState}\n    />\n  );\n\n  const photoLayout = (\n    <MemoryImages\n      editable={edit}\n      images={images}\n      handlePhotoClick={handlePhotoClick}\n      handleThumbnailUpdate={UpdateThumbnail}\n      deleteImage={deleteImage}\n      addImage={handleImageAdd}\n    />\n  );\n\n  const updateDone = (\n    <Button\n      variant=\"contained\"\n      component=\"label\"\n      onClick={() => setEdit(false)}\n      sx={{\n        color: 'primary.main',\n        borderRadius: 5,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n      }}\n    >\n      <DoneIcon size=\"medium\" sx={{ paddingRight: 1 }} />\n      <Typography variant=\"body1\" color=\"muted.main\">Edit</Typography>\n    </Button>\n  );\n\n  console.log('preview', preview);\n\n  return (\n    <>\n      {edit ? (\n        <Stack\n          direction=\"row\"\n          justifyContent=\"flex-start\"\n          sx={{ backgroundColor: 'button.main', paddingX: 2, paddingY: 1 }}\n        >\n          {updateDone}\n        </Stack>\n      ) : <BackButton preview={preview} /> }\n      <Box\n        component=\"div\"\n        sx={{\n          backgroundColor: 'button.main',\n          margin: edit ? '5px' : 0,\n        }}\n      >\n        <MemoryContentStructure\n          header={memoryTitle}\n          subheader={memoryDate}\n          photoLayout={photoLayout}\n          storyLayout={storyLayout}\n          memoryID={memoryID}\n          bucket={bucket}\n          authURL={authURL}\n          handleEditClick={handleEditClick}\n          preview={preview}\n        />\n      </Box>\n      <MemoryCarousel\n        open={open}\n        title={title}\n        date={date}\n        images={images}\n        index={activeIndex}\n        handleNext={handleNext}\n        handleBack={handleBack}\n        handleClose={handleClose}\n        handleChange={handleActiveIndexChange}\n      />\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n      />\n      <Dialog\n        open={addImageOpen}\n        fullWidth\n        sx={{\n          p: 1,\n        }}\n      >\n        <Card sx={{ maxWidth: 1, p: 1 }}>\n          <CardHeader title=\"Adding Images\" sx={{ textAlign: 'center' }} />\n          <Divider />\n          <CardContent>\n            <Typography variant=\"h6\" sx={{ color: 'muted.main' }}>{uploadImageProgress}</Typography>\n            <Stack justifyContent=\"center\" sx={{ py: 2 }}>\n              <Typography variant=\"h5\">{uploadImageStatus}</Typography>\n            </Stack>\n          </CardContent>\n        </Card>\n      </Dialog>\n\n    </>\n  );\n}\n\nMemoryContent.defaultProps = {\n  memTitle: 'Memory Title',\n  memDate: 'Memory Date',\n  memEditorState: EditorState.createWithText('Memory Text'),\n};\n\nMemoryContent.propTypes = {\n  memTitle: PropTypes.string,\n  memDate: PropTypes.string,\n  memEditorState: PropTypes.instanceOf(EditorState),\n  memoryID: PropTypes.string.isRequired,\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n  memImages: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  preview: PropTypes.bool.isRequired,\n};\n\nBackButton.propTypes = {\n  preview: PropTypes.bool.isRequired,\n};\n","import imageLoading from '../images/image-loading.gif';\n\nexport default [\n  {\n    key: 1, src: imageLoading, width: 667, height: 500,\n  },\n  {\n    key: 2, src: imageLoading, width: 667, height: 500,\n  },\n  {\n    key: 3, src: imageLoading, width: 375, height: 500,\n  },\n  {\n    key: 4, src: imageLoading, width: 667, height: 500,\n  },\n  {\n    key: 5, src: imageLoading, width: 375, height: 500,\n  },\n  {\n    key: 6, src: imageLoading, width: 667, height: 500,\n  },\n  {\n    key: 7, src: imageLoading, width: 667, height: 500,\n  },\n  {\n    key: 8, src: imageLoading, width: 667, height: 500,\n  },\n  {\n    key: 9, src: imageLoading, width: 667, height: 500,\n  },\n  {\n    key: 10, src: imageLoading, width: 667, height: 500,\n  },\n  {\n    key: 11, src: imageLoading, width: 375, height: 500,\n  },\n  {\n    key: 12, src: imageLoading, width: 375, height: 500,\n  },\n  {\n    key: 13, src: imageLoading, width: 375, height: 500,\n  },\n  {\n    key: 14, src: imageLoading, width: 375, height: 500,\n  },\n  {\n    key: 15, src: imageLoading, width: 667, height: 500,\n  },\n];\n","import Skeleton from '@mui/material/Skeleton';\nimport PhotoAlbum from 'react-photo-album';\n\nimport MemoryContentStructure from './MemoryContentStructure';\nimport loadingAlbum from '../../static/data/loading_album';\n\nexport default function MemoryContentLoading() {\n  return (\n    <MemoryContentStructure\n      header={(\n        <Skeleton\n          type=\"rectangular\"\n          sx={{\n            width: {\n              lg: '20%',\n              md: '30%',\n              xs: '70%',\n            },\n          }}\n        />\n  )}\n      subheader={(\n        <Skeleton\n          type=\"rectangular\"\n          sx={{\n            width: {\n              lg: '15%',\n              md: '20%',\n              xs: '60%',\n            },\n          }}\n        />\n  )}\n      photoLayout={(\n        <PhotoAlbum\n          layout=\"rows\"\n          photos={loadingAlbum}\n          spacing={2}\n        />\n  )}\n      storyLayout={(\n        <>\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '50%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '50%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '50%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '50%' }} />\n        </>\n    )}\n    />\n  );\n}\n","import { useParams, Navigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { EditorState, convertFromRaw } from 'draft-js';\n\nimport api from '../Api';\nimport BasePage from '../base_page';\nimport MemoryContent from './MemoryContent';\nimport MemoryContentLoading from './MemoryContentLoading';\nimport SimpleSnackbar from '../../components/simple_snackbar';\n\nasync function getMemory(\n  bucket,\n  authURL,\n  memoryId,\n  handleMemoryCallback,\n  handleMemoryError,\n) {\n  try {\n    const memoryData = await api.viewMemory(bucket, authURL, memoryId);\n    console.log(memoryData);\n    if (memoryData.status) {\n      handleMemoryError(memoryData);\n      return;\n    }\n    handleMemoryCallback(memoryData);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default function ViewMemory({ bucket, authURL }) {\n  const params = useParams();\n  const { memoryId } = params;\n  const [memory, setMemory] = useState();\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n\n  const handleMemory = (mem) => setMemory(mem);\n\n  const [memError, setMemError] = useState(null);\n\n  const handleSnackMessage = (msg) => {\n    console.log('Setting snack message', msg);\n    setSnackMessage(msg);\n  };\n\n  const handleSnackBarClose = () => {\n    console.log('snack close, set snack false, message null');\n    setSnack(false);\n    setSnackMessage(null);\n  };\n\n  const handleMemoryError = (results) => {\n    if (results.status === 'unauthenticated') {\n      handleSnackMessage('You have been logged out. Navigating to login page');\n      setSnack(true);\n      setInterval(() => setMemError('unauthenticated'), 3000);\n    }\n\n    if (results.status === 'forbidden') {\n      handleSnackMessage('You do not have access to this memory. Navigating to memories page');\n      setSnack(true);\n      setInterval(() => setMemError('forbidden'), 3000);\n    }\n  };\n\n  useEffect(() => {\n    getMemory(bucket, authURL, memoryId, handleMemory, handleMemoryError);\n    const interval = setInterval(\n      () => getMemory(bucket, authURL, memoryId, handleMemory, handleMemoryError),\n      300000,\n    );\n    return () => clearInterval(interval);\n  }, []);\n\n  if (memError === 'unauthenticated') {\n    return <Navigate to=\"/login\" />;\n  }\n\n  if (memError === 'forbidden') {\n    return <Navigate to=\"/memories\" />;\n  }\n\n  console.log('memory', memory, 'memError', memError);\n  return memory ? (\n    <BasePage>\n      <MemoryContent\n        memTitle={memory.title}\n        memDate={memory.date}\n        memImages={memory.pictures.photos}\n        memEditorState={EditorState.createWithContent(convertFromRaw(memory.contentState))}\n        memoryID={memoryId}\n        bucket={bucket}\n        authURL={authURL}\n        preview={false}\n      />\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n      />\n    </BasePage>\n  ) : (\n    <BasePage>\n      <MemoryContentLoading />\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n      />\n    </BasePage>\n  );\n}\n\nViewMemory.propTypes = {\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n};\n"],"sourceRoot":""}