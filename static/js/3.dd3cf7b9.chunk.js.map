{"version":3,"file":"static/js/3.dd3cf7b9.chunk.js","mappings":"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","sources":["components/RemovePhotoIcon.jsx","components/simple_snackbar.jsx","hooks/date.jsx","hooks/story.jsx","hooks/title.jsx","components/ActionIcon.jsx","pages/memory/Delete.jsx","components/confirmation.jsx","components/UpdateMemoryIcon.jsx","pages/memory/Share.jsx","pages/memory/Actions.jsx","pages/memory/ContentStructure.jsx","components/MemoryImageSlide.jsx","pages/memory/MemoryCarousel.jsx","pages/memory/MemoryTitle.jsx","pages/memory/MemoryDate.jsx","pages/memory/MemoryStory.jsx","pages/memory/MemoryImages.jsx","pages/memory/MemoryContent.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { alpha } from '@mui/material/styles';\n\nexport default function RemovePhotoIcon({ size, handleClick }) {\n  return (\n    <IconButton\n      size={size}\n      sx={{\n        color: 'black',\n        bgcolor: alpha('#fff', 0.4),\n        position: 'absolute',\n        top: 10,\n        right: 12,\n      }}\n      onClick={handleClick}\n    >\n      <CloseIcon size={size} />\n    </IconButton>\n  );\n}\n\nRemovePhotoIcon.defaultProps = {\n  size: 'small',\n};\n\nRemovePhotoIcon.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  size: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Stack from '@mui/material/Stack';\nimport DoneIcon from '@mui/icons-material/Done';\nimport Typography from '@mui/material/Typography';\n\nfunction SnackText({ message, error }) {\n  if (error === true) {\n    return (\n      <Stack direction=\"row\" spacing={2} justifyContents=\"space-between\" alignItems=\"center\">\n        <CloseIcon fontSize=\"small\" color=\"error\" />\n        <Typography>{message}</Typography>\n      </Stack>\n    );\n  }\n  return (\n    <Stack direction=\"row\" spacing={2} justifyContents=\"space-between\" alignItems=\"center\">\n      <DoneIcon fontSize=\"small\" color=\"success\" />\n      <Typography>{message}</Typography>\n    </Stack>\n  );\n}\n\nexport default function SimpleSnackbar({\n  snackBarOpen, message, onClose, error,\n}) {\n  const [open, setOpen] = useState(snackBarOpen);\n  const [snackMessage, setSnackMessage] = useState(message);\n\n  useEffect(() => setOpen(snackBarOpen), [snackBarOpen]);\n  useEffect(() => setSnackMessage(message), [message]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setSnackMessage(null);\n    onClose();\n  };\n\n  const action = (\n    <IconButton\n      size=\"small\"\n      aria-label=\"close\"\n      color=\"inherit\"\n      onClick={handleClose}\n    >\n      <CloseIcon fontSize=\"small\" />\n    </IconButton>\n  );\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      message={<SnackText message={snackMessage} error={error} />}\n      action={action}\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n    />\n  );\n}\n\nSimpleSnackbar.defaultProps = {\n  error: false,\n};\n\nSimpleSnackbar.propTypes = {\n  message: PropTypes.string.isRequired,\n  snackBarOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  error: PropTypes.bool,\n};\n\nSnackText.propTypes = {\n  message: PropTypes.string.isRequired,\n  error: PropTypes.bool.isRequired,\n};\n","import { useState } from 'react';\n\nexport default function useDate(initialDate) {\n  const [date, setDate] = useState(initialDate);\n  const handleDateChange = (e) => {\n    const newDate = new Date(e);\n    if (e) {\n      const formattedDate = newDate.toLocaleDateString('en-in', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric',\n      });\n      setDate(formattedDate);\n    } else {\n      setDate(null);\n    }\n  };\n  return [date, setDate, handleDateChange];\n}\n","import { useState } from 'react';\n\nexport default function useStory(initialState) {\n  const [story, setStory] = useState(initialState);\n  const handleStoryChange = (event) => setStory(event.target.value);\n  return [story, setStory, handleStoryChange];\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useTitle(initialValue) {\n  const [title, setTitle] = useState(initialValue);\n  useEffect(() => setTitle(initialValue), [initialValue]);\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  return [title, setTitle, handleTitleChange];\n}\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\n\nexport default function ActionIcon({ icon, label }) {\n  return (\n    <Box sx={{ alignItems: 'center' }}>\n      <IconButton\n        aria-label=\"delete\"\n        sx={{\n          bgcolor: 'form.input',\n        }}\n      >\n        {icon}\n      </IconButton>\n      {label}\n    </Box>\n  );\n}\n\nActionIcon.propTypes = {\n  icon: PropTypes.node.isRequired,\n  label: PropTypes.string.isRequired,\n};\n","import ActionIcon from 'components/ActionIcon';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport api from '../Api';\n\nexport const DeleteTitle = 'Delete Memory';\nexport const DeleteConfirmMessage = 'Do you want to delete this memory?';\n\nexport function DeleteMemoryIcon() {\n  return (\n    <ActionIcon icon={<DeleteIcon />} label=\"Delete\" />\n  );\n}\n\nexport default async function deleteMemory(bucket, authURL, memoryID, memoryDeleteCallback) {\n  try {\n    const deleteResults = await api.deleteMemory(bucket, authURL, memoryID);\n    memoryDeleteCallback(deleteResults);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@mui/material/Dialog';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function Confirm({\n  confirm, handleCallback, handleCloseCallback, title, message,\n}) {\n  const [open, setOpen] = useState(confirm);\n  useEffect(() => setOpen(confirm), [confirm]);\n\n  const handleClose = () => {\n    setOpen(false);\n    handleCloseCallback();\n  };\n\n  const handleSubmit = () => {\n    handleClose();\n    handleCallback();\n  };\n\n  return (\n    <Dialog open={open} sx={{ backgroundColor: 'faded.black' }}>\n      <DialogTitle>{title}</DialogTitle>\n      <Box sx={{ p: 2 }}>\n        <Typography sx={{ pb: 2 }}>{message}</Typography>\n        <Stack spacing={2} direction=\"row\">\n          <Button variant=\"contained\" onClick={handleClose}>Cancel</Button>\n          <Button variant=\"outlined\" onClick={handleSubmit}>OK</Button>\n        </Stack>\n      </Box>\n    </Dialog>\n  );\n}\n\nConfirm.propTypes = {\n  confirm: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  handleCallback: PropTypes.func.isRequired,\n  handleCloseCallback: PropTypes.func.isRequired,\n};\n","import ActionIcon from 'components/ActionIcon';\nimport EditIcon from '@mui/icons-material/Edit';\n\nexport default function UpdateMemoryIcon() {\n  return (\n    <ActionIcon icon={<EditIcon />} label=\"Edit\" />\n  );\n}\n","import ActionIcon from 'components/ActionIcon';\nimport ShareIcon from '@mui/icons-material/Share';\nimport api from '../Api';\n\nexport const ShareTitle = 'Share Memory';\nexport const ShareConfirmMessage = 'Do you want to share this memory?';\n\nexport function ShareMemoryIcon() {\n  return (\n    <ActionIcon icon={<ShareIcon />} label=\"Share\" />\n  );\n}\n\nexport default async function shareMemory(bucket, authURL, memoryID, memoryShareCallback) {\n  try {\n    const shareResults = await api.shareMemory(bucket, authURL, memoryID);\n    memoryShareCallback(shareResults);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Confirm from 'components/confirmation';\nimport UpdateMemoryIcon from 'components/UpdateMemoryIcon';\nimport { ShareTitle, ShareConfirmMessage, ShareMemoryIcon } from './Share';\nimport { DeleteTitle, DeleteConfirmMessage, DeleteMemoryIcon } from './Delete';\n\nexport default function MemoryActions({\n  snackBar, handleDeleteObject, handleEditClick,\n}) {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [confirm, setConfirm] = useState(false);\n  const [title, setTitle] = useState('');\n  const [message, setMessage] = useState('');\n  const [callback, setCallback] = useState(null);\n\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n\n  const handleAction = (header, mess, cb) => {\n    setConfirm(true);\n    setTitle(header);\n    setMessage(mess);\n    setCallback(cb);\n    handleClose();\n  };\n\n  const handleDeleteClick = () => handleAction(\n    DeleteTitle,\n    DeleteConfirmMessage,\n    handleDeleteObject,\n  );\n\n  const handleShareClick = () => handleAction(\n    ShareTitle,\n    ShareConfirmMessage,\n    () => {},\n  );\n\n  const handleEdit = () => {\n    handleEditClick();\n    handleClose();\n  };\n\n  return (\n    <div>\n      <MoreVertIcon onClick={handleClick} />\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n        sx={{ borderRadius: '10px' }}\n      >\n        <MenuItem onClick={handleEdit}><UpdateMemoryIcon /></MenuItem>\n        <MenuItem onClick={handleShareClick}><ShareMemoryIcon /></MenuItem>\n        <MenuItem onClick={handleDeleteClick}><DeleteMemoryIcon /></MenuItem>\n      </Menu>\n      <Confirm\n        title={title}\n        confirm={confirm}\n        handleCallback={callback}\n        handleCloseCallback={() => setConfirm(false)}\n        message={message}\n      />\n      {snackBar}\n    </div>\n  );\n}\n\nMemoryActions.propTypes = {\n  snackBar: PropTypes.node.isRequired,\n  handleDeleteObject: PropTypes.func.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Navigate } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport Box from '@mui/material/Box';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Divider from '@mui/material/Divider';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport SimpleSnackbar from 'components/simple_snackbar';\nimport deleteMemory from './Delete';\nimport MemoryActions from './Actions';\n\nexport default function MemoryContentStructure({\n  header, subheader, photoLayout, storyLayout, bucket, memoryID, authURL, handleEditClick, preview,\n}) {\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  let className;\n  const theme = useTheme();\n  const lgdown = useMediaQuery(theme.breakpoints.down('lg'));\n  if (lgdown) className = '';\n  else className = 'vertical-scroll';\n\n  const handleSnackMessage = (msg, error) => {\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const memoryDeleteCallback = (open) => {\n    if (open.status === 'ok') {\n      handleSnackMessage('Memory deleted successfully', false);\n    } else {\n      handleSnackMessage('Error while deleting memory', true);\n    }\n    setSnack(true);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const snackBar = (\n    <SimpleSnackbar\n      snackBarOpen={snack}\n      message={snackMessage}\n      onClose={handleSnackBarClose}\n      error={snackError}\n    />\n  );\n\n  const actions = !preview ? (\n    <MemoryActions\n      snackBar={snackBar}\n      handleDeleteObject={() => {\n        deleteMemory(bucket, authURL, memoryID, memoryDeleteCallback);\n      }}\n      handleEditClick={handleEditClick}\n    />\n  ) : <MoreVertIcon />;\n\n  return (snack === false) ? (\n    <Navigate to=\"/memories\" replace />\n  ) : (\n    <Card\n      sx={{\n        boxShadow: 0,\n        bgcolor: 'button.main',\n        p: 1,\n      }}\n    >\n      <CardHeader\n        title={header}\n        subheader={subheader}\n        action={actions}\n      />\n      <Divider />\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-start',\n          flexDirection: {\n            lg: 'row',\n            xs: 'column',\n          },\n          height: {\n            lg: '72vh',\n          },\n          my: 1,\n        }}\n      >\n        <Box\n          sx={{\n            width: {\n              lg: '70%',\n              xs: '100%',\n            },\n            overflowY: 'scroll',\n            borderRadius: 5,\n          }}\n          className={className}\n        >\n          {photoLayout}\n        </Box>\n        <Box\n          sx={{\n            width: { lg: '30%', sx: '100%' },\n            overflowY: 'scroll',\n            mt: {\n              lg: 0,\n              xs: 2,\n            },\n            p: {\n              lg: 1,\n            },\n            px: 1,\n          }}\n          className={className}\n        >\n          {storyLayout}\n        </Box>\n      </Box>\n    </Card>\n  );\n}\n\nMemoryContentStructure.propTypes = {\n  header: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  subheader: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  photoLayout: PropTypes.element.isRequired,\n  storyLayout: PropTypes.element.isRequired,\n  memoryID: PropTypes.string.isRequired,\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n  preview: PropTypes.bool.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SwipeableViews from 'react-swipeable-views';\nimport Box from '@mui/material/Box';\nimport { autoPlay, virtualize, bindKeyboard } from 'react-swipeable-views-utils';\n\nconst EnhancedSwipeableViews = bindKeyboard(autoPlay(virtualize(SwipeableViews)));\n\nfunction mod(count, total) {\n  const modulus = count % total;\n  if (modulus < 0) {\n    return modulus + total;\n  }\n  return modulus;\n}\n\nexport default function MemoryImageSlide({\n  ind, images, handleNext, handleStepChange,\n}) {\n  const [activeStep, setActiveStep] = useState(ind);\n  const [loadedImages, setLoadedImages] = useState(0);\n  const [display, setDisplay] = useState(null);\n\n  useEffect(() => {\n    setActiveStep(ind);\n  }, [ind]);\n\n  useEffect(() => {\n    if (loadedImages < images.length) {\n      setDisplay('none');\n    } else {\n      setDisplay('flex');\n    }\n  }, [loadedImages]);\n\n  const handleImageLoad = () => setLoadedImages((prevLoaded) => prevLoaded + 1);\n\n  const slideRenderer = (props) => {\n    /* eslint-disable  react/prop-types */\n    const { index, key } = props;\n    const virtNum = mod(index, images.length);\n    const srcSetList = images[virtNum].images ? (\n      images[virtNum].images.map(({ src, width }) => `${src} ${width}w`)\n    ) : [];\n    const srcSet = srcSetList.join(',');\n    const style = {\n      display: 'block',\n      boxSizing: 'content-box',\n      cursor: 'pointer',\n      objectFit: 'contain',\n      height: '100vh',\n    };\n\n    return (\n      <Box\n        component=\"img\"\n        onLoad={handleImageLoad}\n        sx={{\n          display: { display },\n          justifyContents: 'center',\n          width: '100%',\n          bgcolor: '#1c1c1c',\n        }}\n        src={images[virtNum].src}\n        srcSet={srcSet}\n        style={style}\n        alt={images[virtNum].src}\n        key={key}\n      />\n    );\n  };\n\n  return (\n    <EnhancedSwipeableViews\n      index={activeStep}\n      onChangeIndex={handleStepChange}\n      enableMouseEvents\n      animateTransitions\n      interval={10000}\n      onClick={handleNext}\n      style={{ backgroundColor: 'muted.main' }}\n      slideRenderer={slideRenderer}\n    />\n  );\n}\n\nMemoryImageSlide.defaultProps = {\n  ind: 0,\n};\n\nMemoryImageSlide.propTypes = {\n  ind: PropTypes.number,\n  handleNext: PropTypes.func.isRequired,\n  handleStepChange: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport CardHeader from '@mui/material/CardHeader';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport IconButton from '@mui/material/IconButton';\n\nimport RemovePhotoIcon from 'components/RemovePhotoIcon';\nimport MemoryImageSlide from 'components/MemoryImageSlide';\n\nfunction NextPic({ handleClick }) {\n  return (\n    <IconButton\n      edge=\"start\"\n      color=\"primary\"\n      aria-label=\"close\"\n      onClick={handleClick}\n      sx={{\n        position: 'absolute', top: '50%', right: 0, transform: 'translate(0%, -50%)',\n      }}\n    >\n      <KeyboardArrowRight sx={{ color: 'button.main', fontSize: '4.5rem' }} />\n    </IconButton>\n  );\n}\n\nfunction PreviousPic({ handleClick }) {\n  return (\n    <IconButton\n      edge=\"start\"\n      color=\"primary\"\n      aria-label=\"close\"\n      onClick={handleClick}\n      sx={{\n        position: 'absolute', top: '50%', left: 0, transform: 'translate(0%, -50%)',\n      }}\n    >\n      <KeyboardArrowLeft sx={{ color: 'button.main', fontSize: '4.5rem' }} />\n    </IconButton>\n  );\n}\n\nexport default function MemoryCarousel({\n  open, title, date, images, index, handleNext, handleBack, handleClose, handleChange,\n}) {\n  return (\n    <Dialog\n      open={open}\n      fullScreen\n    >\n      <MemoryImageSlide\n        images={images}\n        ind={index}\n        handleNext={handleNext}\n        handleStepChange={handleChange}\n      />\n      <CardHeader\n        title={title}\n        subheader={date}\n        sx={{\n          position: 'absolute',\n          top: 10,\n          left: 10,\n          bgcolor: 'button.main',\n          borderRadius: 3,\n          padding: 1,\n        }}\n      />\n      <PreviousPic handleClick={handleBack} />\n      <NextPic handleClick={handleNext} />\n      <RemovePhotoIcon size=\"large\" handleClick={handleClose} />\n    </Dialog>\n  );\n}\n\nNextPic.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nPreviousPic.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nMemoryCarousel.defaultProps = {\n  index: 0,\n};\n\nMemoryCarousel.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport useTitle from '../../hooks/title';\n\nexport default function MemoryTitle({ editable, text, handleTitleUpdate }) {\n  const [title, setTitle, handleTitleChange] = useTitle(text);\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n\n  useEffect(() => {\n    setEdit(editable);\n    setTitle(text);\n    setStartEdit(false);\n  }, [editable]);\n\n  if (!edit && !startEdit) {\n    return <Typography variant=\"h6\">{title}</Typography>;\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'center' }} spacing={2}>\n        <Typography variant=\"h6\">{title}</Typography>\n        <EditIcon fontSize=\"medium\" onClick={() => setStartEdit(true)} />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'flex-end', justifyContent: 'flex-start' }} spacing={2}>\n        <TextField\n          id=\"standard-basic\"\n          size=\"small\"\n          label=\"Title\"\n          onChange={handleTitleChange}\n          variant=\"standard\"\n          defaultValue={title}\n          sx={{ maxWidth: '200px' }}\n        />\n        <DoneTwoToneIcon\n          fontSize=\"medium\"\n          onClick={() => {\n            handleTitleUpdate(title);\n            setStartEdit(false);\n          }}\n        />\n        <ClearIcon fontSize=\"medium\" onClick={() => { setTitle(text); setStartEdit(false); }} />\n      </Stack>\n    );\n  }\n}\n\nMemoryTitle.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  handleTitleUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n\nimport useDate from '../../hooks/date';\n\nexport default function MemoryDate({ editable, prevDate, handleDateUpdate }) {\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n  const [date, setDate, handleDateChange] = useDate(prevDate);\n\n  useEffect(() => {\n    setEdit(editable);\n    setDate(prevDate);\n    setStartEdit(false);\n  }, [editable, prevDate]);\n\n  if (!edit && !startEdit) {\n    return <Typography>{date}</Typography>;\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'center' }} spacing={2}>\n        <Typography>{date}</Typography>\n        <EditIcon fontSize=\"medium\" onClick={() => setStartEdit(true)} />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'flex-end', justifyContent: 'flex-start', mt: 3 }} spacing={2}>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <DatePicker\n            label=\"Memory Date\"\n            value={date}\n            onChange={handleDateChange}\n            placeholder=\"dd/MM/yyyy\"\n            inputFormat=\"dd/MM/yyyy\"\n            maxDate={new Date()}\n            renderInput={(props) => (\n              <TextField\n                readOnly\n                required\n          // eslint-disable-next-line react/jsx-props-no-spreading\n                {...props}\n              />\n            )}\n          />\n        </LocalizationProvider>\n        <DoneTwoToneIcon\n          fontSize=\"medium\"\n          onClick={() => {\n            handleDateUpdate(date);\n            setStartEdit(false);\n          }}\n        />\n        <ClearIcon fontSize=\"medium\" onClick={() => { setDate(prevDate); setStartEdit(false); }} />\n      </Stack>\n    );\n  }\n}\n\nMemoryDate.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  prevDate: PropTypes.string.isRequired,\n  handleDateUpdate: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Box from '@mui/material/Box';\nimport useStory from '../../hooks/story';\nimport './memory.css';\n\nexport default function MemoryStory({ editable, prevStory, handleStoryUpdate }) {\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n  const [story, setStory, handleStoryChange] = useStory(prevStory);\n  const storyRef = useRef();\n\n  useEffect(() => {\n    setEdit(editable);\n    setStory(prevStory);\n    setStartEdit(false);\n  }, [editable, prevStory]);\n\n  if (!edit && !startEdit) {\n    return (\n      <Typography style={{ whiteSpace: 'pre-wrap' }}>{story}</Typography>\n    );\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"column\" spacing={2}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'muted.main' }}>Edit Story</Typography>\n          <EditIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              setStartEdit(true);\n            }}\n          />\n        </Stack>\n        <Divider sx={{ width: 1 }} />\n        <Typography style={{ whiteSpace: 'pre-wrap' }}>{story}</Typography>\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"column\" spacing={2}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'muted.main' }}>Editing Story</Typography>\n          <DoneTwoToneIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              handleStoryUpdate(story);\n              setStartEdit(false);\n            }}\n          />\n          <ClearIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              setStory(prevStory);\n              setStartEdit(false);\n            }}\n          />\n        </Stack>\n        <Divider sx={{ width: 1 }} />\n        <Box\n          sx={{\n            p: 2,\n            m: 1,\n            my: 2,\n            border: 1,\n            borderColor: 'primary.main',\n            bgcolor: 'input.background',\n            minHeight: '70vh',\n            borderRadius: 5,\n            width: '90%',\n          }}\n          onClick={() => storyRef.current.focus()}\n        >\n          <TextareaAutosize\n            autoFocus\n            aria-label=\"minimum height\"\n            placeholder=\"Tell your story...\"\n            value={story}\n            onChange={handleStoryChange}\n            style={{\n              width: '100%',\n              minHeight: '184px',\n              maxHeight: '70vh',\n              boxSizing: 'border-box',\n              paddingTop: '5px',\n              border: 0,\n              overflow: 'auto',\n              outline: 'none',\n              resize: 'vertical',\n              borderRadius: 5,\n              '&:focus': {\n                border: 0,\n              },\n            }}\n            ref={storyRef}\n          />\n\n        </Box>\n      </Stack>\n    );\n  }\n}\n\nMemoryStory.propTypes = {\n  prevStory: PropTypes.string.isRequired,\n  editable: PropTypes.bool.isRequired,\n  handleStoryUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport PhotoAlbum from 'react-photo-album';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport Button from '@mui/material/Button';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { alpha } from '@mui/material/styles';\n\nfunction OptionsButton({\n  children, onClick, name, updateOp,\n}) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: (updateOp === name) ? 'button.main' : 'muted.main',\n        borderRadius: 5,\n        backgroundColor: (updateOp === name) ? 'primary.main' : 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: (updateOp === name) ? 'button.main' : 'muted.main',\n          backgroundColor: (updateOp === name) ? 'primary.main' : 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nfunction AddPhotos({ handleChange, onClick, updateOp }) {\n  return (\n    <OptionsButton onClick={onClick} name=\"add\" updateOp={updateOp}>\n      <input type=\"file\" hidden multiple accept=\"image/*\" onChange={handleChange} />\n      <AddPhotoIcon sx={{ fontSize: '1.5rem' }} />\n      Add\n    </OptionsButton>\n  );\n}\n\nfunction MemoryPhotoAlbum({ images, handlePhotoClick, renderPhoto }) {\n  const [arrangement, setArrangement] = useState(null);\n  useEffect(() => {\n    let twidth = 0;\n    let theight = 0;\n    images.forEach(({ height, width }) => {\n      if (height > width) theight += 1;\n      else twidth += 1;\n    });\n    if (twidth > theight) setArrangement('rows');\n    else setArrangement('columns');\n  }, [images]);\n\n  return renderPhoto ? (\n    <PhotoAlbum\n      layout={arrangement}\n      photos={images}\n      onClick={handlePhotoClick}\n      spacing={2}\n      renderPhoto={renderPhoto}\n    />\n  ) : (\n    <PhotoAlbum\n      layout={arrangement}\n      photos={images}\n      onClick={handlePhotoClick}\n      spacing={2}\n    />\n  );\n}\n\nexport default function MemoryImages({\n  editable, images, handlePhotoClick, handleThumbnailUpdate, deleteImage, addImage,\n}) {\n  const [edit, setEdit] = useState(editable);\n  const [updateOp, setUpdateOp] = useState(null);\n  const [thumbnail, setThumbnail] = useState(null);\n\n  const handleOpUpdate = (op) => {\n    if (updateOp === op) {\n      setUpdateOp(null);\n    } else {\n      setUpdateOp(op);\n    }\n  };\n\n  useEffect(() => {\n    setEdit(editable);\n    setUpdateOp(null);\n  }, [editable]);\n\n  const handleThumbnailChange = (name) => {\n    setThumbnail(name);\n    const thumbnailImage = images.find((image) => image.alt === name);\n    handleThumbnailUpdate(thumbnailImage);\n  };\n\n  const handleImageDelete = (name) => {\n    const deleted = images.find((image) => image.alt === name);\n    deleteImage(deleted);\n  };\n\n  const renderPhotosWithDeleteIcon = ({\n    layout,\n    imageProps: { alt, style, ...restImageProps },\n  }) => (\n    <Button component=\"div\">\n      <img\n        alt={alt}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        style={{ ...style, width: layout.width, padding: 0 }}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        {...restImageProps}\n      />\n      <IconButton\n        size=\"medium\"\n        sx={{\n          color: 'black',\n          bgcolor: alpha('#fff', 0.4),\n          position: 'absolute',\n          top: 10,\n          right: 12,\n        }}\n        onClick={() => handleImageDelete(alt)}\n      >\n        <CloseIcon size=\"medium\" />\n      </IconButton>\n    </Button>\n  );\n\n  const renderPhotosWithRadioButton = ({\n    layout,\n    imageProps: { alt, style, ...restImageProps },\n  }) => (\n    <Button component=\"div\">\n      <img\n        alt={alt}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        style={{ ...style, width: layout.width, padding: 0 }}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        {...restImageProps}\n      />\n      <FormControlLabel\n        control={<Radio />}\n        label=\"\"\n        checked={alt === thumbnail}\n        onChange={() => handleThumbnailChange(alt)}\n        sx={{\n          pr: 1,\n          position: 'absolute',\n          bgcolor: alpha('#fff', 0.6),\n          color: 'black',\n          borderRadius: '0px 5px 5px 0px',\n          borderColor: 'secondary.main',\n          borderLeft: 0,\n          bottom: 20,\n          left: 15,\n        }}\n      />\n    </Button>\n  );\n\n  const OptionsRow = (\n    <Stack direction=\"row\" spacing={2}>\n      <AddPhotos handleChange={addImage} onClick={() => handleOpUpdate('add')} updateOp={updateOp} />\n      <OptionsButton onClick={() => handleOpUpdate('delete')} name=\"delete\" updateOp={updateOp}>\n        <DeleteIcon sx={{ fontSize: '1.5rem' }} />\n        Delete\n      </OptionsButton>\n      <OptionsButton onClick={() => handleOpUpdate('thumbnail')} name=\"thumbnail\" updateOp={updateOp}>Set Thumbnail</OptionsButton>\n    </Stack>\n  );\n\n  const updatePanel = (\n    <Stack direction=\"row\">\n      <Typography variant=\"h6\" color=\"muted.main\">\n        Images:\n        {images.length}\n      </Typography>\n    </Stack>\n  );\n\n  if (!edit) {\n    return (\n      <MemoryPhotoAlbum images={images} handlePhotoClick={handlePhotoClick} />\n    );\n  }\n\n  if (edit && updateOp === 'delete') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n          renderPhoto={renderPhotosWithDeleteIcon}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && updateOp === 'thumbnail') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n          renderPhoto={renderPhotosWithRadioButton}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && updateOp === 'add') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && !updateOp) {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum images={images} handlePhotoClick={handlePhotoClick} />\n      </Stack>\n    );\n  }\n}\n\nMemoryImages.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  handlePhotoClick: PropTypes.func.isRequired,\n  handleThumbnailUpdate: PropTypes.func.isRequired,\n  deleteImage: PropTypes.func.isRequired,\n  addImage: PropTypes.func.isRequired,\n};\n\nMemoryPhotoAlbum.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  handlePhotoClick: PropTypes.func.isRequired,\n  renderPhoto: PropTypes.func,\n};\n\nMemoryPhotoAlbum.defaultProps = {\n  renderPhoto: null,\n};\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  updateOp: PropTypes.string.isRequired,\n};\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Link from '@mui/material/Link';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Divider from '@mui/material/Divider';\nimport Box from '@mui/material/Box';\nimport MemoryCarousel from './MemoryCarousel';\nimport MemoryContentStructure from './ContentStructure';\nimport MemoryTitle from './MemoryTitle';\nimport MemoryDate from './MemoryDate';\nimport MemoryStory from './MemoryStory';\nimport MemoryImages from './MemoryImages';\nimport api from '../Api';\nimport SimpleSnackbar from '../../components/simple_snackbar';\nimport './memory.css';\n\nfunction BackButton({ preview }) {\n  if (preview === false) {\n    return (\n      <Stack\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        sx={{ backgroundColor: 'button.main', paddingX: 2, paddingY: 1 }}\n      >\n        <Link href=\"/\" underline=\"none\">\n          <Button\n            variant=\"contained\"\n            component=\"label\"\n            sx={{\n              color: 'primary.main',\n              backgroundColor: 'button.main',\n              padding: '6px 8px',\n              boxShadow: 0,\n              '&:hover': {\n                backgroundColor: 'button.main',\n              },\n            }}\n          >\n            <ArrowBackIcon size=\"medium\" sx={{ paddingRight: 1 }} />\n            <Typography variant=\"body1\" color=\"muted.main\">Memories</Typography>\n          </Button>\n        </Link>\n      </Stack>\n    );\n  }\n  return null;\n}\n\nexport default function MemoryContent({\n  memTitle,\n  memDate,\n  memStory,\n  memImages,\n  bucket,\n  memoryID,\n  authURL,\n  preview,\n}) {\n  const [open, setOpen] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [title, setTitle] = useState(memTitle);\n  const [date, setDate] = useState(memDate);\n  const [story, setStory] = useState(memStory);\n  const [images, setImages] = useState(memImages);\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n\n  const [newImages, setNewImages] = useState([]);\n  const [newImagesCount, setNewImagesCount] = useState(null);\n  const [errorUploadImages, setErrorUploadImages] = useState([]);\n  const [addImageOpen, setAddImageOpen] = useState(false);\n  const [uploadImageProgress, setUploadImageProgress] = useState(null);\n  const [uploadImageStatus, setUploadImageStatus] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  const [httpError, setHTTPError] = useState(false);\n\n  const maxSteps = images.length;\n\n  useEffect(() => setTitle(memTitle), [memTitle]);\n  useEffect(() => setDate(memDate), [memDate]);\n  useEffect(() => setStory(memStory), [memStory]);\n  useEffect(() => setImages(memImages), [memImages]);\n\n  const handleSnackMessage = (msg, error) => {\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const handleHTTPError = (response, operation, callback) => {\n    if (response.status === 401) {\n      handleSnackMessage('You have been logged out. Please login to continue.', true);\n    } else if (response.status === 403) {\n      handleSnackMessage('You do not have permissions to do this operation.', true);\n    } else {\n      handleSnackMessage(`Unknown error occured while ${operation}`, true);\n    }\n    callback(response.status);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const httpErrorCallback = (status) => {\n    setSnack(true);\n    setHTTPError(status);\n  };\n\n  const UpdateDetails = async (item, value) => {\n    try {\n      const resp = await api.updateMemoryDetails(\n        bucket,\n        authURL,\n        memoryID,\n        item,\n        value,\n      );\n      if (resp.ok) {\n        handleSnackMessage(`Memory ${item} updated successfully`, false);\n      } else {\n        handleHTTPError(resp, `updating ${item}`, httpErrorCallback);\n      }\n      setSnack(true);\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const UpdateThumbnail = async (image) => {\n    try {\n      const resp = await api.updateMemoryImage(\n        bucket,\n        authURL,\n        memoryID,\n        'thumbnail',\n        image,\n      );\n      if (resp.ok) {\n        handleSnackMessage('Thumbnail updated successfully', false);\n        setSnack(true);\n      } else {\n        handleHTTPError(resp, 'updating thumbnail', httpErrorCallback);\n      }\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const deleteImage = async (image) => {\n    try {\n      let resp;\n      if (images.length > 1) {\n        resp = await api.updateMemoryImage(\n          bucket,\n          authURL,\n          memoryID,\n          'delete',\n          image,\n        );\n        if (resp.ok) {\n          handleSnackMessage('Memory image deleted successfully', false);\n          setImages(images.filter((item) => item.title !== image.title));\n        } else {\n          handleHTTPError(resp, 'deleting image', httpErrorCallback);\n        }\n      } else {\n        handleSnackMessage('Atleast 1 image is needed for memory. Unable to delete', true);\n      }\n      setSnack(true);\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const addImage = async (details) => {\n    try {\n      const resp = await api.updateMemoryImage(\n        bucket,\n        authURL,\n        memoryID,\n        'add',\n        details,\n      );\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const handleNewImages = async () => {\n    /* eslint-disable  no-await-in-loop, no-restricted-syntax */\n    for (const [index, img] of newImages.entries()) {\n      const [det, file, src] = img;\n      const putURL = await addImage(det).then((response) => {\n        if (response.ok) {\n          return response.text();\n        }\n        handleHTTPError(response, 'adding image', httpErrorCallback);\n        return '';\n      });\n      const photo = {\n        key: `memories/${memoryID}/images/${det.name}`,\n        src,\n        alt: det.name,\n        title: det.name,\n        width: det.width,\n        height: det.height,\n        images: [],\n      };\n      const uploadResp = await fetch(putURL, { body: file, method: 'PUT' });\n      if (uploadResp.ok) {\n        setUploadImageProgress(`Images uploaded: ${index + 1} / ${newImagesCount} `);\n        setImages((pics) => pics.concat([photo]));\n      } else {\n        setUploadImageStatus('Error while uploading memory image');\n        setErrorUploadImages((errImgs) => errImgs.concat([det.name]));\n        handleHTTPError(uploadResp, 'deleting image', httpErrorCallback);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    if (newImages.length > 0) {\n      setAddImageOpen(true);\n      setUploadImageProgress('Preparing images for upload....');\n    }\n    if (newImages.length === newImagesCount) {\n      await handleNewImages();\n      if (errorUploadImages.length > 0) {\n        setUploadImageStatus(`Error while uploading ${errorUploadImages.length} images`);\n      } else {\n        setUploadImageStatus(`${newImages.length} image(s) uploaded successfully`);\n      }\n      setErrorUploadImages([]);\n      setNewImagesCount(null);\n      setNewImages([]);\n      setTimeout(() => {\n        setAddImageOpen(false);\n        setUploadImageStatus(null);\n        setUploadImageProgress(null);\n      }, 3000);\n    }\n  }, [newImages]);\n\n  const handleImageAdd = async (event) => {\n    if (event.target.files) {\n      const files = Array.from(event.target.files);\n      setNewImagesCount(files.length);\n      if (images.length + files.length <= 15) {\n        files.forEach((file) => {\n          const image = new Image();\n          image.onload = async (e) => {\n            const height = e.target.naturalHeight;\n            const width = e.target.naturalWidth;\n            const size = file.size / (1024 * 1024);\n            const { name } = file;\n            const resImages = [500, 1000, 1500].map((resHeight) => ({\n              height: resHeight, width: Math.ceil((resHeight * width) / height),\n            }));\n            const creationDate = Date.now();\n            const newName = `${creationDate}-${name}`;\n            const imageDetails = [{\n              name: newName, size, height, width, images: resImages,\n            }, file, e.target.src];\n            setNewImages((pics) => pics.concat([imageDetails]));\n          };\n          image.src = URL.createObjectURL(file);\n        });\n        files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n      } else {\n        handleSnackMessage(`Unable to add ${files.length} images. Maximum images allowed per memory is 15`, true);\n        setSnack(true);\n      }\n    }\n  };\n\n  const updateTitle = (value) => {\n    const resp = UpdateDetails('title', value);\n    if (resp) {\n      setTitle(value);\n    }\n  };\n\n  const updateDate = (value) => {\n    const resp = UpdateDetails('date', value);\n    if (resp) {\n      setDate(value);\n    }\n  };\n\n  const updateStory = (value) => {\n    const resp = UpdateDetails('story', value);\n    if (resp) {\n      setStory(value);\n    }\n  };\n\n  const handleClose = () => setOpen(false);\n\n  const handleActiveIndexChange = (step) => setActiveIndex(step);\n\n  const handleBack = () => {\n    setActiveIndex(\n      (prevActiveStep) => (prevActiveStep - 1 + maxSteps) % maxSteps,\n    );\n  };\n\n  const handleNext = () => {\n    setActiveIndex((prevActiveStep) => (prevActiveStep + 1) % maxSteps);\n  };\n\n  const handlePhotoClick = (photo, event, index) => {\n    setOpen(true);\n    setActiveIndex(index);\n  };\n\n  const handleEditClick = () => setEdit(true);\n\n  const memoryTitle = (\n    <MemoryTitle\n      editable={edit}\n      text={title}\n      handleTitleUpdate={updateTitle}\n    />\n  );\n\n  const memoryDate = (\n    <MemoryDate editable={edit} prevDate={date} handleDateUpdate={updateDate} />\n  );\n\n  const storyLayout = (\n    <MemoryStory\n      editable={edit}\n      prevStory={story}\n      handleStoryUpdate={updateStory}\n    />\n  );\n\n  const photoLayout = (\n    <MemoryImages\n      editable={edit}\n      images={images}\n      handlePhotoClick={handlePhotoClick}\n      handleThumbnailUpdate={UpdateThumbnail}\n      deleteImage={deleteImage}\n      addImage={handleImageAdd}\n    />\n  );\n\n  const updateDone = (\n    <Button\n      variant=\"contained\"\n      component=\"label\"\n      onClick={() => setEdit(false)}\n      sx={{\n        color: 'primary.main',\n        borderRadius: 5,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n      }}\n    >\n      <DoneIcon size=\"medium\" sx={{ paddingRight: 1 }} />\n      <Typography variant=\"body1\" color=\"muted.main\">Edit</Typography>\n    </Button>\n  );\n\n  if (httpError === 401 && snack === false) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return (\n    <>\n      {edit ? (\n        <Stack\n          direction=\"row\"\n          justifyContent=\"flex-start\"\n          sx={{ backgroundColor: 'button.main', paddingX: 2, paddingY: 1 }}\n        >\n          {updateDone}\n        </Stack>\n      ) : <BackButton preview={preview} /> }\n      <Box\n        component=\"div\"\n        sx={{\n          backgroundColor: 'button.main',\n          margin: edit ? '5px' : 0,\n        }}\n      >\n        <MemoryContentStructure\n          header={memoryTitle}\n          subheader={memoryDate}\n          photoLayout={photoLayout}\n          storyLayout={storyLayout}\n          memoryID={memoryID}\n          bucket={bucket}\n          authURL={authURL}\n          handleEditClick={handleEditClick}\n          preview={preview}\n        />\n      </Box>\n      <MemoryCarousel\n        open={open}\n        title={title}\n        date={date}\n        images={images}\n        index={activeIndex}\n        handleNext={handleNext}\n        handleBack={handleBack}\n        handleClose={handleClose}\n        handleChange={handleActiveIndexChange}\n      />\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n        error={snackError}\n      />\n      <Dialog\n        open={addImageOpen}\n        fullWidth\n        sx={{\n          p: 1,\n        }}\n      >\n        <Card sx={{ maxWidth: 1, p: 1 }}>\n          <CardHeader title=\"Adding Images\" sx={{ textAlign: 'center' }} />\n          <Divider />\n          <CardContent>\n            <Typography variant=\"h6\" sx={{ color: 'muted.main' }}>{uploadImageProgress}</Typography>\n            <Stack justifyContent=\"center\" sx={{ py: 2 }}>\n              <Typography variant=\"h5\">{uploadImageStatus}</Typography>\n            </Stack>\n          </CardContent>\n        </Card>\n      </Dialog>\n\n    </>\n  );\n}\n\nMemoryContent.defaultProps = {\n  memTitle: 'Memory Title',\n  memDate: 'Memory Date',\n  memStory: 'Memory Text',\n};\n\nMemoryContent.propTypes = {\n  memTitle: PropTypes.string,\n  memDate: PropTypes.string,\n  memStory: PropTypes.string,\n  memoryID: PropTypes.string.isRequired,\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n  memImages: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  preview: PropTypes.bool.isRequired,\n};\n\nBackButton.propTypes = {\n  preview: PropTypes.bool.isRequired,\n};\n"],"names":["RemovePhotoIcon","size","handleClick","sx","color","bgcolor","alpha","position","top","right","onClick","defaultProps","SnackText","message","error","direction","spacing","justifyContents","alignItems","fontSize","SimpleSnackbar","snackBarOpen","onClose","useState","open","setOpen","snackMessage","setSnackMessage","useEffect","handleClose","action","autoHideDuration","anchorOrigin","vertical","horizontal","useDate","initialDate","date","setDate","e","newDate","Date","formattedDate","toLocaleDateString","day","month","year","useStory","initialState","story","setStory","event","target","value","useTitle","initialValue","title","setTitle","ActionIcon","icon","label","Box","IconButton","DeleteMemoryIcon","Delete","bucket","authURL","memoryID","memoryDeleteCallback","api","deleteResults","console","log","Confirm","confirm","handleCallback","handleCloseCallback","Dialog","backgroundColor","DialogTitle","p","Typography","pb","Stack","Button","variant","UpdateMemoryIcon","Edit","ShareMemoryIcon","Share","MemoryActions","snackBar","handleDeleteObject","handleEditClick","anchorEl","setAnchorEl","setConfirm","setMessage","callback","setCallback","Boolean","handleAction","header","mess","cb","MoreVert","currentTarget","Menu","id","MenuListProps","borderRadius","MenuItem","MemoryContentStructure","className","subheader","photoLayout","storyLayout","preview","snack","setSnack","snackError","setSnackError","theme","useTheme","useMediaQuery","breakpoints","down","handleSnackMessage","msg","status","actions","deleteMemory","to","replace","Card","boxShadow","CardHeader","Divider","display","justifyContent","flexDirection","lg","xs","height","my","width","overflowY","mt","px","EnhancedSwipeableViews","bindKeyboard","autoPlay","virtualize","SwipeableViews","MemoryImageSlide","ind","images","handleNext","handleStepChange","activeStep","setActiveStep","loadedImages","setLoadedImages","setDisplay","length","handleImageLoad","prevLoaded","index","onChangeIndex","enableMouseEvents","animateTransitions","interval","style","slideRenderer","props","key","virtNum","count","total","modulus","mod","srcSet","map","src","join","component","onLoad","boxSizing","cursor","objectFit","alt","NextPic","edge","transform","KeyboardArrowRight","PreviousPic","left","KeyboardArrowLeft","MemoryCarousel","handleBack","handleChange","fullScreen","padding","MemoryTitle","editable","text","handleTitleUpdate","handleTitleChange","edit","setEdit","startEdit","setStartEdit","TextField","onChange","defaultValue","maxWidth","DoneTwoTone","Clear","MemoryDate","prevDate","handleDateUpdate","handleDateChange","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","placeholder","inputFormat","maxDate","renderInput","readOnly","required","MemoryStory","prevStory","handleStoryUpdate","handleStoryChange","storyRef","useRef","whiteSpace","m","border","borderColor","minHeight","current","focus","TextareaAutosize","autoFocus","maxHeight","paddingTop","overflow","outline","resize","ref","OptionsButton","children","name","updateOp","AddPhotos","type","hidden","multiple","accept","MemoryPhotoAlbum","handlePhotoClick","renderPhoto","arrangement","setArrangement","twidth","theight","forEach","layout","photos","MemoryImages","handleThumbnailUpdate","deleteImage","addImage","setUpdateOp","thumbnail","setThumbnail","handleOpUpdate","op","OptionsRow","updatePanel","imageProps","restImageProps","deleted","find","image","handleImageDelete","Close","FormControlLabel","control","Radio","checked","thumbnailImage","handleThumbnailChange","pr","borderLeft","bottom","BackButton","paddingX","paddingY","Link","href","underline","ArrowBack","paddingRight","MemoryContent","memTitle","memDate","memStory","memImages","activeIndex","setActiveIndex","setImages","newImages","setNewImages","newImagesCount","setNewImagesCount","errorUploadImages","setErrorUploadImages","addImageOpen","setAddImageOpen","uploadImageProgress","setUploadImageProgress","uploadImageStatus","setUploadImageStatus","httpError","setHTTPError","maxSteps","handleHTTPError","response","operation","httpErrorCallback","UpdateDetails","item","resp","ok","UpdateThumbnail","filter","details","handleNewImages","entries","img","det","file","then","putURL","photo","fetch","body","method","uploadResp","pics","concat","errImgs","setTimeout","handleImageAdd","files","Array","from","Image","onload","naturalHeight","naturalWidth","resImages","resHeight","Math","ceil","creationDate","now","newName","imageDetails","URL","createObjectURL","revokeObjectURL","memoryTitle","memoryDate","updateDone","Done","margin","prevActiveStep","step","fullWidth","textAlign","CardContent","py"],"sourceRoot":""}