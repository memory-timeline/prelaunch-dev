{"version":3,"file":"static/js/800.ff2bca0e.chunk.js","mappings":"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","sources":["api/helpers.js","components/OptionsButton.jsx","components/AddPhotos.jsx","components/collage/helpers.js","db.js","hooks/collage/imageCount.jsx","hooks/collage/indexedDBState.jsx","components/collage/node.jsx","components/collage/binaryTree.jsx","components/collage/treeUtils.js","api/collage.jsx","hooks/collage/collage.jsx","hooks/collage/dimensions.jsx","hooks/collage/options.jsx","hooks/collage/actions.jsx","hooks/collage/images.jsx","hooks/collage/tree.jsx","components/collage/Collage.jsx","components/collage/DownloadDialog.jsx","components/collage/SaveDialog.jsx","components/collage/SaveStatusDialog.jsx","components/collage/Header.jsx","components/collage/EmptyCollage.jsx","components/collage/View.jsx","components/collage/DesktopActionItem.jsx","components/collage/DesktopDrawer.jsx","components/collage/ControlsDivider.jsx","components/collage/DesktopActions.jsx","components/collage/ClearCollageDialog.jsx","components/collage/DesktopControls.jsx","components/collage/DesktopImageOptions.jsx","components/collage/PaddingControl.jsx","components/collage/RadiusControl.jsx","components/collage/ColorControl.jsx","components/collage/TextControl.jsx","components/collage/EditControl.jsx","components/collage/MobileActionItem.jsx","components/collage/MobileActions.jsx","components/collage/MainControls.jsx","components/collage/EditOptions.jsx","components/collage/ImageOptions.jsx","components/collage/MobileControls.jsx","pages/collage/CollageMaker.jsx"],"sourcesContent":["const get = async (url, path, params = {}) => {\n  let newUrl = `https://${url}${path}`;\n  const options = {\n    method: 'GET',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  newUrl += `?${new URLSearchParams(params).toString()}`;\n  const resp = await fetch(newUrl, options);\n  if (!resp.ok) {\n    if (resp.status === 401) {\n      document.cookie =\n        'userInfo=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return { status: 'unauthenticated' };\n    }\n    if (resp.status === 403) {\n      return { status: 'forbidden' };\n    }\n  }\n\n  return resp.json();\n};\n\nconst post = async (url, path, params, body) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'POST',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body,\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\n\nexport default { get, post };\n","import PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\n\nexport default function OptionsButton({ children, onClick, name }) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: 'muted.main',\n        borderRadius: 15,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: 'muted.main',\n          backgroundColor: 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  //  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport OptionsButton from 'components/OptionsButton';\nimport Typography from '@mui/material/Typography';\n\nexport default function AddPhotos({ handleChange }) {\n  return (\n    <OptionsButton name=\"add\">\n      <input\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={handleChange}\n      />\n      <AddPhotoIcon sx={{ fontSize: '2rem' }} />\n      <Typography sx={{ fontWeight: 'bold' }}>Add Images</Typography>\n    </OptionsButton>\n  );\n}\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","function getClosest(arr, index1, index2, target) {\n  if (target - arr[index1] >= arr[index2] - target) return index2;\n  return index1;\n}\n\nfunction findClosest(arr, target) {\n  const n = arr.length;\n\n  if (target <= arr[0]) return 0;\n  if (target >= arr[n - 1]) return n - 1;\n\n  let start = 0;\n  let end = n;\n  let mid = 0;\n  while (start < end) {\n    mid = (start + end) / 2;\n\n    if (arr[mid] === target) return mid;\n\n    if (target < arr[mid]) {\n      if (mid > 0 && target > arr[mid - 1])\n        return getClosest(arr, mid - 1, mid, target);\n      end = mid;\n    } else {\n      if (mid < n - 1 && target < arr[mid + 1])\n        return getClosest(arr, mid, mid + 1, target);\n      start = mid + 1;\n    }\n  }\n\n  return mid;\n}\n\nfunction getCut() {\n  const cutArr = ['v', 'h'];\n  return cutArr[Math.round(Math.random())];\n}\n\nfunction findImgPair(arr, target) {\n  let start = 0;\n  let end = arr.length - 1;\n  let i = start;\n  let j = end;\n  let minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n  while (start <= end) {\n    if (arr[start] + arr[end] > target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        // update fetched pair and matching cost\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      end -= 1;\n    } else if (arr[start] + arr[end] <= target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      start += 1;\n    } else {\n      // best pair (m === 0) found\n      i = start;\n      j = end;\n      break;\n    }\n  }\n  const randomNumber = Math.round(Math.random());\n  if (randomNumber) return [i, j];\n  return [j, i];\n}\n\nfunction getAspectRatio(cut, ar1, ar2) {\n  if (cut === 'v') return ar1 + ar2;\n  return (ar1 * ar2) / (ar1 + ar2);\n}\n\nfunction downscaleImage(image, newWidth, newHeight, fileType) {\n  const canvas = document.createElement('canvas');\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, newWidth, newHeight);\n  return canvas.toDataURL(fileType);\n}\n\nfunction resizeImages(originalImages, maxWidth, handleImages, addImagesToDB) {\n  const tempImages = [];\n  originalImages.forEach((origImage) => {\n    const image = new Image();\n    image.onload = () => {\n      const { title, aspectRatio, type } = origImage;\n      const dataurl = downscaleImage(\n        image,\n        maxWidth,\n        maxWidth / aspectRatio,\n        origImage.type\n      );\n      const tempImage = {\n        title,\n        src: dataurl,\n        naturalHeight: maxWidth / aspectRatio,\n        naturalWidth: maxWidth,\n        aspectRatio,\n        type,\n      };\n      tempImages.push(tempImage);\n      handleImages((imgs) => {\n        const ind = imgs.findIndex((elem) => elem.title === origImage.title);\n        return [...imgs.slice(0, ind), tempImage, ...imgs.slice(ind + 1)];\n      });\n      addImagesToDB(tempImage);\n    };\n    image.src = origImage.src;\n  });\n}\n\nfunction convertBase64(file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\n\nfunction handleImageLoad(\n  event,\n  maxWidth,\n  handleImageCount,\n  handleNewImageCount,\n  handleImageData\n) {\n  if (event.target.files) {\n    handleImageCount((cnt) => cnt + event.target.files.length);\n    handleNewImageCount(event.target.files.length);\n    const files = Array.from(event.target.files);\n    files.map(async (file) => {\n      const image = new Image();\n      image.onload = (e) => {\n        const { naturalWidth, naturalHeight, src } = e.target;\n        const title = `${Date.now()}-${file.name}`;\n        const aspectRatio = naturalWidth / naturalHeight;\n\n        const dataurl = downscaleImage(\n          image,\n          maxWidth,\n          maxWidth / aspectRatio,\n          file.type\n        );\n        const originalImageDetail = {\n          title,\n          src,\n          naturalHeight,\n          naturalWidth,\n          aspectRatio,\n          type: file.type,\n        };\n        const imageDetail = {\n          title,\n          src: dataurl,\n          naturalHeight: maxWidth / aspectRatio,\n          naturalWidth: maxWidth,\n          aspectRatio,\n          type: file.type,\n        };\n        handleImageData(imageDetail, originalImageDetail);\n      };\n      image.src = await convertBase64(file);\n    });\n    files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n  }\n}\n\nfunction wrapText(text, x, y, maxWidth, fontSize, lineHeight) {\n  // First, start by splitting all of our text into words,\n  // but splitting it into an array split by spaces\n  const paddingX = 1; // 8px on both sided\n  const textCanvas = document.createElement('canvas');\n  textCanvas.width = maxWidth - 2 * paddingX * 8;\n  textCanvas.height = 1000;\n  const ctx = textCanvas.getContext('2d');\n  ctx.font = `${fontSize}px Arial`;\n  ctx.textAlign = 'center';\n  const tempX = x;\n  let tempY = y;\n  const words = text.split(' ');\n  let line = ''; // This will store the text of the current line\n  let testLine = ''; // This will store the text when we add a word, to test if it's too long\n  const lineArray = []; // This is an array of lines, which the function will return\n\n  // Lets iterate over each word\n  for (let n = 0; n < words.length; n += 1) {\n    // Create a test line, and measure it..\n    testLine += `${words[n]} `;\n    const metrics = ctx.measureText(testLine);\n    const testWidth = metrics.width;\n    console.log(\n      'wrap text ',\n      line,\n      testLine,\n      testWidth,\n      textCanvas.width,\n      ctx.letterSpacing\n    );\n    // If the width of this test line is more than the max width\n    if (testWidth > textCanvas.width && n > 0) {\n      // Then the line is finished, push the current line into \"lineArray\"\n      lineArray.push([line, tempX, tempY]);\n      // Increase the line height, so a new line is started\n      tempY += lineHeight;\n      // Update line and test line to use this word as the first word on the next line\n      line = `${words[n]} `;\n      testLine = `${words[n]} `;\n    } else {\n      // If the test line is still less than the max width, then add the word to the current line\n      line += `${words[n]} `;\n    }\n    // If we never reach the full max width, then there is only one line..\n    // so push it into the lineArray so we return something\n    if (n === words.length - 1) {\n      lineArray.push([line, tempX, tempY]);\n    }\n  }\n  // Return the line array\n  return lineArray;\n}\n\nconst convertToRGBA = (value) =>\n  `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nconst getCollageDimension = (maxW, maxH, a) => {\n  const origAR = maxW / maxH;\n  if (origAR < a) return [maxW, maxW / a];\n  if (origAR > a) return [maxH * a, maxH];\n  return [maxW, maxH];\n};\n\nexport default {\n  getCut,\n  findClosest,\n  findImgPair,\n  getAspectRatio,\n  handleImageLoad,\n  resizeImages,\n  wrapText,\n  convertToRGBA,\n  getCollageDimension,\n};\n","import Dexie from 'dexie';\n\nconst collageDB = new Dexie('collage');\n\ncollageDB.version(1).stores({\n  images: 'title, url,naturalWidth,naturalHeight,aspectRatio', // Primary key and indexed props\n  originalImages: 'title, url,naturalWidth,naturalHeight,aspectRatio', // Primary key and indexed props\n  imgCount: '++id, count',\n  collageTree: '++id, collageTree',\n});\n\nexport default { collageDB };\n","import { useState, useEffect } from 'react';\nimport db from 'db';\n\nexport default function useImageCount(tableName, initialValue) {\n  const [value, setValue] = useState(initialValue);\n\n  async function setDataFromDB() {\n    const rows = await db.collageDB[tableName].toArray();\n    console.log('rows data', rows, tableName);\n    if (rows.length) setValue(rows[0].count);\n  }\n  useEffect(() => setDataFromDB(), []);\n\n  const addToDB = (data) => {\n    console.log('data', data, tableName);\n    db.collageDB[tableName].put(data);\n  };\n\n  useEffect(() => {\n    db.collageDB[tableName].clear();\n    console.log('Adding data to table', tableName, value);\n    addToDB({ count: value });\n  }, [value]);\n\n  return [value, setValue];\n}\n","import { useState, useEffect } from 'react';\nimport db from 'db';\n\nexport default function useIndexedDBState(\n  tableName,\n  initialValue,\n  loadingCallback = () => {}\n) {\n  const [value, setValue] = useState(initialValue);\n\n  useEffect(() => {\n    async function setDataFromDB() {\n      loadingCallback(true);\n      const rows = await db.collageDB[tableName].toArray();\n      loadingCallback(false);\n      if (rows.length) setValue(rows);\n    }\n    setDataFromDB();\n  }, []);\n\n  const addToDB = (data) => db.collageDB[tableName].put(data);\n\n  return [value, setValue, addToDB];\n}\n","import Box from '@mui/material/Box';\n//  import Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Tooltip from '@mui/material/Tooltip';\nimport { alpha } from '@mui/material/styles';\nimport helpers from 'components/collage/helpers';\n\nexport default class Node {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n\n  fromObject(obj) {\n    if (obj != null) {\n      this.value = obj.value;\n      if (obj.left != null) {\n        this.left = new Node(obj.left.value);\n        this.left.fromObject(obj.left);\n      }\n      if (obj.right != null) {\n        this.right = new Node(obj.right.value);\n        this.right.fromObject(obj.right);\n      }\n      return this;\n    }\n    return null;\n  }\n\n  getScore() {\n    if ('cut' in this.value) {\n      return [...this.left.getScore(), ...this.right.getScore()];\n    }\n\n    return [this.value.width + this.value.height];\n  }\n\n  display() {\n    let output = [];\n    const { cut, title, aspectRatio } = this.value;\n    if (this === null) return null;\n    if ('cut' in this.value) output.push([cut, aspectRatio]);\n    if ('title' in this.value) output.push([title, aspectRatio]);\n    if (this.left !== null) output = output.concat(this.left.display());\n    if (this.right !== null) output = output.concat(this.right.display());\n    return output;\n  }\n\n  copy() {\n    if (this === null) return null;\n    const copyNode = new Node({ ...this.value });\n    if (this.left != null) copyNode.left = this.left.copy();\n    if (this.right != null) copyNode.right = this.right.copy();\n    return copyNode;\n  }\n\n  replaceImages(newImages) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const findIndex = newImages.findIndex(\n          (elem) => elem.title === this.value.title\n        );\n        const origImage = newImages[findIndex];\n        this.value.src = origImage.src;\n        this.value.naturalWidth = origImage.naturalWidth;\n        this.value.naturalHeight = origImage.naturalHeight;\n      }\n      if (this.left != null) this.left.replaceImages(newImages);\n      if (this.right != null) this.right.replaceImages(newImages);\n    }\n  }\n\n  removeImageData() {\n    if (this !== null) {\n      if ('title' in this.value) {\n        this.value.src = '';\n      }\n      if (this.left != null) this.left.removeImageData();\n      if (this.right != null) this.right.removeImageData();\n    }\n  }\n\n  addImageData(imageData) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const image = imageData.find((elem) => elem.title === this.value.title);\n        this.value.src = image.src;\n      }\n      if (this.left != null) this.left.addImageData(imageData);\n      if (this.right != null) this.right.addImageData(imageData);\n    }\n  }\n\n  RenderImage(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    const { width, title, src, x, y } = this.value;\n\n    const newX = x + xOffset;\n    const newY = y + yOffset;\n\n    return (\n      <>\n        <Box\n          key={title}\n          component=\"img\"\n          title={title}\n          alt={title}\n          width={width}\n          onLoad={() => {\n            handleCollageImageLoad();\n            console.log('loaded', title);\n          }}\n          src={src}\n          sx={{\n            position: 'absolute',\n            padding: `${padding}px`,\n            borderRadius: `${borderRadius}px`,\n            left: this.value.x + xOffset,\n            top: this.value.y + yOffset,\n          }}\n        />\n        {/*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    top: newY,\n         *    left: newX,\n         *    backgroundColor: 'white',\n         *    fontSize: '15px',\n         *  }}\n         *>\n         *  {newX.toFixed(2)}\n         *  ,\n         *  {newY.toFixed(2)}\n         *</Typography>\n         */\n        /*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    top: this.value.y + yOffset + padding,\n         *    left: this.value.x + xOffset + padding,\n         *    backgroundColor: 'white',\n         *  }}\n         *>\n         *  {width.toFixed(2)}\n         *  ,\n         *  {height.toFixed(2)}\n         *</Typography>\n         */\n        /*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    bottom: 38,\n         *    right: 10,\n         *    backgroundColor: 'white',\n         *    fontSize: '0.5rem',\n         *    fontWeight: 700,\n         *  }}\n         *>\n         *  {title}\n         *</Typography>\n         */}\n\n        {delImg === true ? (\n          <Tooltip title=\"Remove Image\">\n            <IconButton\n              size=\"medium\"\n              sx={{\n                color: alpha('#000', 0.7),\n                bgcolor: alpha('#fff', 0.5),\n                position: 'absolute',\n                top: newY + padding,\n                left: newX + padding,\n                padding: `${padding}px`,\n                borderRadius: '0 0 5px 0',\n              }}\n              onClick={() => handleRemoveImage(title)}\n            >\n              <DeleteIcon size=\"medium\" />\n            </IconButton>\n          </Tooltip>\n        ) : null}\n      </>\n    );\n  }\n\n  DOMDisplay(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    console.log(\n      'node dom display',\n      padding,\n      borderRadius,\n      delImg,\n      handleRemoveImage,\n      yOffset,\n      xOffset,\n      this.value.title\n    );\n    const { cut } = this.value;\n    if (this === null) return null;\n    if (cut) {\n      console.log(this.right, this.left);\n      return (\n        <>\n          {this.left != null\n            ? this.left.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n          {this.right != null\n            ? this.right.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n        </>\n      );\n    }\n    if ('title' in this.value)\n      return this.RenderImage(\n        padding,\n        borderRadius,\n        delImg,\n        handleRemoveImage,\n        yOffset,\n        xOffset,\n        handleCollageImageLoad\n      );\n    return null;\n  }\n\n  ResizeImage(image) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = this.value.naturalWidth;\n    tempCanvas.height = this.value.naturalHeight;\n    const tempCtx = tempCanvas.getContext('2d');\n    let width = this.value.naturalWidth;\n    let height = this.value.naturalHeight;\n    let newWidth;\n    let newHeight;\n    const scaleFactor = Math.floor(\n      Math.log2(this.value.naturalWidth / this.value.width)\n    );\n    if (scaleFactor === 0) {\n      tempCtx.drawImage(\n        image,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    } else {\n      for (let i = 0; i < scaleFactor; i += 1) {\n        newWidth = width >> 1; // eslint-disable-line no-bitwise\n        newHeight = newWidth / this.value.aspectRatio; // eslint-disable-line no-bitwise\n        if (i === 0) {\n          tempCtx.drawImage(\n            image,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        } else {\n          tempCtx.drawImage(\n            tempCanvas,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        }\n        width = newWidth;\n        height = newHeight;\n      }\n\n      tempCtx.drawImage(\n        tempCanvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    }\n    return tempCanvas;\n  }\n\n  ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset) {\n    const x = this.value.x + padding + xOffset;\n    const y = this.value.y + padding + yOffset;\n    const clipwidth = this.value.width - 2 * padding;\n    const clipheight = clipwidth / this.value.aspectRatio;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + clipwidth - radius, y);\n    ctx.quadraticCurveTo(x + clipwidth, y, x + clipwidth, y + radius);\n    ctx.lineTo(x + clipwidth, y + clipheight - radius);\n    ctx.quadraticCurveTo(\n      x + clipwidth,\n      y + clipheight,\n      x + clipwidth - radius,\n      y + clipheight\n    );\n    ctx.lineTo(x + radius, y + clipheight);\n    ctx.quadraticCurveTo(x, y + clipheight, x, y + clipheight - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.clip();\n\n    ctx.drawImage(\n      tempCanvas,\n      0,\n      0,\n      this.value.width,\n      this.value.height,\n      x,\n      y,\n      clipwidth,\n      clipheight\n    );\n    ctx.restore();\n  }\n\n  CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset) {\n    if ('cut' in this.value) {\n      this.left.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n      this.right.CanvasDisplay(\n        canvasElement,\n        padding,\n        radius,\n        yOffset,\n        xOffset\n      );\n    }\n\n    if ('title' in this.value) {\n      const ctx = canvasElement.getContext('2d');\n      const newImg = new Image();\n      newImg.onload = () => {\n        const tempCanvas = this.ResizeImage(newImg);\n        const tempCtx = tempCanvas.getContext('2d');\n        this.ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset);\n        tempCtx.clearRect(0, 0, tempCanvas.width, tempCanvas.height);\n      };\n      newImg.src = this.value.src;\n    }\n  }\n\n  generate(images, tar, imageCount) {\n    const targetAspectRatioArr = images.map(\n      (image) => image.naturalWidth / image.naturalHeight\n    );\n    if (imageCount < 1) return [];\n    if (imageCount === 1) {\n      const closestIndex = helpers.findClosest(targetAspectRatioArr, tar);\n      this.value = images[closestIndex];\n      this.left = null;\n      this.right = null;\n      return [\n        ...images.slice(0, closestIndex),\n        ...images.slice(closestIndex + 1),\n      ];\n    }\n\n    const cut = helpers.getCut();\n    this.value = { cut, targetAspectRatio: tar };\n    if (imageCount === 2) {\n      const [leftIndex, rightIndex] = helpers.findImgPair(\n        targetAspectRatioArr,\n        tar\n      );\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        images[leftIndex].aspectRatio,\n        images[rightIndex].aspectRatio\n      );\n      this.left = new Node(images[leftIndex]);\n      this.right = new Node(images[rightIndex]);\n      return images.filter(\n        (item, index) => ![leftIndex, rightIndex].includes(index)\n      );\n    }\n\n    let restImages;\n    let targetAspectRatio;\n    this.left = new Node({ cut: helpers.getCut() });\n    //  this.right = new Node({ cut: helpers.getCut() });\n    this.right = new Node({ cut: this.left.value.cut === 'v' ? 'h' : 'v' });\n\n    targetAspectRatio = tar / 2;\n    if (cut === 'v') {\n      targetAspectRatio = tar * 2;\n    }\n\n    const randomNumber = Math.round(Math.random());\n    const [first, second] = randomNumber\n      ? ['left', 'right']\n      : ['right', 'left'];\n    restImages = this[first].generate(\n      images,\n      targetAspectRatio,\n      imageCount - Math.floor(imageCount / 2)\n    );\n    restImages = this[second].generate(\n      restImages,\n      targetAspectRatio,\n      Math.floor(imageCount / 2)\n    );\n\n    this.value.aspectRatio = helpers.getAspectRatio(\n      this.value.cut,\n      this.left.value.aspectRatio,\n      this.right.value.aspectRatio\n    );\n\n    return restImages;\n  }\n\n  adjust(th) {\n    let adjustments = 0;\n    if (this === null) return adjustments;\n\n    if (this.left !== null && this.right !== null) {\n      if (this.value.aspectRatio > this.value.targetAspectRatio * th) {\n        this.value.cut = 'h';\n        adjustments += 1;\n      }\n      if (this.value.aspectRatio < this.value.targetAspectRatio / th) {\n        this.value.cut = 'v';\n        adjustments += 1;\n      }\n\n      if (this.value.cut === 'v') {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n      } else {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n      }\n      adjustments += this.left.adjust(th) + this.right.adjust(th);\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        this.left.value.aspectRatio,\n        this.right.value.aspectRatio\n      );\n    }\n\n    return adjustments;\n  }\n\n  addSize(parentWidth, parentHeight, parentX, parentY, parentCut, nodeType) {\n    if (parentCut === 'v') {\n      this.value.height = parentHeight;\n      this.value.width = this.value.height * this.value.aspectRatio;\n    } else {\n      this.value.width = parentWidth;\n      this.value.height = this.value.width / this.value.aspectRatio;\n    }\n\n    if (nodeType === 'left') {\n      this.value.x = parentX;\n      this.value.y = parentY;\n    } else if (parentCut === 'h') {\n      this.value.y = parentY + parentHeight - this.value.height;\n      this.value.x = parentX;\n    } else {\n      this.value.x = parentX + parentWidth - this.value.width;\n      this.value.y = parentY;\n    }\n\n    if (this.left !== null) {\n      this.left.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'left'\n      );\n    }\n    if (this.right !== null) {\n      this.right.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'right'\n      );\n    }\n  }\n}\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\nimport Node from './node';\nimport helpers from './helpers';\n\nconst convertToRGBA = (value) =>\n  `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nfunction TextDisplay(textArray, position) {\n  return (\n    <>\n      {\n        // eslint-disable-next-line react/destructuring-assignment\n        textArray.map((chunk) => (\n          <Typography\n            key={chunk[2]}\n            sx={{\n              width: '100%',\n              position: 'absolute',\n              top: position + chunk[2],\n              bgcolor: alpha('#1c1c1c', 0.7),\n              paddingX: 1,\n              color: 'button.main',\n              textAlign: 'center',\n              fontFamily: 'Arial',\n              fontSize: '20px',\n              lineHeight: '25px',\n              letterSpacing: 'normal',\n            }}\n          >\n            {chunk[0]}\n          </Typography>\n        ))\n      }\n    </>\n  );\n}\n\nfunction TextCanvasDraw(\n  ctx,\n  textArray,\n  position,\n  scaleFactor,\n  canvasWidth,\n  textHeight\n) {\n  ctx.font = `${scaleFactor * 20}px Arial`;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'top';\n  ctx.fillStyle = '#1c1c1cb3';\n  ctx.fillRect(0, position, canvasWidth, position + textHeight);\n  ctx.fillStyle = 'white';\n\n  console.log('text array', textArray, textHeight);\n  // eslint-disable-next-line no-restricted-syntax\n  for (const chunk of textArray) {\n    const [textPart, , y] = chunk;\n    ctx.fillText(textPart, canvasWidth / 2, y + position + 2.5 * scaleFactor);\n  }\n}\n\nexport default class BinaryTree {\n  constructor(value) {\n    if (this.root === undefined) {\n      this.root = new Node(value);\n      return this;\n    }\n  }\n\n  addOptions(options) {\n    //  const convertToRGBA = (value) => `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n    this.root.options = { ...options };\n  }\n\n  display() {\n    if (this.root !== null) {\n      return this.root.display();\n    }\n    return null;\n  }\n\n  replaceImages(newImages) {\n    if (this.root !== null) {\n      this.root.replaceImages(newImages);\n    }\n  }\n\n  fromObject(obj) {\n    if (obj.root != null) this.root.fromObject(obj.root);\n    return this;\n  }\n\n  removeImageData() {\n    const tempTree = this.copy();\n    if (this.root !== null) {\n      tempTree.root.removeImageData();\n    }\n    return tempTree;\n  }\n\n  addImageData(imageData) {\n    if (this.root !== null) {\n      this.root.addImageData(imageData);\n    }\n  }\n\n  DOMDisplay(\n    canvasWidth,\n    canvasHeight,\n    delImg,\n    handleRemoveImage,\n    handleCollageImageLoad\n  ) {\n    const { text, topText, padding, borderRadius, color } = this.root.options;\n    const { width, height } = this.root.value;\n    const lA = helpers.wrapText(text, 0, 0, canvasWidth, 20, 25);\n    const textHeight = text.length ? lA.length * 25 : 0;\n    let yOffset = (canvasHeight - textHeight - height) / 2;\n    const xOffset = (canvasWidth - width) / 2;\n    let position = canvasHeight - textHeight;\n    if (topText && text.length > 0) {\n      yOffset += textHeight;\n      position = 0;\n    }\n\n    console.log(\n      'tree dom display',\n      canvasWidth,\n      canvasHeight,\n      height,\n      this.root.options,\n      textHeight,\n      yOffset,\n      xOffset,\n      width,\n      this,\n      lA\n    );\n    if (this.root !== null) {\n      return (\n        <Box sx={{ backgroundColor: 'white' }}>\n          <Box\n            width={canvasWidth}\n            height={canvasHeight}\n            sx={{\n              position: 'relative',\n              backgroundColor: convertToRGBA(color),\n            }}\n          >\n            {this.root.DOMDisplay(\n              padding,\n              borderRadius,\n              delImg,\n              handleRemoveImage,\n              yOffset,\n              xOffset,\n              handleCollageImageLoad\n            )}\n            {text.length ? TextDisplay(lA, position) : null}\n          </Box>\n        </Box>\n      );\n    }\n    return null;\n  }\n\n  CanvasDisplay(canvasWidth, canvasHeight, canvasElement, scaleFactor) {\n    if (this.root !== null) {\n      const { text, topText, padding, borderRadius, color } = this.root.options;\n      const { width, height } = this.root.value;\n      const lA = helpers.wrapText(\n        text,\n        0,\n        0,\n        canvasWidth,\n        20 * scaleFactor,\n        25 * scaleFactor\n      );\n      const textHeight = text.length ? lA.length * 25 * scaleFactor : 0;\n      let yOffset = (canvasHeight - textHeight - height) / 2;\n      const xOffset = (canvasWidth - width) / 2;\n      let position = canvasHeight - textHeight;\n      if (topText && text.length > 0) {\n        yOffset += textHeight;\n        position = 0;\n      }\n      const ctx = canvasElement.getContext('2d');\n      ctx.fillStyle = convertToRGBA(color);\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      this.root.CanvasDisplay(\n        canvasElement,\n        padding * scaleFactor,\n        borderRadius * scaleFactor,\n        yOffset,\n        xOffset\n      );\n      TextCanvasDraw(ctx, lA, position, scaleFactor, canvasWidth, textHeight);\n    }\n  }\n\n  generateScore() {\n    const score = this.root.getScore();\n    // console.log('from', ...score);\n    return Math.min(...score);\n  }\n\n  generateCollageTree(images, tar) {\n    this.root.generate(images, tar, images.length);\n  }\n\n  adjust(th) {\n    let trys = 0;\n    let bestAdjust = this.copy();\n    let bestAspectRatio = this.root.value.aspectRatio;\n    const tolerableDifference = this.root.value.targetAspectRatio * (1 - th);\n    let ajstCnt = 1000;\n    while (trys < 100 && ajstCnt > 0) {\n      ajstCnt = this.root.adjust(th);\n      trys += 1;\n      const diff =\n        this.root.value.aspectRatio - this.root.value.targetAspectRatio;\n      if (\n        Math.abs(diff) <\n        Math.abs(bestAspectRatio - this.root.value.targetAspectRatio)\n      ) {\n        bestAspectRatio = this.root.value.aspectRatio;\n        bestAdjust = this.copy();\n      }\n      if ((diff > 0 && diff < tolerableDifference) || diff === 0) break;\n    }\n\n    return [bestAspectRatio, bestAdjust];\n  }\n\n  copy() {\n    const copyTree = new BinaryTree({});\n    copyTree.root = this.root.copy();\n    copyTree.root.options = { ...this.root.options };\n    return copyTree;\n  }\n\n  addSize(canvasWidth, canvasHeight, aspectRatio) {\n    const [maxW, maxH] = helpers.getCollageDimension(\n      canvasWidth,\n      canvasHeight,\n      aspectRatio\n    );\n    this.root.value.width = maxW;\n    this.root.value.height = maxH;\n    console.log('add size', this.root.value.width, this.root.value.height);\n    this.root.value.x = 0;\n    this.root.value.y = 0;\n    const { width, height, x, y, cut } = this.root.value;\n    if (this.root.left !== null)\n      this.root.left.addSize(width, height, x, y, cut, 'left');\n    if (this.root.right !== null)\n      this.root.right.addSize(width, height, x, y, cut, 'right');\n  }\n}\n","import BinaryTree from './binaryTree';\nimport helpers from './helpers';\n\nfunction findBestAdjustTree(images, tolerance, imageWidth, imageHeight) {\n  const sortedImages = images.sort((a, b) =>\n    a.aspectRatio <= b.aspectRatio ? 1 : -1\n  );\n  const collageArray = [];\n  for (let i = 0; i < 100; i += 1) {\n    const imgTree = new BinaryTree({ cut: helpers.getCut() });\n    imgTree.generateCollageTree(sortedImages, imageWidth / imageHeight);\n\n    collageArray.push(imgTree.adjust(1 - tolerance));\n  }\n\n  collageArray.sort((a, b) => {\n    const aspR = imageWidth / imageHeight;\n    const diffA = Math.abs(a[0] - aspR);\n    const diffB = Math.abs(b[0] - aspR);\n    return diffA - diffB;\n  });\n\n  const bAR = collageArray.filter(\n    (elem) => elem[0].toFixed(1) === collageArray[0][0].toFixed(1)\n  );\n  console.log('from bar', bAR);\n  let maxScore = 0;\n  let maxElem = {};\n  bAR.forEach((element) => {\n    element[1].addSize(\n      1000 * (imageWidth / imageHeight),\n      1000,\n      imageWidth / imageHeight\n    );\n    const score = element[1].generateScore();\n    // console.log('from bar all matching', score);\n    if (score > maxScore) {\n      maxScore = score;\n      maxElem = element;\n    }\n  });\n  // console.log('from returning', maxElem, maxScore);\n  return maxElem;\n  // collageArray[0][1].addSize(\n  //   1000 * (imageWidth / imageHeight),\n  //   1000,\n  //   imageWidth / imageHeight\n  // );\n  // console.log(\n  //   'from best adjust tree',\n  //   collageArray[0][0],\n  //   collageArray[0][1].generateScore()\n  // );\n  // return collageArray[0];\n}\n\nexport default { findBestAdjustTree };\n","import helpers from 'api/helpers';\n\nfunction newCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/new';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nasync function upload(url, body) {\n  try {\n    const params = { body, method: 'PUT' };\n    const resp = await fetch(url, params).then((response) => response);\n    return resp;\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nexport default { newCollage, upload };\n","import { useEffect, useState } from 'react';\nimport useDimensions from 'hooks/collage/dimensions';\nimport useOptions from 'hooks/collage/options';\nimport useActions from 'hooks/collage/actions';\nimport useImages from 'hooks/collage/images';\nimport useTree from 'hooks/collage/tree';\n\nimport helpers from 'components/collage/helpers';\nimport collageapi from 'api/collage';\n\nexport default function useCollage() {\n  const collageID = Date.now();\n  const constants = {\n    tolerance: 0.1,\n    resizeImageWidth: 1500,\n    aspectRatio: 0.7,\n    paperSizes: {\n      A4: { width: 2480, height: 3508, text: '8 X 11 inches' },\n      A3: { width: 3508, height: 4961, text: '11 X 16 inches' },\n    },\n  };\n\n  const dimensions = useDimensions(constants.aspectRatio);\n  const options = useOptions();\n  const actions = useActions();\n  const images = useImages(constants.resizeImageWidth);\n  const treeState = useTree({}, options.setOptions);\n  const [thumbnail, setThumbnail] = useState(null);\n  const [saveStatus, setSaveStatus] = useState({\n    details: {\n      text: 'Saving Details',\n      status: 'pending',\n    },\n    images: {\n      text: 'Saving Images',\n      status: 'pending',\n    },\n    finalizing: {\n      text: 'Finalizing Collage',\n      status: 'pending',\n    },\n  });\n\n  const updateStatus = (key, status) => {\n    const value = { ...saveStatus[key], status };\n    setSaveStatus((st) => ({ ...st, [key]: value }));\n  };\n\n  const handleClear = async () => {\n    const clearPromises = await Promise.allSettled([\n      treeState.clear(),\n      images.clear(),\n      options.clear(),\n    ]);\n\n    for (let i = 0; i < clearPromises.length; i += 1) {\n      if (\n        clearPromises[i].status === 'fulfilled' ||\n        clearPromises[i].value.ok === true\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    if (\n      (images.newImgCount > 0 &&\n        images.newImgCount === images.newImagesLoaded) ||\n      actions.refresh\n    ) {\n      images.setNewImageCount(0);\n      images.setNewImagesLoaded(0);\n      treeState.reAdjust(\n        images.images,\n        constants.tolerance,\n        dimensions.width,\n        dimensions.height - dimensions.textHeight,\n        options.options\n      );\n      actions.setRefresh(false);\n    }\n  }, [images.newImgCount, images.newImagesLoaded, actions.refresh]);\n\n  const collageCallback = (someTree) => treeState.addTreeToDB(someTree);\n\n  const handleRemoveImage = (imgTitle) => {\n    const newImagesArr = images.remove(imgTitle);\n    treeState.reAdjust(\n      newImagesArr,\n      constants.tolerance,\n      dimensions.imageWidth,\n      dimensions.imageHeight,\n      options.options\n    );\n  };\n\n  const generateThumbnail = () => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    const thumbnailCanvas = document.createElement('canvas');\n    const thumbnailTree = treeState.tree.copy();\n    thumbnailTree.addSize(500 * ar, 500, ar);\n    thumbnailCanvas.width = 500 * ar;\n    thumbnailCanvas.height = 500;\n    thumbnailTree.CanvasDisplay(\n      500 * ar,\n      500,\n      thumbnailCanvas,\n      (500 * ar) / dimensions.width\n    );\n\n    // create and update details\n    const thumbnailDetails = {\n      title: `thumbnail-${collageID}.png`,\n      src: '',\n      naturalHeight: 500,\n      naturalWidth: 500 * ar,\n      aspectRatio: ar,\n      type: 'image/png',\n    };\n    return [thumbnailDetails, thumbnailCanvas];\n  };\n\n  const uploadCollageDetails = (thumbnailDetails, name) => {\n    const collageDetails = {\n      collage_id: collageID.toString(),\n      name,\n      created_at: '2021-02-18T21:54:42.123Z',\n      last_updated_at: '2021-02-18T21:54:45.123Z',\n      images: images.removeImageData(images.originalImages),\n      tree: treeState.tree.removeImageData(),\n      thumbnail: thumbnailDetails,\n    };\n    console.log(collageDetails);\n    return collageapi.newCollage(collageID, collageDetails);\n  };\n\n  const uploadCollageImages = (thumbnailCanvas, imageURLS) => {\n    const thumbnailPromise = thumbnailCanvas.toBlob(async (blob) => {\n      setThumbnail(blob);\n      const thumbnailKey = `thumbnail-${collageID}.png`;\n      return collageapi.upload(imageURLS[thumbnailKey], blob);\n    });\n\n    const imagePromises = images.originalImages.map(async (item) => {\n      const url = imageURLS[item.title];\n      const body = item.src;\n      return collageapi.upload(url, body);\n    });\n\n    return [thumbnailPromise, ...imagePromises];\n  };\n\n  const newCollage = async (name) => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    console.log('in generate thumbnail', ar, 500 * ar, 500);\n    const [thumbnailDetails, thumbnailCanvas] = generateThumbnail();\n    updateStatus('details', 'running');\n    const imageURLS = await uploadCollageDetails(thumbnailDetails, name);\n    updateStatus('details', 'done');\n    updateStatus('images', 'running');\n    const imagePromises = uploadCollageImages(thumbnailCanvas, imageURLS);\n    const uploadPromises = await Promise.allSettled(imagePromises);\n    updateStatus('images', 'done');\n    updateStatus('finalizing', 'running');\n    let uploadStatus;\n    for (let i = 0; i < uploadPromises.length; i += 1) {\n      if (\n        uploadPromises[i].status === 'fulfilled' ||\n        uploadPromises[i].value.ok === true\n      ) {\n        uploadStatus = true;\n      } else {\n        uploadStatus = false;\n        break;\n      }\n    }\n    updateStatus('finalizing', 'done');\n    return uploadStatus;\n  };\n\n  useEffect(() => {\n    if (\n      options.options.text.length > 0 &&\n      Object.keys(treeState.tree).length > 0\n    ) {\n      const tH = helpers.wrapText(\n        options.options.text,\n        0,\n        0,\n        dimensions.width,\n        20,\n        25\n      );\n      dimensions.setTextHeight(tH.length * 25);\n      const [w, h] = helpers.getCollageDimension(\n        dimensions.width,\n        dimensions.height - tH.length * 25,\n        treeState.tree.root.value.aspectRatio\n      );\n      dimensions.setImageWidth(w);\n      dimensions.setImageHeight(h);\n    } else {\n      dimensions.setTextHeight(0);\n      options.handlePositionChange(true);\n      dimensions.setImageWidth(dimensions.width);\n      dimensions.setImageHeight(dimensions.height);\n    }\n  }, [\n    dimensions.width,\n    dimensions.height,\n    treeState.tree,\n    options.options.text,\n  ]);\n\n  return [\n    thumbnail,\n    collageID,\n    constants,\n    dimensions,\n    options,\n    actions,\n    images,\n    treeState,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n  ];\n}\n","import { useRef, useState, useEffect } from 'react';\nimport helpers from 'components/collage/helpers';\n\nexport default function useDimensions(aspectRatio) {\n  const headerRef = useRef();\n  const actionsRef = useRef();\n  const footerRef = useRef();\n  const addImageRef = useRef();\n\n  const [height, setHeight] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [imageWidth, setImageWidth] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [maxHeight, setMaxHeight] = useState(0);\n  const [maxWidth, setMaxWidth] = useState(0);\n  const [textHeight, setTextHeight] = useState(0);\n\n  const setDimensions = () => {\n    const headerHeight = headerRef.current ? headerRef.current.offsetHeight : 0;\n    const actionsHeight = actionsRef.current\n      ? actionsRef.current.offsetHeight\n      : 0;\n    const footerHeight = footerRef.current ? footerRef.current.offsetHeight : 0;\n    const otherHeight = headerHeight + actionsHeight + footerHeight;\n    setMaxWidth(window.innerWidth);\n    setMaxHeight(window.innerHeight - otherHeight);\n    const [w, h] = helpers.getCollageDimension(\n      window.innerWidth,\n      window.innerHeight - otherHeight - 6,\n      aspectRatio\n    );\n    console.log('other height', otherHeight);\n    setWidth(w);\n    setHeight(h);\n  };\n\n  const handleImageAddClick = () => {\n    if (addImageRef.current) addImageRef.current.click();\n  };\n\n  useEffect(() => {\n    console.log('dimensions changed');\n    setDimensions();\n  }, [\n    window.innerHeight,\n    window.innerWidth,\n    headerRef.current,\n    actionsRef.current,\n    footerRef.current,\n  ]);\n\n  useEffect(() => {\n    setDimensions();\n    window.addEventListener('resize', setDimensions);\n\n    return () => window.removeEventListener('resize', setDimensions);\n  }, []);\n\n  return {\n    actionsRef,\n    headerRef,\n    footerRef,\n    width,\n    height,\n    imageHeight,\n    imageWidth,\n    setImageWidth,\n    setImageHeight,\n    maxHeight,\n    maxWidth,\n    handleImageAddClick,\n    textHeight,\n    setTextHeight,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useOptions() {\n  const optionsInitValue = {\n    padding: 2,\n    borderRadius: 5,\n    color: {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1,\n    },\n    text: '',\n    topText: true,\n  };\n\n  const [options, setOptions] = useState(optionsInitValue);\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n  const clear = () => setOptions(optionsInitValue);\n  const handlePaddingChange = (e) =>\n    setOptions((opts) => ({ ...opts, padding: e.target.value }));\n  const handleRadiusChange = (e) => {\n    setOptions((opts) => ({ ...opts, borderRadius: e.target.value }));\n  };\n\n  const handleColorClick = () => setDisplayColorPicker((dcp) => !dcp);\n  const handleColorClose = () => setDisplayColorPicker(false);\n  const handleColorChange = (clr) =>\n    setOptions((opts) => ({ ...opts, color: clr.rgb }));\n  const handlePositionChange = (value) =>\n    setOptions((opts) => ({ ...opts, topText: value }));\n\n  const handleTextChange = (e) => {\n    const { target } = e;\n    setOptions((opts) => ({ ...opts, text: target.value }));\n  };\n\n  return {\n    options,\n    setOptions,\n    clear,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClick,\n    handleColorClose,\n    handleColorChange,\n    handlePositionChange,\n    handleTextChange,\n    displayColorPicker,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useActions() {\n  const [open, setOpen] = useState(false);\n  const [saveOpen, setSaveOpen] = useState(false);\n  const [saveStart, setSaveStart] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [generate, setGenerate] = useState(false);\n  const [removeImage, setRemoveImage] = useState(false);\n  const [printOptions, setPrintOptions] = useState({\n    paperWidth: 0,\n    paperHeight: 0,\n  });\n\n  const onRefresh = () => setRefresh(true);\n  const handleDownload = () => setOpen(true);\n  const handleSave = () => setSaveOpen(true);\n  const onDownloadClose = () => setOpen(false);\n  const onSaveClose = () => setSaveOpen(false);\n  const clearDelete = () => setRemoveImage(false);\n  const onDelete = () => setRemoveImage((ri) => !ri);\n\n  const onDownloadClick = (w, h) => {\n    setPrintOptions({ paperWidth: w, paperHeight: h });\n    setGenerate(true);\n    setOpen(false);\n  };\n\n  const onSaveClick = () => {\n    setSaveStart(true);\n    setSaveOpen(false);\n  };\n  const handleGenerateCallback = () => {\n    setGenerate(false);\n    setPrintOptions({ paperWidth: 0, paperHeight: 0 });\n  };\n\n  return {\n    clearDelete,\n    generate,\n    handleDownload,\n    handleGenerateCallback,\n    onDelete,\n    onDownloadClick,\n    onDownloadClose,\n    onRefresh,\n    open,\n    printOptions,\n    refresh,\n    setGenerate,\n    setOpen,\n    setPrintOptions,\n    setRefresh,\n    removeImage,\n    setRemoveImage,\n    saveOpen,\n    setSaveOpen,\n    onSaveClose,\n    onSaveClick,\n    handleSave,\n    saveStart,\n    setSaveStart,\n  };\n}\n","import { useState } from 'react';\nimport useImageCount from 'hooks/collage/imageCount';\nimport useIndexedDBState from 'hooks/collage/indexedDBState';\nimport helpers from 'components/collage/helpers';\nimport db from 'db';\n\nexport default function useImages(resizeImageWidth) {\n  const [newImgCount, setNewImageCount] = useState(0);\n  const [newImagesLoaded, setNewImagesLoaded] = useState(0);\n  const [imgCount, setImageCount] = useImageCount('imgCount', 0);\n  const [loaded, setLoaded] = useState(0);\n  const [images, setImages, addToImagesDB] = useIndexedDBState(\n    'images',\n    [],\n    () => {}\n  );\n  const [originalImages, setOriginalImages, addToOriginalImagesDB] =\n    useIndexedDBState('originalImages', []);\n\n  const removeImageData = (imageArr) => {\n    const tempImgArr = [...imageArr];\n    return tempImgArr.map((img) => {\n      const { src: _, ...rest } = img;\n      return rest;\n    });\n  };\n\n  const handleImageData = (imageDetail, originalImageDetail) => {\n    setOriginalImages((arr) => arr.concat([originalImageDetail]));\n    setImages((arr) => arr.concat([imageDetail]));\n    addToImagesDB(imageDetail);\n    addToOriginalImagesDB(originalImageDetail);\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleLoad = (event) => {\n    helpers.handleImageLoad(\n      event,\n      resizeImageWidth,\n      setImageCount,\n      setNewImageCount,\n      handleImageData\n    );\n  };\n\n  const clear = () => {\n    db.collageDB.images.clear();\n    setImages([]);\n    db.collageDB.originalImages.clear();\n    setOriginalImages([]);\n    db.collageDB.imgCount.clear();\n    setImageCount(0);\n  };\n\n  const remove = (title) => {\n    const removeIndex = images.findIndex((elem) => elem.title === title);\n    const newImagesArr = [\n      ...images.slice(0, removeIndex),\n      ...images.slice(removeIndex + 1),\n    ];\n    setImages(newImagesArr);\n    setImageCount((cnt) => cnt - 1);\n    db.collageDB.images.delete(title);\n    db.collageDB.originalImages.delete(title);\n    return newImagesArr;\n  };\n\n  return {\n    addToImagesDB,\n    addToOriginalImagesDB,\n    clear,\n    handleImageData,\n    handleLoad,\n    images,\n    imgCount,\n    loaded,\n    newImagesLoaded,\n    newImgCount,\n    originalImages,\n    remove,\n    setImageCount,\n    setImages,\n    setLoaded,\n    setNewImageCount,\n    setNewImagesLoaded,\n    setOriginalImages,\n    removeImageData,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport db from 'db';\nimport treeUtils from 'components/collage/treeUtils';\nimport BinaryTree from 'components/collage/binaryTree';\n\nexport default function useTree(initialValue, loadingCallback = () => {}) {\n  const tableName = 'collageTree';\n  const [tree, setTree] = useState(initialValue);\n\n  async function setDataFromDB() {\n    const rows = await db.collageDB[tableName].toArray();\n    if (rows.length > 0) {\n      const newTree = new BinaryTree({});\n      newTree.fromObject({ root: rows[0].root });\n      if ('options' in rows[0].root) {\n        loadingCallback((opts) => ({ ...opts, ...rows[0].root.options }));\n      }\n      setTree(newTree);\n    }\n  }\n\n  useEffect(() => {\n    setDataFromDB();\n  }, []);\n\n  const addTreeToDB = async (data) => {\n    db.collageDB.collageTree.clear();\n    const cleanedData = data.removeImageData();\n    await db.collageDB[tableName].put(cleanedData);\n  };\n\n  const clear = () => {\n    db.collageDB.collageTree.clear();\n    setTree({});\n  };\n\n  const reAdjust = (imagesArr, tolerance, imageWidth, imageHeight, options) => {\n    const [, bestAspectRatioTree] = treeUtils.findBestAdjustTree(\n      imagesArr,\n      tolerance,\n      imageWidth,\n      imageHeight\n    );\n    bestAspectRatioTree.addOptions(options);\n    setTree(bestAspectRatioTree);\n    addTreeToDB(bestAspectRatioTree);\n  };\n\n  return { tree, setTree, addTreeToDB, clear, reAdjust };\n}\n","import { useState, useEffect } from 'react';\nimport helpers from './helpers';\n\nexport default function Collage({\n  dimensionProps,\n  imageProps,\n  actionProps,\n  collageCallback,\n  handleRemoveImage,\n  options,\n  tree,\n}) {\n  const [collage, setCollage] = useState(null);\n  const { images, originalImages, setLoaded } = imageProps;\n  const { generate, handleGenerateCallback, printOptions, removeImage } =\n    actionProps;\n  const { height, width, imageHeight, imageWidth } = dimensionProps;\n\n  const handleCollageImageLoad = () => setLoaded((cnt) => cnt + 1);\n  const isEmpty = (t) => Object.keys(t).length === 0;\n  const createCollage = () => {\n    console.log('started collage loading');\n    tree.addSize(imageWidth, imageHeight, tree.root.value.aspectRatio);\n    console.log('collage added size');\n    tree.addOptions(options);\n    console.log('collage added options', images.length);\n    if (images.length > 0) {\n      tree.addImageData(images);\n      console.log('collage added image data');\n      const collageElem = tree.DOMDisplay(\n        width,\n        height,\n        removeImage,\n        handleRemoveImage,\n        handleCollageImageLoad\n      );\n      console.log('collage added dom display');\n      setCollage(collageElem);\n      collageCallback(tree);\n    }\n  };\n\n  useEffect(() => {\n    if (!isEmpty(tree)) {\n      console.log('collage, tree is not empty');\n      createCollage();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(tree)) {\n      console.log('collage, tree is not empty 1');\n      createCollage();\n    } else {\n      setCollage(null);\n    }\n  }, [tree, options, imageWidth, imageHeight, removeImage, images]);\n\n  const downloadCollage = (canvas, pW, pH) => {\n    canvas.toBlob((blob) => {\n      const link = document.createElement('a');\n      link.download = `collage-${pW}X${pH}-${Date.now()}.png`;\n      link.href = URL.createObjectURL(blob);\n      link.click();\n      URL.revokeObjectURL(link.href);\n      link.href = null;\n      handleGenerateCallback();\n    });\n  };\n\n  useEffect(() => {\n    if (generate === true) {\n      const canvasElement = document.createElement('canvas');\n      const { paperWidth, paperHeight } = printOptions;\n      canvasElement.width = paperWidth;\n      canvasElement.height = paperHeight;\n      const scaleFactor = paperWidth / width;\n      const lineArray = helpers.wrapText(\n        options.text,\n        0,\n        0,\n        paperWidth,\n        20 * scaleFactor,\n        25 * scaleFactor\n      );\n      const textHeight = lineArray.length * 25 * scaleFactor;\n      const [imgPrintWidth, imgPrintHeight] = helpers.getCollageDimension(\n        paperWidth,\n        paperHeight - textHeight,\n        tree.root.value.aspectRatio\n      );\n      const canvasTree = tree.copy();\n      canvasTree.replaceImages(originalImages);\n      canvasTree.addSize(\n        imgPrintWidth,\n        imgPrintHeight,\n        tree.root.value.aspectRatio\n      );\n      canvasTree.CanvasDisplay(\n        paperWidth,\n        paperHeight,\n        canvasElement,\n        scaleFactor\n      );\n\n      setTimeout(\n        () => downloadCollage(canvasElement, paperWidth, paperHeight),\n        '5000'\n      );\n    }\n  }, [generate]);\n  return collage;\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Authenticate from 'hocs/require-authentication';\n\nexport default function DownloadDialog({ open, onClick, onClose, sizes }) {\n  const [value, setValue] = useState('');\n  const handleDownload = () => {\n    console.log(sizes[value].width, sizes[value].height, onClick);\n    onClick(sizes[value].width, sizes[value].height);\n    setValue('');\n  };\n\n  const handleClose = () => {\n    setValue('');\n    onClose();\n  };\n\n  return (\n    <Authenticate>\n      <Dialog open={open} fullWidth>\n        <DialogTitle sx={{ textAlign: 'center' }}>Download Collage</DialogTitle>\n        <DialogContent\n          dividers\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <DialogContentText sx={{ display: 'inline', pr: 1 }}>\n            Choose collage size\n          </DialogContentText>\n          <FormControl fullWidth sx={{ maxWidth: '60%' }}>\n            <InputLabel id=\"demo-simple-select-label\">Download Size</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              defaultValue=\"A4\"\n              value={value}\n              label=\"Download Size\"\n              onChange={(event) => setValue(event.target.value)}\n            >\n              {Object.keys(sizes).map((key) => (\n                <MenuItem key={sizes[key].text} value={key}>\n                  {sizes[key].text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"outlined\"\n            disabled={value.length === 0}\n            onClick={handleDownload}\n          >\n            Download\n          </Button>\n          <Button variant=\"text\" onClick={handleClose}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Authenticate>\n  );\n}\n\nDownloadDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\n// import DialogContentText from '@mui/material/DialogContentText';\nimport TextField from '@mui/material/TextField';\nimport Authenticate from 'hocs/require-authentication';\n\nexport default function SaveDialog({ open, onClick, onClose }) {\n  const [name, setName] = useState('');\n  const [nameError] = useState('');\n  const handleSave = () => {\n    onClick(name);\n  };\n\n  const handleNameChange = (e) => {\n    const { target } = e;\n    setName(target.value);\n  };\n  const handleClose = () => {\n    setName('');\n    onClose();\n  };\n\n  return (\n    <Authenticate>\n      <Dialog open={open} fullWidth>\n        <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n        <DialogContent\n          dividers\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <TextField\n            variant=\"outlined\"\n            label=\"Set Collage Name\"\n            defaultValue={name}\n            onChange={handleNameChange}\n            size=\"small\"\n            sx={{ width: '100%', mb: 1 }}\n            InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n            helperText={nameError}\n            error={!!nameError}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"outlined\"\n            disabled={name.length === 0}\n            onClick={handleSave}\n          >\n            Save\n          </Button>\n          <Button variant=\"text\" onClick={handleClose}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Authenticate>\n  );\n}\n\nSaveDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Typography from '@mui/material/Typography';\nimport Authenticate from 'hocs/require-authentication';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport PendingIcon from '@mui/icons-material/Pending';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CloseIcon from '@mui/icons-material/Close';\n\nfunction StatusIndicator({ status }) {\n  if (status === 'running') {\n    return <CircularProgress color=\"info\" size=\"1rem\" />;\n  }\n  if (status === 'pending') {\n    return <PendingIcon color=\"disabled\" size=\"0.875rem\" />;\n  }\n  if (status === 'done') {\n    return <CheckCircleOutlineIcon color=\"success\" size=\"0.875rem\" />;\n  }\n  if (status === 'failed') {\n    return <CloseIcon color=\"error\" size=\"0.875rem\" />;\n  }\n}\n\nStatusIndicator.propTypes = {\n  status: PropTypes.string.isRequired,\n};\n\nfunction Status({ text, status }) {\n  const color = {\n    pending: alpha('#000', 0.26),\n    done: 'green',\n    running: 'black',\n    failed: 'red',\n  };\n\n  return (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n      <Typography\n        sx={{ fontWeight: 'bold', fontSize: '0.875rem', color: color[status] }}\n      >\n        {text}\n      </Typography>\n      <StatusIndicator status={status} />\n    </Stack>\n  );\n}\n\nStatus.propTypes = {\n  text: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nexport default function SaveStatusDialog({ open, status }) {\n  return (\n    <Authenticate>\n      <Dialog open={open} fullWidth>\n        <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n        <DialogContent dividers>\n          <Stack direction=\"column\" justifyContent=\"center\" spacing={2}>\n            {Object.values(status).map((st) => (\n              <Status key={st.text} text={st.text} status={st.status} />\n            ))}\n          </Stack>\n        </DialogContent>\n      </Dialog>\n    </Authenticate>\n  );\n}\n\nSaveStatusDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  status: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Paper from '@mui/material/Paper';\nimport { Typography, Box, Link } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { alpha } from '@mui/material/styles';\n\nexport default function Header({ headerRef }) {\n  return (\n    <Paper\n      ref={headerRef}\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        p: 1,\n        backgroundColor: alpha('#fff', 0.1),\n        borderRadius: 0,\n      }}\n      elevation={3}\n    >\n      <Box sx={{ position: 'absolute', left: '5px' }}>\n        <Link href=\"/collages\" color=\"muted.main\" underline=\"none\">\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <ArrowBackIcon />\n          </Box>\n        </Link>\n      </Box>\n      <Typography\n        variant=\"h4\"\n        component=\"h4\"\n        sx={{ color: alpha('#fff', 0.5) }}\n      >\n        Collage Maker\n      </Typography>\n    </Paper>\n  );\n}\n\nHeader.propTypes = {\n  headerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport collageBack from 'static/images/collage_back1.webp';\n\nexport default function EmptyCollage({ width, height, loadComponent }) {\n  return (\n    <Box\n      sx={{\n        width,\n        height,\n        //  border: '2px solid white',\n        position: 'relative',\n        backgroundImage: `url(${collageBack})`,\n        backgroundSize: width,\n        objectFit: 'contain',\n        backgroundRepeat: 'no-repeat',\n        alignItems: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      >\n        {loadComponent}\n      </Box>\n    </Box>\n  );\n}\n\nEmptyCollage.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  loadComponent: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport EmptyCollage from 'components/collage/EmptyCollage';\nimport Loading from 'components/Loading';\nimport AddPhotos from 'components/AddPhotos';\n\nexport default function View({\n  open,\n  saveOpen,\n  saveStatusOpen,\n  loading,\n  dimensionProps,\n  imageProps,\n  header,\n  actions,\n  downloadDialog,\n  saveDialog,\n  saveStatusDialog,\n  collage,\n  controls,\n}) {\n  const { width, height, maxWidth, maxHeight, imageHeight } = dimensionProps;\n  const { images, imgCount, handleLoad } = imageProps;\n  return (\n    <Box component=\"div\" sx={{ backgroundColor: 'black' }}>\n      {header}\n      {actions}\n      {open ? downloadDialog : null}\n      {saveOpen ? saveDialog : null}\n      {saveStatusOpen ? saveStatusDialog : null}\n      <Box\n        width={maxWidth}\n        height={maxHeight}\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'black',\n        }}\n      >\n        {images.length !== imgCount /* && !loading */ ? (\n          <EmptyCollage\n            width={width}\n            height={height}\n            loadComponent={\n              <Loading\n                title={`Loading (${images.length} / ${imgCount}) images...`}\n              />\n            }\n          />\n        ) : null}\n        {imgCount === 0 || imageHeight === 0 ? (\n          <EmptyCollage\n            width={width}\n            height={height}\n            loadComponent={\n              width ? <AddPhotos handleChange={handleLoad} /> : <div />\n            }\n          />\n        ) : null}\n        {collage}\n        {images.length > 0 && images.length === imgCount && loading ? (\n          <Loading title=\"Preparing collage...\" />\n        ) : null}\n      </Box>\n      {controls}\n    </Box>\n  );\n}\n\nView.propTypes = {\n  dimensionProps: PropTypes.shape({\n    maxWidth: PropTypes.number.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    imageHeight: PropTypes.number.isRequired,\n  }).isRequired,\n  imageProps: PropTypes.shape({\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        src: PropTypes.string.isRequired,\n        naturalHeight: PropTypes.number.isRequired,\n        naturalWidth: PropTypes.number.isRequired,\n        aspectRatio: PropTypes.number.isRequired,\n        type: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    imgCount: PropTypes.number.isRequired,\n    handleLoad: PropTypes.func.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  saveOpen: PropTypes.bool.isRequired,\n  saveStatusOpen: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  header: PropTypes.node.isRequired,\n  actions: PropTypes.node.isRequired,\n  collage: PropTypes.node.isRequired,\n  controls: PropTypes.node.isRequired,\n  downloadDialog: PropTypes.node.isRequired,\n  saveDialog: PropTypes.node.isRequired,\n  saveStatusDialog: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport { alpha } from '@mui/material/styles';\n\nexport default function DBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      icon={icon}\n      sx={{\n        py: 1,\n        fontWeight: 'bold',\n        color: 'gray',\n        outline: 'none',\n        '&:focus': {\n          color: alpha('#fff', 0.8),\n          outline: 'none',\n        },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\nDBNA.defaultProps = {\n  handleChange: () => {},\n};\n\nDBNA.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Drawer from '@mui/material/Drawer';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopDrawer({ anchor, children }) {\n  return (\n    <Drawer\n      anchor={anchor}\n      variant=\"permanent\"\n      PaperProps={{\n        sx: {\n          height: 'fit-content',\n          top: '50%',\n          backgroundColor: 'transparent',\n          color: 'gray',\n          fontWeight: 'bold',\n          borderRadius: anchor === 'left' ? '0 10px 10px 0' : '10px 0 0 10px',\n          transform: 'translate(0, -50%)',\n        },\n      }}\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nDesktopDrawer.propTypes = {\n  anchor: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Divider from '@mui/material/Divider';\n\nexport default function ControlsDivider() {\n  return <Divider sx={{ backgroundColor: 'gray', my: 1 }} variant=\"middle\" />;\n}\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport List from '@mui/material/List';\nimport { alpha } from '@mui/material/styles';\n\nimport DBNA from 'components/collage/DesktopActionItem';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport ControlsDivider from 'components/collage/ControlsDivider';\n\nexport default function DesktopActions({ onDownload }) {\n  const handleChange = (newValue) => {\n    console.log(newValue);\n    if (newValue === 'download') {\n      onDownload();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  return (\n    <DesktopDrawer anchor=\"right\">\n      <List sx={{ backgroundColor: alpha('#fff', 0.1) }}>\n        <DBNA\n          label=\"Save\"\n          icon={<SaveIcon />}\n          handleChange={() => handleChange('save')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label=\"Download\"\n          icon={<DownloadIcon />}\n          handleChange={() => handleChange('download')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label={\n            <>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Order\n              </Typography>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Print(s)\n              </Typography>\n            </>\n          }\n          icon={<PrintIcon />}\n          handleChange={() => handleChange('print')}\n        />\n      </List>\n    </DesktopDrawer>\n  );\n}\n\nDesktopActions.propTypes = {\n  onDownload: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\n\nexport default function ClearCollageDialog({ open, onSubmit, onCancel }) {\n  return (\n    <Dialog open={open}>\n      <DialogTitle\n        sx={{\n          textAlign: 'center',\n          fontWeight: 'bold',\n          color: alpha('#000', 0.8),\n        }}\n      >\n        Clear Collage\n      </DialogTitle>\n      <DialogContent dividers>\n        <DialogContentText sx={{ fontWeight: 'bold', color: 'gray' }}>\n          Do you want to clear collage?\n        </DialogContentText>\n        <Typography\n          variant=\"subtitle2\"\n          sx={{ color: 'red', fontWeight: 'bold' }}\n          noWrap\n        >\n          Note:\n        </Typography>\n        <Typography sx={{ fontSize: '0.8rem', color: 'gray' }}>\n          This change is not reversible\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onSubmit} sx={{ color: 'red' }}>\n          {' '}\n          Clear{' '}\n        </Button>\n        <Button variant=\"outlined\" onClick={onCancel}>\n          {' '}\n          Cancel{' '}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nClearCollageDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Stack from '@mui/material/Stack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport { alpha } from '@mui/material/styles';\n\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function DesktopControls({\n  onRefresh,\n  photosComp,\n  editComp,\n  handleClear,\n  clearDelete,\n}) {\n  const [imageOptionsOpen, setImageOptionsOpen] = useState(false);\n  const [editOptionsOpen, setEditOptionsOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const closeAll = () => {\n    clearDelete();\n    setImageOptionsOpen(false);\n    setEditOptionsOpen(false);\n    setClearOpen(false);\n  };\n  const handlePhotosClick = () => {\n    if (imageOptionsOpen) {\n      setImageOptionsOpen(false);\n    } else {\n      closeAll();\n      setImageOptionsOpen(true);\n    }\n  };\n\n  const handleEditClick = () => {\n    if (editOptionsOpen) {\n      setEditOptionsOpen(false);\n    } else {\n      closeAll();\n      setEditOptionsOpen(true);\n    }\n  };\n  const handleRearrange = () => {\n    closeAll();\n    onRefresh();\n  };\n\n  const handleClearClick = () => {\n    console.log('clear open', clearOpen);\n    if (clearOpen) {\n      setClearOpen(false);\n    } else {\n      closeAll();\n      setClearOpen(true);\n    }\n  };\n\n  const handleClearClose = () => setClearOpen(false);\n  const handleClearSubmit = () => {\n    handleClearClose();\n    handleClear();\n  };\n\n  console.log('clear open', clearOpen);\n  console.log('rendering desktop controls');\n  return (\n    <DesktopDrawer anchor=\"left\">\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n        <List\n          sx={{\n            backgroundColor: alpha('#fff', 0.1),\n            borderRadius: '0 10px 10px 0',\n          }}\n        >\n          <DBNA\n            label=\"Rearrange\"\n            icon={<AutoAwesomeMosaicIcon />}\n            handleChange={handleRearrange}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Photos\"\n            icon={<PhotoIcon />}\n            handleChange={handlePhotosClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Edit\"\n            icon={<EditIcon />}\n            handleChange={handleEditClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Clear\"\n            icon={<RefreshIcon />}\n            handleChange={handleClearClick}\n          />\n        </List>\n        {imageOptionsOpen ? photosComp : null}\n        {editOptionsOpen ? editComp : null}\n        <ClearCollageDialog\n          open={clearOpen}\n          onSubmit={handleClearSubmit}\n          onCancel={handleClearClose}\n        />\n      </Stack>\n    </DesktopDrawer>\n  );\n}\n\nDesktopControls.propTypes = {\n  onRefresh: PropTypes.func.isRequired,\n  photosComp: PropTypes.node.isRequired,\n  editComp: PropTypes.node.isRequired,\n  handleClear: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\n\nexport default function DesktopImageOptions({ onDelete, onAdd, clearDelete }) {\n  const handleAdd = () => {\n    clearDelete();\n    onAdd();\n  };\n\n  return (\n    <List\n      sx={{\n        backgroundColor: alpha('#fff', 0.15),\n        borderRadius: '10px 10px 10px 10px',\n        height: 'fit-content',\n      }}\n    >\n      <DBNA\n        label=\"Add\"\n        icon={<AddPhotoAlternateIcon />}\n        handleChange={handleAdd}\n      />\n      <ControlsDivider />\n      <DBNA label=\"Delete\" icon={<DeleteIcon />} handleChange={onDelete} />\n    </List>\n  );\n}\n\nDesktopImageOptions.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function PaddingControl({ padding, handlePaddingChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n          mixBlendMode: 'difference',\n        }}\n      >\n        Padding\n      </Typography>\n      <Slider\n        aria-label=\"Padding\"\n        defaultValue={0}\n        value={padding}\n        valueLabelDisplay=\"auto\"\n        step={0.1}\n        min={0}\n        max={10}\n        onChange={handlePaddingChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nPaddingControl.propTypes = {\n  padding: PropTypes.number.isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function RadiusControl({ radius, handleRadiusChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n        }}\n      >\n        Corner Radius\n      </Typography>\n      <Slider\n        aria-label=\"Corner Radius\"\n        defaultValue={0}\n        value={radius}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        min={0}\n        max={40}\n        onChange={handleRadiusChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nRadiusControl.propTypes = {\n  radius: PropTypes.number.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { ChromePicker } from 'react-color';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function ColorControl({\n  color,\n  displayColorPicker,\n  handleClick,\n  handleClose,\n  handleChange,\n}) {\n  console.log('color control', color, displayColorPicker);\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      spacing={2}\n      sx={{ my: 2 }}\n    >\n      <Typography\n        sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n      >\n        Background Color\n      </Typography>\n      <Box\n        component=\"div\"\n        sx={{\n          padding: '2px',\n          background: '#fff',\n          borderRadius: '5px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        }}\n        onClick={handleClick}\n      >\n        <Box\n          component=\"div\"\n          sx={{\n            width: '70px',\n            height: '30px',\n            borderRadius: '18px',\n            background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n          }}\n        />\n      </Box>\n      <ColorPicker\n        open={displayColorPicker}\n        color={color}\n        handleClose={handleClose}\n        handleChange={handleChange}\n      />\n    </Stack>\n  );\n}\n\nColorControl.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport function ColorPicker({ open, color, handleClose, handleChange }) {\n  console.log(handleClose);\n  return open ? (\n    <>\n      <Box\n        component=\"div\"\n        sx={{\n          position: 'absolute',\n          zIndex: 3,\n          bottom: 10,\n        }}\n      >\n        <IconButton\n          sx={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            zIndex: 2,\n            backgroundColor: 'button.main',\n            p: 0,\n            transform: 'translate(0, -110%)',\n            border: '2px solid black',\n          }}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n        <ChromePicker color={color} onChange={handleChange} />\n      </Box>\n    </>\n  ) : null;\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n//  import FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function TextControl({\n  text,\n  handleTextChange,\n  topText,\n  handlePositionChange,\n}) {\n  const [collageTextError] = useState('');\n  return (\n    <Stack\n      sx={{\n        backgroundColor: 'transparent',\n      }}\n    >\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        spacing={2}\n      >\n        <Typography\n          sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n        >\n          Collage Text\n        </Typography>\n        <FormGroup row>\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === false}\n                onChange={() => handlePositionChange(false)}\n                sx={{ color: 'white', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Bottom\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold' }}\n          />\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === true}\n                onChange={() => handlePositionChange(true)}\n                sx={{ color: 'gray', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Top\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold', fontSize: '0.8rem' }}\n          />\n        </FormGroup>\n      </Stack>\n      <TextField\n        variant=\"outlined\"\n        label=\"\"\n        defaultValue={text}\n        onChange={handleTextChange}\n        size=\"small\"\n        sx={{ width: '100%', mb: 1 }}\n        InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n        helperText={\n          <Typography sx={{ color: 'gray', fontSize: '0.75rem' }}>\n            {collageTextError}\n          </Typography>\n        }\n        error={!!collageTextError}\n      />\n    </Stack>\n  );\n}\n\nTextControl.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  handlePositionChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport ColorControl from 'components/collage/ColorControl';\nimport TextControl from 'components/collage/TextControl';\n\nexport default function EditControl({ optionProps }) {\n  const {\n    options,\n    handlePaddingChange,\n    displayColorPicker,\n    handleColorChange,\n    handleColorClose,\n    handleColorClick,\n    handleRadiusChange,\n    handleTextChange,\n    handlePositionChange,\n  } = optionProps;\n\n  return (\n    <Stack\n      direction=\"column\"\n      spacing={4}\n      sx={{\n        p: 2,\n        backgroundColor: alpha('#000', 0.7),\n        borderRadius: '10px 10px 10px 10px',\n        boxShadow: '0 0 10px inset rgba(255, 255, 255, 0.3)',\n      }}\n    >\n      <PaddingControl\n        padding={options.padding}\n        handlePaddingChange={handlePaddingChange}\n      />\n      <RadiusControl\n        radius={options.borderRadius}\n        handleRadiusChange={handleRadiusChange}\n      />\n      <ColorControl\n        color={options.color}\n        displayColorPicker={displayColorPicker}\n        handleChange={handleColorChange}\n        handleClose={handleColorClose}\n        handleClick={handleColorClick}\n      />\n      <TextControl\n        text={options.text}\n        topText={options.topText}\n        handleTextChange={handleTextChange}\n        handlePositionChange={handlePositionChange}\n      />\n    </Stack>\n  );\n}\n\nEditControl.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n\nexport default function MBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      value={label.toLowerCase()}\n      icon={icon}\n      sx={{\n        fontWeight: 'bold',\n        color: 'gray',\n        '&.Mui-selected': { color: 'white', outline: 'none' },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\n\nMBNA.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function MobileActions({ actionsRef, onDownload, onSave }) {\n  return (\n    <BottomNavigation\n      ref={actionsRef}\n      showLabels\n      sx={{ py: 1, fontWeight: 'bold', backgroundColor: alpha('#fff', 0.2) }}\n    >\n      <MBNA label=\"Save\" icon={<SaveIcon />} handleChange={onSave} />\n      <MBNA\n        label=\"Download\"\n        icon={<DownloadIcon />}\n        handleChange={onDownload}\n      />\n      <MBNA label=\"Print\" icon={<PrintIcon />} handleChange={() => {}} />\n    </BottomNavigation>\n  );\n}\n\nMobileActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport { alpha } from '@mui/material/styles';\n\nexport default function MainControls({ value, handleChange }) {\n  return (\n    <BottomNavigation\n      showLabels\n      value={value}\n      onChange={handleChange}\n      sx={{\n        fontWeight: 'bold',\n        backgroundColor: alpha('#fff', 0.2),\n        '&.Mui-selected': { color: 'white' },\n      }}\n    >\n      <BottomNavigationAction\n        label=\"Rearrange\"\n        value=\"rearrange\"\n        icon={<AutoAwesomeMosaicIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Photos\"\n        value=\"photo\"\n        icon={<PhotoIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Edit\"\n        value=\"edit\"\n        icon={<EditIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Clear\"\n        value=\"clear\"\n        icon={<RefreshIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n    </BottomNavigation>\n  );\n}\n\nMainControls.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport Typography from '@mui/material/Typography';\nimport PaddingIcon from '@mui/icons-material/Padding';\nimport CropFreeIcon from '@mui/icons-material/CropFree';\nimport SquareIcon from '@mui/icons-material/Square';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TitleIcon from '@mui/icons-material/Title';\nimport { alpha } from '@mui/material/styles';\n\nexport default function EditOptions({\n  color,\n  editOptionsValue,\n  open,\n  handleOptionsClose,\n  handleEditOptionsClick,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={editOptionsValue}\n        onChange={handleEditOptionsClick}\n        sx={{\n          display: 'flex',\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          position: 'relative',\n          alignItems: 'center',\n        }}\n      >\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Padding\n            </Typography>\n          }\n          value=\"padding\"\n          icon={<PaddingIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Corner\n            </Typography>\n          }\n          value=\"border radius\"\n          icon={<CropFreeIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Color\n            </Typography>\n          }\n          value=\"color\"\n          icon={\n            <SquareIcon\n              sx={{\n                fill: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n                borderRadius: '5px',\n              }}\n            />\n          }\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label=\"Text\"\n          value=\"text\"\n          icon={<TitleIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nEditOptions.propTypes = {\n  editOptionsValue: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleEditOptionsClick: PropTypes.func.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function ImageOptions({\n  open,\n  value,\n  handleOptionsClose,\n  handleDelete,\n  handleAdd,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={value}\n        sx={{\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          '&.Mui-selected': { color: 'white' },\n        }}\n      >\n        <MBNA\n          label=\"Delete\"\n          icon={<DeleteIcon />}\n          handleChange={handleDelete}\n        />\n        <MBNA\n          label=\"Add\"\n          icon={<AddPhotoAlternateIcon />}\n          handleChange={handleAdd}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nImageOptions.propTypes = {\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\n\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport TextControl from 'components/collage/TextControl';\nimport { ColorPicker } from 'components/collage/ColorControl';\nimport MainControls from 'components/collage/MainControls';\nimport EditOptions from 'components/collage/EditOptions';\nimport ImageOptions from 'components/collage/ImageOptions';\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function MobileControls({\n  optionProps,\n  actionProps,\n  dimensionProps,\n  handleClear,\n}) {\n  const {\n    options,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClose,\n    handleColorClick,\n    handleColorChange,\n    handleTextChange,\n    handlePositionChange,\n    displayColorPicker,\n  } = optionProps;\n\n  const { onRefresh, onDelete, clearDelete } = actionProps;\n  const { footerRef, handleImageAddClick } = dimensionProps;\n\n  const [mainOpen, setMainOpen] = useState(true);\n  const [value, setValue] = useState('');\n  const [editOpen, setEditOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const [editControl, setEditControl] = useState(null);\n  const [editOptionsValue, setEditOptionsValue] = useState('');\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageValue, setImageValue] = useState('');\n\n  const handleImageOptionsClose = () => {\n    setImageOpen(false);\n    setImageValue('');\n    setMainOpen(true);\n    clearDelete();\n    setValue('');\n  };\n\n  const handleEditOptionsClose = () => {\n    setEditOpen(false);\n    setEditControl(null);\n    setEditOptionsValue('');\n    setMainOpen(true);\n    setValue('');\n  };\n\n  const handleEditOptionsClick = (e, nV) => {\n    console.log('handle edit options click');\n    setEditOptionsValue(nV);\n    if (nV === 'padding') {\n      setEditControl(\n        <PaddingControl\n          padding={options.padding}\n          handlePaddingChange={handlePaddingChange}\n        />\n      );\n    } else if (nV === 'border radius') {\n      setEditControl(\n        <RadiusControl\n          radius={options.borderRadius}\n          handleRadiusChange={handleRadiusChange}\n        />\n      );\n    } else if (nV === 'color') {\n      handleColorClick();\n      setEditControl(\n        <ColorPicker\n          open={displayColorPicker}\n          color={options.color}\n          handleChange={handleColorChange}\n          handleClose={() => {\n            setEditControl(null);\n            handleColorClose();\n          }}\n        />\n      );\n    } else if (nV === 'text') {\n      console.log(nV);\n      setEditControl(\n        <TextControl\n          text={options.text}\n          handleTextChange={handleTextChange}\n          topText={options.topText}\n          handlePositionChange={handlePositionChange}\n        />\n      );\n    } else {\n      setEditControl(<Typography color=\"secondary\">{nV}</Typography>);\n    }\n  };\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'padding') {\n      setEditControl(\n        <PaddingControl\n          padding={options.padding}\n          handlePaddingChange={handlePaddingChange}\n        />\n      );\n    }\n  }, [options.padding, editOpen]);\n  // }, [options.padding, editOpen, editOptionsValue]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'border radius') {\n      setEditControl(\n        <RadiusControl\n          radius={options.borderRadius}\n          handleRadiusChange={handleRadiusChange}\n        />\n      );\n    }\n  }, [options.borderRadius, editOpen]);\n  // }, [options.borderRadius, editOpen, editOptionsValue]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'color') {\n      setEditControl(\n        <ColorPicker\n          open={displayColorPicker}\n          color={options.color}\n          handleChange={handleColorChange}\n          handleClose={handleColorClose}\n        />\n      );\n    }\n  }, [options.color, editOpen, displayColorPicker]);\n  // }, [options.color, editOpen, editOptionsValue, displayColorPicker]);\n\n  useEffect(() => {\n    console.log('text control useEffect');\n    if (editOpen && editOptionsValue === 'text') {\n      setEditControl(\n        <TextControl\n          text={options.text}\n          handleTextChange={handleTextChange}\n          topText={options.topText}\n          handlePositionChange={handlePositionChange}\n        />\n      );\n    }\n  }, [options.text, editOpen, options.topText]);\n  // }, [options.text, editOpen, editOptionsValue, options.topText]);\n\n  const handleImageClose = () => {\n    setImageValue('');\n    setImageOpen(false);\n    setMainOpen(true);\n  };\n\n  const handleChange = (event, newValue) => {\n    clearDelete();\n    handleImageClose();\n    handleEditOptionsClose();\n    setValue(newValue);\n    if (newValue === 'rearrange') {\n      onRefresh();\n    } else if (newValue === 'photo') {\n      setMainOpen(false);\n      setImageOpen(true);\n    } else if (newValue === 'edit') {\n      setMainOpen(false);\n      setEditOpen(true);\n    } else if (newValue === 'clear') {\n      setClearOpen(true);\n      //  handleClear();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  const handleImageAdd = () => {\n    clearDelete();\n    handleImageAddClick();\n  };\n\n  const handleClearSubmit = () => {\n    handleClear();\n    setClearOpen(false);\n    setValue('');\n  };\n\n  const handleClearCancel = () => {\n    setClearOpen(false);\n    setValue('');\n  };\n\n  console.log('rerendering', editControl);\n  return (\n    <Paper\n      ref={footerRef}\n      sx={{\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        mt: 1,\n        backgroundColor: 'black',\n        borderRadius: 0,\n      }}\n      elevation={4}\n    >\n      <ClearCollageDialog\n        open={clearOpen}\n        onSubmit={handleClearSubmit}\n        onCancel={handleClearCancel}\n      />\n      {editControl ? (\n        <Box\n          sx={{\n            backgroundColor: alpha('#fff', 0.15),\n            p: 1,\n          }}\n        >\n          {editControl}\n        </Box>\n      ) : null}\n      <ImageOptions\n        open={imageOpen}\n        value={imageValue}\n        handleDelete={onDelete}\n        handleAdd={handleImageAdd}\n        handleOptionsClose={handleImageOptionsClose}\n      />\n      <EditOptions\n        color={options.color}\n        editOptionsValue={editOptionsValue}\n        open={editOpen}\n        handleOptionsClose={handleEditOptionsClose}\n        handleEditOptionsClick={handleEditOptionsClick}\n      />\n      {mainOpen ? (\n        <MainControls value={value} handleChange={handleChange} />\n      ) : null}\n    </Paper>\n  );\n}\n\nMobileControls.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n  }).isRequired,\n  actionProps: PropTypes.shape({\n    onRefresh: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    clearDelete: PropTypes.func.isRequired,\n  }).isRequired,\n  handleClear: PropTypes.func.isRequired,\n  dimensionProps: PropTypes.shape({\n    handleImageAddClick: PropTypes.func.isRequired,\n    footerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n};\n","import { useNavigate } from 'react-router-dom';\nimport useCollage from 'hooks/collage/collage';\n\nimport Collage from 'components/collage/Collage';\nimport DownloadDialog from 'components/collage/DownloadDialog';\nimport SaveDialog from 'components/collage/SaveDialog';\nimport SaveStatusDialog from 'components/collage/SaveStatusDialog';\nimport Header from 'components/collage/Header';\nimport Loading from 'components/Loading';\nimport View from 'components/collage/View';\n\nimport DesktopActions from 'components/collage/DesktopActions';\nimport DesktopControls from 'components/collage/DesktopControls';\nimport DesktopImageOptions from 'components/collage/DesktopImageOptions';\nimport EditControl from 'components/collage/EditControl';\nimport MobileActions from 'components/collage/MobileActions';\nimport MobileControls from 'components/collage/MobileControls';\n\nfunction CollageMaker() {\n  const navigate = useNavigate();\n  const [\n    ,\n    collageID,\n    constants,\n    dimensionProps,\n    optionProps,\n    actionProps,\n    imageProps,\n    treeProps,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n  ] = useCollage();\n  console.log(collageID, newCollage, navigate);\n  const handleSave = async (name) => {\n    actionProps.onSaveClick();\n    const res = await newCollage(name);\n    console.log('save results', res, collageID);\n    if (res) {\n      handleClear();\n      actionProps.setSaveStart(false);\n      setTimeout(() => navigate(`/collage/${collageID}`), 3000);\n    }\n  };\n  const downloadDialog = (\n    <DownloadDialog\n      open={actionProps.open}\n      onClick={handleSave}\n      onClose={actionProps.onDownloadClose}\n      sizes={constants.paperSizes}\n    />\n  );\n\n  const saveDialog = (\n    <SaveDialog\n      open={actionProps.saveOpen}\n      onClick={handleSave}\n      onClose={actionProps.onSaveClose}\n    />\n  );\n\n  const saveStatusDialog = (\n    <SaveStatusDialog open={actionProps.saveStart} status={saveStatus} />\n  );\n\n  const collage = (\n    <Collage\n      dimensionProps={dimensionProps}\n      imageProps={imageProps}\n      actionProps={actionProps}\n      collageCallback={collageCallback}\n      handleRemoveImage={handleRemoveImage}\n      options={optionProps.options}\n      tree={treeProps.tree}\n    />\n  );\n\n  const mobileControls = (\n    <MobileControls\n      optionProps={optionProps}\n      actionProps={actionProps}\n      dimensionProps={dimensionProps}\n      handleClear={handleClear}\n    />\n  );\n\n  const header = <Header headerRef={dimensionProps.headerRef} />;\n  const desktopPhotosComp = (\n    <DesktopImageOptions\n      onDelete={actionProps.onDelete}\n      onAdd={dimensionProps.handleImageAddClick}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n  const desktopControls = (\n    <DesktopControls\n      onRefresh={actionProps.onRefresh}\n      photosComp={desktopPhotosComp}\n      editComp={<EditControl optionProps={optionProps} />}\n      handleClear={handleClear}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n\n  const isMobile = window.innerWidth < window.innerHeight;\n  const controls = isMobile ? mobileControls : desktopControls;\n\n  const actionsComp = isMobile ? (\n    <MobileActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={actionProps.handleSave}\n    />\n  ) : (\n    <DesktopActions onDownload={actionProps.handleDownload} />\n  );\n\n  return (\n    <>\n      <View\n        open={actionProps.open}\n        saveOpen={actionProps.saveOpen}\n        saveStatusOpen={actionProps.saveStart}\n        dimensionProps={dimensionProps}\n        imageProps={imageProps}\n        header={header}\n        actions={actionsComp}\n        downloadDialog={downloadDialog}\n        saveDialog={saveDialog}\n        saveStatusDialog={saveStatusDialog}\n        collage={collage}\n        controls={controls}\n        loading={imageProps.loaded < imageProps.images.length}\n      />\n      <input\n        ref={dimensionProps.addImageRef}\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={imageProps.handleLoad}\n      />\n      {actionProps.generate ? <Loading title=\"Creating collage ...\" /> : null}\n    </>\n  );\n}\n\nexport default CollageMaker;\n"],"names":["get","url","path","params","newUrl","options","method","credentials","headers","Headers","URLSearchParams","toString","fetch","resp","ok","status","document","cookie","json","post","body","apiUrl","then","response","OptionsButton","children","onClick","name","Button","id","variant","component","sx","color","borderRadius","backgroundColor","padding","defaultProps","AddPhotos","handleChange","type","hidden","multiple","accept","onChange","fontSize","Typography","fontWeight","getClosest","arr","index1","index2","target","downscaleImage","image","newWidth","newHeight","fileType","canvas","createElement","width","height","getContext","drawImage","toDataURL","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","getCut","Math","round","random","findClosest","n","length","start","end","mid","findImgPair","i","j","minMatchingCost","abs","getAspectRatio","cut","ar1","ar2","handleImageLoad","event","maxWidth","handleImageCount","handleNewImageCount","handleImageData","files","cnt","Array","from","map","Image","e","naturalWidth","naturalHeight","src","title","Date","now","aspectRatio","dataurl","originalImageDetail","imageDetail","URL","revokeObjectURL","resizeImages","originalImages","handleImages","addImagesToDB","tempImages","forEach","origImage","tempImage","push","imgs","ind","findIndex","elem","slice","wrapText","text","x","y","lineHeight","textCanvas","ctx","font","textAlign","tempX","tempY","words","split","line","testLine","lineArray","testWidth","measureText","console","log","letterSpacing","convertToRGBA","value","r","g","b","a","getCollageDimension","maxW","maxH","origAR","collageDB","Dexie","version","stores","images","imgCount","collageTree","useImageCount","tableName","initialValue","useState","setValue","db","toArray","rows","count","useEffect","setDataFromDB","data","clear","put","useIndexedDBState","loadingCallback","addToDB","Node","this","left","right","obj","fromObject","getScore","output","concat","display","copyNode","copy","newImages","replaceImages","removeImageData","imageData","find","addImageData","delImg","handleRemoveImage","yOffset","xOffset","handleCollageImageLoad","newX","newY","Box","alt","onLoad","position","top","Tooltip","IconButton","size","alpha","bgcolor","Delete","DOMDisplay","RenderImage","tempCanvas","tempCtx","scaleFactor","floor","log2","radius","clipwidth","clipheight","save","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","canvasElement","CanvasDisplay","newImg","ResizeImage","ImageStyling","clearRect","tar","imageCount","targetAspectRatioArr","closestIndex","helpers","restImages","targetAspectRatio","leftIndex","rightIndex","filter","item","index","includes","first","second","generate","th","adjustments","adjust","parentWidth","parentHeight","parentX","parentY","parentCut","nodeType","addSize","TextDisplay","textArray","chunk","paddingX","fontFamily","BinaryTree","undefined","root","tempTree","canvasWidth","canvasHeight","topText","lA","textHeight","fillStyle","fillRect","textBaseline","textPart","fillText","TextCanvasDraw","score","min","trys","bestAdjust","bestAspectRatio","tolerableDifference","ajstCnt","diff","copyTree","findBestAdjustTree","tolerance","imageWidth","imageHeight","sortedImages","sort","collageArray","imgTree","generateCollageTree","aspR","bAR","toFixed","maxScore","maxElem","element","generateScore","newCollage","collageID","collageDetails","collage_id","process","JSON","stringify","upload","useCollage","constants","resizeImageWidth","paperSizes","A4","A3","dimensions","headerRef","useRef","actionsRef","footerRef","addImageRef","setHeight","setImageHeight","setImageWidth","setWidth","maxHeight","setMaxHeight","setMaxWidth","setTextHeight","setDimensions","otherHeight","current","offsetHeight","window","innerWidth","innerHeight","w","h","addEventListener","removeEventListener","handleImageAddClick","click","useDimensions","optionsInitValue","setOptions","displayColorPicker","setDisplayColorPicker","handlePaddingChange","opts","handleRadiusChange","handleColorClick","dcp","handleColorClose","handleColorChange","clr","rgb","handlePositionChange","handleTextChange","useOptions","actions","open","setOpen","saveOpen","setSaveOpen","saveStart","setSaveStart","refresh","setRefresh","setGenerate","removeImage","setRemoveImage","paperWidth","paperHeight","printOptions","setPrintOptions","clearDelete","handleDownload","handleGenerateCallback","onDelete","ri","onDownloadClick","onDownloadClose","onRefresh","onSaveClose","onSaveClick","handleSave","useActions","newImgCount","setNewImageCount","newImagesLoaded","setNewImagesLoaded","setImageCount","loaded","setLoaded","setImages","addToImagesDB","setOriginalImages","addToOriginalImagesDB","handleLoad","remove","removeIndex","newImagesArr","imageArr","img","useImages","treeState","tree","setTree","newTree","addTreeToDB","cleanedData","reAdjust","imagesArr","treeUtils","bestAspectRatioTree","addOptions","useTree","thumbnail","setThumbnail","details","finalizing","saveStatus","setSaveStatus","updateStatus","key","st","handleClear","allSettled","clearPromises","generateThumbnail","ar","thumbnailCanvas","thumbnailTree","uploadCollageDetails","thumbnailDetails","created_at","last_updated_at","collageapi","uploadCollageImages","imageURLS","thumbnailPromise","toBlob","blob","thumbnailKey","imagePromises","uploadPromises","uploadStatus","Object","keys","tH","someTree","imgTitle","Collage","dimensionProps","imageProps","actionProps","collageCallback","collage","setCollage","isEmpty","t","createCollage","collageElem","imgPrintWidth","imgPrintHeight","canvasTree","setTimeout","pW","pH","link","download","href","createObjectURL","DownloadDialog","onClose","sizes","Dialog","fullWidth","DialogTitle","DialogContent","dividers","alignItems","justifyContent","DialogContentText","pr","FormControl","InputLabel","Select","labelId","defaultValue","label","MenuItem","DialogActions","disabled","SaveDialog","setName","nameError","TextField","mb","InputProps","helperText","StatusIndicator","CircularProgress","Pending","CheckCircleOutline","Close","Status","pending","done","running","failed","Stack","direction","SaveStatusDialog","spacing","values","Header","Paper","ref","p","elevation","Link","underline","ArrowBack","EmptyCollage","loadComponent","backgroundImage","collageBack","backgroundSize","objectFit","backgroundRepeat","transform","View","saveStatusOpen","loading","header","downloadDialog","saveDialog","saveStatusDialog","controls","Loading","DBNA","icon","BottomNavigationAction","showLabel","py","outline","DesktopDrawer","anchor","Drawer","PaperProps","ControlsDivider","Divider","my","DesktopActions","onDownload","newValue","List","Save","Download","Print","ClearCollageDialog","onSubmit","onCancel","noWrap","DesktopControls","photosComp","editComp","imageOptionsOpen","setImageOptionsOpen","editOptionsOpen","setEditOptionsOpen","clearOpen","setClearOpen","closeAll","handleClearClose","AutoAwesomeMosaic","Photo","Edit","Refresh","DesktopImageOptions","onAdd","AddPhotoAlternate","PaddingControl","mixBlendMode","Slider","valueLabelDisplay","step","max","RadiusControl","ColorControl","handleClick","handleClose","background","boxShadow","cursor","ColorPicker","zIndex","bottom","border","TextControl","collageTextError","FormGroup","row","FormControlLabel","disableTypography","control","Checkbox","checked","EditControl","optionProps","MBNA","toLowerCase","MobileActions","onSave","BottomNavigation","showLabels","MainControls","EditOptions","editOptionsValue","handleOptionsClose","handleEditOptionsClick","borderTop","Padding","CropFree","Square","fill","Title","ImageOptions","handleDelete","handleAdd","MobileControls","mainOpen","setMainOpen","editOpen","setEditOpen","editControl","setEditControl","setEditOptionsValue","imageOpen","setImageOpen","imageValue","setImageValue","handleEditOptionsClose","mt","nV","navigate","useNavigate","treeProps","res","mobileControls","desktopPhotosComp","desktopControls","isMobile","actionsComp"],"sourceRoot":""}