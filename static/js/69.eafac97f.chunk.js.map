{"version":3,"file":"static/js/69.eafac97f.chunk.js","mappings":"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","sources":["components/OptionsButton.jsx","components/AddPhotos.jsx","components/collage/helpers.js","components/collage/node.jsx","components/collage/binaryTree.jsx","components/collage/Collage.jsx","components/collage/CollagePreview.jsx","components/collage/CollageControls.jsx","components/collage/CollageMakerHeader.jsx","components/collage/CollageActions.jsx","components/collage/CollageSwipeableDrawer.jsx","components/collage/TextControl.jsx","components/collage/PaddingControl.jsx","components/collage/RadiusControl.jsx","components/collage/ColorControl.jsx","components/collage/EditControl.jsx","components/collage/DownloadDialog.jsx","pages/collage/CollageMaker.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\n\nexport default function OptionsButton({\n  children, onClick, name,\n}) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: 'muted.main',\n        borderRadius: 15,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: 'muted.main',\n          backgroundColor: 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  //  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport OptionsButton from 'components/OptionsButton';\n\nexport default function AddPhotos({ handleChange }) {\n  return (\n    <OptionsButton name=\"add\">\n      <input type=\"file\" hidden multiple accept=\"image/*\" onChange={handleChange} />\n      <AddPhotoIcon sx={{ fontSize: '2rem' }} />\n      Add Images\n    </OptionsButton>\n  );\n}\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","function getClosest(arr, index1, index2, target) {\n  if (target - arr[index1] >= arr[index2] - target) return index2;\n  return index1;\n}\n\nfunction findClosest(arr, target) {\n  const n = arr.length;\n\n  if (target <= arr[0]) return 0;\n  if (target >= arr[n - 1]) return n - 1;\n\n  let start = 0; let end = n; let\n    mid = 0;\n  while (start < end) {\n    mid = (start + end) / 2;\n\n    if (arr[mid] === target) return mid;\n\n    if (target < arr[mid]) {\n      if (mid > 0 && target > arr[mid - 1]) return getClosest(arr, mid - 1, mid, target);\n      end = mid;\n    } else {\n      if (mid < n - 1 && target < arr[mid + 1]) return getClosest(arr, mid, mid + 1, target);\n      start = mid + 1;\n    }\n  }\n\n  return mid;\n}\n\nfunction getCut() {\n  const cutArr = ['v', 'h'];\n  return cutArr[Math.round(Math.random())];\n}\n\nfunction findImgPair(arr, target) {\n  let start = 0; let\n    end = arr.length - 1;\n  let i = start; let\n    j = end;\n  let minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n  while (start <= end) {\n    if ((arr[start] + arr[end]) > target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        // update fetched pair and matching cost\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      end -= 1;\n    } else if ((arr[start] + arr[end]) <= target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      start += 1;\n    } else {\n      // best pair (m === 0) found\n      i = start;\n      j = end;\n      break;\n    }\n  }\n  // console.log(\"pair\", i, j);\n  const randomNumber = Math.round(Math.random());\n  if (randomNumber) return [i, j];\n  return [j, i];\n}\n\nfunction getAspectRatio(cut, ar1, ar2) {\n  if (cut === 'v') return ar1 + ar2;\n  return (ar1 * ar2) / (ar1 + ar2);\n}\n\nexport default {\n  getCut, findClosest, findImgPair, getAspectRatio,\n};\n","import Box from '@mui/material/Box';\n//  import Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Tooltip from '@mui/material/Tooltip';\nimport { alpha } from '@mui/material/styles';\nimport helpers from 'components/collage/helpers';\n\nexport default class Node {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n\n  display() {\n    let output = [];\n    const { cut, title, aspectRatio } = this.value;\n    if (this === null) return null;\n    if ('cut' in this.value) output.push([cut, aspectRatio]);\n    if ('title' in this.value) output.push([title, aspectRatio]);\n    if (this.left !== null) output = output.concat(this.left.display());\n    if (this.right !== null) output = output.concat(this.right.display());\n    return output;\n  }\n\n  copy() {\n    if (this === null) return null;\n    const copyNode = new Node({ ...this.value });\n    if (this.left != null) copyNode.left = this.left.copy();\n    if (this.right != null) copyNode.right = this.right.copy();\n    return copyNode;\n  }\n\n  RenderImage(padding, borderRadius, delImg, handleRemoveImage, yOffset, xOffset) {\n    console.log('in render image', this.value.title, delImg);\n    const {\n      width, title, url, /* x, y, */\n    } = this.value;\n\n    //  const newX = x + xOffset;\n    //  const newY = y + yOffset;\n\n    return (\n      <>\n        <Box\n          key={title}\n          component=\"img\"\n          title={title}\n          alt={title}\n          width={width}\n          src={url}\n          sx={{\n            position: 'absolute',\n            padding: `${padding}px`,\n            borderRadius: `${borderRadius}px`,\n            left: this.value.x + xOffset,\n            top: this.value.y + yOffset,\n          }}\n        />\n        {/*\n        <Typography\n          sx={{\n            position: 'absolute',\n            top: this.value.y - 5 + yOffset + this.value.height,\n            left: this.value.x + 2 + xOffset,\n            backgroundColor: 'white',\n            fontSize: '15px',\n            transform: 'translate(0, -100%)',\n          }}\n        >\n          {newX.toFixed(2)}\n          ,\n          {newY.toFixed(2)}\n        </Typography>\n        <Typography\n        sx={{\n          position: 'absolute', top: this.value.y + 30 + yOffset,\n          left: this.value.x + 2 + xOffset, backgroundColor: 'white',\n        }}\n        >\n        {width.toFixed(2)}\n        ,\n        {height.toFixed(2)}\n        </Typography>\n        <Typography\n        sx={{\n          position: 'absolute', bottom: 38, right: 10, backgroundColor: 'white',\n          fontSize: '0.5rem', fontWeight: 700,\n        }}\n        >\n        {title}\n        </Typography>\n      */}\n\n        { (delImg === true) ? (\n          <Tooltip title=\"Remove Image\">\n            <IconButton\n              size=\"medium\"\n              sx={{\n                color: alpha('#000', 0.7),\n                bgcolor: alpha('#fff', 0.4),\n                position: 'absolute',\n                top: this.value.y + 5 + yOffset,\n                left: this.value.x + this.value.width,\n                padding: 0,\n                px: '4px',\n                borderRadius: '5px 0 0 5px',\n                transform: 'translate(-100%)',\n              }}\n              onClick={() => handleRemoveImage(title)}\n            >\n              <DeleteIcon size=\"medium\" />\n            </IconButton>\n          </Tooltip>\n        ) : null }\n      </>\n    );\n  }\n\n  DOMDisplay(padding, borderRadius, delImg, handleRemoveImage, yOffset, xOffset) {\n    const { cut } = this.value;\n    if (this === null) return null;\n    if (cut) {\n      return (\n        <>\n          {this.left.DOMDisplay(padding, borderRadius, delImg, handleRemoveImage, yOffset, xOffset)}\n          {\n            this.right.DOMDisplay(\n              padding,\n              borderRadius,\n              delImg,\n              handleRemoveImage,\n              yOffset,\n              xOffset,\n            )\n          }\n        </>\n      );\n    }\n    if ('title' in this.value) return this.RenderImage(padding, borderRadius, delImg, handleRemoveImage, yOffset, xOffset);\n    return null;\n  }\n\n  ResizeImage(image) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = this.value.naturalWidth;\n    tempCanvas.height = this.value.naturalHeight;\n    const tempCtx = tempCanvas.getContext('2d');\n    let width = this.value.naturalWidth;\n    let height = this.value.naturalHeight;\n    let newWidth;\n    let newHeight;\n    const scaleFactor = Math.floor(\n      Math.log2(this.value.naturalWidth / this.value.width),\n    );\n    console.log('scalefactor', scaleFactor, this.value.naturalWidth, this.value.width, this.value.naturalHeight, this.value.height);\n    if (scaleFactor === 0) {\n      tempCtx.drawImage(image, 0, 0, width, height, 0, 0, this.value.width, this.value.height);\n    } else {\n      for (let i = 0; i < scaleFactor; i += 1) {\n        newWidth = width >> 1; // eslint-disable-line no-bitwise\n        newHeight = newWidth / this.value.aspectRatio; // eslint-disable-line no-bitwise\n        if (i === 0) {\n          tempCtx.drawImage(image, 0, 0, width, height, 0, 0, newWidth, newHeight);\n        } else {\n          tempCtx.drawImage(tempCanvas, 0, 0, width, height, 0, 0, newWidth, newHeight);\n        }\n        width = newWidth;\n        height = newHeight;\n      }\n\n      console.log('last scale down', width, height, this.value.width, this.value.height);\n      tempCtx.drawImage(\n        tempCanvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height,\n      );\n    }\n    return tempCanvas;\n  }\n\n  ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset) {\n    const x = this.value.x + padding + xOffset;\n    const y = this.value.y + padding + yOffset;\n    const clipwidth = this.value.width - 2 * padding;\n    const clipheight = clipwidth / this.value.aspectRatio;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + clipwidth - radius, y);\n    ctx.quadraticCurveTo(x + clipwidth, y, x + clipwidth, y + radius);\n    ctx.lineTo(x + clipwidth, y + clipheight - radius);\n    ctx.quadraticCurveTo(\n      x + clipwidth,\n      y + clipheight,\n      x + clipwidth - radius,\n      y + clipheight,\n    );\n    ctx.lineTo(x + radius, y + clipheight);\n    ctx.quadraticCurveTo(x, y + clipheight, x, y + clipheight - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.clip();\n\n    ctx.drawImage(\n      tempCanvas,\n      0,\n      0,\n      this.value.width,\n      this.value.height,\n      x,\n      y,\n      clipwidth,\n      clipheight,\n    );\n    ctx.restore();\n  }\n\n  CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset) {\n    if ('cut' in this.value) {\n      this.left.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n      this.right.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n    }\n\n    if ('title' in this.value) {\n      const ctx = canvasElement.getContext('2d');\n      const newImg = new Image();\n      newImg.onload = () => {\n        const tempCanvas = this.ResizeImage(newImg);\n        const tempCtx = tempCanvas.getContext('2d');\n        console.log('image styling', this.value.title, this.value.x + xOffset, this.value.y + yOffset);\n        this.ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset);\n        tempCtx.clearRect(0, 0, tempCanvas.width, tempCanvas.height);\n      };\n      newImg.src = this.value.url;\n    }\n  }\n\n  generate(images, tar, imageCount) {\n    const targetAspectRatioArr = images.map(\n      (image) => image.naturalWidth / image.naturalHeight,\n    );\n    if (imageCount < 1) return [];\n    if (imageCount === 1) {\n      const closestIndex = helpers.findClosest(targetAspectRatioArr, tar);\n      this.value = images[closestIndex];\n      this.left = null;\n      this.right = null;\n      return [\n        ...images.slice(0, closestIndex),\n        ...images.slice(closestIndex + 1),\n      ];\n    }\n\n    const cut = helpers.getCut();\n    this.value = { cut, targetAspectRatio: tar };\n    if (imageCount === 2) {\n      const [leftIndex, rightIndex] = helpers.findImgPair(\n        targetAspectRatioArr,\n        tar,\n      );\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        images[leftIndex].aspectRatio,\n        images[rightIndex].aspectRatio,\n      );\n      this.left = new Node(images[leftIndex]);\n      this.right = new Node(images[rightIndex]);\n      return images.filter(\n        (item, index) => ![leftIndex, rightIndex].includes(index),\n      );\n    }\n\n    let restImages;\n    let targetAspectRatio;\n    this.left = new Node({ cut: helpers.getCut() });\n    this.right = new Node({ cut: this.left.value.cut === 'v' ? 'h' : 'v' });\n\n    if (cut === 'v') {\n      targetAspectRatio = tar * 2;\n    } else {\n      targetAspectRatio = tar / 2;\n    }\n\n    restImages = this.left.generate(\n      images,\n      targetAspectRatio,\n      imageCount - Math.floor(imageCount / 2),\n    );\n    restImages = this.right.generate(\n      restImages,\n      targetAspectRatio,\n      Math.floor(imageCount / 2),\n    );\n\n    this.value.aspectRatio = helpers.getAspectRatio(\n      this.value.cut,\n      this.left.value.aspectRatio,\n      this.right.value.aspectRatio,\n    );\n\n    return restImages;\n  }\n\n  adjust(th) {\n    let adjustments = 0;\n    if (this === null) return adjustments;\n\n    if (this.left !== null && this.right !== null) {\n      // console.log(\"node is non leaf\", this);\n      if (this.value.aspectRatio > this.value.targetAspectRatio * th) {\n        // console.log(\"aspectRatio is more\");\n        this.value.cut = 'h';\n        adjustments += 1;\n      }\n      if (this.value.aspectRatio < this.value.targetAspectRatio / th) {\n        // console.log(\"aspectRatio is less\");\n        this.value.cut = 'v';\n        adjustments += 1;\n      }\n\n      if (this.value.cut === 'v') {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n      } else {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n      }\n      adjustments += this.left.adjust(th) + this.right.adjust(th);\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        this.left.value.aspectRatio,\n        this.right.value.aspectRatio,\n      );\n    }\n\n    // console.log(\"adjustments\", adjustments);\n    return adjustments;\n  }\n\n  addSize(parentWidth, parentHeight, parentX, parentY, parentCut, nodeType) {\n    if (parentCut === 'v') {\n      this.value.height = parentHeight;\n      this.value.width = this.value.height * this.value.aspectRatio;\n    } else {\n      this.value.width = parentWidth;\n      this.value.height = this.value.width / this.value.aspectRatio;\n    }\n\n    if (nodeType === 'left') {\n      this.value.x = parentX;\n      this.value.y = parentY;\n    } else if (parentCut === 'h') {\n      this.value.y = parentY + parentHeight - this.value.height;\n      this.value.x = parentX;\n    } else {\n      this.value.x = parentX + parentWidth - this.value.width;\n      this.value.y = parentY;\n    }\n\n    if (this.left !== null) {\n      this.left.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'left',\n      );\n    }\n    if (this.right !== null) {\n      this.right.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'right',\n      );\n    }\n  }\n}\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\nimport Node from './node';\n\nexport default class BinaryTree {\n  constructor(value) {\n    if (this.root === undefined) {\n      this.root = new Node(value);\n      return this;\n    }\n  }\n\n  display() {\n    if (this.root !== null) {\n      return this.root.display();\n    }\n    return null;\n  }\n\n  DOMDisplay(\n    topText,\n    imageWidth,\n    imageHeight,\n    canvasWidth,\n    canvasHeight,\n    padding,\n    borderRadius,\n    backColor,\n    text,\n    delImg,\n    handleRemoveImage,\n  ) {\n    //  const textY = canvasHeight - 5;\n    //  const textX = canvasWidth / 2;\n    console.log(\n      'Y offset',\n      canvasHeight,\n      this.root.value.height,\n      (canvasHeight - this.root.value.height) / 2,\n    );\n\n    let yOffset = (imageHeight - this.root.value.height) / 2;\n    const xOffset = (canvasWidth - this.root.value.width) / 2;\n    if (topText && text.length > 0) yOffset += 50;\n    let collageText;\n    if (text.length > 0 && topText) {\n      collageText = (\n        <Typography\n          sx={{\n            width: '100%',\n            position: 'absolute',\n            top: 5,\n            left: '50%',\n            transform: 'translate(-50%, 0)',\n            bgcolor: alpha('#1c1c1c', 0.7),\n            padding: 1,\n            color: 'button.main',\n            margin: 'auto',\n            textAlign: 'center',\n            display: 'inline-block',\n          }}\n        >\n          {text}\n        </Typography>\n      );\n    }\n\n    if (text.length > 0 && !topText) {\n      collageText = (\n        <Typography\n          sx={{\n            width: '100%',\n            position: 'absolute',\n            bottom: 5,\n            left: '50%',\n            transform: 'translate(-50%, 0)',\n            bgcolor: alpha('#1c1c1c', 0.7),\n            padding: 1,\n            color: 'button.main',\n            margin: 'auto',\n            textAlign: 'center',\n            display: 'inline-block',\n          }}\n        >\n          {text}\n        </Typography>\n      );\n    }\n    if (this.root !== null) {\n      return (\n        <Box\n          width={canvasWidth}\n          height={canvasHeight}\n          sx={{\n            position: 'relative',\n            backgroundColor: backColor,\n            outline: '1px solid white',\n          }}\n        >\n          {this.root.DOMDisplay(\n            padding,\n            borderRadius,\n            delImg,\n            handleRemoveImage,\n            yOffset,\n            xOffset,\n          )}\n          {collageText}\n        </Box>\n      );\n    }\n    return null;\n  }\n\n  CanvasDisplay(\n    canvasWidth,\n    imageHeight,\n    canvasElement,\n    padding,\n    borderRadius,\n    backColor,\n    text,\n    topText,\n    scaleFactor,\n  ) {\n    console.log(topText);\n    if (this.root !== null) {\n      let yOffset = (imageHeight - this.root.value.height) / 2;\n      const xOffset = (canvasWidth - this.root.value.width) / 2;\n      if (topText && text.length > 0) yOffset += 50;\n      const ctx = canvasElement.getContext('2d');\n      console.log('canvas 2d context', ctx);\n      ctx.fillStyle = backColor;\n      ctx.textAlign = 'center';\n      console.log(\n        'canvas dimensions',\n        canvasElement.width,\n        canvasElement.height,\n      );\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      this.root.CanvasDisplay(\n        canvasElement,\n        padding,\n        borderRadius,\n        yOffset,\n        xOffset,\n      );\n      if (text.length > 0) {\n        ctx.fillStyle = '#1c1c1cb3';\n        ctx.fillRect(\n          0,\n          canvasElement.height - 34 * scaleFactor,\n          canvasElement.width,\n          24 * scaleFactor,\n        );\n        console.log(text, canvasElement.width / 2, canvasElement.height - 5);\n        ctx.font = `${scaleFactor}rem Arial`;\n        ctx.fillStyle = 'white';\n        ctx.shadowColor = 'transparent';\n        if (topText) {\n          ctx.fillText(text, canvasElement.width / 2, 13 * scaleFactor);\n        } else {\n          ctx.fillText(text, canvasElement.width / 2, canvasElement.height - 13 * scaleFactor);\n        }\n      }\n    }\n  }\n\n  generateCollageTree(images, tar) {\n    console.log('In generate collage tree');\n    this.root.generate(images, tar, images.length);\n  }\n\n  adjust(th) {\n    console.log('In adjust');\n    let trys = 0;\n    let bestAdjust = this.copy();\n    let bestAspectRatio = this.root.value.aspectRatio;\n    const tolerableDifference = this.root.value.targetAspectRatio * (1 - th);\n    let ajstCnt = 1000;\n    while (trys < 100 && ajstCnt > 0) {\n      console.log(trys, ajstCnt, bestAspectRatio);\n      ajstCnt = this.root.adjust(th);\n      trys += 1;\n      const diff = this.root.value.aspectRatio - this.root.value.targetAspectRatio;\n      if (\n        (diff > 0 && this.root.value.aspectRatio < bestAspectRatio)\n        || (bestAspectRatio < this.root.value.targetAspectRatio\n          && this.root.value.aspectRatio > this.root.value.targetAspectRatio)\n      ) {\n        bestAspectRatio = this.root.value.aspectRatio;\n        bestAdjust = this.copy();\n      }\n      if ((diff > 0 && diff < tolerableDifference) || diff === 0) break;\n    }\n\n    return [bestAspectRatio, bestAdjust];\n  }\n\n  copy() {\n    const copyTree = new BinaryTree({});\n    copyTree.root = this.root.copy();\n    return copyTree;\n  }\n\n  addSize(canvasWidth, canvasHeight, aspectRatio) {\n    console.log(\n      'In add size',\n      canvasWidth,\n      canvasHeight,\n      aspectRatio,\n      canvasWidth / aspectRatio,\n    );\n    this.root.value.width = canvasWidth;\n    this.root.value.height = canvasWidth / aspectRatio;\n    this.root.value.x = 0;\n    //  this.root.value.y = (canvasHeight - this.root.value.height) / 2;\n    this.root.value.y = 0;\n    const {\n      width, height, x, y, cut,\n    } = this.root.value;\n    if (this.root.left !== null) this.root.left.addSize(width, height, x, y, cut, 'left');\n    if (this.root.right !== null) this.root.right.addSize(width, height, x, y, cut, 'right');\n  }\n}\n","import PropTypes from 'prop-types';\nimport { useState, useEffect, useRef } from 'react';\nimport BinaryTree from './binaryTree';\n\nexport default function Collage({\n  paperWidth,\n  paperHeight,\n  generate,\n  generateCallback,\n  topText,\n  imageHeight,\n  imageWidth,\n  images,\n  aspectRatio,\n  canvasWidth,\n  canvasHeight,\n  tolerance,\n  padding,\n  borderRadius,\n  color,\n  text,\n  refresh,\n  handleRefresh,\n  removeImage,\n  handleRemoveImage,\n  stopRemoveImage,\n}) {\n  const canvasRef = useRef();\n  const [canvasElement, setCanvasElement] = useState(null);\n\n  const [collage, setCollage] = useState(null);\n  const [bestAspectRatio, setBestAspectRatio] = useState(null);\n  const [bestAspectRatioTree, setBestAspectRatioTree] = useState(null);\n\n  const convertToRGBA = (value) => `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\n  const showCollagePreview = (collTree) => {\n    if (collTree != null) {\n      setCollage(\n        collTree.DOMDisplay(\n          topText,\n          imageWidth,\n          imageHeight,\n          canvasWidth,\n          canvasHeight,\n          padding,\n          borderRadius,\n          convertToRGBA(color),\n          text,\n          removeImage,\n          handleRemoveImage,\n        ),\n      );\n    }\n  };\n\n  const findBestAdjustTree = () => {\n    console.log('finding best adjust tree');\n    setBestAspectRatio(null);\n    const imgTree = new BinaryTree({ cut: 'v' });\n    const sortedImages = images.sort((a, b) => (a.aspectRatio <= b.aspectRatio ? 1 : -1));\n    imgTree.generateCollageTree(sortedImages, imageWidth / imageHeight);\n\n    const [bestAR, bestAdjust] = imgTree.adjust(1 - tolerance);\n    setBestAspectRatio(bestAR);\n    setBestAspectRatioTree(bestAdjust);\n    return [bestAR, bestAdjust];\n  };\n\n  useEffect(() => setCanvasElement(canvasRef.current), [canvasElement]);\n\n  useEffect(() => {\n    const [bestAR, bestAdjust] = findBestAdjustTree();\n    bestAdjust.addSize(imageWidth, imageHeight, bestAR);\n    showCollagePreview(bestAdjust);\n  }, []);\n\n  useEffect(() => {\n    setCollage(null);\n    const [bestAR, bestAdjust] = findBestAdjustTree();\n    bestAdjust.addSize(imageWidth, imageHeight, bestAR);\n    showCollagePreview(bestAdjust);\n  }, [images, aspectRatio]);\n\n  useEffect(\n    () => showCollagePreview(bestAspectRatioTree),\n    [padding, borderRadius, color, text, topText],\n  );\n\n  useEffect(() => {\n    if (bestAspectRatioTree != null) {\n      bestAspectRatioTree.addSize(imageWidth, imageHeight, bestAspectRatio);\n    }\n    showCollagePreview(bestAspectRatioTree);\n  }, [imageWidth, imageHeight]);\n\n  useEffect(() => {\n    //  const paperWidth = 2550;\n    //  const paperHeight = 3300;\n    const textHeight = (text.length > 0) ? (50 * paperHeight) / canvasHeight : 0;\n    const imgPrintHeight = paperHeight - textHeight;\n    const imgPrintWidth = (paperHeight - textHeight) * aspectRatio;\n    if (generate === true) {\n      const canvasTree = bestAspectRatioTree.copy();\n      canvasTree.addSize(imgPrintWidth, imgPrintHeight, bestAspectRatio);\n      canvasElement.width = paperWidth;\n      canvasElement.height = paperHeight;\n      canvasTree.CanvasDisplay(\n        paperWidth,\n        imgPrintHeight,\n        canvasElement,\n        (padding * paperWidth) / canvasWidth,\n        (borderRadius * paperWidth) / canvasWidth,\n        convertToRGBA(color),\n        text,\n        topText,\n        paperWidth / canvasWidth,\n      );\n      setTimeout(() => {\n        const link = document.createElement('a');\n        link.download = `collage-${paperWidth}X${paperHeight}-${Date.now()}.png`;\n        link.href = canvasRef.current.toDataURL();\n        link.click();\n        generateCallback();\n      }, '5000');\n    }\n  }, [generate]);\n\n  useEffect(() => {\n    if (refresh === true) {\n      console.log('refresh is true');\n      stopRemoveImage();\n      const [bestAR, bestAdjust] = findBestAdjustTree();\n      bestAdjust.addSize(imageWidth, imageHeight, bestAR);\n      showCollagePreview(bestAdjust);\n      handleRefresh();\n    }\n  }, [refresh]);\n\n  useEffect(() => showCollagePreview(bestAspectRatioTree), [removeImage]);\n\n  return (\n    <>\n      {collage}\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\n    </>\n  );\n}\n\nCollage.propTypes = {\n  paperWidth: PropTypes.number.isRequired,\n  paperHeight: PropTypes.number.isRequired,\n  tolerance: PropTypes.number.isRequired,\n  generate: PropTypes.bool.isRequired,\n  generateCallback: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  imageWidth: PropTypes.number.isRequired,\n  imageHeight: PropTypes.number.isRequired,\n  aspectRatio: PropTypes.number.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      naturalHeight: PropTypes.number.isRequired,\n      naturalWidth: PropTypes.number.isRequired,\n      aspectRatio: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  padding: PropTypes.number.isRequired,\n  borderRadius: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  refresh: PropTypes.bool.isRequired,\n  handleRefresh: PropTypes.func.isRequired,\n  handleRemoveImage: PropTypes.func.isRequired,\n  removeImage: PropTypes.bool.isRequired,\n  stopRemoveImage: PropTypes.func.isRequired,\n  canvasWidth: PropTypes.number.isRequired,\n  canvasHeight: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\n\nimport AddPhotos from 'components/AddPhotos';\nimport Collage from 'components/collage/Collage';\nimport collageBack from 'static/images/back_blur.webp';\n\nexport default function CollagePreview({\n  paperWidth,\n  paperHeight,\n  generate,\n  generateCallback,\n  topText,\n  imageWidth,\n  imageHeight,\n  aspectRatio,\n  images,\n  imgCount,\n  padding,\n  radius,\n  text,\n  color,\n  setImages,\n  setImageCount,\n  width,\n  height,\n  refresh,\n  handleRefresh,\n  removeImage,\n  stopRemoveImage,\n  handleLoad,\n}) {\n  const tolerance = 0.1;\n\n  const handleRemoveImage = (title) => {\n    const removeIndex = images.findIndex((elem) => elem.title === title);\n    setImages([...images.slice(0, removeIndex), ...images.slice(removeIndex + 1)]);\n    setImageCount((cnt) => cnt - 1);\n  };\n\n  if (images.length === 0) {\n    return (\n      <>\n        <Box\n          sx={{\n            width,\n            height,\n            //  border: '2px solid white',\n            position: 'relative',\n            backgroundImage: `url(${collageBack})`,\n            backgroundSize: width,\n            objectFit: 'contain',\n            backgroundRepeat: 'no-repeat',\n            alignItems: 'center',\n          }}\n        >\n          <Box\n            sx={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n            }}\n          >\n            <AddPhotos handleChange={handleLoad} />\n          </Box>\n        </Box>\n      </>\n    );\n  }\n\n  if (images.length > 0 && images.length === imgCount) {\n    console.log('rendering collage', images);\n    return (\n      <Collage\n        paperWidth={paperWidth}\n        paperHeight={paperHeight}\n        generate={generate}\n        generateCallback={generateCallback}\n        topText={topText}\n        imageHeight={imageHeight}\n        imageWidth={imageWidth}\n        images={images}\n        aspectRatio={aspectRatio}\n        canvasWidth={width}\n        canvasHeight={height}\n        padding={padding}\n        borderRadius={radius}\n        tolerance={tolerance}\n        text={text}\n        color={color}\n        refresh={refresh}\n        handleRefresh={handleRefresh}\n        removeImage={removeImage}\n        handleRemoveImage={handleRemoveImage}\n        stopRemoveImage={stopRemoveImage}\n      />\n    );\n  }\n\n  return <div>Loading...</div>;\n}\n\nCollagePreview.propTypes = {\n  paperWidth: PropTypes.number.isRequired,\n  paperHeight: PropTypes.number.isRequired,\n  generate: PropTypes.bool.isRequired,\n  generateCallback: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  imageWidth: PropTypes.number.isRequired,\n  imageHeight: PropTypes.number.isRequired,\n  aspectRatio: PropTypes.number.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      naturalHeight: PropTypes.number.isRequired,\n      naturalWidth: PropTypes.number.isRequired,\n      aspectRatio: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  padding: PropTypes.number.isRequired,\n  radius: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  imgCount: PropTypes.number.isRequired,\n  setImages: PropTypes.func.isRequired,\n  setImageCount: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  refresh: PropTypes.bool.isRequired,\n  handleRefresh: PropTypes.func.isRequired,\n  handleLoad: PropTypes.func.isRequired,\n  removeImage: PropTypes.bool.isRequired,\n  stopRemoveImage: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport TitleIcon from '@mui/icons-material/Title';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\n\nexport default function CollageControls({\n  controlsRef, onRefresh, onDelete, onAdd, onText, onEdit, clearDelete,\n}) {\n  const [value, setValue] = useState();\n\n  const handleChange = (event, newValue) => {\n    console.log(newValue);\n    clearDelete();\n    setValue(newValue);\n    if (newValue === 'refresh') {\n      onRefresh();\n    } else if (newValue === 'delete') {\n      onDelete();\n    } else if (newValue === 'add') {\n      console.log(event);\n      onAdd();\n    } else if (newValue === 'text') {\n      console.log(event);\n      onText();\n    } else if (newValue === 'edit') {\n      console.log(event);\n      onEdit();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  return (\n    <Paper\n      ref={controlsRef}\n      sx={{\n        position: 'fixed', bottom: 0, left: 0, right: 0, mt: 1, backgroundColor: 'black', borderRadius: 0,\n      }}\n      elevation={4}\n    >\n      <BottomNavigation showLabels value={value} onChange={handleChange} sx={{ fontWeight: 'bold', backgroundColor: alpha('#fff', 0.2) }}>\n        <BottomNavigationAction label=\"Refresh\" value=\"refresh\" icon={<RefreshIcon />} sx={{ fontWeight: 'bold', color: 'gray' }} />\n        <BottomNavigationAction label=\"Delete\" value=\"delete\" icon={<DeleteIcon />} sx={{ fontWeight: 'bold', color: 'gray' }} />\n        <BottomNavigationAction label=\"Edit\" value=\"edit\" icon={<EditIcon />} sx={{ fontWeight: 'bold', color: 'gray' }} />\n        <BottomNavigationAction label=\"Add\" value=\"add\" icon={<AddPhotoAlternateIcon />} sx={{ fontWeight: 'bold', color: 'gray' }} />\n        <BottomNavigationAction label=\"Text\" value=\"text\" icon={<TitleIcon />} sx={{ fontWeight: 'bold', color: 'gray' }} />\n      </BottomNavigation>\n    </Paper>\n  );\n}\n\nCollageControls.propTypes = {\n  controlsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  onText: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Paper from '@mui/material/Paper';\nimport { Typography, Box, Link } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { alpha } from '@mui/material/styles';\n\nexport default function CollageMakerHeader({ headerRef }) {\n  return (\n    <Paper\n      ref={headerRef}\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        p: 1,\n        backgroundColor: alpha('#fff', 0.1),\n        borderRadius: 0,\n\n      }}\n      elevation={3}\n    >\n      <Box sx={{ position: 'absolute', left: '5px' }}>\n        <Link href=\"/collages\" color=\"muted.main\" underline=\"none\">\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <ArrowBackIcon />\n          </Box>\n        </Link>\n      </Box>\n      <Typography\n        variant=\"h4\"\n        component=\"h4\"\n        sx={{ color: alpha('#fff', 0.5) }}\n      >\n        Collage Maker\n      </Typography>\n    </Paper>\n  );\n}\n\nCollageMakerHeader.propTypes = {\n  headerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n//  import Paper from '@mui/material/Paper';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport { alpha } from '@mui/material/styles';\n\nexport default function CollageActions({ actionsRef, onDownload }) {\n  const [value, setValue] = useState();\n\n  const handleChange = (event, newValue) => {\n    console.log(newValue);\n    setValue(newValue);\n    if (newValue === 'download') {\n      onDownload();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  return (\n    <BottomNavigation\n      ref={actionsRef}\n      showLabels\n      value={value}\n      onChange={handleChange}\n      sx={{ py: 1, fontWeight: 'bold', backgroundColor: alpha('#fff', 0.2) }}\n    >\n      <BottomNavigationAction\n        label=\"Save\"\n        value=\"save\"\n        icon={<SaveIcon />}\n        sx={{ fontWeight: 'bold', color: 'gray' }}\n      />\n      <BottomNavigationAction\n        label=\"Download\"\n        value=\"download\"\n        icon={<DownloadIcon />}\n        sx={{ fontWeight: 'bold', color: 'gray' }}\n      />\n      <BottomNavigationAction\n        label=\"Print\"\n        value=\"print\"\n        icon={<PrintIcon />}\n        sx={{ fontWeight: 'bold', color: 'gray' }}\n      />\n    </BottomNavigation>\n  );\n}\n\nCollageActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  //  onDelete: PropTypes.func.isRequired,\n  //  onAdd: PropTypes.func.isRequired,\n  //  onText: PropTypes.func.isRequired,\n  //  onEdit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { grey } from '@mui/material/colors';\nimport Box from '@mui/material/Box';\nimport Skeleton from '@mui/material/Skeleton';\nimport Typography from '@mui/material/Typography';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\n\nconst drawerBleeding = 56;\n\nconst Puller = ({ anchor }) => (\n  <Box\n    sx={{\n      width: 30,\n      height: 6,\n      backgroundColor: grey[300],\n      borderRadius: 3,\n      position: 'absolute',\n      [anchor === 'top' ? 'bottom' : 'top']: 8,\n      left: 'calc(50% - 15px)',\n    }}\n  />\n);\n\nexport default function CollageSwipeableDrawer({\n  anchor,\n  open,\n  title,\n  toggleDrawer,\n  drawerChild,\n}) {\n  return (\n    <Box>\n      <CssBaseline />\n      <SwipeableDrawer\n        anchor={anchor}\n        open={open}\n        onClose={toggleDrawer}\n        onOpen={toggleDrawer}\n        swipeAreaWidth={drawerBleeding}\n        disableSwipeToOpen={false}\n        ModalProps={{\n          keepMounted: false,\n        }}\n        PaperProps={{\n          sx: {\n            borderRadius: anchor === 'top' ? '0 0 15px 15px' : '15px 15px 0 0',\n            backgroundColor: 'black',\n          },\n        }}\n      >\n        <Box\n          sx={{\n            visibility: open ? 'visible' : 'hidden',\n            backgroundColor: alpha('#fff', 0.1),\n          }}\n        >\n          <Puller anchor={anchor} />\n          <Typography\n            sx={{\n              pt: 3,\n              pb: 1,\n              color: 'gray',\n              fontWeight: 'bold',\n              textAlign: 'center',\n            }}\n          >\n            {title}\n          </Typography>\n        </Box>\n        {drawerChild || (\n          <Box\n            sx={{\n              px: 2,\n              pb: 2,\n              height: '100%',\n              overflow: 'auto',\n            }}\n          >\n            <Skeleton variant=\"rectangular\" height=\"50px\" />\n          </Box>\n        )}\n      </SwipeableDrawer>\n    </Box>\n  );\n}\n\nPuller.propTypes = {\n  anchor: PropTypes.string.isRequired,\n};\n\nCollageSwipeableDrawer.propTypes = {\n  open: PropTypes.bool.isRequired,\n  anchor: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  toggleDrawer: PropTypes.func.isRequired,\n  drawerChild: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function TextControl({\n  text, handleTextChange, topText, handlePositionChange,\n}) {\n  const [collageTextError] = useState('');\n  return (\n    <Box sx={{ px: 1, backgroundColor: alpha('#fff', 0.2) }}>\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={2}>\n        <Typography sx={{ fontWeight: 'bold', color: 'gray' }}> Collage Text </Typography>\n        <FormGroup row>\n          <FormLabel label=\"Position\" />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={topText === false}\n                onChange={() => handlePositionChange(false)}\n              />\n            )}\n            label=\"Bottom\"\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={topText === true}\n                onChange={() => handlePositionChange(true)}\n              />\n            )}\n            label=\"Top\"\n          />\n        </FormGroup>\n      </Stack>\n      <TextField\n        variant=\"outlined\"\n        label=\"\"\n        defaultValue={text}\n        onChange={handleTextChange}\n        sx={{ width: '100%', mb: 2 }}\n        InputProps={{ sx: { backgroundColor: 'white' } }}\n        helperText={collageTextError || 'E.g. Marriage Anniversary 2018'}\n        error={!!collageTextError}\n      />\n\n    </Box>\n  );\n}\n\nTextControl.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  handlePositionChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\n\nexport default function PaddingControl({ padding, handlePaddingChange }) {\n  return (\n    <>\n      <Typography sx={{ fontWeight: 'bold', color: 'gray' }}>Padding</Typography>\n      <Slider\n        aria-label=\"Temperature\"\n        defaultValue={0}\n        value={padding}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={0}\n        max={10}\n        size=\"large\"\n        onChange={handlePaddingChange}\n        sx={{ color: 'white' }}\n      />\n    </>\n  );\n}\n\nPaddingControl.propTypes = {\n  padding: PropTypes.number.isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\n\nexport default function RadiusControl({ radius, handleRadiusChange }) {\n  return (\n    <>\n      <Typography sx={{ fontWeight: 'bold', color: 'gray' }}>\n        Border Radius\n      </Typography>\n      <Slider\n        aria-label=\"Temperature\"\n        defaultValue={0}\n        value={radius}\n        valueLabelDisplay=\"auto\"\n        step={5}\n        marks\n        min={0}\n        max={40}\n        onChange={handleRadiusChange}\n        sx={{ color: 'white' }}\n      />\n    </>\n  );\n}\n\nRadiusControl.propTypes = {\n  radius: PropTypes.number.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { ChromePicker } from 'react-color';\n\nexport default function ColorControl({\n  color,\n  displayColorPicker,\n  handleClick,\n  handleClose,\n  handleChange,\n}) {\n  console.log(color, displayColorPicker);\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      spacing={2}\n      sx={{ my: 2 }}\n    >\n      <Typography sx={{ fontWeight: 'bold', color: 'gray' }}>\n        Background Color\n      </Typography>\n      <Box\n        component=\"div\"\n        sx={{\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        }}\n        onClick={handleClick}\n      >\n        <Box\n          component=\"div\"\n          sx={{\n            width: '72px',\n            height: '28px',\n            borderRadius: '2px',\n            background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n          }}\n        />\n      </Box>\n      {displayColorPicker ? (\n        <Box\n          component=\"div\"\n          sx={{\n            position: 'absolute',\n            zIndex: '2',\n          }}\n        >\n          <Box\n            component=\"div\"\n            sx={{\n              position: 'fixed',\n              top: '0px',\n              right: '0px',\n              bottom: '50px',\n              left: '0px',\n            }}\n            onClick={handleClose}\n          />\n          <ChromePicker color={color} onChange={handleChange} />\n        </Box>\n      ) : null}\n    </Stack>\n  );\n}\n\nColorControl.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport ColorControl from 'components/collage/ColorControl';\n\nexport default function EditControl({\n  padding,\n  handlePaddingChange,\n  color,\n  displayColorPicker,\n  handleColorChange,\n  handleClose,\n  handleClick,\n  radius,\n  handleRadiusChange,\n}) {\n  return (\n    <Box sx={{ p: 2, backgroundColor: alpha('#fff', 0.2) }}>\n      <PaddingControl\n        padding={padding}\n        handlePaddingChange={handlePaddingChange}\n      />\n      <ColorControl\n        color={color}\n        displayColorPicker={displayColorPicker}\n        handleChange={handleColorChange}\n        handleClose={handleClose}\n        handleClick={handleClick}\n      />\n      <RadiusControl radius={radius} handleRadiusChange={handleRadiusChange} />\n    </Box>\n  );\n}\n\nEditControl.propTypes = {\n  padding: PropTypes.number.isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleColorChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  radius: PropTypes.number.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\n\nexport default function DownloadDialog({\n  open, onClick, onClose, sizes,\n}) {\n  const [value, setValue] = useState('');\n  const handleDownload = () => {\n    console.log(sizes[value].width, sizes[value].height, onClick);\n    onClick(sizes[value].width, sizes[value].height);\n    setValue('');\n  };\n\n  const handleClose = () => {\n    setValue('');\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Download Collage</DialogTitle>\n      <DialogContent dividers sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n        <DialogContentText sx={{ display: 'inline', pr: 1 }}>Choose collage size</DialogContentText>\n        <FormControl fullWidth sx={{ maxWidth: '60%' }}>\n          <InputLabel id=\"demo-simple-select-label\">Download Size</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            defaultValue=\"A4\"\n            value={value}\n            label=\"Download Size\"\n            onChange={(event) => setValue(event.target.value)}\n          >\n            {\n              Object.keys(sizes).map((key) => (\n                <MenuItem key={sizes[key].text} value={key}>{sizes[key].text}</MenuItem>\n              ))\n            }\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" disabled={value.length === 0} onClick={handleDownload}>Download</Button>\n        <Button variant=\"text\" onClick={handleClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nDownloadDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","import {\n  useState, useEffect, useRef, useLayoutEffect,\n} from 'react';\nimport CollagePreview from 'components/collage/CollagePreview';\nimport CollageControls from 'components/collage/CollageControls';\nimport Box from '@mui/material/Box';\n\nimport CollageMakerHeader from 'components/collage/CollageMakerHeader';\nimport CollageActions from 'components/collage/CollageActions';\nimport CollageSwipeableDrawer from 'components/collage/CollageSwipeableDrawer';\nimport TextControl from 'components/collage/TextControl';\nimport EditControl from 'components/collage/EditControl';\nimport DownloadDialog from 'components/collage/DownloadDialog';\nimport Loading from 'components/Loading';\nimport Authenticate from 'hocs/require-authentication';\n\nfunction CollageMaker() {\n  const paperSizes = {\n    A4: { width: 2480, height: 3508, text: '8 X 11 inches' },\n    A3: { width: 3508, height: 4961, text: '11 X 16 inches' },\n  };\n  const headerRef = useRef();\n  const actionsRef = useRef();\n  const footerRef = useRef();\n  const [otherHeight, setOtherHeight] = useState(0);\n  const aspectRatio = 0.7;\n  const addImageRef = useRef();\n  const textHeight = 50;\n\n  const [color, setColor] = useState({\n    r: 0, g: 0, b: 0, a: 1,\n  });\n  const [paperWidth, setPaperWidth] = useState(0);\n  const [paperHeight, setPaperHeight] = useState(0);\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n  const [drawerChild, setDrawerChild] = useState(null);\n  const [generate, setGenerate] = useState(false);\n  const [height, setHeight] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [imageWidth, setImageWidth] = useState(0);\n  const [images, setImages] = useState([]);\n  const [imgCount, setImageCount] = useState(0);\n  const [maxHeight, setMaxHeight] = useState(0);\n  const [maxWidth, setMaxWidth] = useState(0);\n  const [controlsOpen, setControlsOpen] = useState(false);\n  const [padding, setPadding] = useState(2);\n  const [radius, setRadius] = useState(5);\n  const [refresh, setRefresh] = useState(false);\n  const [removeImage, setRemoveImage] = useState(false);\n  const [text, setText] = useState('');\n  const [title, setTitle] = useState('');\n  const [topText, setTopText] = useState(false);\n  const [width, setWidth] = useState(0);\n  const [open, setOpen] = useState(false);\n\n  const toggleDrawer = () => {\n    if (controlsOpen) {\n      setDrawerChild(null);\n      setTitle('');\n    }\n    setControlsOpen((val) => !val);\n  };\n\n  const setDimensions = () => {\n    console.log('max usable dimensions', window.innerWidth, window.innerHeight - otherHeight, otherHeight);\n    setMaxWidth(window.innerWidth);\n    setMaxHeight(window.innerHeight - otherHeight);\n    if ((window.innerHeight - otherHeight) * aspectRatio <= window.innerWidth) {\n      setWidth((window.innerHeight - otherHeight) * aspectRatio);\n      setHeight(window.innerHeight - otherHeight);\n      console.log(\n        'collage dimensions',\n        (window.innerHeight - otherHeight) * aspectRatio,\n        window.innerHeight - otherHeight,\n      );\n    } else {\n      setWidth(window.innerWidth);\n      setHeight(window.innerWidth / aspectRatio);\n    }\n  };\n\n  const handleLoad = (event) => {\n    if (event.target.files) {\n      setImageCount((cnt) => cnt + event.target.files.length);\n      const files = Array.from(event.target.files);\n      files.forEach((file) => {\n        const image = new Image();\n        image.onload = (e) => {\n          //  console.log(e);\n          const { target } = e;\n          const date = Date.now();\n          const newName = `${date}-${file.name}`;\n          setImages((arr) => arr.concat([\n            {\n              title: newName,\n              url: target.src,\n              naturalHeight: target.naturalHeight,\n              naturalWidth: target.naturalWidth,\n              aspectRatio: target.naturalWidth / target.naturalHeight,\n            },\n          ]));\n        };\n        image.src = URL.createObjectURL(file);\n      });\n      files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n    }\n  };\n\n  const handleImageAddClick = () => {\n    if (addImageRef.current) {\n      addImageRef.current.click();\n    }\n  };\n\n  const handlePaddingChange = (e) => setPadding(e.target.value);\n  const handleRadiusChange = (e) => setRadius(e.target.value);\n  const handleClick = () => setDisplayColorPicker((dcp) => !dcp);\n  const handleClose = () => setDisplayColorPicker(false);\n  const handleColorChange = (clr) => setColor(clr.rgb);\n\n  const handleTextChange = (e) => {\n    const { target } = e;\n    setText(target.value);\n    if (target.value.length > 0) {\n      setImageWidth((height - textHeight) * aspectRatio);\n      setImageHeight(height - textHeight);\n    } else {\n      setImageWidth(width);\n      setImageHeight(height);\n    }\n  };\n\n  const textControl = () => (\n    <TextControl\n      text={text}\n      handleTextChange={handleTextChange}\n      topText={topText}\n      handlePositionChange={setTopText}\n    />\n  );\n\n  const handleText = () => {\n    setTitle('Add Text');\n    setControlsOpen(true);\n    setDrawerChild(textControl);\n  };\n\n  const editControl = () => (\n    <EditControl\n      padding={padding}\n      handlePaddingChange={handlePaddingChange}\n      color={color}\n      displayColorPicker={displayColorPicker}\n      handleColorChange={handleColorChange}\n      handleClose={handleClose}\n      handleClick={handleClick}\n      radius={radius}\n      handleRadiusChange={handleRadiusChange}\n    />\n  );\n\n  const handleEdit = () => {\n    setTitle('Edit Collage');\n    setControlsOpen(true);\n    setDrawerChild(editControl);\n  };\n\n  const handleDownload = () => setOpen(true);\n  const onDownloadClose = () => setOpen(false);\n  const onDownloadClick = (w, h) => {\n    setPaperWidth(w);\n    setPaperHeight(h);\n    setGenerate(true);\n    setOpen(false);\n  };\n\n  const handleGenerateCallback = () => {\n    setGenerate(false);\n    setPaperWidth(0);\n    setPaperHeight(0);\n  };\n\n  useLayoutEffect(() => {\n    console.log('setting otherHeight effect');\n    if (headerRef.current && actionsRef.current && footerRef.current) {\n      console.log(\n        'other heights',\n        headerRef.current.offsetHeight,\n        actionsRef.current.offsetHeight,\n        footerRef.current.offsetHeight,\n      );\n      setOtherHeight(\n        headerRef.current.offsetHeight\n          + actionsRef.current.offsetHeight\n          + footerRef.current.offsetHeight,\n      );\n    }\n  }, [headerRef.current, actionsRef.current, footerRef.current]);\n\n  useEffect(() => setDimensions(), [otherHeight]);\n\n  useEffect(() => setDrawerChild(textControl), [text, topText]);\n  useEffect(() => {\n    setDimensions();\n    window.addEventListener('resize', setDimensions);\n\n    return () => window.removeEventListener('resize', setDimensions);\n  }, []);\n\n  useEffect(() => {\n    if (text.length > 0) {\n      setImageWidth((height - textHeight) * aspectRatio);\n      setImageHeight(height - textHeight);\n    } else {\n      setTopText(false);\n      setImageWidth(width);\n      setImageHeight(height);\n    }\n  }, [width, height, text]);\n\n  useEffect(() => setDrawerChild(editControl), [padding, radius, color, displayColorPicker]);\n\n  console.log(color, generate);\n  return (\n    <Box component=\"div\" sx={{ backgroundColor: 'black' }}>\n      <CollageMakerHeader headerRef={headerRef} />\n      <CollageActions actionsRef={actionsRef} onDownload={handleDownload} />\n      {open ? (\n        <Authenticate>\n          <DownloadDialog\n            open={open}\n            onClick={onDownloadClick}\n            onClose={onDownloadClose}\n            sizes={paperSizes}\n          />\n        </Authenticate>\n      ) : null}\n      <Box\n        width={maxWidth}\n        height={maxHeight}\n        sx={{\n          display: 'flex',\n          alignItems: controlsOpen ? 'start' : 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <CollagePreview\n          paperWidth={paperWidth}\n          paperHeight={paperHeight}\n          aspectRatio={aspectRatio}\n          color={color}\n          generate={generate}\n          generateCallback={handleGenerateCallback}\n          handleLoad={handleLoad}\n          handleRefresh={() => setRefresh(false)}\n          height={height}\n          imageHeight={imageHeight}\n          imageWidth={imageWidth}\n          images={images}\n          imgCount={imgCount}\n          padding={padding}\n          radius={radius}\n          refresh={refresh}\n          removeImage={removeImage}\n          setImageCount={setImageCount}\n          setImages={setImages}\n          stopRemoveImage={() => setRemoveImage(false)}\n          text={text}\n          topText={topText}\n          width={width}\n        />\n      </Box>\n      <input\n        ref={addImageRef}\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={handleLoad}\n      />\n      {controlsOpen ? (\n        <CollageSwipeableDrawer\n          anchor=\"bottom\"\n          title={title}\n          open={controlsOpen}\n          toggleDrawer={toggleDrawer}\n          drawerChild={drawerChild}\n        />\n      ) : (\n        <CollageControls\n          controlsRef={footerRef}\n          onRefresh={() => setRefresh(true)}\n          onDelete={() => setRemoveImage(true)}\n          onAdd={handleImageAddClick}\n          onText={handleText}\n          onEdit={handleEdit}\n          clearDelete={() => setRemoveImage(false)}\n        />\n      )}\n      {generate ? <Loading title=\"Creating collage ...\" /> : null}\n    </Box>\n  );\n}\n\nexport default CollageMaker;\n"],"names":["OptionsButton","children","onClick","name","Button","id","variant","component","sx","color","borderRadius","backgroundColor","padding","AddPhotos","handleChange","type","hidden","multiple","accept","onChange","fontSize","defaultProps","getClosest","arr","index1","index2","target","getCut","Math","round","random","findClosest","n","length","start","end","mid","findImgPair","i","j","minMatchingCost","abs","getAspectRatio","cut","ar1","ar2","Node","value","this","left","right","output","title","aspectRatio","push","concat","display","copyNode","copy","delImg","handleRemoveImage","yOffset","xOffset","console","log","width","url","Box","alt","src","position","x","top","y","Tooltip","IconButton","size","alpha","bgcolor","px","transform","Delete","DOMDisplay","RenderImage","image","tempCanvas","document","createElement","naturalWidth","height","naturalHeight","newWidth","newHeight","tempCtx","getContext","scaleFactor","floor","log2","drawImage","ctx","radius","clipwidth","clipheight","save","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","canvasElement","CanvasDisplay","newImg","Image","onload","ResizeImage","ImageStyling","clearRect","images","tar","imageCount","targetAspectRatioArr","map","closestIndex","helpers","slice","restImages","targetAspectRatio","leftIndex","rightIndex","filter","item","index","includes","generate","th","adjustments","adjust","parentWidth","parentHeight","parentX","parentY","parentCut","nodeType","addSize","BinaryTree","undefined","root","topText","imageWidth","imageHeight","canvasWidth","canvasHeight","backColor","text","collageText","Typography","margin","textAlign","bottom","outline","fillStyle","fillRect","font","shadowColor","fillText","trys","bestAdjust","bestAspectRatio","tolerableDifference","ajstCnt","diff","copyTree","Collage","paperWidth","paperHeight","generateCallback","tolerance","refresh","handleRefresh","removeImage","stopRemoveImage","canvasRef","useRef","useState","setCanvasElement","collage","setCollage","setBestAspectRatio","bestAspectRatioTree","setBestAspectRatioTree","convertToRGBA","r","g","b","a","showCollagePreview","collTree","findBestAdjustTree","imgTree","sortedImages","sort","generateCollageTree","bestAR","useEffect","current","textHeight","imgPrintHeight","imgPrintWidth","canvasTree","setTimeout","link","download","Date","now","href","toDataURL","click","ref","style","CollagePreview","imgCount","setImages","setImageCount","handleLoad","backgroundImage","collageBack","backgroundSize","objectFit","backgroundRepeat","alignItems","removeIndex","findIndex","elem","cnt","CollageControls","controlsRef","onRefresh","onDelete","onAdd","onText","onEdit","clearDelete","setValue","Paper","mt","elevation","BottomNavigation","showLabels","event","newValue","fontWeight","BottomNavigationAction","label","icon","Refresh","Edit","AddPhotoAlternate","Title","CollageMakerHeader","headerRef","justifyContent","p","Link","underline","ArrowBack","CollageActions","actionsRef","onDownload","py","Save","Download","Print","Puller","anchor","grey","CollageSwipeableDrawer","open","toggleDrawer","drawerChild","CssBaseline","SwipeableDrawer","onClose","onOpen","swipeAreaWidth","disableSwipeToOpen","ModalProps","keepMounted","PaperProps","visibility","pt","pb","overflow","Skeleton","TextControl","handleTextChange","handlePositionChange","collageTextError","Stack","direction","spacing","FormGroup","row","FormLabel","FormControlLabel","control","Checkbox","checked","TextField","defaultValue","mb","InputProps","helperText","error","PaddingControl","handlePaddingChange","Slider","valueLabelDisplay","step","marks","min","max","RadiusControl","handleRadiusChange","ColorControl","displayColorPicker","handleClick","handleClose","my","background","boxShadow","cursor","zIndex","EditControl","handleColorChange","DownloadDialog","sizes","Dialog","fullWidth","DialogTitle","DialogContent","dividers","DialogContentText","pr","FormControl","maxWidth","InputLabel","Select","labelId","Object","keys","key","MenuItem","DialogActions","disabled","footerRef","otherHeight","setOtherHeight","addImageRef","setColor","setPaperWidth","setPaperHeight","setDisplayColorPicker","setDrawerChild","setGenerate","setHeight","setImageHeight","setImageWidth","maxHeight","setMaxHeight","setMaxWidth","controlsOpen","setControlsOpen","setPadding","setRadius","setRefresh","setRemoveImage","setText","setTitle","setTopText","setWidth","setOpen","setDimensions","window","innerWidth","innerHeight","files","Array","from","forEach","file","e","date","newName","URL","createObjectURL","revokeObjectURL","dcp","clr","rgb","textControl","editControl","useLayoutEffect","offsetHeight","addEventListener","removeEventListener","w","h","A4","A3","val","Loading"],"sourceRoot":""}