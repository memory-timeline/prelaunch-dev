{"version":3,"file":"static/js/733.16a45aec.chunk.js","mappings":"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","sources":["api/collage.jsx","api/helpers.js","components/OptionsButton.jsx","components/AddPhotos.jsx","components/collage/helpers.js","components/collage/TextDisplay.jsx","components/collage/node.jsx","components/collage/binaryTree.jsx","components/collage/treeUtils.js","hooks/collage/base.jsx","hooks/collage/dimensions.jsx","hooks/collage/options.jsx","hooks/collage/actions.jsx","hooks/collage/images.jsx","hooks/collage/tree.jsx","components/collage/Collage.jsx","components/collage/DownloadDialog.jsx","components/collage/SaveDialog.jsx","components/collage/SaveStatusDialog.jsx","components/collage/Header.jsx","components/collage/EmptyCollage.jsx","components/collage/View.jsx","components/collage/DesktopActionItem.jsx","components/collage/DesktopDrawer.jsx","components/collage/ControlsDivider.jsx","components/collage/DesktopActions.jsx","components/collage/ClearCollageDialog.jsx","components/collage/DesktopControls.jsx","components/collage/DesktopImageOptions.jsx","components/collage/PaddingControl.jsx","components/collage/RadiusControl.jsx","components/collage/ColorControl.jsx","components/collage/TextControl.jsx","components/collage/EditControl.jsx","components/collage/MobileActionItem.jsx","components/collage/MobileActions.jsx","components/collage/MainControls.jsx","components/collage/EditOptions.jsx","components/collage/ImageOptions.jsx","components/collage/MobileControls.jsx","components/collage/CollageType.jsx","pages/collage/Base.jsx"],"sourcesContent":["import helpers from 'api/helpers';\n\nfunction newCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/new';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction saveCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/save';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\nasync function upload(url, body) {\n  try {\n    const params = { body, method: 'PUT' };\n    const resp = await fetch(url, params).then((response) => response);\n    return resp;\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction listCollages(nextToken) {\n  try {\n    const path = '/api/collage/list';\n    const params = { next_token: nextToken };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getThumbnail(collageId) {\n  try {\n    const path = '/api/collage/thumbnail';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getCollage(collageId) {\n  try {\n    const path = '/api/collage/get';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction deleteCollage(collageId) {\n  try {\n    const path = '/api/collage/delete';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.deleteMethod(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction checkOptimizeStatus(collageId) {\n  try {\n    const path = '/api/collage/resized-count';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\nexport default {\n  newCollage,\n  saveCollage,\n  upload,\n  listCollages,\n  getThumbnail,\n  getCollage,\n  deleteCollage,\n  checkOptimizeStatus,\n};\n","const get = async (url, path, params = {}) => {\n  let newUrl = `https://${url}${path}`;\n  const options = {\n    method: 'GET',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  newUrl += `?${new URLSearchParams(params).toString()}`;\n  const resp = await fetch(newUrl, options);\n  if (!resp.ok) {\n    if (resp.status === 401) {\n      document.cookie =\n        'userInfo=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return { status: 'unauthenticated' };\n    }\n    if (resp.status === 403) {\n      return { status: 'forbidden' };\n    }\n  }\n\n  return resp.json();\n};\n\nconst post = async (url, path, params, body) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'POST',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body,\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\n\nconst deleteMethod = async (url, path, params) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'DELETE',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\nexport default { get, post, deleteMethod };\n","import PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\n\nexport default function OptionsButton({ children, onClick, name }) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: 'muted.main',\n        borderRadius: 15,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: 'muted.main',\n          backgroundColor: 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  //  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport OptionsButton from 'components/OptionsButton';\nimport Typography from '@mui/material/Typography';\n\nexport default function AddPhotos({ handleChange }) {\n  return (\n    <OptionsButton name=\"add\">\n      <input\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={handleChange}\n      />\n      <AddPhotoIcon sx={{ fontSize: '2rem' }} />\n      <Typography sx={{ fontWeight: 'bold' }}>Add Images</Typography>\n    </OptionsButton>\n  );\n}\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","function textCanvasDraw(\n  ctx,\n  textArray,\n  position,\n  scaleFactor,\n  canvasWidth,\n  textHeight\n) {\n  ctx.font = `${scaleFactor * 20}px Arial`;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'top';\n  ctx.fillStyle = '#1c1c1cb3';\n  ctx.fillRect(0, position, canvasWidth, position + textHeight);\n  ctx.fillStyle = 'white';\n\n  console.log('text array', textArray, textHeight);\n  // eslint-disable-next-line no-restricted-syntax\n  for (const chunk of textArray) {\n    const [textPart, , y] = chunk;\n    ctx.fillText(textPart, canvasWidth / 2, y + position + 2.5 * scaleFactor);\n  }\n}\n\nfunction getClosest(arr, index1, index2, target) {\n  if (target - arr[index1] >= arr[index2] - target) return index2;\n  return index1;\n}\n\nfunction findClosest(arr, target) {\n  const n = arr.length;\n\n  if (target <= arr[0]) return 0;\n  if (target >= arr[n - 1]) return n - 1;\n\n  let start = 0;\n  let end = n;\n  let mid = 0;\n  while (start < end) {\n    mid = (start + end) / 2;\n\n    if (arr[mid] === target) return mid;\n\n    if (target < arr[mid]) {\n      if (mid > 0 && target > arr[mid - 1])\n        return getClosest(arr, mid - 1, mid, target);\n      end = mid;\n    } else {\n      if (mid < n - 1 && target < arr[mid + 1])\n        return getClosest(arr, mid, mid + 1, target);\n      start = mid + 1;\n    }\n  }\n\n  return mid;\n}\n\nfunction getCut() {\n  const cutArr = ['v', 'h'];\n  return cutArr[Math.round(Math.random())];\n}\n\nfunction findImgPair(arr, target) {\n  let start = 0;\n  let end = arr.length - 1;\n  let i = start;\n  let j = end;\n  let minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n  while (start <= end) {\n    if (arr[start] + arr[end] > target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        // update fetched pair and matching cost\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      end -= 1;\n    } else if (arr[start] + arr[end] <= target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      start += 1;\n    } else {\n      // best pair (m === 0) found\n      i = start;\n      j = end;\n      break;\n    }\n  }\n  const randomNumber = Math.round(Math.random());\n  if (randomNumber) return [i, j];\n  return [j, i];\n}\n\nfunction getAspectRatio(cut, ar1, ar2) {\n  if (cut === 'v') return ar1 + ar2;\n  return (ar1 * ar2) / (ar1 + ar2);\n}\n\nfunction downscaleImage(image, newWidth, newHeight, fileType) {\n  const canvas = document.createElement('canvas');\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, newWidth, newHeight);\n  return canvas.toDataURL(fileType);\n}\n\n// function convertImage(image, newWidth, newHeight) {\n//   const canvas = document.createElement('canvas');\n//   canvas.width = newWidth;\n//   canvas.height = newHeight;\n//   const ctx = canvas.getContext('2d');\n//   ctx.drawImage(image, 0, 0, newWidth, newHeight);\n//   return canvas.toDataURL('image/webp');\n// }\n\nfunction optimizeImage(image, newWidth, newHeight) {\n  console.time('getImages optimize');\n  const canvas = document.createElement('canvas');\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, newWidth, newHeight);\n  const dataURL = canvas.toDataURL('image/webp', 0.3);\n  console.timeEnd('getImages optimize');\n  return dataURL;\n}\n\nfunction resizeImages(originalImages, maxWidth, handleImages, addImagesToDB) {\n  const tempImages = [];\n  originalImages.forEach((origImage) => {\n    const image = new Image();\n    image.onload = () => {\n      const { title, aspectRatio, type } = origImage;\n      const dataurl = downscaleImage(\n        image,\n        maxWidth,\n        maxWidth / aspectRatio,\n        origImage.type\n      );\n      const tempImage = {\n        title,\n        src: dataurl,\n        naturalHeight: maxWidth / aspectRatio,\n        naturalWidth: maxWidth,\n        aspectRatio,\n        type,\n      };\n      tempImages.push(tempImage);\n      handleImages((imgs) => {\n        const ind = imgs.findIndex((elem) => elem.title === origImage.title);\n        return [...imgs.slice(0, ind), tempImage, ...imgs.slice(ind + 1)];\n      });\n      addImagesToDB(tempImage);\n    };\n    image.src = origImage.src;\n  });\n}\n\nfunction convertBase64(file) {\n  console.log('convert base64', file);\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\n\nfunction convertBase64String(file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsD(new Blob(file));\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\n\nasync function handleImageLoad(\n  event,\n  handleImageCount,\n  handleNewImageCount,\n  handleImageData\n) {\n  if (event.target.files) {\n    handleImageCount((cnt) => cnt + event.target.files.length);\n    handleNewImageCount(event.target.files.length);\n    const files = Array.from(event.target.files);\n    files.map(async (file) => {\n      const image = new Image();\n      image.onload = (e) => {\n        const { naturalWidth, naturalHeight, src } = e.target;\n        const title = `${Date.now()}-${file.name}`;\n        console.log('handle image load', title);\n        const aspectRatio = naturalWidth / naturalHeight;\n        const imageDetail = {\n          title,\n          src,\n          naturalHeight,\n          naturalWidth,\n          aspectRatio,\n          type: file.type,\n          file,\n        };\n        handleImageData(imageDetail);\n      };\n      image.src = URL.createObjectURL(file);\n    });\n    files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n  }\n}\n\nfunction getCollageDimension(maxW, maxH, a) {\n  const origAR = maxW / maxH;\n  if (origAR < a) return [maxW, maxW / a];\n  if (origAR > a) return [maxH * a, maxH];\n  return [maxW, maxH];\n}\n\nfunction wrapText(text, x, y, maxWidth, fontSize, lineHeight) {\n  // First, start by splitting all of our text into words,\n  // but splitting it into an array split by spaces\n  if (text.length === 0) return [];\n  const paddingX = 1; // 8px on both sided\n  const textCanvas = document.createElement('canvas');\n  textCanvas.width = maxWidth - 2 * paddingX * 8;\n  textCanvas.height = 1000;\n  const ctx = textCanvas.getContext('2d');\n  ctx.font = `${fontSize}px Arial`;\n  ctx.textAlign = 'center';\n  const tempX = x;\n  let tempY = y;\n  const words = text.split(' ');\n  let line = ''; // This will store the text of the current line\n  let testLine = ''; // This will store the text when we add a word, to test if it's too long\n  const lineArray = []; // This is an array of lines, which the function will return\n\n  // Lets iterate over each word\n  for (let n = 0; n < words.length; n += 1) {\n    // Create a test line, and measure it..\n    testLine += `${words[n]} `;\n    const metrics = ctx.measureText(testLine);\n    const testWidth = metrics.width;\n    console.log(\n      'wrap text ',\n      line,\n      testLine,\n      testWidth,\n      textCanvas.width,\n      ctx.letterSpacing\n    );\n    // If the width of this test line is more than the max width\n    if (testWidth > textCanvas.width && n > 0) {\n      // Then the line is finished, push the current line into \"lineArray\"\n      lineArray.push([line, tempX, tempY]);\n      // Increase the line height, so a new line is started\n      tempY += lineHeight;\n      // Update line and test line to use this word as the first word on the next line\n      line = `${words[n]} `;\n      testLine = `${words[n]} `;\n    } else {\n      // If the test line is still less than the max width, then add the word to the current line\n      line += `${words[n]} `;\n    }\n    // If we never reach the full max width, then there is only one line..\n    // so push it into the lineArray so we return something\n    if (n === words.length - 1) {\n      lineArray.push([line, tempX, tempY]);\n    }\n  }\n  // Return the line array\n  return lineArray;\n}\n\nfunction getTextHeight(\n  text,\n  x,\n  y,\n  maxWidth,\n  fontSize,\n  lineHeight,\n  scaleFactor\n) {\n  const lineArray = wrapText(\n    text,\n    x,\n    y,\n    maxWidth,\n    fontSize * scaleFactor,\n    lineHeight * scaleFactor\n  );\n  return lineArray.length * lineHeight * scaleFactor;\n}\n\nfunction getImageDimensions(\n  paperWidth,\n  paperHeight,\n  text,\n  x,\n  y,\n  fontSize,\n  lineHeight,\n  scaleFactor,\n  aspectRatio\n) {\n  const textHeight = getTextHeight(\n    text,\n    x,\n    y,\n    paperWidth,\n    fontSize,\n    lineHeight,\n    scaleFactor\n  );\n  return getCollageDimension(paperWidth, paperHeight - textHeight, aspectRatio);\n}\n\nconst convertToRGBA = (value) =>\n  `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nfunction optimizeDimensions(maxPrintWidth, maxPrintHeight, problematicNodes) {\n  const ar = maxPrintWidth / maxPrintHeight;\n  const optimumTreeSizes = problematicNodes.map((pn) => {\n    const newRootWidth =\n      (maxPrintWidth * pn.value.naturalWidth) / pn.value.width;\n    const newRootHeight = newRootWidth / ar;\n    // node with highest score needs smalles tree. smallest tree will satisfy all constraints\n    const score = maxPrintWidth - newRootWidth + maxPrintHeight - newRootHeight;\n    return [score, [newRootWidth, newRootHeight]];\n  });\n  optimumTreeSizes.sort((a, b) => b[0] - a[0]);\n  console.log(\n    'optimun tree sizes',\n    optimumTreeSizes,\n    problematicNodes,\n    maxPrintWidth,\n    maxPrintHeight\n  );\n  return optimumTreeSizes[0][1];\n}\n\nexport default {\n  getCut,\n  findClosest,\n  findImgPair,\n  getAspectRatio,\n  handleImageLoad,\n  resizeImages,\n  wrapText,\n  convertToRGBA,\n  getCollageDimension,\n  downscaleImage,\n  convertBase64,\n  convertBase64String,\n  textCanvasDraw,\n  getTextHeight,\n  getImageDimensions,\n  optimizeDimensions,\n  optimizeImage,\n};\n","import Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\n\nexport default function TextDisplay(textArray, position) {\n  return (\n    <>\n      {\n        // eslint-disable-next-line react/destructuring-assignment\n        textArray.map((chunk) => (\n          <Typography\n            key={chunk[2]}\n            sx={{\n              width: '100%',\n              position: 'absolute',\n              top: position + chunk[2],\n              bgcolor: alpha('#1c1c1c', 0.7),\n              paddingX: 1,\n              color: 'button.main',\n              textAlign: 'center',\n              fontFamily: 'Arial',\n              fontSize: '20px',\n              lineHeight: '25px',\n              letterSpacing: 'normal',\n            }}\n          >\n            {chunk[0]}\n          </Typography>\n        ))\n      }\n    </>\n  );\n}\n","import Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Tooltip from '@mui/material/Tooltip';\nimport { alpha } from '@mui/material/styles';\nimport helpers from 'components/collage/helpers';\n\nexport default class Node {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n\n  fromObject(obj) {\n    if (obj != null) {\n      this.value = obj.value;\n      if (obj.left != null) {\n        this.left = new Node(obj.left.value);\n        this.left.fromObject(obj.left);\n      }\n      if (obj.right != null) {\n        this.right = new Node(obj.right.value);\n        this.right.fromObject(obj.right);\n      }\n      return this;\n    }\n    return null;\n  }\n\n  getScore() {\n    if ('cut' in this.value) {\n      return [...this.left.getScore(), ...this.right.getScore()];\n    }\n\n    return [this.value.width + this.value.height];\n  }\n\n  display() {\n    let output = [];\n    const { cut, title, aspectRatio } = this.value;\n    if (this === null) return null;\n    if ('cut' in this.value) output.push([cut, aspectRatio]);\n    if ('title' in this.value) output.push([title, aspectRatio]);\n    if (this.left !== null) output = output.concat(this.left.display());\n    if (this.right !== null) output = output.concat(this.right.display());\n    return output;\n  }\n\n  copy() {\n    if (this === null) return null;\n    const copyNode = new Node({ ...this.value });\n    if (this.left != null) copyNode.left = this.left.copy();\n    if (this.right != null) copyNode.right = this.right.copy();\n    return copyNode;\n  }\n\n  replaceImages(newImages) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const findIndex = newImages.findIndex(\n          (elem) => elem.title === this.value.title\n        );\n        const origImage = newImages[findIndex];\n        this.value.src = origImage.src;\n      }\n      if (this.left != null) this.left.replaceImages(newImages);\n      if (this.right != null) this.right.replaceImages(newImages);\n    }\n  }\n\n  removeImageData() {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const { src, ...rest } = this.value;\n        this.value = rest;\n      }\n      if (this.left != null) this.left.removeImageData();\n      if (this.right != null) this.right.removeImageData();\n    }\n  }\n\n  addImageData(imageData) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const image = imageData.find((elem) => elem.title === this.value.title);\n        this.value.src = image.src;\n      }\n      if (this.left != null) this.left.addImageData(imageData);\n      if (this.right != null) this.right.addImageData(imageData);\n    }\n  }\n\n  RenderImage(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    const { width, title, src, x, y } = this.value;\n\n    const newX = x + xOffset;\n    const newY = y + yOffset;\n    console.log('rendering image', title);\n    return (\n      <>\n        <Box\n          key={title}\n          component=\"img\"\n          title={title}\n          alt={title}\n          width={width}\n          onLoad={() => {\n            handleCollageImageLoad();\n            console.log('loaded', title);\n          }}\n          src={src}\n          sx={{\n            position: 'absolute',\n            padding: `${padding}px`,\n            borderRadius: `${borderRadius}px`,\n            left: this.value.x + xOffset,\n            top: this.value.y + yOffset,\n          }}\n        />\n        {delImg === true ? (\n          <Tooltip title=\"Remove Image\">\n            <IconButton\n              size=\"medium\"\n              sx={{\n                color: alpha('#000', 0.7),\n                bgcolor: alpha('#fff', 0.5),\n                position: 'absolute',\n                top: newY + padding,\n                left: newX + padding,\n                padding: `${padding}px`,\n                borderRadius: '0 0 5px 0',\n              }}\n              onClick={() => handleRemoveImage(title)}\n            >\n              <DeleteIcon size=\"medium\" />\n            </IconButton>\n          </Tooltip>\n        ) : null}\n      </>\n    );\n  }\n\n  DOMDisplay(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    console.log(\n      'node dom display',\n      padding,\n      borderRadius,\n      delImg,\n      handleRemoveImage,\n      yOffset,\n      xOffset,\n      this.value.title\n    );\n    const { cut } = this.value;\n    if (this === null) return null;\n    if (cut) {\n      console.log(this.right, this.left);\n      return (\n        <>\n          {this.left != null\n            ? this.left.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n          {this.right != null\n            ? this.right.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n        </>\n      );\n    }\n    if ('title' in this.value)\n      return this.RenderImage(\n        padding,\n        borderRadius,\n        delImg,\n        handleRemoveImage,\n        yOffset,\n        xOffset,\n        handleCollageImageLoad\n      );\n    return null;\n  }\n\n  ResizeImage(image) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = this.value.naturalWidth;\n    tempCanvas.height = this.value.naturalHeight;\n    const tempCtx = tempCanvas.getContext('2d');\n    let width = this.value.naturalWidth;\n    let height = this.value.naturalHeight;\n    let newWidth;\n    let newHeight;\n    const scaleFactor = Math.floor(\n      Math.log2(this.value.naturalWidth / this.value.width)\n    );\n    if (scaleFactor === 0) {\n      tempCtx.drawImage(\n        image,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    } else {\n      for (let i = 0; i < scaleFactor; i += 1) {\n        newWidth = width >> 1; // eslint-disable-line no-bitwise\n        newHeight = newWidth / this.value.aspectRatio; // eslint-disable-line no-bitwise\n        if (i === 0) {\n          tempCtx.drawImage(\n            image,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        } else {\n          tempCtx.drawImage(\n            tempCanvas,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        }\n        width = newWidth;\n        height = newHeight;\n      }\n\n      tempCtx.drawImage(\n        tempCanvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    }\n    return tempCanvas;\n  }\n\n  ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset) {\n    const x = this.value.x + padding + xOffset;\n    const y = this.value.y + padding + yOffset;\n    const clipwidth = this.value.width - 2 * padding;\n    const clipheight = clipwidth / this.value.aspectRatio;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + clipwidth - radius, y);\n    ctx.quadraticCurveTo(x + clipwidth, y, x + clipwidth, y + radius);\n    ctx.lineTo(x + clipwidth, y + clipheight - radius);\n    ctx.quadraticCurveTo(\n      x + clipwidth,\n      y + clipheight,\n      x + clipwidth - radius,\n      y + clipheight\n    );\n    ctx.lineTo(x + radius, y + clipheight);\n    ctx.quadraticCurveTo(x, y + clipheight, x, y + clipheight - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.clip();\n\n    ctx.drawImage(\n      tempCanvas,\n      0,\n      0,\n      this.value.width,\n      this.value.height,\n      x,\n      y,\n      clipwidth,\n      clipheight\n    );\n    ctx.restore();\n  }\n\n  CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset) {\n    if ('cut' in this.value) {\n      this.left.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n      this.right.CanvasDisplay(\n        canvasElement,\n        padding,\n        radius,\n        yOffset,\n        xOffset\n      );\n    }\n\n    if ('title' in this.value) {\n      const ctx = canvasElement.getContext('2d');\n      const newImg = new Image();\n      newImg.onload = () => {\n        const tempCanvas = this.ResizeImage(newImg);\n        const tempCtx = tempCanvas.getContext('2d');\n        this.ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset);\n        tempCtx.clearRect(0, 0, tempCanvas.width, tempCanvas.height);\n      };\n      newImg.src = this.value.src;\n    }\n  }\n\n  generate(images, tar, imageCount) {\n    const targetAspectRatioArr = images.map(\n      (image) => image.naturalWidth / image.naturalHeight\n    );\n    if (imageCount < 1) return [];\n    if (imageCount === 1) {\n      const closestIndex = helpers.findClosest(targetAspectRatioArr, tar);\n      this.value = images[closestIndex];\n      this.left = null;\n      this.right = null;\n      return [\n        ...images.slice(0, closestIndex),\n        ...images.slice(closestIndex + 1),\n      ];\n    }\n\n    const cut = helpers.getCut();\n    this.value = { cut, targetAspectRatio: tar };\n    if (imageCount === 2) {\n      const [leftIndex, rightIndex] = helpers.findImgPair(\n        targetAspectRatioArr,\n        tar\n      );\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        images[leftIndex].aspectRatio,\n        images[rightIndex].aspectRatio\n      );\n      this.left = new Node(images[leftIndex]);\n      this.right = new Node(images[rightIndex]);\n      return images.filter(\n        (item, index) => ![leftIndex, rightIndex].includes(index)\n      );\n    }\n\n    let restImages;\n    let targetAspectRatio;\n    this.left = new Node({ cut: helpers.getCut() });\n    //  this.right = new Node({ cut: helpers.getCut() });\n    this.right = new Node({ cut: this.left.value.cut === 'v' ? 'h' : 'v' });\n\n    targetAspectRatio = tar / 2;\n    if (cut === 'v') {\n      targetAspectRatio = tar * 2;\n    }\n\n    const randomNumber = Math.round(Math.random());\n    const [first, second] = randomNumber\n      ? ['left', 'right']\n      : ['right', 'left'];\n    restImages = this[first].generate(\n      images,\n      targetAspectRatio,\n      imageCount - Math.floor(imageCount / 2)\n    );\n    restImages = this[second].generate(\n      restImages,\n      targetAspectRatio,\n      Math.floor(imageCount / 2)\n    );\n\n    this.value.aspectRatio = helpers.getAspectRatio(\n      this.value.cut,\n      this.left.value.aspectRatio,\n      this.right.value.aspectRatio\n    );\n\n    return restImages;\n  }\n\n  adjust(th) {\n    let adjustments = 0;\n    if (this === null) return adjustments;\n\n    if (this.left !== null && this.right !== null) {\n      if (this.value.aspectRatio > this.value.targetAspectRatio * th) {\n        this.value.cut = 'h';\n        adjustments += 1;\n      }\n      if (this.value.aspectRatio < this.value.targetAspectRatio / th) {\n        this.value.cut = 'v';\n        adjustments += 1;\n      }\n\n      if (this.value.cut === 'v') {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n      } else {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n      }\n      adjustments += this.left.adjust(th) + this.right.adjust(th);\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        this.left.value.aspectRatio,\n        this.right.value.aspectRatio\n      );\n    }\n\n    return adjustments;\n  }\n\n  addSize(parentWidth, parentHeight, parentX, parentY, parentCut, nodeType) {\n    if (parentCut === 'v') {\n      this.value.height = parentHeight;\n      this.value.width = this.value.height * this.value.aspectRatio;\n    } else {\n      this.value.width = parentWidth;\n      this.value.height = this.value.width / this.value.aspectRatio;\n    }\n\n    if (nodeType === 'left') {\n      this.value.x = parentX;\n      this.value.y = parentY;\n    } else if (parentCut === 'h') {\n      this.value.y = parentY + parentHeight - this.value.height;\n      this.value.x = parentX;\n    } else {\n      this.value.x = parentX + parentWidth - this.value.width;\n      this.value.y = parentY;\n    }\n\n    if (this.left !== null) {\n      this.left.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'left'\n      );\n    }\n    if (this.right !== null) {\n      this.right.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'right'\n      );\n    }\n  }\n\n  validateAddSize() {\n    if ('cut' in this.value) {\n      const [lV, lPN] = this.left.validateAddSize();\n      const [rV, rPN] = this.right.validateAddSize();\n      return [lV && rV, lPN.concat(rPN)];\n    }\n    if ('title' in this.value) {\n      const valid =\n        this.value.width <= this.value.naturalWidth &&\n        this.value.height <= this.value.naturalHeight;\n      return valid ? [valid, []] : [valid, [{ ...this }]];\n    }\n    return false;\n  }\n}\n","import Box from '@mui/material/Box';\nimport TextDisplay from 'components/collage/TextDisplay';\nimport Node from './node';\nimport helpers from './helpers';\n\nexport default class BinaryTree {\n  constructor(value) {\n    if (this.root === undefined) {\n      this.root = new Node(value);\n      return this;\n    }\n  }\n\n  addOptions(options) {\n    this.root.options = { ...options };\n  }\n\n  display() {\n    if (this.root !== null) {\n      return this.root.display();\n    }\n    return null;\n  }\n\n  replaceImages(newImages) {\n    if (this.root !== null) {\n      this.root.replaceImages(newImages);\n    }\n  }\n\n  fromObject(obj) {\n    if (obj.root != null) this.root.fromObject(obj.root);\n    return this;\n  }\n\n  removeImageData() {\n    const tempTree = this.copy();\n    if (this.root !== null) {\n      tempTree.root.removeImageData();\n    }\n    return tempTree;\n  }\n\n  addImageData(imageData) {\n    if (this.root !== null) {\n      this.root.addImageData(imageData);\n    }\n  }\n\n  DOMDisplay(\n    canvasWidth,\n    canvasHeight,\n    delImg,\n    handleRemoveImage,\n    handleCollageImageLoad\n  ) {\n    const { text, topText, padding, borderRadius, color } = this.root.options;\n    const { width, height } = this.root.value;\n    const lA = helpers.wrapText(text, 0, 0, canvasWidth, 20, 25);\n    const textHeight = text.length ? lA.length * 25 : 0;\n    let yOffset = (canvasHeight - textHeight - height) / 2;\n    const xOffset = (canvasWidth - width) / 2;\n    let position = canvasHeight - textHeight;\n    if (topText && text.length > 0) {\n      yOffset += textHeight;\n      position = 0;\n    }\n\n    console.log(\n      'tree dom display',\n      canvasWidth,\n      canvasHeight,\n      height,\n      this.root.options,\n      textHeight,\n      yOffset,\n      xOffset,\n      width,\n      this,\n      lA\n    );\n    if (this.root !== null) {\n      return (\n        <Box sx={{ backgroundColor: 'white' }}>\n          <Box\n            width={canvasWidth}\n            height={canvasHeight}\n            sx={{\n              position: 'relative',\n              backgroundColor: helpers.convertToRGBA(color),\n            }}\n          >\n            {this.root.DOMDisplay(\n              padding,\n              borderRadius,\n              delImg,\n              handleRemoveImage,\n              yOffset,\n              xOffset,\n              handleCollageImageLoad\n            )}\n            {text.length ? TextDisplay(lA, position) : null}\n          </Box>\n        </Box>\n      );\n    }\n    return null;\n  }\n\n  CanvasDisplay(canvasWidth, canvasHeight, canvasElement, scaleFactor) {\n    if (this.root !== null) {\n      const { text, topText, padding, borderRadius, color } = this.root.options;\n      const { width, height } = this.root.value;\n      const lA = helpers.wrapText(\n        text,\n        0,\n        0,\n        canvasWidth,\n        20 * scaleFactor,\n        25 * scaleFactor\n      );\n      const textHeight = text.length ? lA.length * 25 * scaleFactor : 0;\n      let yOffset = (canvasHeight - textHeight - height) / 2;\n      const xOffset = (canvasWidth - width) / 2;\n      let position = canvasHeight - textHeight;\n      if (topText && text.length > 0) {\n        yOffset += textHeight;\n        position = 0;\n      }\n      const ctx = canvasElement.getContext('2d');\n      ctx.fillStyle = 'white';\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      ctx.fillStyle = helpers.convertToRGBA(color);\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      console.log('canvas context', ctx);\n      this.root.CanvasDisplay(\n        canvasElement,\n        padding * scaleFactor,\n        borderRadius * scaleFactor,\n        yOffset,\n        xOffset\n      );\n      helpers.textCanvasDraw(\n        ctx,\n        lA,\n        position,\n        scaleFactor,\n        canvasWidth,\n        textHeight\n      );\n    }\n  }\n\n  generateScore() {\n    const score = this.root.getScore();\n    // console.log('from', ...score);\n    return Math.min(...score);\n  }\n\n  generateCollageTree(images, tar) {\n    this.root.generate(images, tar, images.length);\n  }\n\n  adjust(th) {\n    let trys = 0;\n    let bestAdjust = this.copy();\n    let bestAspectRatio = this.root.value.aspectRatio;\n    const tolerableDifference = this.root.value.targetAspectRatio * (1 - th);\n    let ajstCnt = 1000;\n    while (trys < 100 && ajstCnt > 0) {\n      ajstCnt = this.root.adjust(th);\n      trys += 1;\n      const diff =\n        this.root.value.aspectRatio - this.root.value.targetAspectRatio;\n      if (\n        Math.abs(diff) <\n        Math.abs(bestAspectRatio - this.root.value.targetAspectRatio)\n      ) {\n        bestAspectRatio = this.root.value.aspectRatio;\n        bestAdjust = this.copy();\n      }\n      if ((diff > 0 && diff < tolerableDifference) || diff === 0) break;\n    }\n\n    return [bestAspectRatio, bestAdjust];\n  }\n\n  copy() {\n    const copyTree = new BinaryTree({});\n    copyTree.root = this.root.copy();\n    copyTree.root.options = { ...this.root.options };\n    return copyTree;\n  }\n\n  addSize(canvasWidth, canvasHeight, aspectRatio) {\n    const [maxW, maxH] = helpers.getCollageDimension(\n      canvasWidth,\n      canvasHeight,\n      aspectRatio\n    );\n    this.root.value.width = maxW;\n    this.root.value.height = maxH;\n    console.log('add size', this.root.value.width, this.root.value.height);\n    this.root.value.x = 0;\n    this.root.value.y = 0;\n    const { width, height, x, y, cut } = this.root.value;\n    if (this.root.left !== null)\n      this.root.left.addSize(width, height, x, y, cut, 'left');\n    if (this.root.right !== null)\n      this.root.right.addSize(width, height, x, y, cut, 'right');\n  }\n\n  validateAddSize() {\n    return this.root.validateAddSize();\n  }\n}\n","import BinaryTree from './binaryTree';\nimport helpers from './helpers';\n\nfunction findBestAdjustTree(images, tolerance, imageWidth, imageHeight) {\n  const sortedImages = images.sort((a, b) =>\n    a.aspectRatio <= b.aspectRatio ? 1 : -1\n  );\n  const collageArray = [];\n  for (let i = 0; i < 100; i += 1) {\n    const imgTree = new BinaryTree({ cut: helpers.getCut() });\n    imgTree.generateCollageTree(sortedImages, imageWidth / imageHeight);\n\n    collageArray.push(imgTree.adjust(1 - tolerance));\n  }\n\n  collageArray.sort((a, b) => {\n    const aspR = imageWidth / imageHeight;\n    const diffA = Math.abs(a[0] - aspR);\n    const diffB = Math.abs(b[0] - aspR);\n    return diffA - diffB;\n  });\n\n  const bAR = collageArray.filter(\n    (elem) => elem[0].toFixed(1) === collageArray[0][0].toFixed(1)\n  );\n  console.log('from bar', bAR);\n  let maxScore = 0;\n  let maxElem = {};\n  bAR.forEach((element) => {\n    element[1].addSize(\n      1000 * (imageWidth / imageHeight),\n      1000,\n      imageWidth / imageHeight\n    );\n    const score = element[1].generateScore();\n    if (score > maxScore) {\n      maxScore = score;\n      maxElem = element;\n    }\n  });\n  return maxElem;\n}\n\nexport default { findBestAdjustTree };\n","import { useEffect, useState, useLayoutEffect } from 'react';\nimport useDimensions from 'hooks/collage/dimensions';\nimport useOptions from 'hooks/collage/options';\nimport useActions from 'hooks/collage/actions';\nimport useImages from 'hooks/collage/images';\nimport useTree from 'hooks/collage/tree';\n\nimport helpers from 'components/collage/helpers';\nimport collageapi from 'api/collage';\n\nexport default function useBase(initialValue) {\n  console.log('use base', initialValue);\n  const [details, setDetails] = useState(initialValue);\n  const constants = {\n    defaultCollageName: 'Untitled',\n    defaultCollageType: 'A4',\n    tolerance: 0.1,\n    resizeImageWidth: 1500,\n    fontSize: 20,\n    lineHeight: 25,\n    thumbnailHeight: 500,\n    paperSizes: {\n      A4: { width: 2480, height: 3508, text: 'A4 Potrait' },\n      A3: { width: 3508, height: 4961, text: 'A3 Potrait' },\n      A4LandScape: { height: 2480, width: 3508, text: 'A4 LandScape' },\n      A3LandScape: { height: 3508, width: 4961, text: 'A3 LandScape' },\n      FBCoverDesktop: { height: 740, width: 2000, text: 'FB Cover Desktop' },\n      WhatsappStatus: { height: 1920, width: 1080, text: 'Whatsapp Status' },\n    },\n  };\n\n  const [collageName, setCollageName] = useState(constants.defaultCollageName);\n  const [collageType, setCollageType] = useState(constants.defaultCollageType);\n\n  const handleCollageTypeChange = (ct) => setCollageType(ct);\n  const getAspectRatio = () =>\n    constants.paperSizes[collageType].width /\n    constants.paperSizes[collageType].height;\n\n  const handleNameChange = (newName) => setCollageName(newName);\n\n  const [uploadedImages, setUploadedImages] = useState(0);\n  const dimensions = useDimensions(constants);\n  const options = useOptions();\n  const actions = useActions();\n  const images = useImages(details);\n\n  const treeState = useTree(details, options.setOptions);\n  const [thumbnail, setThumbnail] = useState({});\n  const collageID =\n    'details' in initialValue && 'collage_id' in initialValue.details\n      ? initialValue.details.collage_id\n      : Date.now();\n\n  useLayoutEffect(() => {\n    setDetails(initialValue);\n    if ('details' in initialValue) {\n      if (\n        'name' in initialValue.details &&\n        collageName === constants.defaultCollageName\n      ) {\n        console.log('setting collage name', initialValue.details.name);\n        setCollageName(initialValue.details.name);\n      }\n      if (\n        'collage_type' in initialValue.details &&\n        collageType === constants.defaultCollageType\n      ) {\n        console.log('setting collage name', initialValue.details.collage_type);\n        setCollageType(initialValue.details.collage_type);\n      }\n    }\n  }, [initialValue]);\n\n  const initialStatus = () => ({\n    details: {\n      text: 'Saving Details',\n      status: 'pending',\n    },\n    images: {\n      text: `Saving Images (${uploadedImages} / ${images.images.length})`,\n      status: 'pending',\n    },\n    finalizing: {\n      text: 'Finalizing Collage',\n      status: 'pending',\n    },\n  });\n  const [saveStatus, setSaveStatus] = useState(initialStatus);\n\n  const updateStatus = (key, status) => {\n    const value = { ...saveStatus[key], status };\n    setSaveStatus((st) => ({ ...st, [key]: value }));\n  };\n\n  const updateImagesStatus = () => {\n    const imagesText = `Saving Images (${uploadedImages} / ${images.imgCount})`;\n    let value = { ...saveStatus.images, text: imagesText };\n    if (uploadedImages === images.imgCount && images.imgCount > 0) {\n      value = { ...value, status: 'done' };\n    }\n    setSaveStatus((st) => ({ ...st, images: value }));\n  };\n\n  useEffect(() => {\n    console.log('useeffect 3');\n    updateImagesStatus();\n  }, [uploadedImages, images.imgCount]);\n\n  const handleClear = async () => {\n    const clearPromises = await Promise.allSettled([\n      treeState.clear(),\n      images.clear(),\n      options.clear(),\n    ]);\n\n    for (let i = 0; i < clearPromises.length; i += 1) {\n      if (\n        clearPromises[i].status === 'fulfilled' ||\n        clearPromises[i].value.ok === true\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    console.log('aspect ratio changed', getAspectRatio());\n    const ar = getAspectRatio();\n    console.log('useeffect tree', treeState.tree);\n    if (\n      Object.keys(treeState.tree).length > 0 &&\n      'aspectRatio' in treeState.tree.root.value &&\n      treeState.tree.root.value.aspectRatio !== ar\n    ) {\n      console.log(\n        'useeffect vals',\n        treeState.tree,\n        ar,\n        treeState.tree.root.value.aspectRatio\n      );\n      const newAspectRatioTree = treeState.tree.copy();\n      newAspectRatioTree.value = {\n        ...newAspectRatioTree.value,\n        aspectRatio: ar,\n      };\n      newAspectRatioTree.root.value = {\n        ...newAspectRatioTree.root.value,\n        targetAspectRatio: ar,\n      };\n      treeState.setTree(newAspectRatioTree);\n      if (images.images.length > 1) actions.setRefresh(true);\n    }\n  }, [collageType]);\n\n  useEffect(() => {\n    const ar = getAspectRatio();\n    const { maxWidth, maxHeight } = dimensions;\n    const [w, h] = helpers.getCollageDimension(\n      maxWidth - 10,\n      maxHeight - 30,\n      ar\n    );\n    dimensions.setWidth(w);\n    dimensions.setHeight(h);\n  }, [dimensions.maxWidth, dimensions.maxHeight, collageType]);\n\n  useEffect(() => {\n    console.log('useeffect 2');\n    if (\n      (images.newImgCount > 0 &&\n        images.newImgCount === images.newImagesLoaded) ||\n      actions.refresh\n    ) {\n      images.setNewImageCount(0);\n      images.setNewImagesLoaded(0);\n      treeState.reAdjust(\n        images.images,\n        constants.tolerance,\n        dimensions.width,\n        dimensions.height - dimensions.textHeight,\n        options.options\n      );\n      actions.setRefresh(false);\n    }\n  }, [images.newImgCount, images.newImagesLoaded, actions.refresh]);\n\n  const collageCallback = () => {};\n\n  const handleRemoveImage = (imgTitle) => {\n    const newImagesArr = images.remove(imgTitle);\n    treeState.reAdjust(\n      newImagesArr,\n      constants.tolerance,\n      dimensions.imageWidth,\n      dimensions.imageHeight,\n      options.options\n    );\n  };\n\n  const generateThumbnail = () => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    const thumbnailWidth = constants.thumbnailHeight * ar;\n    const thumbnailCanvas = document.createElement('canvas');\n    const thumbnailTree = treeState.tree.copy();\n    thumbnailTree.root.options.text = '';\n    thumbnailTree.addSize(thumbnailWidth, constants.thumbnailHeight, ar);\n    thumbnailCanvas.width = thumbnailWidth;\n    thumbnailCanvas.height = constants.thumbnailHeight;\n    thumbnailTree.CanvasDisplay(\n      thumbnailWidth,\n      constants.thumbnailHeight,\n      thumbnailCanvas,\n      thumbnailWidth / dimensions.width\n    );\n\n    // create and update details\n    const thumbnailDetails = {\n      title: `thumbnail-${collageID}.png`,\n      src: '',\n      naturalHeight: constants.thumbnailHeight,\n      naturalWidth: thumbnailWidth,\n      aspectRatio: ar,\n      type: 'image/png',\n    };\n    setThumbnail(thumbnailDetails);\n    return [thumbnailDetails, thumbnailCanvas];\n  };\n\n  const uploadCollageDetails = (thumbnailDetails, name) => {\n    const dets = {\n      collage_id: collageID.toString(),\n      name,\n      collage_type: collageType,\n      created_at: '2021-02-18T21:54:42.123Z',\n      last_updated_at: '2021-02-18T21:54:45.123Z',\n      images: images.getImageData(images.images),\n      tree: treeState.tree.removeImageData(),\n      thumbnail: thumbnailDetails,\n    };\n    // TODO [33] Validate collageDetails\n    console.log(dets);\n    return collageapi.newCollage(collageID, dets);\n  };\n\n  const uploadCallback = () => {\n    console.log('Setting uploaded images to ', uploadedImages + 1);\n    setUploadedImages((cnt) => cnt + 1);\n  };\n\n  const uploadCollageImages = (thumbnailCanvas, imageURLS) => {\n    const imagePromises = Object.keys(imageURLS).map(async (item) => {\n      const thumbnailKey = `thumbnail-${collageID}.jpg`;\n      if (item === thumbnailKey) {\n        const thumbnailPromise = thumbnailCanvas.toBlob(async (blob) => {\n          setThumbnail(blob);\n          return collageapi.upload(imageURLS[thumbnailKey], blob);\n        });\n        return thumbnailPromise;\n      }\n\n      const url = imageURLS[item];\n      const Img = images.images.find((img) => img.title === item);\n      const resp = await collageapi.upload(url, Img.file);\n      uploadCallback();\n      console.log('image upload resp', resp);\n      return resp;\n    });\n\n    return imagePromises;\n  };\n\n  const newCollage = async (name) => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    console.log('in generate thumbnail', ar, 500 * ar, 500);\n    const [thumbnailDetails, thumbnailCanvas] = generateThumbnail();\n    updateStatus('details', 'running');\n    const imageURLS = await uploadCollageDetails(thumbnailDetails, name);\n    updateStatus('details', 'done');\n    updateStatus('images', 'running');\n    const imagePromises = uploadCollageImages(thumbnailCanvas, imageURLS);\n    const uploadPromises = await Promise.allSettled(imagePromises);\n    // updateStatus('images', 'done');\n    updateStatus('finalizing', 'running');\n    let uploadStatus;\n    for (let i = 0; i < uploadPromises.length; i += 1) {\n      if (\n        uploadPromises[i].status === 'fulfilled' ||\n        uploadPromises[i].value.ok === true\n      ) {\n        uploadStatus = true;\n        updateStatus('finalizing', 'done');\n      } else {\n        uploadStatus = false;\n        updateStatus('finalizing', 'failed');\n        break;\n      }\n    }\n    return uploadStatus;\n  };\n\n  useEffect(() => {\n    if (\n      options.options.text.length > 0 &&\n      Object.keys(treeState.tree).length > 0\n    ) {\n      const tH = helpers.wrapText(\n        options.options.text,\n        0,\n        0,\n        dimensions.width,\n        20,\n        25\n      );\n      dimensions.setTextHeight(tH.length * 25);\n      const [w, h] = helpers.getCollageDimension(\n        dimensions.width,\n        dimensions.height - tH.length * 25,\n        treeState.tree.root.value.aspectRatio\n      );\n      dimensions.setImageWidth(w);\n      dimensions.setImageHeight(h);\n    } else {\n      dimensions.setTextHeight(0);\n      options.handlePositionChange(true);\n      dimensions.setImageWidth(dimensions.width);\n      dimensions.setImageHeight(dimensions.height);\n    }\n  }, [\n    dimensions.width,\n    dimensions.height,\n    treeState.tree,\n    options.options.text,\n  ]);\n\n  const getDetails = (name, thumbnailDetails) => {\n    setCollageName(name);\n    return {\n      collage_id: collageID.toString(),\n      name,\n      collage_type: collageType,\n      created_at: '2021-02-18T21:54:42.123Z',\n      last_updated_at: '2021-02-18T21:54:45.123Z',\n      images: images.getImageData(images.images),\n      tree: treeState.tree.removeImageData(),\n      thumbnail: thumbnailDetails,\n    };\n  };\n\n  const saveCollage = async (name) => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    console.log('in generate thumbnail', ar, 500 * ar, 500);\n    const [thumbnailDetails, thumbnailCanvas] = generateThumbnail();\n    updateStatus('details', 'running');\n    const imageURLS = await collageapi.saveCollage(\n      collageID,\n      getDetails(name, thumbnailDetails)\n    );\n    console.log('save collage imageurls', imageURLS);\n    updateStatus('details', 'done');\n    updateStatus('images', 'running');\n    const imagePromises = uploadCollageImages(thumbnailCanvas, imageURLS);\n    const uploadPromises = await Promise.allSettled(imagePromises);\n    // updateStatus('images', 'done');\n    updateStatus('finalizing', 'running');\n    let uploadStatus;\n    for (let i = 0; i < uploadPromises.length; i += 1) {\n      if (\n        uploadPromises[i].status === 'fulfilled' ||\n        uploadPromises[i].value.ok === true\n      ) {\n        uploadStatus = true;\n        updateStatus('finalizing', 'done');\n      } else {\n        uploadStatus = false;\n        updateStatus('finalizing', 'failed');\n        break;\n      }\n    }\n    return uploadStatus;\n  };\n\n  console.log('tree', treeState.tree);\n  return [\n    collageType,\n    getDetails,\n    collageName,\n    thumbnail,\n    collageID,\n    constants,\n    dimensions,\n    options,\n    actions,\n    images,\n    treeState,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n    handleCollageTypeChange,\n    handleNameChange,\n  ];\n}\n","import { useRef, useState, useEffect } from 'react';\n\nexport default function useDimensions(constants) {\n  const { fontSize, lineHeight } = constants;\n  const headerRef = useRef();\n  const actionsRef = useRef();\n  const footerRef = useRef();\n  const addImageRef = useRef();\n\n  const [height, setHeight] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [imageWidth, setImageWidth] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [maxHeight, setMaxHeight] = useState(0);\n  const [maxWidth, setMaxWidth] = useState(0);\n  const [textHeight, setTextHeight] = useState(0);\n\n  const setDimensions = () => {\n    const isMobile = window.innerWidth < window.innerHeight;\n    if (isMobile === true) {\n      const headerHeight = headerRef.current\n        ? headerRef.current.offsetHeight\n        : 0;\n      const actionsHeight = actionsRef.current\n        ? actionsRef.current.offsetHeight\n        : 0;\n      const footerHeight = footerRef.current\n        ? footerRef.current.offsetHeight\n        : 0;\n      const otherHeight = headerHeight + actionsHeight + footerHeight;\n      setMaxWidth(window.innerWidth);\n      setMaxHeight(window.innerHeight - otherHeight);\n    } else {\n      const headerHeight = headerRef.current\n        ? headerRef.current.offsetHeight\n        : 0;\n      const actionsWidth = actionsRef.current\n        ? actionsRef.current.offsetWidth\n        : 0;\n      const footerWidth = footerRef.current ? footerRef.current.offsetWidth : 0;\n      setMaxWidth(window.innerWidth - (footerWidth + actionsWidth));\n      setMaxHeight(window.innerHeight - headerHeight);\n    }\n  };\n\n  const handleImageAddClick = () => {\n    if (addImageRef.current) addImageRef.current.click();\n  };\n\n  useEffect(() => {\n    setDimensions();\n  }, [headerRef.current, actionsRef.current, footerRef.current]);\n\n  useEffect(() => {\n    setDimensions();\n\n    window.addEventListener('resize', setDimensions);\n\n    return () => window.removeEventListener('resize', setDimensions);\n  }, []);\n\n  return {\n    addImageRef,\n    actionsRef,\n    headerRef,\n    footerRef,\n    width,\n    height,\n    imageHeight,\n    imageWidth,\n    setImageWidth,\n    setImageHeight,\n    maxHeight,\n    maxWidth,\n    handleImageAddClick,\n    textHeight,\n    setTextHeight,\n    fontSize,\n    lineHeight,\n    setWidth,\n    setHeight,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useOptions() {\n  const optionsInitValue = {\n    padding: 2,\n    borderRadius: 5,\n    color: {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1,\n    },\n    text: '',\n    topText: true,\n  };\n\n  const [options, setOptions] = useState(optionsInitValue);\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n  const clear = () => setOptions(optionsInitValue);\n  const handlePaddingChange = (e) =>\n    setOptions((opts) => ({ ...opts, padding: e.target.value }));\n  const handleRadiusChange = (e) => {\n    setOptions((opts) => ({ ...opts, borderRadius: e.target.value }));\n  };\n\n  const handleColorClick = () => setDisplayColorPicker((dcp) => !dcp);\n  const handleColorClose = () => setDisplayColorPicker(false);\n  const handleColorChange = (clr) =>\n    setOptions((opts) => ({ ...opts, color: clr.rgb }));\n  const handlePositionChange = (value) =>\n    setOptions((opts) => ({ ...opts, topText: value }));\n\n  const handleTextChange = (e) => {\n    const { target } = e;\n    setOptions((opts) => ({ ...opts, text: target.value }));\n  };\n\n  return {\n    options,\n    setOptions,\n    clear,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClick,\n    handleColorClose,\n    handleColorChange,\n    handlePositionChange,\n    handleTextChange,\n    displayColorPicker,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useActions() {\n  const [open, setOpen] = useState(false);\n  const [saveOpen, setSaveOpen] = useState(false);\n  const [saveStart, setSaveStart] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [generate, setGenerate] = useState(false);\n  const [removeImage, setRemoveImage] = useState(false);\n  const [printOptions, setPrintOptions] = useState({\n    paperWidth: 0,\n    paperHeight: 0,\n  });\n\n  const onRefresh = () => setRefresh(true);\n  const handleDownload = () => setOpen(true);\n  const handleSave = () => {\n    setSaveOpen(true);\n  };\n  const onDownloadClose = () => setOpen(false);\n  const onSaveClose = () => setSaveOpen(false);\n  const clearDelete = () => setRemoveImage(false);\n  const onDelete = () => setRemoveImage((ri) => !ri);\n\n  const onDownloadClick = (w, h) => {\n    setPrintOptions({ paperWidth: w, paperHeight: h });\n    setGenerate(true);\n    setOpen(false);\n  };\n\n  const onSaveClick = () => {\n    setSaveStart(true);\n    setSaveOpen(false);\n  };\n  const handleGenerateCallback = () => {\n    setGenerate(false);\n    setPrintOptions({ paperWidth: 0, paperHeight: 0 });\n  };\n\n  return {\n    clearDelete,\n    generate,\n    handleDownload,\n    handleGenerateCallback,\n    onDelete,\n    onDownloadClick,\n    onDownloadClose,\n    onRefresh,\n    open,\n    printOptions,\n    refresh,\n    setGenerate,\n    setOpen,\n    setPrintOptions,\n    setRefresh,\n    removeImage,\n    setRemoveImage,\n    saveOpen,\n    setSaveOpen,\n    onSaveClose,\n    onSaveClick,\n    handleSave,\n    saveStart,\n    setSaveStart,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport helpers from 'components/collage/helpers';\n\nexport default function useImages(initialValue) {\n  console.log('use images', initialValue);\n  const [newImgCount, setNewImageCount] = useState(0);\n  const [newImagesLoaded, setNewImagesLoaded] = useState(0);\n  const [imgCount, setImageCount] = useState(0);\n  const [loaded, setLoaded] = useState(0);\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    console.log('setting images');\n    if ('images' in initialValue) {\n      setImages(initialValue.images);\n      if (imgCount === 0) setImageCount(initialValue.images.length);\n    }\n  }, [initialValue]);\n\n  const getImageData = (imageArr) => {\n    const tempImgArr = [...imageArr];\n    return tempImgArr.map((img) => {\n      const { file, src, ...rest } = img;\n      console.log('get image data', img, rest);\n      return rest;\n    });\n  };\n\n  const removeImageData = (imageArr) => {\n    const tempImgArr = [...imageArr];\n    return tempImgArr.map((img) => {\n      const { file, src, ...rest } = img;\n      console.log('get image data', img, rest);\n      return rest;\n    });\n  };\n\n  const incrementNewImageCount = () => {\n    console.log('incrementing image count');\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleImageData = async (imageDetail) => {\n    setImages((arr) => arr.concat([imageDetail]));\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleLoad = (event) => {\n    helpers.handleImageLoad(\n      event,\n      setImageCount,\n      setNewImageCount,\n      handleImageData\n    );\n  };\n\n  const clear = () => {\n    setImages([]);\n    setImageCount(0);\n    setLoaded(0);\n    setNewImagesLoaded(0);\n  };\n\n  const remove = (title) => {\n    const removeIndex = images.findIndex((elem) => elem.title === title);\n    const newImagesArr = [\n      ...images.slice(0, removeIndex),\n      ...images.slice(removeIndex + 1),\n    ];\n    setImages(newImagesArr);\n    setImageCount((cnt) => cnt - 1);\n    return newImagesArr;\n  };\n\n  return {\n    clear,\n    handleImageData,\n    handleLoad,\n    images,\n    imgCount,\n    loaded,\n    newImagesLoaded,\n    newImgCount,\n    remove,\n    setImageCount,\n    setImages,\n    setLoaded,\n    setNewImageCount,\n    setNewImagesLoaded,\n    getImageData,\n    removeImageData,\n    incrementNewImageCount,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport treeUtils from 'components/collage/treeUtils';\nimport BinaryTree from 'components/collage/binaryTree';\n\nexport default function useTree(initialValue, loadingCallback = () => {}) {\n  console.log('use Tree', initialValue);\n  const [tree, setTree] = useState(new BinaryTree({}));\n\n  useEffect(() => {\n    console.log('use Tree useEffect');\n    const newTree = new BinaryTree({});\n    if (\n      'details' in initialValue &&\n      Object.keys(initialValue.details).length > 0\n    ) {\n      console.log('initial value in tree', initialValue);\n      newTree.fromObject(initialValue.details.tree);\n      if ('options' in initialValue.details.tree.root) {\n        loadingCallback((opts) => ({\n          ...opts,\n          ...initialValue.details.tree.root.options,\n        }));\n      }\n      console.log('setting tree');\n      setTree(newTree);\n    }\n  }, [initialValue]);\n\n  const clear = () => setTree({});\n\n  const reAdjust = (imagesArr, tolerance, imageWidth, imageHeight, options) => {\n    const [, bestAspectRatioTree] = treeUtils.findBestAdjustTree(\n      imagesArr,\n      tolerance,\n      imageWidth,\n      imageHeight\n    );\n    bestAspectRatioTree.addOptions(options);\n    setTree(bestAspectRatioTree);\n  };\n\n  return { tree, setTree, clear, reAdjust };\n}\n","import { useState, useEffect } from 'react';\nimport helpers from './helpers';\n\nexport default function Collage({\n  dimensionProps,\n  imageProps,\n  actionProps,\n  collageCallback,\n  handleRemoveImage,\n  options,\n  tree,\n}) {\n  const [collage, setCollage] = useState(null);\n  const { images, setLoaded } = imageProps;\n  const { generate, handleGenerateCallback, printOptions, removeImage } =\n    actionProps;\n  const { height, width, imageHeight, imageWidth, fontSize, lineHeight } =\n    dimensionProps;\n\n  const handleCollageImageLoad = () => setLoaded((cnt) => cnt + 1);\n  const isEmpty = (t) => Object.keys(t).length === 0;\n  const createCollage = () => {\n    console.log('started collage loading', tree);\n    tree.addSize(imageWidth, imageHeight, tree.root.value.aspectRatio);\n    console.log('collage added size');\n    tree.addOptions(options);\n    console.log('collage added options', images.length);\n    if (images.length > 0) {\n      tree.addImageData(images);\n      console.log('collage added image data');\n      const collageElem = tree.DOMDisplay(\n        width,\n        height,\n        removeImage,\n        handleRemoveImage,\n        handleCollageImageLoad\n      );\n      console.log('collage added dom display');\n      setCollage(collageElem);\n      collageCallback(tree);\n    }\n  };\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      console.log('collage, tree is not empty');\n      createCollage();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      console.log('collage, tree is not empty 1');\n      createCollage();\n    } else {\n      setCollage(null);\n    }\n  }, [tree, options, imageWidth, imageHeight, removeImage, images]);\n\n  const downloadCollage = (canvas, pW, pH) => {\n    canvas.toBlob((blob) => {\n      const link = document.createElement('a');\n      link.download = `collage-${pW.toFixed(2)}X${pH.toFixed(\n        2\n      )}-${Date.now()}.jpg`;\n      link.href = URL.createObjectURL(blob);\n      link.click();\n      URL.revokeObjectURL(link.href);\n      link.href = null;\n      handleGenerateCallback();\n    }, 'image/jpeg');\n  };\n\n  const getCanvasTree = () => {\n    const canvasTree = tree.copy();\n    canvasTree.replaceImages(images);\n    return canvasTree;\n  };\n\n  const getCanvas = (pw, ph) => {\n    const canvasElement = document.createElement('canvas');\n    canvasElement.width = pw;\n    canvasElement.height = ph;\n    return canvasElement;\n  };\n\n  const generateCollageTree = (pw, ph) => {\n    const canvasTree = getCanvasTree();\n    const ar = tree.root.value.aspectRatio;\n    const scaleFactor = pw / width;\n    const [imgPW, imgPH] = helpers.getImageDimensions(\n      pw,\n      ph,\n      options.text,\n      0,\n      0,\n      fontSize,\n      lineHeight,\n      scaleFactor,\n      tree.root.value.aspectRatio\n    );\n    canvasTree.addSize(imgPW, imgPH, ar);\n    return canvasTree;\n  };\n\n  const generateCollage = (ctree, pw, ph) => {\n    const scaleFactor = pw / width;\n    const canvasElement = getCanvas(pw, ph);\n    ctree.CanvasDisplay(pw, ph, canvasElement, scaleFactor);\n\n    setTimeout(() => downloadCollage(canvasElement, pw, ph), '5000');\n  };\n\n  useEffect(() => {\n    if (generate === true) {\n      const { paperWidth: pw, paperHeight: ph } = printOptions;\n      const canvasTree = generateCollageTree(pw, ph);\n      const [valid, probNodes] = canvasTree.validateAddSize();\n      if (valid) {\n        generateCollage(canvasTree, pw, ph);\n      } else {\n        const [newPW, newPH] = helpers.optimizeDimensions(pw, ph, probNodes);\n        const newCanvasTree = generateCollageTree(newPW, newPH);\n        const [newValid, newProbNodes] = newCanvasTree.validateAddSize();\n        if (newValid) {\n          generateCollage(newCanvasTree, newPW, newPH);\n        } else {\n          console.log('unable to generate collage', newProbNodes);\n        }\n      }\n    }\n  }, [generate]);\n\n  return collage;\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\n\nexport default function DownloadDialog({ open, onClick, onClose, sizes }) {\n  const [value, setValue] = useState('');\n  const handleDownload = () => {\n    console.log(sizes[value].width, sizes[value].height, onClick);\n    onClick(sizes[value].width, sizes[value].height);\n    setValue('');\n  };\n\n  const handleClose = () => {\n    setValue('');\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Download Collage</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <DialogContentText sx={{ display: 'inline', pr: 1 }}>\n          Choose collage size\n        </DialogContentText>\n        <FormControl fullWidth sx={{ maxWidth: '60%' }}>\n          <InputLabel id=\"demo-simple-select-label\">Download Size</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            defaultValue=\"A4\"\n            value={value}\n            label=\"Download Size\"\n            onChange={(event) => setValue(event.target.value)}\n          >\n            {Object.keys(sizes).map((key) => (\n              <MenuItem key={sizes[key].text} value={key}>\n                {sizes[key].text}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          disabled={value.length === 0}\n          onClick={handleDownload}\n        >\n          Download\n        </Button>\n        <Button variant=\"text\" onClick={handleClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nDownloadDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport TextField from '@mui/material/TextField';\n\nexport default function SaveDialog({ collageName, open, onClick, onClose }) {\n  const [name, setName] = useState(collageName);\n  const [nameError] = useState('');\n  const handleSave = () => {\n    onClick(name);\n  };\n\n  const handleNameChange = (e) => {\n    const { target } = e;\n    setName(target.value);\n  };\n\n  const handleClose = () => {\n    setName('');\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <TextField\n          variant=\"outlined\"\n          label=\"Set Collage Name\"\n          defaultValue={name}\n          onChange={handleNameChange}\n          size=\"small\"\n          sx={{ width: '100%', mb: 1 }}\n          InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n          helperText={nameError}\n          error={!!nameError}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          disabled={name.length === 0}\n          onClick={handleSave}\n        >\n          Save\n        </Button>\n        <Button variant=\"text\" onClick={handleClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nSaveDialog.propTypes = {\n  collageName: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport PendingIcon from '@mui/icons-material/Pending';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CloseIcon from '@mui/icons-material/Close';\n\nfunction StatusIndicator({ status }) {\n  if (status === 'running') {\n    return <CircularProgress color=\"info\" size=\"1rem\" />;\n  }\n  if (status === 'pending') {\n    return <PendingIcon color=\"disabled\" size=\"0.875rem\" />;\n  }\n  if (status === 'done') {\n    return <CheckCircleOutlineIcon color=\"success\" size=\"0.875rem\" />;\n  }\n  if (status === 'failed') {\n    return <CloseIcon color=\"error\" size=\"0.875rem\" />;\n  }\n}\n\nStatusIndicator.propTypes = {\n  status: PropTypes.string.isRequired,\n};\n\nfunction Status({ text, status }) {\n  const color = {\n    pending: alpha('#000', 0.26),\n    done: 'black',\n    running: 'black',\n    failed: 'red',\n  };\n\n  return (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n      <Typography\n        sx={{ fontWeight: 'bold', fontSize: '1rem', color: color[status] }}\n      >\n        {text}\n      </Typography>\n      <StatusIndicator status={status} />\n    </Stack>\n  );\n}\n\nStatus.propTypes = {\n  text: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nfunction OverAllStatus({ status, counter }) {\n  if (status === 'failed') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <CloseIcon color=\"error\" />\n        <Typography>Collage creation failed</Typography>\n      </Stack>\n    );\n  }\n\n  if (status === 'running' || status === 'pending') return null;\n\n  if (status === 'success') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <CheckCircleOutlineIcon color=\"success\" sx={{ fontSize: '2rem' }} />\n        <Typography>\n          Collage creation successful. Navigation to collages in {counter}{' '}\n          seconds...\n        </Typography>\n      </Stack>\n    );\n  }\n\n  return null;\n}\n\nOverAllStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  counter: PropTypes.number.isRequired,\n};\n\nexport default function SaveStatusDialog({ open, status }) {\n  let overAllStatus = 'pending';\n  const [counter, setCounter] = useState(-1);\n  useEffect(() => {\n    let timerId;\n    if (counter > 0 && overAllStatus === 'success') {\n      timerId = setTimeout(() => setCounter(counter - 1), 1000);\n    }\n    return () => clearTimeout(timerId);\n  }, [counter, overAllStatus]);\n\n  const statusArr = Object.values(status).map((val) => val.status);\n  if (statusArr.includes('failed')) {\n    overAllStatus = 'failed';\n  } else if (statusArr.includes('running')) {\n    overAllStatus = 'running';\n  } else if (!statusArr.includes('pending')) {\n    console.log('setting counter', counter, status);\n    if (counter === -1) {\n      setCounter(3);\n    }\n    overAllStatus = 'success';\n  }\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent dividers>\n        <Stack direction=\"column\" justifyContent=\"center\" spacing={2}>\n          {Object.values(status).map((st) => (\n            <Status key={st.text} text={st.text} status={st.status} />\n          ))}\n        </Stack>\n      </DialogContent>\n      <OverAllStatus status={overAllStatus} counter={counter} />\n    </Dialog>\n  );\n}\n\nSaveStatusDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  status: PropTypes.objectOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      status: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n// import { alpha } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport { Typography, Box, Link } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ProfileLink from 'components/profile';\nimport { Branding, BrandLogo } from 'components/brand';\n\nfunction HeaderNameSection({ name, handleChange }) {\n  const [nameError] = useState('');\n  const [editable, setEditable] = useState(false);\n  const handleClick = () => setEditable(true);\n  const handleBlur = (e) => {\n    if (e.target.value === '') {\n      handleChange('Untitled');\n    } else {\n      handleChange(e.target.value);\n    }\n    setEditable(false);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      handleBlur(e);\n    }\n  };\n\n  return editable === true ? (\n    <TextField\n      variant=\"filled\"\n      label=\"Set Collage Name\"\n      defaultValue={name}\n      autoFocus\n      size=\"small\"\n      onBlur={handleBlur}\n      onKeyDown={handleKeyDown}\n      InputLabelProps={{\n        color: 'secondary',\n        focused: true,\n      }}\n      InputProps={{\n        sx: {\n          color: 'white',\n        },\n      }}\n      helperText={nameError}\n      error={!!nameError}\n      sx={{\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n        cursor: 'text',\n      }}\n    />\n  ) : (\n    <Typography\n      variant=\"h4\"\n      component=\"h4\"\n      onClick={handleClick}\n      sx={{\n        color: 'gray',\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n      }}\n    >\n      {name}\n    </Typography>\n  );\n}\n\nHeaderNameSection.propTypes = {\n  name: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default function Header({ headerRef, name, handleNameChange }) {\n  console.log('in collage header', name);\n  const belowmd = useMediaQuery((theme) => theme.breakpoints.down('md'));\n  return (\n    <Paper\n      ref={headerRef}\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        p: 1,\n        backgroundColor: 'primary.main',\n        borderRadius: 0,\n      }}\n      elevation={0}\n    >\n      <Box sx={{ postion: 'absolute', left: '5px' }}>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n          <Link href=\"/collages\" color=\"white\" underline=\"none\">\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <ArrowBackIcon fontSize=\"medium\" />\n            </Box>\n          </Link>\n          {belowmd ? (\n            <BrandLogo width=\"50px\" height=\"50px\" />\n          ) : (\n            <Branding width=\"50px\" height=\"50px\" />\n          )}\n        </Stack>\n      </Box>\n      <HeaderNameSection name={name} handleChange={handleNameChange} />\n      <ProfileLink />\n    </Paper>\n  );\n}\n\nHeader.propTypes = {\n  name: PropTypes.string.isRequired,\n  headerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  handleNameChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n// import Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport collageBack from 'static/images/collage_back1.webp';\n\nexport default function EmptyCollage({ width, height, loadComponent }) {\n  console.log(width, height);\n  return (\n    <Box\n      sx={{\n        backgroundImage: `url(${collageBack})`,\n        backgroundSize: width,\n        objectFit: 'fill',\n        width,\n        height,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {loadComponent}\n    </Box>\n  );\n}\n\nEmptyCollage.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  loadComponent: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport EmptyCollage from 'components/collage/EmptyCollage';\nimport Loading from 'components/Loading';\nimport AddPhotos from 'components/AddPhotos';\n\nexport default function View({\n  open,\n  saveOpen,\n  saveStatusOpen,\n  status,\n  dimensionProps,\n  imageProps,\n  header,\n  actions,\n  downloadDialog,\n  saveDialog,\n  saveStatusDialog,\n  collage,\n  controls,\n  collageTypeMenu,\n}) {\n  const { width, height, maxWidth, maxHeight } = dimensionProps;\n  let showControls = false;\n  const { images, imgCount, handleLoad, newImagesLoaded } = imageProps;\n  if (images.length > 0) {\n    showControls = true;\n  }\n  let content;\n  if (status === 'fetching') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={<Loading title=\"Fetching collage...\" />}\n      />\n    );\n  }\n\n  if (status === 'preparing') {\n    content = (\n      <>\n        {collage}\n        <Loading title=\"Preparing collage...\" />\n      </>\n    );\n  }\n\n  if (status === 'loading') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          <Loading\n            // title={`Loading (${images.length} / ${imgCount}) images...`}\n            title={`Loading (${newImagesLoaded} / ${imgCount}) images...`}\n          />\n        }\n      />\n    );\n  }\n\n  if (status === 'empty') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          width ? <AddPhotos handleChange={handleLoad} /> : <div />\n        }\n      />\n    );\n  }\n\n  if (status === 'ready') {\n    content = collage;\n  }\n\n  return (\n    <Box component=\"div\" sx={{ backgroundColor: 'gray' }}>\n      {header}\n      {showControls ? actions : null}\n      {open ? downloadDialog : null}\n      {saveOpen ? saveDialog : null}\n      {saveStatusOpen ? saveStatusDialog : null}\n      <Stack\n        direction=\"column\"\n        width={maxWidth}\n        height={maxHeight}\n        sx={{\n          position: 'absolute',\n          // top: offsetHeight,\n          left: '50%',\n          transform: 'translate(-50%, 0)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'gray',\n          justifySelf: 'center',\n        }}\n      >\n        {collageTypeMenu}\n        {content}\n      </Stack>\n      {showControls ? controls : null}\n    </Box>\n  );\n}\n\nView.propTypes = {\n  dimensionProps: PropTypes.shape({\n    maxWidth: PropTypes.number.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    imageHeight: PropTypes.number.isRequired,\n\n    headerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n    actionsRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n    footerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n  imageProps: PropTypes.shape({\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        src: PropTypes.string.isRequired,\n        naturalHeight: PropTypes.number.isRequired,\n        naturalWidth: PropTypes.number.isRequired,\n        aspectRatio: PropTypes.number.isRequired,\n        type: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    imgCount: PropTypes.number.isRequired,\n    handleLoad: PropTypes.func.isRequired,\n    loaded: PropTypes.number.isRequired,\n    newImagesLoaded: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  saveOpen: PropTypes.bool.isRequired,\n  saveStatusOpen: PropTypes.bool.isRequired,\n  status: PropTypes.string.isRequired,\n  header: PropTypes.node.isRequired,\n  actions: PropTypes.node.isRequired,\n  collage: PropTypes.node.isRequired,\n  controls: PropTypes.node.isRequired,\n  downloadDialog: PropTypes.node.isRequired,\n  saveDialog: PropTypes.node.isRequired,\n  saveStatusDialog: PropTypes.node.isRequired,\n  collageTypeMenu: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DBNA({ label, icon, handleChange, blurControl }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      icon={icon}\n      sx={{\n        py: 1,\n        fontWeight: 'bold',\n        color: 'gray',\n        outline: 'none',\n        '&:focus': {\n          color: 'white',\n          outline: 'none',\n        },\n      }}\n      onClick={handleChange}\n      onBlur={blurControl === true ? handleChange : () => {}}\n    />\n  );\n}\nDBNA.defaultProps = {\n  handleChange: () => {},\n  blurControl: false,\n};\n\nDBNA.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func,\n  blurControl: PropTypes.bool,\n};\n","import PropTypes from 'prop-types';\nimport Drawer from '@mui/material/Drawer';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopDrawer({ anchor, children, innerRef }) {\n  return (\n    <Drawer\n      anchor={anchor}\n      variant=\"permanent\"\n      PaperProps={{\n        ref: innerRef,\n        sx: {\n          height: 'fit-content',\n          top: '50%',\n          backgroundColor: 'transparent',\n          color: 'gray',\n          fontWeight: 'bold',\n          borderRadius: anchor === 'left' ? '0 10px 10px 0' : '10px 0 0 10px',\n          transform: 'translate(0, -50%)',\n          border: 0,\n        },\n      }}\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nDesktopDrawer.defaultProps = {\n  innerRef: () => {},\n};\n\nDesktopDrawer.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n  anchor: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Divider from '@mui/material/Divider';\n\nexport default function ControlsDivider() {\n  return <Divider sx={{ backgroundColor: 'gray', my: 1 }} variant=\"middle\" />;\n}\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport List from '@mui/material/List';\n// import { alpha } from '@mui/material/styles';\n\nimport DBNA from 'components/collage/DesktopActionItem';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport ControlsDivider from 'components/collage/ControlsDivider';\n\nexport default function DesktopActions({ actionsRef, onDownload, onSave }) {\n  const handleChange = (newValue) => {\n    console.log(newValue);\n    if (newValue === 'download') {\n      onDownload();\n    }\n    if (newValue === 'save') {\n      onSave();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  return (\n    <DesktopDrawer anchor=\"right\" innerRef={actionsRef}>\n      <List sx={{ backgroundColor: 'black' }}>\n        <DBNA\n          label=\"Save\"\n          icon={<SaveIcon />}\n          handleChange={() => handleChange('save')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label=\"Download\"\n          icon={<DownloadIcon />}\n          handleChange={() => handleChange('download')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label={\n            <>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Order\n              </Typography>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Print(s)\n              </Typography>\n            </>\n          }\n          icon={<PrintIcon />}\n          handleChange={() => handleChange('print')}\n        />\n      </List>\n    </DesktopDrawer>\n  );\n}\n\nDesktopActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\n\nexport default function ClearCollageDialog({\n  open,\n  onSubmit,\n  onCancel,\n  saveType,\n}) {\n  return (\n    <Dialog open={open}>\n      <DialogTitle\n        sx={{\n          textAlign: 'center',\n          fontWeight: 'bold',\n          color: alpha('#000', 0.8),\n        }}\n      >\n        {saveType === 'new' ? 'Clear' : 'Delete'} Collage\n      </DialogTitle>\n      <DialogContent dividers>\n        <DialogContentText sx={{ fontWeight: 'bold', color: 'gray', pb: 1 }}>\n          Do you want to {saveType === 'new' ? 'clear' : 'delete'} this collage?\n        </DialogContentText>\n        <Typography\n          variant=\"subtitle2\"\n          sx={{ color: 'red', fontWeight: 'bold' }}\n          noWrap\n        >\n          Note:\n        </Typography>\n        <Typography\n          sx={{ fontSize: '0.8rem', color: 'gray', fontWeight: 'bold' }}\n        >\n          This change is not reversible\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onSubmit} sx={{ color: 'red' }}>\n          {saveType === 'new' ? 'Clear' : 'Delete'}\n        </Button>\n        <Button variant=\"outlined\" onClick={onCancel}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nClearCollageDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Stack from '@mui/material/Stack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\n// import { alpha } from '@mui/material/styles';\n\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function DesktopControls({\n  innerRef,\n  onRefresh,\n  photosComp,\n  editComp,\n  handleClear,\n  clearDelete,\n  saveType,\n}) {\n  const [imageOptionsOpen, setImageOptionsOpen] = useState(false);\n  const [editOptionsOpen, setEditOptionsOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const closeAll = () => {\n    clearDelete();\n    setImageOptionsOpen(false);\n    setEditOptionsOpen(false);\n    setClearOpen(false);\n  };\n  const handlePhotosClick = () => {\n    if (imageOptionsOpen) {\n      setImageOptionsOpen(false);\n    } else {\n      closeAll();\n      setImageOptionsOpen(true);\n    }\n  };\n\n  const handleEditClick = () => {\n    if (editOptionsOpen) {\n      setEditOptionsOpen(false);\n    } else {\n      closeAll();\n      setEditOptionsOpen(true);\n    }\n  };\n  const handleRearrange = () => {\n    closeAll();\n    onRefresh();\n  };\n\n  const handleClearClick = () => {\n    console.log('clear open', clearOpen);\n    if (clearOpen) {\n      setClearOpen(false);\n    } else {\n      closeAll();\n      setClearOpen(true);\n    }\n  };\n\n  const handleClearClose = () => setClearOpen(false);\n  const handleClearSubmit = () => {\n    handleClearClose();\n    handleClear();\n  };\n\n  console.log('clear open', clearOpen);\n  console.log('rendering desktop controls');\n  return (\n    <DesktopDrawer anchor=\"left\">\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\" ref={innerRef}>\n        <List\n          sx={{\n            backgroundColor: 'black',\n            borderRadius: '0 10px 10px 0',\n          }}\n        >\n          <DBNA\n            label=\"Rearrange\"\n            icon={<AutoAwesomeMosaicIcon />}\n            handleChange={handleRearrange}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Photos\"\n            icon={<PhotoIcon />}\n            handleChange={handlePhotosClick}\n            blurControl\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Edit\"\n            icon={<EditIcon />}\n            handleChange={handleEditClick}\n            blurControl\n          />\n          <ControlsDivider />\n          <DBNA\n            label={saveType === 'new' ? 'Clear' : 'Delete'}\n            icon={saveType === 'new' ? <RefreshIcon /> : <DeleteIcon />}\n            handleChange={handleClearClick}\n          />\n        </List>\n        {imageOptionsOpen ? photosComp : null}\n        {editOptionsOpen ? editComp : null}\n        <ClearCollageDialog\n          open={clearOpen}\n          onSubmit={handleClearSubmit}\n          onCancel={handleClearClose}\n          saveType={saveType}\n        />\n      </Stack>\n    </DesktopDrawer>\n  );\n}\n\nDesktopControls.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  photosComp: PropTypes.node.isRequired,\n  editComp: PropTypes.node.isRequired,\n  handleClear: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopImageOptions({ onDelete, onAdd, clearDelete }) {\n  const handleAdd = () => {\n    clearDelete();\n    onAdd();\n  };\n\n  return (\n    <List\n      sx={{\n        backgroundColor: 'black',\n        borderRadius: '10px 10px 10px 10px',\n        height: 'fit-content',\n      }}\n    >\n      <DBNA\n        label=\"Add\"\n        icon={<AddPhotoAlternateIcon />}\n        handleChange={handleAdd}\n      />\n      <ControlsDivider />\n      <DBNA label=\"Delete\" icon={<DeleteIcon />} handleChange={onDelete} />\n    </List>\n  );\n}\n\nDesktopImageOptions.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function PaddingControl({ padding, handlePaddingChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n          mixBlendMode: 'difference',\n        }}\n      >\n        Padding\n      </Typography>\n      <Slider\n        aria-label=\"Padding\"\n        defaultValue={0}\n        value={padding}\n        valueLabelDisplay=\"auto\"\n        step={0.1}\n        min={0}\n        max={10}\n        onChange={handlePaddingChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nPaddingControl.propTypes = {\n  padding: PropTypes.number.isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function RadiusControl({ radius, handleRadiusChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n        }}\n      >\n        Corner Radius\n      </Typography>\n      <Slider\n        aria-label=\"Corner Radius\"\n        defaultValue={0}\n        value={radius}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        min={0}\n        max={40}\n        onChange={handleRadiusChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nRadiusControl.propTypes = {\n  radius: PropTypes.number.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { ChromePicker } from 'react-color';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function ColorControl({\n  color,\n  displayColorPicker,\n  handleClick,\n  handleClose,\n  handleChange,\n}) {\n  console.log('color control', color, displayColorPicker);\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      spacing={2}\n      sx={{ my: 2 }}\n    >\n      <Typography\n        sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n      >\n        Background Color\n      </Typography>\n      <Box\n        component=\"div\"\n        sx={{\n          padding: '2px',\n          background: '#fff',\n          borderRadius: '5px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        }}\n        onClick={handleClick}\n      >\n        <Box\n          component=\"div\"\n          sx={{\n            width: '70px',\n            height: '30px',\n            borderRadius: '18px',\n            background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n          }}\n        />\n      </Box>\n      <ColorPicker\n        open={displayColorPicker}\n        color={color}\n        handleClose={handleClose}\n        handleChange={handleChange}\n      />\n    </Stack>\n  );\n}\n\nColorControl.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport function ColorPicker({ open, color, handleClose, handleChange }) {\n  console.log(handleClose);\n  return open ? (\n    <>\n      <Box\n        component=\"div\"\n        sx={{\n          position: 'absolute',\n          zIndex: 3,\n          bottom: 10,\n        }}\n      >\n        <IconButton\n          sx={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            zIndex: 2,\n            backgroundColor: 'button.main',\n            p: 0,\n            transform: 'translate(0, -110%)',\n            border: '2px solid black',\n          }}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n        <ChromePicker color={color} onChange={handleChange} />\n      </Box>\n    </>\n  ) : null;\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n//  import FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function TextControl({\n  text,\n  handleTextChange,\n  topText,\n  handlePositionChange,\n  handleTextSubmit,\n}) {\n  const [collageTextError] = useState('');\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      handleTextSubmit(e);\n    }\n  };\n\n  return (\n    <Stack\n      sx={{\n        backgroundColor: 'transparent',\n      }}\n    >\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        spacing={2}\n      >\n        <Typography\n          sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n        >\n          Collage Text\n        </Typography>\n        <FormGroup row>\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === false}\n                onChange={() => handlePositionChange(false)}\n                sx={{ color: 'white', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Bottom\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold' }}\n          />\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === true}\n                onChange={() => handlePositionChange(true)}\n                sx={{ color: 'gray', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Top\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold', fontSize: '0.8rem' }}\n          />\n        </FormGroup>\n      </Stack>\n      <TextField\n        variant=\"outlined\"\n        label=\"\"\n        defaultValue={text}\n        onChange={handleTextChange}\n        onKeyDown={handleKeyDown}\n        size=\"small\"\n        sx={{ width: '100%', mb: 1 }}\n        InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n        helperText={\n          <Typography sx={{ color: 'gray', fontSize: '0.75rem' }}>\n            {collageTextError}\n          </Typography>\n        }\n        error={!!collageTextError}\n      />\n    </Stack>\n  );\n}\n\nTextControl.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  handlePositionChange: PropTypes.func.isRequired,\n  handleTextSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n// import { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport ColorControl from 'components/collage/ColorControl';\nimport TextControl from 'components/collage/TextControl';\n\nexport default function EditControl({ optionProps }) {\n  const {\n    options,\n    handlePaddingChange,\n    displayColorPicker,\n    handleColorChange,\n    handleColorClose,\n    handleColorClick,\n    handleRadiusChange,\n    handleTextChange,\n    handlePositionChange,\n  } = optionProps;\n\n  return (\n    <Stack\n      direction=\"column\"\n      spacing={4}\n      sx={{\n        p: 2,\n        backgroundColor: 'black',\n        borderRadius: '10px 10px 10px 10px',\n        boxShadow: '0 0 10px inset rgba(255, 0, 0, 0.3)',\n      }}\n    >\n      <PaddingControl\n        padding={options.padding}\n        handlePaddingChange={handlePaddingChange}\n      />\n      <RadiusControl\n        radius={options.borderRadius}\n        handleRadiusChange={handleRadiusChange}\n      />\n      <ColorControl\n        color={options.color}\n        displayColorPicker={displayColorPicker}\n        handleChange={handleColorChange}\n        handleClose={handleColorClose}\n        handleClick={handleColorClick}\n      />\n      <TextControl\n        text={options.text}\n        topText={options.topText}\n        handleTextChange={handleTextChange}\n        handlePositionChange={handlePositionChange}\n      />\n    </Stack>\n  );\n}\n\nEditControl.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n\nexport default function MBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      value={label.toLowerCase()}\n      icon={icon}\n      sx={{\n        fontWeight: 'bold',\n        color: 'gray',\n        '&.Mui-selected': { color: 'white', outline: 'none' },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\n\nMBNA.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function MobileActions({ actionsRef, onDownload, onSave }) {\n  return (\n    <BottomNavigation\n      ref={actionsRef}\n      showLabels\n      sx={{ py: 1, fontWeight: 'bold', backgroundColor: alpha('#000', 0.6) }}\n    >\n      <MBNA label=\"Save\" icon={<SaveIcon />} handleChange={onSave} />\n      <MBNA\n        label=\"Download\"\n        icon={<DownloadIcon />}\n        handleChange={onDownload}\n      />\n      <MBNA label=\"Print\" icon={<PrintIcon />} handleChange={() => {}} />\n    </BottomNavigation>\n  );\n}\n\nMobileActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { alpha } from '@mui/material/styles';\n\nexport default function MainControls({ value, handleChange, saveType }) {\n  return (\n    <BottomNavigation\n      showLabels\n      value={value}\n      onChange={handleChange}\n      sx={{\n        fontWeight: 'bold',\n        backgroundColor: alpha('#fff', 0.2),\n        '&.Mui-selected': { color: 'white' },\n      }}\n    >\n      <BottomNavigationAction\n        label=\"Rearrange\"\n        value=\"rearrange\"\n        icon={<AutoAwesomeMosaicIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Photos\"\n        value=\"photo\"\n        icon={<PhotoIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Edit\"\n        value=\"edit\"\n        icon={<EditIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label={saveType === 'new' ? 'Clear' : 'Delete'}\n        value=\"clear\"\n        icon={saveType === 'new' ? <RefreshIcon /> : <DeleteIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n    </BottomNavigation>\n  );\n}\n\nMainControls.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport Typography from '@mui/material/Typography';\nimport PaddingIcon from '@mui/icons-material/Padding';\nimport CropFreeIcon from '@mui/icons-material/CropFree';\nimport SquareIcon from '@mui/icons-material/Square';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TitleIcon from '@mui/icons-material/Title';\nimport { alpha } from '@mui/material/styles';\n\nexport default function EditOptions({\n  color,\n  editOptionsValue,\n  open,\n  handleOptionsClose,\n  handleEditOptionsClick,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={editOptionsValue}\n        onChange={handleEditOptionsClick}\n        sx={{\n          display: 'flex',\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          position: 'relative',\n          alignItems: 'center',\n        }}\n      >\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Padding\n            </Typography>\n          }\n          value=\"padding\"\n          icon={<PaddingIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Corner\n            </Typography>\n          }\n          value=\"border radius\"\n          icon={<CropFreeIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Color\n            </Typography>\n          }\n          value=\"color\"\n          icon={\n            <SquareIcon\n              sx={{\n                fill: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n                borderRadius: '5px',\n              }}\n            />\n          }\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label=\"Text\"\n          value=\"text\"\n          icon={<TitleIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nEditOptions.propTypes = {\n  editOptionsValue: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleEditOptionsClick: PropTypes.func.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function ImageOptions({\n  open,\n  value,\n  handleOptionsClose,\n  handleDelete,\n  handleAdd,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={value}\n        sx={{\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          '&.Mui-selected': { color: 'white' },\n        }}\n      >\n        <MBNA\n          label=\"Delete\"\n          icon={<DeleteIcon />}\n          handleChange={handleDelete}\n        />\n        <MBNA\n          label=\"Add\"\n          icon={<AddPhotoAlternateIcon />}\n          handleChange={handleAdd}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nImageOptions.propTypes = {\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\n\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport TextControl from 'components/collage/TextControl';\nimport { ColorPicker } from 'components/collage/ColorControl';\nimport MainControls from 'components/collage/MainControls';\nimport EditOptions from 'components/collage/EditOptions';\nimport ImageOptions from 'components/collage/ImageOptions';\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function MobileControls({\n  optionProps,\n  actionProps,\n  dimensionProps,\n  handleClear,\n  saveType,\n}) {\n  const {\n    options,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClose,\n    handleColorClick,\n    handleColorChange,\n    handleTextChange,\n    handlePositionChange,\n    displayColorPicker,\n  } = optionProps;\n\n  const { onRefresh, onDelete, clearDelete } = actionProps;\n  const { footerRef, handleImageAddClick } = dimensionProps;\n\n  const [mainOpen, setMainOpen] = useState(true);\n  const [value, setValue] = useState('');\n  const [editOpen, setEditOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const [editControl, setEditControl] = useState(null);\n  const [editOptionsValue, setEditOptionsValue] = useState('');\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageValue, setImageValue] = useState('');\n\n  const handleImageOptionsClose = () => {\n    setImageOpen(false);\n    setImageValue('');\n    setMainOpen(true);\n    clearDelete();\n    setValue('');\n  };\n\n  const handleEditOptionsClose = () => {\n    setEditOpen(false);\n    setEditControl(null);\n    setEditOptionsValue('');\n    setMainOpen(true);\n    setValue('');\n  };\n\n  const handleTextSubmit = (e) => {\n    handleTextChange(e);\n    setEditControl(null);\n    setEditOptionsValue(null);\n  };\n\n  const handleEditOptionsClick = (e, nV) => {\n    console.log('handle edit options click');\n    setEditOptionsValue(nV);\n    if (nV === 'padding') {\n      setEditControl(\n        <PaddingControl\n          padding={options.padding}\n          handlePaddingChange={handlePaddingChange}\n        />\n      );\n    } else if (nV === 'border radius') {\n      setEditControl(\n        <RadiusControl\n          radius={options.borderRadius}\n          handleRadiusChange={handleRadiusChange}\n        />\n      );\n    } else if (nV === 'color') {\n      handleColorClick();\n      setEditControl(\n        <ColorPicker\n          open={displayColorPicker}\n          color={options.color}\n          handleChange={handleColorChange}\n          handleClose={() => {\n            setEditControl(null);\n            handleColorClose();\n          }}\n        />\n      );\n    } else if (nV === 'text') {\n      console.log(nV);\n      setEditControl(\n        <TextControl\n          text={options.text}\n          handleTextChange={handleTextChange}\n          topText={options.topText}\n          handlePositionChange={handlePositionChange}\n          handleTextSubmit={handleTextSubmit}\n        />\n      );\n    } else {\n      setEditControl(<Typography color=\"secondary\">{nV}</Typography>);\n    }\n  };\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'padding') {\n      setEditControl(\n        <PaddingControl\n          padding={options.padding}\n          handlePaddingChange={handlePaddingChange}\n        />\n      );\n    }\n  }, [options.padding, editOpen]);\n  // }, [options.padding, editOpen, editOptionsValue]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'border radius') {\n      setEditControl(\n        <RadiusControl\n          radius={options.borderRadius}\n          handleRadiusChange={handleRadiusChange}\n        />\n      );\n    }\n  }, [options.borderRadius, editOpen]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'color') {\n      setEditControl(\n        <ColorPicker\n          open={displayColorPicker}\n          color={options.color}\n          handleChange={handleColorChange}\n          handleClose={handleColorClose}\n        />\n      );\n    }\n  }, [options.color, editOpen, displayColorPicker]);\n\n  useEffect(() => {\n    console.log('text control useEffect');\n    if (editOpen && editOptionsValue === 'text') {\n      setEditControl(\n        <TextControl\n          text={options.text}\n          handleTextChange={handleTextChange}\n          topText={options.topText}\n          handlePositionChange={handlePositionChange}\n          handleTextSubmit={handleTextSubmit}\n        />\n      );\n    }\n  }, [options.text, editOpen, options.topText]);\n\n  const handleImageClose = () => {\n    setImageValue('');\n    setImageOpen(false);\n    setMainOpen(true);\n  };\n\n  const handleChange = (event, newValue) => {\n    clearDelete();\n    handleImageClose();\n    handleEditOptionsClose();\n    setValue(newValue);\n    if (newValue === 'rearrange') {\n      onRefresh();\n    } else if (newValue === 'photo') {\n      setMainOpen(false);\n      setImageOpen(true);\n    } else if (newValue === 'edit') {\n      setMainOpen(false);\n      setEditOpen(true);\n    } else if (newValue === 'clear') {\n      setClearOpen(true);\n      //  handleClear();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  const handleImageAdd = () => {\n    clearDelete();\n    handleImageAddClick();\n  };\n\n  const handleClearSubmit = () => {\n    handleClear();\n    setClearOpen(false);\n    setValue('');\n  };\n\n  const handleClearCancel = () => {\n    setClearOpen(false);\n    setValue('');\n  };\n\n  console.log('rerendering', editControl);\n  return (\n    <Paper\n      ref={footerRef}\n      sx={{\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        mt: 1,\n        backgroundColor: 'black',\n        borderRadius: 0,\n      }}\n      elevation={4}\n    >\n      <ClearCollageDialog\n        open={clearOpen}\n        onSubmit={handleClearSubmit}\n        onCancel={handleClearCancel}\n        saveType={saveType}\n      />\n      {editControl ? (\n        <Box\n          sx={{\n            backgroundColor: alpha('#fff', 0.15),\n            p: 1,\n          }}\n        >\n          {editControl}\n        </Box>\n      ) : null}\n      <ImageOptions\n        open={imageOpen}\n        value={imageValue}\n        handleDelete={onDelete}\n        handleAdd={handleImageAdd}\n        handleOptionsClose={handleImageOptionsClose}\n      />\n      <EditOptions\n        color={options.color}\n        editOptionsValue={editOptionsValue}\n        open={editOpen}\n        handleOptionsClose={handleEditOptionsClose}\n        handleEditOptionsClick={handleEditOptionsClick}\n      />\n      {mainOpen ? (\n        <MainControls\n          value={value}\n          handleChange={handleChange}\n          saveType={saveType}\n        />\n      ) : null}\n    </Paper>\n  );\n}\n\nMobileControls.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n  }).isRequired,\n  actionProps: PropTypes.shape({\n    onRefresh: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    clearDelete: PropTypes.func.isRequired,\n  }).isRequired,\n  handleClear: PropTypes.func.isRequired,\n  dimensionProps: PropTypes.shape({\n    handleImageAddClick: PropTypes.func.isRequired,\n    footerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n};\n","import PropTypes from 'prop-types';\n// import { useState } from 'react';\n// import InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\n\nexport default function CollageTypeMenu({\n  collageType,\n  width,\n  sizes,\n  handleTypeChange,\n}) {\n  const belowsm = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n  // const [collageType, setCollageType] = useState('A4');\n  const handleChange = (event) => {\n    const ct = event.target.value;\n    handleTypeChange(ct);\n    // setCollageType(ct);\n  };\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{\n        width: belowsm ? '100%' : width,\n        textAlign: 'middle',\n      }}\n    >\n      <Typography\n        sx={{\n          color: 'form.input',\n          fontSize: '0.87rem',\n          fontWeight: 'bold',\n        }}\n      >\n        Collage Type:{' '}\n      </Typography>\n      <FormControl\n        variant=\"standard\"\n        size=\"small\"\n        margin=\"none\"\n        hiddenLabel\n        sx={{ mx: 1, alignItems: 'center' }}\n      >\n        <Select\n          id=\"demo-simple-select-standard\"\n          value={collageType}\n          onChange={handleChange}\n          label=\"Age\"\n          disableUnderline\n          inputProps={{\n            sx: {\n              p: 0,\n              fontWeight: 'bold',\n              fontSize: '0.82rem',\n              color: 'primary.main',\n              pl: 1,\n            },\n          }}\n        >\n          {Object.keys(sizes).map((key) => (\n            <MenuItem key={sizes[key].text} value={key}>\n              {sizes[key].text}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Stack>\n  );\n}\n\nCollageTypeMenu.propTypes = {\n  collageType: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  handleTypeChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport useBase from 'hooks/collage/base';\nimport { useNavigate } from 'react-router-dom';\nimport Dialog from '@mui/material/Dialog';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport DialogContent from '@mui/material/DialogContent';\nimport Box from '@mui/material/Box';\n\nimport Collage from 'components/collage/Collage';\nimport DownloadDialog from 'components/collage/DownloadDialog';\nimport SaveDialog from 'components/collage/SaveDialog';\nimport SaveStatusDialog from 'components/collage/SaveStatusDialog';\nimport Header from 'components/collage/Header';\nimport Loading from 'components/Loading';\nimport View from 'components/collage/View';\n\nimport DesktopActions from 'components/collage/DesktopActions';\nimport DesktopControls from 'components/collage/DesktopControls';\nimport DesktopImageOptions from 'components/collage/DesktopImageOptions';\nimport EditControl from 'components/collage/EditControl';\nimport MobileActions from 'components/collage/MobileActions';\nimport MobileControls from 'components/collage/MobileControls';\nimport CollageTypeMenu from 'components/collage/CollageType';\n\nexport default function BaseCollage({ getCollage, clearCollage, saveType }) {\n  console.log('base collage', saveType);\n  const navigate = useNavigate();\n  const [details, setDetails] = useState({});\n  const [status, setStatus] = useState('fetching');\n  const [commonOpen, setCommonOpen] = useState(false);\n  const [commonMessage, setCommonMessage] = useState('');\n\n  const openCommonDialog = (message) => {\n    console.log('opening common dialog with message', message);\n    if (message !== '') {\n      setCommonMessage(message);\n      setCommonOpen(true);\n    }\n  };\n\n  const closeCommonDialog = () => {\n    console.log('closing common dialog', commonMessage);\n    setCommonOpen(false);\n    setCommonMessage('');\n  };\n  console.log('details', details);\n\n  const [\n    collageType,\n    getDetails,\n    collageName,\n    ,\n    collageID,\n    constants,\n    dimensionProps,\n    optionProps,\n    actionProps,\n    imageProps,\n    treeProps,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n    handleCollageTypeChange,\n    handleNameChange,\n  ] = useBase(details);\n\n  useEffect(async () => {\n    if (Object.keys(details).length === 0) {\n      console.log('savetype', saveType, Object.keys(details).length);\n      if (saveType === 'existing') {\n        const collageDetails = await getCollage(\n          imageProps.setImageCount,\n          imageProps.incrementNewImageCount\n        );\n        setDetails(collageDetails);\n      }\n      console.log('status calculation fetch end', imageProps.imgCount);\n      setStatus('fetch end');\n      // if (saveType === 'new') {\n      //   clearCollage();\n      // }\n    }\n  }, []);\n\n  console.log(\n    'base collage',\n    details,\n    imageProps.imgCount,\n    imageProps.loaded,\n    imageProps.images,\n    imageProps.newImagesLoaded,\n    collageName,\n    collageID\n  );\n\n  useEffect(() => {\n    let st = status;\n    // if (st === 'fetching') return;\n    console.log(\n      'status calculation vars',\n      saveType,\n      st,\n      imageProps.imgCount,\n      Object.keys(details).length\n    );\n    if (st === 'fetching' && saveType === 'new') st = 'empty';\n    if (imageProps.imgCount === 0 && st === 'ready') {\n      st = 'empty';\n    }\n    if (\n      imageProps.imgCount === 0 &&\n      Object.keys(details).length === 0 &&\n      st === 'fetch end'\n    ) {\n      console.log('status calculation setting emmmpty');\n      st = 'empty';\n    }\n    if (\n      imageProps.images.length > 0 &&\n      imageProps.images.length === imageProps.imgCount\n    ) {\n      st = 'preparing';\n    }\n    if (imageProps.images.length < imageProps.imgCount) {\n      st = 'loading';\n    }\n    if (imageProps.loaded >= imageProps.imgCount && imageProps.imgCount > 0) {\n      st = 'ready';\n    }\n    setStatus(st);\n    console.log(\n      'status calculation',\n      imageProps.loaded,\n      imageProps.imgCount,\n      imageProps.images.length,\n      st,\n      details\n    );\n  }, [imageProps]);\n\n  const clearAll = async () => {\n    openCommonDialog('Deleting Collage');\n    setDetails({});\n    handleClear();\n    await clearCollage();\n    setStatus('fetch end');\n    closeCommonDialog();\n    if (saveType === 'existing') {\n      openCommonDialog('Navigating to collages page');\n      setTimeout(() => {\n        closeCommonDialog();\n        navigate('/collages');\n      }, 3000);\n    }\n  };\n\n  const handleSave = async (name) => {\n    console.log('in handle save', getDetails(name), imageProps.images);\n\n    actionProps.onSaveClick();\n    const res =\n      saveType === 'new' ? await newCollage(name) : await saveCollage(name);\n    console.log('save results', res, collageID);\n    if (res) {\n      setTimeout(() => {\n        if (saveType === 'new') clearAll();\n        actionProps.setSaveStart(false);\n        navigate('/collages');\n      }, 3000);\n    }\n  };\n\n  const downloadDialog = (\n    <DownloadDialog\n      open={actionProps.open}\n      onClick={actionProps.onDownloadClick}\n      onClose={actionProps.onDownloadClose}\n      sizes={constants.paperSizes}\n    />\n  );\n\n  const saveDialog = (\n    <SaveDialog\n      collageName={collageName}\n      open={actionProps.saveOpen}\n      onClick={handleSave}\n      onClose={actionProps.onSaveClose}\n    />\n  );\n\n  const saveStatusDialog = (\n    <SaveStatusDialog open={actionProps.saveStart} status={saveStatus} />\n  );\n\n  const collage = (\n    <Collage\n      dimensionProps={dimensionProps}\n      imageProps={imageProps}\n      actionProps={actionProps}\n      collageCallback={collageCallback}\n      handleRemoveImage={handleRemoveImage}\n      options={optionProps.options}\n      tree={treeProps.tree}\n    />\n  );\n\n  const mobileControls = (\n    <MobileControls\n      optionProps={optionProps}\n      actionProps={actionProps}\n      dimensionProps={dimensionProps}\n      handleClear={clearAll}\n      saveType={saveType}\n    />\n  );\n\n  const header = (\n    <Header\n      headerRef={dimensionProps.headerRef}\n      name={collageName}\n      handleNameChange={handleNameChange}\n    />\n  );\n\n  const desktopPhotosComp = (\n    <DesktopImageOptions\n      onDelete={actionProps.onDelete}\n      onAdd={dimensionProps.handleImageAddClick}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n  const desktopControls = (\n    <DesktopControls\n      innerRef={dimensionProps.footerRef}\n      onRefresh={actionProps.onRefresh}\n      photosComp={desktopPhotosComp}\n      editComp={<EditControl optionProps={optionProps} />}\n      handleClear={clearAll}\n      clearDelete={actionProps.clearDelete}\n      saveType={saveType}\n    />\n  );\n\n  const isMobile = window.innerWidth < window.innerHeight;\n  const controls = isMobile ? mobileControls : desktopControls;\n\n  const onSave = async () => actionProps.handleSave();\n\n  const actionsComp = isMobile ? (\n    <MobileActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={onSave}\n    />\n  ) : (\n    <DesktopActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={onSave}\n    />\n  );\n\n  const collageTypeMenu = (\n    <CollageTypeMenu\n      collageType={collageType}\n      width={dimensionProps.width}\n      sizes={constants.paperSizes}\n      handleTypeChange={handleCollageTypeChange}\n    />\n  );\n\n  return (\n    <Box sx={{ backgroundColor: 'gray', height: '100vh' }}>\n      <View\n        open={actionProps.open}\n        saveOpen={actionProps.saveOpen}\n        saveStatusOpen={actionProps.saveStart}\n        dimensionProps={dimensionProps}\n        imageProps={imageProps}\n        header={header}\n        actions={actionsComp}\n        downloadDialog={downloadDialog}\n        saveDialog={saveDialog}\n        saveStatusDialog={saveStatusDialog}\n        collage={collage}\n        controls={controls}\n        status={status}\n        saveType={saveType}\n        collageTypeMenu={collageTypeMenu}\n      />\n      <input\n        ref={dimensionProps.addImageRef}\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={imageProps.handleLoad}\n      />\n      {actionProps.generate ? <Loading title=\"Creating collage ...\" /> : null}\n      <Dialog open={commonOpen}>\n        <DialogContent>\n          <Stack\n            direction=\"row\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <CircularProgress />\n            <Typography variant=\"h6\">{commonMessage}</Typography>\n          </Stack>\n        </DialogContent>\n      </Dialog>\n    </Box>\n  );\n  // return 'base';\n}\n\nBaseCollage.defaultProps = {\n  getCollage: () => {},\n  clearCollage: () => {},\n};\n\nBaseCollage.propTypes = {\n  getCollage: PropTypes.func,\n  clearCollage: PropTypes.func,\n  saveType: PropTypes.string.isRequired,\n};\n"],"names":["url","body","params","method","fetch","then","response","resp","console","log","newCollage","collageID","collageDetails","collage_id","helpers","process","JSON","stringify","error","saveCollage","upload","listCollages","nextToken","next_token","getThumbnail","collageId","getCollage","deleteCollage","checkOptimizeStatus","get","path","newUrl","options","credentials","headers","Headers","URLSearchParams","toString","ok","status","document","cookie","json","post","apiUrl","deleteMethod","OptionsButton","children","onClick","name","Button","id","variant","component","sx","color","borderRadius","backgroundColor","padding","defaultProps","AddPhotos","handleChange","type","hidden","multiple","accept","onChange","fontSize","Typography","fontWeight","getClosest","arr","index1","index2","target","downscaleImage","image","newWidth","newHeight","fileType","canvas","createElement","width","height","getContext","drawImage","toDataURL","event","handleImageCount","handleNewImageCount","handleImageData","files","cnt","length","Array","from","map","file","Image","onload","e","naturalWidth","naturalHeight","src","title","Date","now","imageDetail","aspectRatio","URL","createObjectURL","revokeObjectURL","getCollageDimension","maxW","maxH","a","origAR","wrapText","text","x","y","maxWidth","lineHeight","textCanvas","ctx","font","textAlign","tempX","tempY","words","split","line","testLine","lineArray","n","testWidth","measureText","letterSpacing","push","getTextHeight","scaleFactor","getCut","Math","round","random","findClosest","start","end","mid","findImgPair","i","j","minMatchingCost","abs","getAspectRatio","cut","ar1","ar2","handleImageLoad","resizeImages","originalImages","handleImages","addImagesToDB","tempImages","forEach","origImage","tempImage","imgs","ind","findIndex","elem","slice","convertToRGBA","value","r","g","b","convertBase64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","result","onerror","convertBase64String","readAsD","Blob","textCanvasDraw","textArray","position","canvasWidth","textHeight","textBaseline","fillStyle","fillRect","chunk","textPart","fillText","getImageDimensions","paperWidth","paperHeight","optimizeDimensions","maxPrintWidth","maxPrintHeight","problematicNodes","ar","optimumTreeSizes","pn","newRootWidth","newRootHeight","sort","optimizeImage","time","dataURL","timeEnd","TextDisplay","top","bgcolor","alpha","paddingX","fontFamily","Node","this","left","right","obj","fromObject","getScore","output","concat","display","copyNode","copy","newImages","replaceImages","rest","removeImageData","imageData","find","addImageData","delImg","handleRemoveImage","yOffset","xOffset","handleCollageImageLoad","newX","newY","Box","alt","onLoad","Tooltip","IconButton","size","Delete","DOMDisplay","RenderImage","tempCanvas","tempCtx","floor","log2","radius","clipwidth","clipheight","save","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","canvasElement","CanvasDisplay","newImg","ResizeImage","ImageStyling","clearRect","images","tar","imageCount","targetAspectRatioArr","closestIndex","restImages","targetAspectRatio","leftIndex","rightIndex","filter","item","index","includes","first","second","generate","th","adjustments","adjust","parentWidth","parentHeight","parentX","parentY","parentCut","nodeType","addSize","validateAddSize","lV","lPN","rV","rPN","valid","BinaryTree","undefined","root","tempTree","canvasHeight","topText","lA","score","min","trys","bestAdjust","bestAspectRatio","tolerableDifference","ajstCnt","diff","copyTree","findBestAdjustTree","tolerance","imageWidth","imageHeight","sortedImages","collageArray","imgTree","generateCollageTree","aspR","bAR","toFixed","maxScore","maxElem","element","generateScore","useBase","initialValue","useState","details","setDetails","constants","defaultCollageName","defaultCollageType","resizeImageWidth","thumbnailHeight","paperSizes","A4","A3","A4LandScape","A3LandScape","FBCoverDesktop","WhatsappStatus","collageName","setCollageName","collageType","setCollageType","uploadedImages","setUploadedImages","dimensions","headerRef","useRef","actionsRef","footerRef","addImageRef","setHeight","setImageHeight","setImageWidth","setWidth","maxHeight","setMaxHeight","setMaxWidth","setTextHeight","setDimensions","window","innerWidth","innerHeight","otherHeight","current","offsetHeight","headerHeight","actionsWidth","offsetWidth","footerWidth","useEffect","addEventListener","removeEventListener","handleImageAddClick","click","useDimensions","optionsInitValue","setOptions","displayColorPicker","setDisplayColorPicker","clear","handlePaddingChange","opts","handleRadiusChange","handleColorClick","dcp","handleColorClose","handleColorChange","clr","rgb","handlePositionChange","handleTextChange","useOptions","actions","open","setOpen","saveOpen","setSaveOpen","saveStart","setSaveStart","refresh","setRefresh","setGenerate","removeImage","setRemoveImage","printOptions","setPrintOptions","clearDelete","handleDownload","handleGenerateCallback","onDelete","ri","onDownloadClick","w","h","onDownloadClose","onRefresh","onSaveClose","onSaveClick","handleSave","useActions","newImgCount","setNewImageCount","newImagesLoaded","setNewImagesLoaded","imgCount","setImageCount","loaded","setLoaded","setImages","handleLoad","remove","removeIndex","newImagesArr","getImageData","imageArr","img","incrementNewImageCount","useImages","treeState","loadingCallback","tree","setTree","newTree","Object","keys","reAdjust","imagesArr","treeUtils","bestAspectRatioTree","addOptions","useTree","thumbnail","setThumbnail","useLayoutEffect","collage_type","finalizing","saveStatus","setSaveStatus","updateStatus","key","st","imagesText","updateImagesStatus","handleClear","allSettled","clearPromises","newAspectRatioTree","generateThumbnail","thumbnailWidth","thumbnailCanvas","thumbnailTree","thumbnailDetails","uploadCollageDetails","dets","created_at","last_updated_at","collageapi","uploadCollageImages","imageURLS","imagePromises","thumbnailKey","thumbnailPromise","toBlob","blob","Img","uploadPromises","uploadStatus","tH","getDetails","imgTitle","ct","newName","Collage","dimensionProps","imageProps","actionProps","collageCallback","collage","setCollage","isEmpty","t","createCollage","collageElem","pw","ph","canvasTree","getCanvasTree","imgPW","imgPH","generateCollage","ctree","getCanvas","setTimeout","pW","pH","link","download","href","probNodes","newPW","newPH","newCanvasTree","newValid","newProbNodes","DownloadDialog","onClose","sizes","setValue","Dialog","fullWidth","DialogTitle","DialogContent","dividers","alignItems","justifyContent","DialogContentText","pr","FormControl","InputLabel","Select","labelId","defaultValue","label","MenuItem","DialogActions","disabled","SaveDialog","setName","nameError","TextField","mb","InputProps","helperText","StatusIndicator","CircularProgress","Pending","CheckCircleOutline","Close","Status","pending","done","running","failed","Stack","direction","OverAllStatus","counter","spacing","p","SaveStatusDialog","overAllStatus","setCounter","timerId","clearTimeout","statusArr","values","val","HeaderNameSection","editable","setEditable","handleBlur","autoFocus","onBlur","onKeyDown","keyCode","shiftKey","InputLabelProps","focused","transform","cursor","Header","handleNameChange","belowmd","useMediaQuery","theme","breakpoints","down","Paper","ref","elevation","postion","Link","underline","ArrowBack","EmptyCollage","loadComponent","backgroundImage","collageBack","backgroundSize","objectFit","View","content","saveStatusOpen","header","downloadDialog","saveDialog","saveStatusDialog","controls","collageTypeMenu","showControls","Loading","justifySelf","DBNA","icon","blurControl","BottomNavigationAction","showLabel","py","outline","DesktopDrawer","anchor","innerRef","Drawer","PaperProps","border","ControlsDivider","Divider","my","DesktopActions","onDownload","onSave","newValue","List","Save","Download","Print","ClearCollageDialog","onSubmit","onCancel","saveType","pb","noWrap","DesktopControls","photosComp","editComp","imageOptionsOpen","setImageOptionsOpen","editOptionsOpen","setEditOptionsOpen","clearOpen","setClearOpen","closeAll","handleClearClose","AutoAwesomeMosaic","Photo","Edit","Refresh","DesktopImageOptions","onAdd","AddPhotoAlternate","PaddingControl","mixBlendMode","Slider","valueLabelDisplay","step","max","RadiusControl","ColorControl","handleClick","handleClose","background","boxShadow","ColorPicker","zIndex","bottom","TextControl","handleTextSubmit","collageTextError","FormGroup","row","FormControlLabel","disableTypography","control","Checkbox","checked","EditControl","optionProps","MBNA","toLowerCase","MobileActions","BottomNavigation","showLabels","MainControls","EditOptions","editOptionsValue","handleOptionsClose","handleEditOptionsClick","borderTop","Padding","CropFree","Square","fill","Title","ImageOptions","handleDelete","handleAdd","MobileControls","mainOpen","setMainOpen","editOpen","setEditOpen","editControl","setEditControl","setEditOptionsValue","imageOpen","setImageOpen","imageValue","setImageValue","handleEditOptionsClose","mt","nV","CollageTypeMenu","handleTypeChange","belowsm","margin","hiddenLabel","mx","disableUnderline","inputProps","pl","BaseCollage","clearCollage","navigate","useNavigate","setStatus","commonOpen","setCommonOpen","commonMessage","setCommonMessage","openCommonDialog","message","closeCommonDialog","treeProps","handleCollageTypeChange","clearAll","res","mobileControls","desktopPhotosComp","desktopControls","isMobile","actionsComp"],"sourceRoot":""}