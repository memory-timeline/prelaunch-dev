{"version":3,"file":"static/js/212.32dd0e84.chunk.js","mappings":"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","sources":["api/collage.jsx","api/helpers.js","components/OptionsButton.jsx","components/AddPhotos.jsx","components/LoginButton.jsx","components/collage/dbutils.js","components/collage/helpers.js","components/profile.jsx","db.js","hocs/require-authentication.jsx","components/collage/node.jsx","components/collage/binaryTree.jsx","components/collage/treeUtils.js","hooks/collage/base.jsx","hooks/collage/dimensions.jsx","hooks/collage/options.jsx","hooks/collage/actions.jsx","hooks/collage/images.jsx","hooks/collage/tree.jsx","components/collage/Collage.jsx","components/collage/DownloadDialog.jsx","components/collage/SaveDialog.jsx","components/collage/SaveStatusDialog.jsx","components/collage/Header.jsx","components/collage/EmptyCollage.jsx","components/collage/View.jsx","components/collage/DesktopActionItem.jsx","components/collage/DesktopDrawer.jsx","components/collage/ControlsDivider.jsx","components/collage/DesktopActions.jsx","components/collage/ClearCollageDialog.jsx","components/collage/DesktopControls.jsx","components/collage/DesktopImageOptions.jsx","components/collage/PaddingControl.jsx","components/collage/RadiusControl.jsx","components/collage/ColorControl.jsx","components/collage/TextControl.jsx","components/collage/EditControl.jsx","components/collage/MobileActionItem.jsx","components/collage/MobileActions.jsx","components/collage/MainControls.jsx","components/collage/EditOptions.jsx","components/collage/ImageOptions.jsx","components/collage/MobileControls.jsx","pages/collage/Base.jsx","utils.jsx"],"sourcesContent":["import helpers from 'api/helpers';\n\nfunction newCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/new';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction saveCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/save';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\nasync function upload(url, body) {\n  try {\n    const params = { body, method: 'PUT' };\n    const resp = await fetch(url, params).then((response) => response);\n    return resp;\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction listCollages(nextToken) {\n  try {\n    const path = '/api/collage/list';\n    const params = { next_token: nextToken };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getThumbnail(collageId) {\n  try {\n    const path = '/api/collage/thumbnail';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getCollage(collageId) {\n  try {\n    const path = '/api/collage/get';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction deleteCollage(collageId) {\n  try {\n    const path = '/api/collage/delete';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.deleteMethod(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction checkOptimizeStatus(collageId) {\n  try {\n    const path = '/api/collage/resized-count';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\nexport default {\n  newCollage,\n  saveCollage,\n  upload,\n  listCollages,\n  getThumbnail,\n  getCollage,\n  deleteCollage,\n  checkOptimizeStatus,\n};\n","const get = async (url, path, params = {}) => {\n  let newUrl = `https://${url}${path}`;\n  const options = {\n    method: 'GET',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  newUrl += `?${new URLSearchParams(params).toString()}`;\n  const resp = await fetch(newUrl, options);\n  if (!resp.ok) {\n    if (resp.status === 401) {\n      document.cookie =\n        'userInfo=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return { status: 'unauthenticated' };\n    }\n    if (resp.status === 403) {\n      return { status: 'forbidden' };\n    }\n  }\n\n  return resp.json();\n};\n\nconst post = async (url, path, params, body) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'POST',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body,\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\n\nconst deleteMethod = async (url, path, params) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'DELETE',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\nexport default { get, post, deleteMethod };\n","import PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\n\nexport default function OptionsButton({ children, onClick, name }) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: 'muted.main',\n        borderRadius: 15,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: 'muted.main',\n          backgroundColor: 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  //  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport OptionsButton from 'components/OptionsButton';\nimport Typography from '@mui/material/Typography';\n\nexport default function AddPhotos({ handleChange }) {\n  return (\n    <OptionsButton name=\"add\">\n      <input\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={handleChange}\n      />\n      <AddPhotoIcon sx={{ fontSize: '2rem' }} />\n      <Typography sx={{ fontWeight: 'bold' }}>Add Images</Typography>\n    </OptionsButton>\n  );\n}\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import Button from '@mui/material/Button';\n// import Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\n\nexport default function LoginButton({ authURL, next }) {\n  const url =\n    next !== ''\n      ? `https://${authURL}/oauth2/authorize?next=${next}`\n      : `https://${authURL}/oauth2/authorize`;\n  return (\n    <a\n      href={url}\n      target=\"_self\"\n      style={{ textDecoration: 'none', color: 'white' }}\n    >\n      <Button\n        type=\"submit\"\n        variant=\"outlined\"\n        sx={{\n          borderRadius: '5px',\n          borderColor: 'white',\n          fontWeight: 'bold',\n          color: 'white',\n          '&:hover': {\n            color: 'white',\n            borderColor: 'white',\n            backgroundColor: alpha('#fff', 0.1),\n          },\n        }}\n      >\n        Login\n      </Button>\n    </a>\n  );\n}\n\nLoginButton.propTypes = {\n  authURL: PropTypes.string.isRequired,\n  next: PropTypes.string.isRequired,\n};\n","import db from 'db';\n\nasync function getData(tableName) {\n  const rows = await db.collageDB[tableName].toArray();\n  if (rows.length) return rows;\n  return [];\n}\n\nfunction clearData(tableName) {\n  return db.collageDB[tableName].clear();\n}\n\nasync function getCollageDetails() {\n  const rows = await getData('details');\n  console.log('in get collage details', rows);\n  if (rows.length) return rows[0];\n  return {};\n}\n\nasync function getCollageData() {\n  const details = await getCollageDetails();\n  const images = await getData('images');\n  return { details, images };\n}\n\nfunction clearCollageData() {\n  clearData('details');\n  clearData('images');\n}\n\nasync function save(data, tableName) {\n  return data.map((dt) => db.collageDB[tableName].put(dt));\n}\n\nexport default { getCollageData, clearCollageData, save };\n","function getClosest(arr, index1, index2, target) {\n  if (target - arr[index1] >= arr[index2] - target) return index2;\n  return index1;\n}\n\nfunction findClosest(arr, target) {\n  const n = arr.length;\n\n  if (target <= arr[0]) return 0;\n  if (target >= arr[n - 1]) return n - 1;\n\n  let start = 0;\n  let end = n;\n  let mid = 0;\n  while (start < end) {\n    mid = (start + end) / 2;\n\n    if (arr[mid] === target) return mid;\n\n    if (target < arr[mid]) {\n      if (mid > 0 && target > arr[mid - 1])\n        return getClosest(arr, mid - 1, mid, target);\n      end = mid;\n    } else {\n      if (mid < n - 1 && target < arr[mid + 1])\n        return getClosest(arr, mid, mid + 1, target);\n      start = mid + 1;\n    }\n  }\n\n  return mid;\n}\n\nfunction getCut() {\n  const cutArr = ['v', 'h'];\n  return cutArr[Math.round(Math.random())];\n}\n\nfunction findImgPair(arr, target) {\n  let start = 0;\n  let end = arr.length - 1;\n  let i = start;\n  let j = end;\n  let minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n  while (start <= end) {\n    if (arr[start] + arr[end] > target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        // update fetched pair and matching cost\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      end -= 1;\n    } else if (arr[start] + arr[end] <= target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      start += 1;\n    } else {\n      // best pair (m === 0) found\n      i = start;\n      j = end;\n      break;\n    }\n  }\n  const randomNumber = Math.round(Math.random());\n  if (randomNumber) return [i, j];\n  return [j, i];\n}\n\nfunction getAspectRatio(cut, ar1, ar2) {\n  if (cut === 'v') return ar1 + ar2;\n  return (ar1 * ar2) / (ar1 + ar2);\n}\n\nfunction downscaleImage(image, newWidth, newHeight, fileType) {\n  const canvas = document.createElement('canvas');\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, newWidth, newHeight);\n  return canvas.toDataURL(fileType);\n}\n\nfunction resizeImages(originalImages, maxWidth, handleImages, addImagesToDB) {\n  const tempImages = [];\n  originalImages.forEach((origImage) => {\n    const image = new Image();\n    image.onload = () => {\n      const { title, aspectRatio, type } = origImage;\n      const dataurl = downscaleImage(\n        image,\n        maxWidth,\n        maxWidth / aspectRatio,\n        origImage.type\n      );\n      const tempImage = {\n        title,\n        src: dataurl,\n        naturalHeight: maxWidth / aspectRatio,\n        naturalWidth: maxWidth,\n        aspectRatio,\n        type,\n      };\n      tempImages.push(tempImage);\n      handleImages((imgs) => {\n        const ind = imgs.findIndex((elem) => elem.title === origImage.title);\n        return [...imgs.slice(0, ind), tempImage, ...imgs.slice(ind + 1)];\n      });\n      addImagesToDB(tempImage);\n    };\n    image.src = origImage.src;\n  });\n}\n\nfunction convertBase64(file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\n\nfunction convertBase64String(file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsD(new Blob(file));\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\nfunction handleImageLoad(\n  event,\n  handleImageCount,\n  handleNewImageCount,\n  handleImageData\n) {\n  if (event.target.files) {\n    handleImageCount((cnt) => cnt + event.target.files.length);\n    handleNewImageCount(event.target.files.length);\n    const files = Array.from(event.target.files);\n    files.map(async (file) => {\n      const image = new Image();\n      image.onload = (e) => {\n        const { naturalWidth, naturalHeight, src } = e.target;\n        const title = `${Date.now()}-${file.name}`;\n        const aspectRatio = naturalWidth / naturalHeight;\n        const imageDetail = {\n          title,\n          src,\n          naturalHeight,\n          naturalWidth,\n          aspectRatio,\n          type: file.type,\n          file,\n        };\n        handleImageData(imageDetail);\n      };\n      image.src = await convertBase64(file);\n    });\n  }\n}\n\nfunction wrapText(text, x, y, maxWidth, fontSize, lineHeight) {\n  // First, start by splitting all of our text into words,\n  // but splitting it into an array split by spaces\n  const paddingX = 1; // 8px on both sided\n  const textCanvas = document.createElement('canvas');\n  textCanvas.width = maxWidth - 2 * paddingX * 8;\n  textCanvas.height = 1000;\n  const ctx = textCanvas.getContext('2d');\n  ctx.font = `${fontSize}px Arial`;\n  ctx.textAlign = 'center';\n  const tempX = x;\n  let tempY = y;\n  const words = text.split(' ');\n  let line = ''; // This will store the text of the current line\n  let testLine = ''; // This will store the text when we add a word, to test if it's too long\n  const lineArray = []; // This is an array of lines, which the function will return\n\n  // Lets iterate over each word\n  for (let n = 0; n < words.length; n += 1) {\n    // Create a test line, and measure it..\n    testLine += `${words[n]} `;\n    const metrics = ctx.measureText(testLine);\n    const testWidth = metrics.width;\n    console.log(\n      'wrap text ',\n      line,\n      testLine,\n      testWidth,\n      textCanvas.width,\n      ctx.letterSpacing\n    );\n    // If the width of this test line is more than the max width\n    if (testWidth > textCanvas.width && n > 0) {\n      // Then the line is finished, push the current line into \"lineArray\"\n      lineArray.push([line, tempX, tempY]);\n      // Increase the line height, so a new line is started\n      tempY += lineHeight;\n      // Update line and test line to use this word as the first word on the next line\n      line = `${words[n]} `;\n      testLine = `${words[n]} `;\n    } else {\n      // If the test line is still less than the max width, then add the word to the current line\n      line += `${words[n]} `;\n    }\n    // If we never reach the full max width, then there is only one line..\n    // so push it into the lineArray so we return something\n    if (n === words.length - 1) {\n      lineArray.push([line, tempX, tempY]);\n    }\n  }\n  // Return the line array\n  return lineArray;\n}\n\nconst convertToRGBA = (value) =>\n  `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nconst getCollageDimension = (maxW, maxH, a) => {\n  const origAR = maxW / maxH;\n  if (origAR < a) return [maxW, maxW / a];\n  if (origAR > a) return [maxH * a, maxH];\n  return [maxW, maxH];\n};\n\nexport default {\n  getCut,\n  findClosest,\n  findImgPair,\n  getAspectRatio,\n  handleImageLoad,\n  resizeImages,\n  wrapText,\n  convertToRGBA,\n  getCollageDimension,\n  downscaleImage,\n  convertBase64,\n  convertBase64String,\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport Logout from '@mui/icons-material/Logout';\nimport Typography from '@mui/material/Typography';\nimport ListItemText from '@mui/material/ListItemText';\nimport Link from '@mui/material/Link';\nimport { alpha } from '@mui/material/styles';\nimport Authenticate from '../hocs/require-authentication';\nimport commonUtils from '../utils';\n\nexport function ProfileAvatar({ name, picture, email }) {\n  const initials = Array.from(email)[0].toUpperCase();\n  return (\n    <Avatar\n      sx={{\n        borderRadius: '50%',\n        // border: 3,\n        borderColor: alpha('#fff', 0.8),\n        referrerPolicy: 'no-referrer',\n      }}\n      alt={name}\n      src={picture}\n    >\n      {initials}\n    </Avatar>\n  );\n}\n\nfunction ProfileIcon({ name, email, open, handleClick, avatar }) {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        textAlign: 'center',\n        marginRight: '10px',\n      }}\n    >\n      <Tooltip\n        title={\n          <>\n            <Typography>{name}</Typography>\n            <Typography>{email}</Typography>\n          </>\n        }\n      >\n        <IconButton\n          onClick={handleClick}\n          size=\"small\"\n          aria-controls={open ? 'account-menu' : undefined}\n          aria-haspopup=\"true\"\n          aria-expanded={open ? 'true' : undefined}\n          sx={{ ml: 2 }}\n        >\n          {avatar}\n        </IconButton>\n      </Tooltip>\n    </Box>\n  );\n}\n\nfunction ProfileMenu({ name, open, handleClose, anchorEl, avatar, email }) {\n  const profileIdentifier = name || email;\n  const authURL = process.env.REACT_APP_AUTH_URL;\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      id=\"account-menu\"\n      open={open}\n      onClose={handleClose}\n      onClick={handleClose}\n      PaperProps={{\n        elevation: 0,\n        sx: {\n          filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n          mt: 1.5,\n          '& .MuiAvatar-root': {\n            width: 32,\n            height: 32,\n            ml: -0.5,\n            mr: 1,\n          },\n          '&:before': {\n            content: '\"\"',\n            display: 'block',\n            position: 'absolute',\n            top: 0,\n            right: 14,\n            width: 10,\n            height: 10,\n            bgcolor: 'background.paper',\n            transform: 'translateY(-50%) rotate(45deg)',\n            zIndex: 0,\n          },\n        },\n      }}\n      transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n      anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n    >\n      <MenuItem>\n        {avatar}\n        <ListItemText>{profileIdentifier}</ListItemText>\n      </MenuItem>\n      <Divider />\n      <Link\n        href={`https://${authURL}/oauth2/logout`}\n        underline=\"none\"\n        sx={{ alignItems: 'center', display: 'flex' }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <Logout fontSize=\"small\" />\n          </ListItemIcon>\n          <Typography sx={{ color: 'muted.main' }}>Logout</Typography>\n        </MenuItem>\n      </Link>\n    </Menu>\n  );\n}\n\nfunction Profile() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const userInfo = commonUtils.getUserInfo();\n  const handleClose = () => setAnchorEl(null);\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const userAvatar = (\n    <ProfileAvatar\n      name={userInfo.name}\n      picture={userInfo.picture}\n      email={userInfo.email}\n    />\n  );\n\n  return (\n    <>\n      <ProfileIcon\n        avatar={userAvatar}\n        open={open}\n        email={userInfo.email}\n        handleClick={handleClick}\n        name={userInfo.name}\n      />\n      <ProfileMenu\n        anchorEl={anchorEl}\n        avatar={userAvatar}\n        handleClose={handleClose}\n        name={userInfo.name}\n        email={userInfo.email}\n        open={open}\n      />\n    </>\n  );\n}\n\nexport default function ProfileLink() {\n  //  const ProfileButton = Authenticate(Profile);\n  return (\n    <Grid item sx={{ paddingTop: '0.3rem' }}>\n      <Authenticate>\n        <Profile />\n      </Authenticate>\n    </Grid>\n  );\n}\n\nProfileIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  avatar: PropTypes.node.isRequired,\n};\n\nProfileMenu.defaultProps = {\n  anchorEl: '',\n};\n\nProfileMenu.propTypes = {\n  name: PropTypes.string.isRequired,\n  anchorEl: PropTypes.node,\n  handleClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  avatar: PropTypes.node.isRequired,\n  email: PropTypes.string.isRequired,\n};\n\nProfileAvatar.propTypes = {\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n};\n","import Dexie from 'dexie';\n\nconst collageDB = new Dexie('collage');\n\ncollageDB.version(1).stores({\n  images:\n    'title, src,naturalWidth,naturalHeight,aspectRatio,type,targetAspectRatio,file', // Primary key and indexed props\n  details: '++id, details',\n});\n\nexport default { collageDB };\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport Button from '@mui/material/Button';\nimport commonUtils from '../utils';\n\nfunction AuthDialog({ open, onLogin }) {\n  console.log('auth dialog', open);\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Login</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        Please login to your account to complete this action\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          onClick={onLogin}\n          sx={{ color: 'primary', fontWeight: 'bold' }}\n        >\n          Login\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\nAuthDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onLogin: PropTypes.func.isRequired,\n};\n\nfunction Authenticate({ children, nextPath }) {\n  const [open, setOpen] = useState(true);\n  const authURL = process.env.REACT_APP_AUTH_URL;\n  const location = useLocation();\n  const cookieValue = commonUtils.getUserInfo();\n  const isLoggedIn = cookieValue !== '';\n\n  console.log('auth', open);\n  if (isLoggedIn === true) {\n    return children;\n  }\n\n  const redirectToLogin = () => {\n    const path = `https://${authURL}/oauth2/authorize?next=${location.pathname}${location.search}`;\n    window.location.replace(path);\n  };\n\n  if (nextPath) {\n    return <Navigate to={nextPath} replace />;\n  }\n\n  return (\n    <AuthDialog\n      open={open}\n      onLogin={redirectToLogin}\n      onClose={() => setOpen(false)}\n    />\n  );\n}\n\nAuthenticate.defaultProps = {\n  nextPath: '',\n};\n\nAuthenticate.propTypes = {\n  children: PropTypes.node.isRequired,\n  nextPath: PropTypes.string,\n};\n\nexport default Authenticate;\n","import Box from '@mui/material/Box';\n//  import Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Tooltip from '@mui/material/Tooltip';\nimport { alpha } from '@mui/material/styles';\nimport helpers from 'components/collage/helpers';\n\nexport default class Node {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n\n  fromObject(obj) {\n    if (obj != null) {\n      this.value = obj.value;\n      if (obj.left != null) {\n        this.left = new Node(obj.left.value);\n        this.left.fromObject(obj.left);\n      }\n      if (obj.right != null) {\n        this.right = new Node(obj.right.value);\n        this.right.fromObject(obj.right);\n      }\n      return this;\n    }\n    return null;\n  }\n\n  getScore() {\n    if ('cut' in this.value) {\n      return [...this.left.getScore(), ...this.right.getScore()];\n    }\n\n    return [this.value.width + this.value.height];\n  }\n\n  display() {\n    let output = [];\n    const { cut, title, aspectRatio } = this.value;\n    if (this === null) return null;\n    if ('cut' in this.value) output.push([cut, aspectRatio]);\n    if ('title' in this.value) output.push([title, aspectRatio]);\n    if (this.left !== null) output = output.concat(this.left.display());\n    if (this.right !== null) output = output.concat(this.right.display());\n    return output;\n  }\n\n  copy() {\n    if (this === null) return null;\n    const copyNode = new Node({ ...this.value });\n    if (this.left != null) copyNode.left = this.left.copy();\n    if (this.right != null) copyNode.right = this.right.copy();\n    return copyNode;\n  }\n\n  replaceImages(newImages) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const findIndex = newImages.findIndex(\n          (elem) => elem.title === this.value.title\n        );\n        const origImage = newImages[findIndex];\n        this.value.src = origImage.src;\n        this.value.naturalWidth = origImage.naturalWidth;\n        this.value.naturalHeight = origImage.naturalHeight;\n      }\n      if (this.left != null) this.left.replaceImages(newImages);\n      if (this.right != null) this.right.replaceImages(newImages);\n    }\n  }\n\n  removeImageData() {\n    if (this !== null) {\n      if ('title' in this.value) {\n        this.value.src = '';\n      }\n      if (this.left != null) this.left.removeImageData();\n      if (this.right != null) this.right.removeImageData();\n    }\n  }\n\n  addImageData(imageData) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const image = imageData.find((elem) => elem.title === this.value.title);\n        this.value.src = image.src;\n      }\n      if (this.left != null) this.left.addImageData(imageData);\n      if (this.right != null) this.right.addImageData(imageData);\n    }\n  }\n\n  RenderImage(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    const { width, title, src, x, y } = this.value;\n\n    const newX = x + xOffset;\n    const newY = y + yOffset;\n    console.log('rendering image', title);\n    return (\n      <>\n        <Box\n          key={title}\n          component=\"img\"\n          title={title}\n          alt={title}\n          width={width}\n          onLoad={() => {\n            handleCollageImageLoad();\n            console.log('loaded', title);\n          }}\n          src={src}\n          sx={{\n            position: 'absolute',\n            padding: `${padding}px`,\n            borderRadius: `${borderRadius}px`,\n            left: this.value.x + xOffset,\n            top: this.value.y + yOffset,\n          }}\n        />\n        {/*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    top: newY,\n         *    left: newX,\n         *    backgroundColor: 'white',\n         *    fontSize: '15px',\n         *  }}\n         *>\n         *  {newX.toFixed(2)}\n         *  ,\n         *  {newY.toFixed(2)}\n         *</Typography>\n         */\n        /*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    top: this.value.y + yOffset + padding,\n         *    left: this.value.x + xOffset + padding,\n         *    backgroundColor: 'white',\n         *  }}\n         *>\n         *  {width.toFixed(2)}\n         *  ,\n         *  {height.toFixed(2)}\n         *</Typography>\n         */\n        /*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    bottom: 38,\n         *    right: 10,\n         *    backgroundColor: 'white',\n         *    fontSize: '0.5rem',\n         *    fontWeight: 700,\n         *  }}\n         *>\n         *  {title}\n         *</Typography>\n         */}\n\n        {delImg === true ? (\n          <Tooltip title=\"Remove Image\">\n            <IconButton\n              size=\"medium\"\n              sx={{\n                color: alpha('#000', 0.7),\n                bgcolor: alpha('#fff', 0.5),\n                position: 'absolute',\n                top: newY + padding,\n                left: newX + padding,\n                padding: `${padding}px`,\n                borderRadius: '0 0 5px 0',\n              }}\n              onClick={() => handleRemoveImage(title)}\n            >\n              <DeleteIcon size=\"medium\" />\n            </IconButton>\n          </Tooltip>\n        ) : null}\n      </>\n    );\n  }\n\n  DOMDisplay(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    console.log(\n      'node dom display',\n      padding,\n      borderRadius,\n      delImg,\n      handleRemoveImage,\n      yOffset,\n      xOffset,\n      this.value.title\n    );\n    const { cut } = this.value;\n    if (this === null) return null;\n    if (cut) {\n      console.log(this.right, this.left);\n      return (\n        <>\n          {this.left != null\n            ? this.left.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n          {this.right != null\n            ? this.right.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n        </>\n      );\n    }\n    if ('title' in this.value)\n      return this.RenderImage(\n        padding,\n        borderRadius,\n        delImg,\n        handleRemoveImage,\n        yOffset,\n        xOffset,\n        handleCollageImageLoad\n      );\n    return null;\n  }\n\n  ResizeImage(image) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = this.value.naturalWidth;\n    tempCanvas.height = this.value.naturalHeight;\n    const tempCtx = tempCanvas.getContext('2d');\n    let width = this.value.naturalWidth;\n    let height = this.value.naturalHeight;\n    let newWidth;\n    let newHeight;\n    const scaleFactor = Math.floor(\n      Math.log2(this.value.naturalWidth / this.value.width)\n    );\n    if (scaleFactor === 0) {\n      tempCtx.drawImage(\n        image,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    } else {\n      for (let i = 0; i < scaleFactor; i += 1) {\n        newWidth = width >> 1; // eslint-disable-line no-bitwise\n        newHeight = newWidth / this.value.aspectRatio; // eslint-disable-line no-bitwise\n        if (i === 0) {\n          tempCtx.drawImage(\n            image,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        } else {\n          tempCtx.drawImage(\n            tempCanvas,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        }\n        width = newWidth;\n        height = newHeight;\n      }\n\n      tempCtx.drawImage(\n        tempCanvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    }\n    return tempCanvas;\n  }\n\n  ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset) {\n    const x = this.value.x + padding + xOffset;\n    const y = this.value.y + padding + yOffset;\n    const clipwidth = this.value.width - 2 * padding;\n    const clipheight = clipwidth / this.value.aspectRatio;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + clipwidth - radius, y);\n    ctx.quadraticCurveTo(x + clipwidth, y, x + clipwidth, y + radius);\n    ctx.lineTo(x + clipwidth, y + clipheight - radius);\n    ctx.quadraticCurveTo(\n      x + clipwidth,\n      y + clipheight,\n      x + clipwidth - radius,\n      y + clipheight\n    );\n    ctx.lineTo(x + radius, y + clipheight);\n    ctx.quadraticCurveTo(x, y + clipheight, x, y + clipheight - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.clip();\n\n    ctx.drawImage(\n      tempCanvas,\n      0,\n      0,\n      this.value.width,\n      this.value.height,\n      x,\n      y,\n      clipwidth,\n      clipheight\n    );\n    ctx.restore();\n  }\n\n  CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset) {\n    if ('cut' in this.value) {\n      this.left.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n      this.right.CanvasDisplay(\n        canvasElement,\n        padding,\n        radius,\n        yOffset,\n        xOffset\n      );\n    }\n\n    if ('title' in this.value) {\n      const ctx = canvasElement.getContext('2d');\n      const newImg = new Image();\n      newImg.onload = () => {\n        const tempCanvas = this.ResizeImage(newImg);\n        const tempCtx = tempCanvas.getContext('2d');\n        this.ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset);\n        tempCtx.clearRect(0, 0, tempCanvas.width, tempCanvas.height);\n      };\n      newImg.src = this.value.src;\n    }\n  }\n\n  generate(images, tar, imageCount) {\n    const targetAspectRatioArr = images.map(\n      (image) => image.naturalWidth / image.naturalHeight\n    );\n    if (imageCount < 1) return [];\n    if (imageCount === 1) {\n      const closestIndex = helpers.findClosest(targetAspectRatioArr, tar);\n      this.value = images[closestIndex];\n      this.left = null;\n      this.right = null;\n      return [\n        ...images.slice(0, closestIndex),\n        ...images.slice(closestIndex + 1),\n      ];\n    }\n\n    const cut = helpers.getCut();\n    this.value = { cut, targetAspectRatio: tar };\n    if (imageCount === 2) {\n      const [leftIndex, rightIndex] = helpers.findImgPair(\n        targetAspectRatioArr,\n        tar\n      );\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        images[leftIndex].aspectRatio,\n        images[rightIndex].aspectRatio\n      );\n      this.left = new Node(images[leftIndex]);\n      this.right = new Node(images[rightIndex]);\n      return images.filter(\n        (item, index) => ![leftIndex, rightIndex].includes(index)\n      );\n    }\n\n    let restImages;\n    let targetAspectRatio;\n    this.left = new Node({ cut: helpers.getCut() });\n    //  this.right = new Node({ cut: helpers.getCut() });\n    this.right = new Node({ cut: this.left.value.cut === 'v' ? 'h' : 'v' });\n\n    targetAspectRatio = tar / 2;\n    if (cut === 'v') {\n      targetAspectRatio = tar * 2;\n    }\n\n    const randomNumber = Math.round(Math.random());\n    const [first, second] = randomNumber\n      ? ['left', 'right']\n      : ['right', 'left'];\n    restImages = this[first].generate(\n      images,\n      targetAspectRatio,\n      imageCount - Math.floor(imageCount / 2)\n    );\n    restImages = this[second].generate(\n      restImages,\n      targetAspectRatio,\n      Math.floor(imageCount / 2)\n    );\n\n    this.value.aspectRatio = helpers.getAspectRatio(\n      this.value.cut,\n      this.left.value.aspectRatio,\n      this.right.value.aspectRatio\n    );\n\n    return restImages;\n  }\n\n  adjust(th) {\n    let adjustments = 0;\n    if (this === null) return adjustments;\n\n    if (this.left !== null && this.right !== null) {\n      if (this.value.aspectRatio > this.value.targetAspectRatio * th) {\n        this.value.cut = 'h';\n        adjustments += 1;\n      }\n      if (this.value.aspectRatio < this.value.targetAspectRatio / th) {\n        this.value.cut = 'v';\n        adjustments += 1;\n      }\n\n      if (this.value.cut === 'v') {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n      } else {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n      }\n      adjustments += this.left.adjust(th) + this.right.adjust(th);\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        this.left.value.aspectRatio,\n        this.right.value.aspectRatio\n      );\n    }\n\n    return adjustments;\n  }\n\n  addSize(parentWidth, parentHeight, parentX, parentY, parentCut, nodeType) {\n    if (parentCut === 'v') {\n      this.value.height = parentHeight;\n      this.value.width = this.value.height * this.value.aspectRatio;\n    } else {\n      this.value.width = parentWidth;\n      this.value.height = this.value.width / this.value.aspectRatio;\n    }\n\n    if (nodeType === 'left') {\n      this.value.x = parentX;\n      this.value.y = parentY;\n    } else if (parentCut === 'h') {\n      this.value.y = parentY + parentHeight - this.value.height;\n      this.value.x = parentX;\n    } else {\n      this.value.x = parentX + parentWidth - this.value.width;\n      this.value.y = parentY;\n    }\n\n    if (this.left !== null) {\n      this.left.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'left'\n      );\n    }\n    if (this.right !== null) {\n      this.right.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'right'\n      );\n    }\n  }\n}\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\nimport Node from './node';\nimport helpers from './helpers';\n\nconst convertToRGBA = (value) =>\n  `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nfunction TextDisplay(textArray, position) {\n  return (\n    <>\n      {\n        // eslint-disable-next-line react/destructuring-assignment\n        textArray.map((chunk) => (\n          <Typography\n            key={chunk[2]}\n            sx={{\n              width: '100%',\n              position: 'absolute',\n              top: position + chunk[2],\n              bgcolor: alpha('#1c1c1c', 0.7),\n              paddingX: 1,\n              color: 'button.main',\n              textAlign: 'center',\n              fontFamily: 'Arial',\n              fontSize: '20px',\n              lineHeight: '25px',\n              letterSpacing: 'normal',\n            }}\n          >\n            {chunk[0]}\n          </Typography>\n        ))\n      }\n    </>\n  );\n}\n\nfunction TextCanvasDraw(\n  ctx,\n  textArray,\n  position,\n  scaleFactor,\n  canvasWidth,\n  textHeight\n) {\n  ctx.font = `${scaleFactor * 20}px Arial`;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'top';\n  ctx.fillStyle = '#1c1c1cb3';\n  ctx.fillRect(0, position, canvasWidth, position + textHeight);\n  ctx.fillStyle = 'white';\n\n  console.log('text array', textArray, textHeight);\n  // eslint-disable-next-line no-restricted-syntax\n  for (const chunk of textArray) {\n    const [textPart, , y] = chunk;\n    ctx.fillText(textPart, canvasWidth / 2, y + position + 2.5 * scaleFactor);\n  }\n}\n\nexport default class BinaryTree {\n  constructor(value) {\n    if (this.root === undefined) {\n      this.root = new Node(value);\n      return this;\n    }\n  }\n\n  addOptions(options) {\n    //  const convertToRGBA = (value) => `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n    this.root.options = { ...options };\n  }\n\n  display() {\n    if (this.root !== null) {\n      return this.root.display();\n    }\n    return null;\n  }\n\n  replaceImages(newImages) {\n    if (this.root !== null) {\n      this.root.replaceImages(newImages);\n    }\n  }\n\n  fromObject(obj) {\n    if (obj.root != null) this.root.fromObject(obj.root);\n    return this;\n  }\n\n  removeImageData() {\n    const tempTree = this.copy();\n    if (this.root !== null) {\n      tempTree.root.removeImageData();\n    }\n    return tempTree;\n  }\n\n  addImageData(imageData) {\n    if (this.root !== null) {\n      this.root.addImageData(imageData);\n    }\n  }\n\n  DOMDisplay(\n    canvasWidth,\n    canvasHeight,\n    delImg,\n    handleRemoveImage,\n    handleCollageImageLoad\n  ) {\n    const { text, topText, padding, borderRadius, color } = this.root.options;\n    const { width, height } = this.root.value;\n    const lA = helpers.wrapText(text, 0, 0, canvasWidth, 20, 25);\n    const textHeight = text.length ? lA.length * 25 : 0;\n    let yOffset = (canvasHeight - textHeight - height) / 2;\n    const xOffset = (canvasWidth - width) / 2;\n    let position = canvasHeight - textHeight;\n    if (topText && text.length > 0) {\n      yOffset += textHeight;\n      position = 0;\n    }\n\n    console.log(\n      'tree dom display',\n      canvasWidth,\n      canvasHeight,\n      height,\n      this.root.options,\n      textHeight,\n      yOffset,\n      xOffset,\n      width,\n      this,\n      lA\n    );\n    if (this.root !== null) {\n      return (\n        <Box sx={{ backgroundColor: 'white' }}>\n          <Box\n            width={canvasWidth}\n            height={canvasHeight}\n            sx={{\n              position: 'relative',\n              backgroundColor: convertToRGBA(color),\n            }}\n          >\n            {this.root.DOMDisplay(\n              padding,\n              borderRadius,\n              delImg,\n              handleRemoveImage,\n              yOffset,\n              xOffset,\n              handleCollageImageLoad\n            )}\n            {text.length ? TextDisplay(lA, position) : null}\n          </Box>\n        </Box>\n      );\n    }\n    return null;\n  }\n\n  CanvasDisplay(canvasWidth, canvasHeight, canvasElement, scaleFactor) {\n    if (this.root !== null) {\n      const { text, topText, padding, borderRadius, color } = this.root.options;\n      const { width, height } = this.root.value;\n      const lA = helpers.wrapText(\n        text,\n        0,\n        0,\n        canvasWidth,\n        20 * scaleFactor,\n        25 * scaleFactor\n      );\n      const textHeight = text.length ? lA.length * 25 * scaleFactor : 0;\n      let yOffset = (canvasHeight - textHeight - height) / 2;\n      const xOffset = (canvasWidth - width) / 2;\n      let position = canvasHeight - textHeight;\n      if (topText && text.length > 0) {\n        yOffset += textHeight;\n        position = 0;\n      }\n      const ctx = canvasElement.getContext('2d');\n      ctx.fillStyle = convertToRGBA(color);\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      this.root.CanvasDisplay(\n        canvasElement,\n        padding * scaleFactor,\n        borderRadius * scaleFactor,\n        yOffset,\n        xOffset\n      );\n      TextCanvasDraw(ctx, lA, position, scaleFactor, canvasWidth, textHeight);\n    }\n  }\n\n  generateScore() {\n    const score = this.root.getScore();\n    // console.log('from', ...score);\n    return Math.min(...score);\n  }\n\n  generateCollageTree(images, tar) {\n    this.root.generate(images, tar, images.length);\n  }\n\n  adjust(th) {\n    let trys = 0;\n    let bestAdjust = this.copy();\n    let bestAspectRatio = this.root.value.aspectRatio;\n    const tolerableDifference = this.root.value.targetAspectRatio * (1 - th);\n    let ajstCnt = 1000;\n    while (trys < 100 && ajstCnt > 0) {\n      ajstCnt = this.root.adjust(th);\n      trys += 1;\n      const diff =\n        this.root.value.aspectRatio - this.root.value.targetAspectRatio;\n      if (\n        Math.abs(diff) <\n        Math.abs(bestAspectRatio - this.root.value.targetAspectRatio)\n      ) {\n        bestAspectRatio = this.root.value.aspectRatio;\n        bestAdjust = this.copy();\n      }\n      if ((diff > 0 && diff < tolerableDifference) || diff === 0) break;\n    }\n\n    return [bestAspectRatio, bestAdjust];\n  }\n\n  copy() {\n    const copyTree = new BinaryTree({});\n    copyTree.root = this.root.copy();\n    copyTree.root.options = { ...this.root.options };\n    return copyTree;\n  }\n\n  addSize(canvasWidth, canvasHeight, aspectRatio) {\n    const [maxW, maxH] = helpers.getCollageDimension(\n      canvasWidth,\n      canvasHeight,\n      aspectRatio\n    );\n    this.root.value.width = maxW;\n    this.root.value.height = maxH;\n    console.log('add size', this.root.value.width, this.root.value.height);\n    this.root.value.x = 0;\n    this.root.value.y = 0;\n    const { width, height, x, y, cut } = this.root.value;\n    if (this.root.left !== null)\n      this.root.left.addSize(width, height, x, y, cut, 'left');\n    if (this.root.right !== null)\n      this.root.right.addSize(width, height, x, y, cut, 'right');\n  }\n}\n","import BinaryTree from './binaryTree';\nimport helpers from './helpers';\n\nfunction findBestAdjustTree(images, tolerance, imageWidth, imageHeight) {\n  const sortedImages = images.sort((a, b) =>\n    a.aspectRatio <= b.aspectRatio ? 1 : -1\n  );\n  const collageArray = [];\n  for (let i = 0; i < 100; i += 1) {\n    const imgTree = new BinaryTree({ cut: helpers.getCut() });\n    imgTree.generateCollageTree(sortedImages, imageWidth / imageHeight);\n\n    collageArray.push(imgTree.adjust(1 - tolerance));\n  }\n\n  collageArray.sort((a, b) => {\n    const aspR = imageWidth / imageHeight;\n    const diffA = Math.abs(a[0] - aspR);\n    const diffB = Math.abs(b[0] - aspR);\n    return diffA - diffB;\n  });\n\n  const bAR = collageArray.filter(\n    (elem) => elem[0].toFixed(1) === collageArray[0][0].toFixed(1)\n  );\n  console.log('from bar', bAR);\n  let maxScore = 0;\n  let maxElem = {};\n  bAR.forEach((element) => {\n    element[1].addSize(\n      1000 * (imageWidth / imageHeight),\n      1000,\n      imageWidth / imageHeight\n    );\n    const score = element[1].generateScore();\n    // console.log('from bar all matching', score);\n    if (score > maxScore) {\n      maxScore = score;\n      maxElem = element;\n    }\n  });\n  // console.log('from returning', maxElem, maxScore);\n  return maxElem;\n  // collageArray[0][1].addSize(\n  //   1000 * (imageWidth / imageHeight),\n  //   1000,\n  //   imageWidth / imageHeight\n  // );\n  // console.log(\n  //   'from best adjust tree',\n  //   collageArray[0][0],\n  //   collageArray[0][1].generateScore()\n  // );\n  // return collageArray[0];\n}\n\nexport default { findBestAdjustTree };\n","import { useEffect, useState } from 'react';\nimport useDimensions from 'hooks/collage/dimensions';\nimport useOptions from 'hooks/collage/options';\nimport useActions from 'hooks/collage/actions';\nimport useImages from 'hooks/collage/images';\nimport useTree from 'hooks/collage/tree';\n\nimport helpers from 'components/collage/helpers';\nimport collageapi from 'api/collage';\n\nexport default function useBase(initialValue) {\n  console.log('use base', initialValue);\n  const [details, setDetails] = useState(initialValue);\n  const [collageName, setCollageName] = useState('Untitled');\n  const constants = {\n    tolerance: 0.1,\n    resizeImageWidth: 1500,\n    aspectRatio: 0.7,\n    paperSizes: {\n      A4: { width: 2480, height: 3508, text: '8 X 11 inches' },\n      A3: { width: 3508, height: 4961, text: '11 X 16 inches' },\n      A4LandScape: { height: 2480, width: 3508, text: '11 X 8 inches' },\n      A3LandScape: { height: 3508, width: 4961, text: '16 X 11 inches' },\n      FBCoverDesktop: { height: 740, width: 2000, text: 'FB Cover Desktop' },\n      WhatsappStatus: { height: 1920, width: 1080, text: 'Whatsapp Status' },\n    },\n  };\n  const [uploadedImages, setUploadedImages] = useState(0);\n  const dimensions = useDimensions(constants.aspectRatio);\n  const options = useOptions();\n  const actions = useActions();\n  const images = useImages(details, constants.resizeImageWidth);\n\n  const treeState = useTree(details, options.setOptions);\n  const [thumbnail, setThumbnail] = useState({});\n  const collageID =\n    'details' in initialValue && 'collage_id' in initialValue.details\n      ? initialValue.details.collage_id\n      : Date.now();\n\n  useEffect(() => {\n    setDetails(initialValue);\n    if (\n      'details' in initialValue &&\n      'name' in initialValue.details &&\n      collageName === 'Untitled'\n    ) {\n      console.log('setting collage name', initialValue.details.name);\n      setCollageName(initialValue.details.name);\n    }\n  }, [initialValue]);\n\n  const initialStatus = () => ({\n    details: {\n      text: 'Saving Details',\n      status: 'pending',\n    },\n    images: {\n      text: `Saving Images (${uploadedImages} / ${images.images.length})`,\n      status: 'pending',\n    },\n    finalizing: {\n      text: 'Finalizing Collage',\n      status: 'pending',\n    },\n  });\n  const [saveStatus, setSaveStatus] = useState(initialStatus);\n\n  const updateStatus = (key, status) => {\n    const value = { ...saveStatus[key], status };\n    setSaveStatus((st) => ({ ...st, [key]: value }));\n  };\n\n  const updateImagesStatus = () => {\n    const imagesText = `Saving Images (${uploadedImages} / ${images.imgCount})`;\n    let value = { ...saveStatus.images, text: imagesText };\n    if (uploadedImages === images.imgCount && images.imgCount > 0) {\n      value = { ...value, status: 'done' };\n    }\n    setSaveStatus((st) => ({ ...st, images: value }));\n  };\n\n  useEffect(() => {\n    console.log('useeffect 3');\n    updateImagesStatus();\n  }, [uploadedImages, images.imgCount]);\n\n  const handleClear = async () => {\n    const clearPromises = await Promise.allSettled([\n      treeState.clear(),\n      images.clear(),\n      options.clear(),\n    ]);\n\n    for (let i = 0; i < clearPromises.length; i += 1) {\n      if (\n        clearPromises[i].status === 'fulfilled' ||\n        clearPromises[i].value.ok === true\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    console.log('useeffect 2');\n    if (\n      (images.newImgCount > 0 &&\n        images.newImgCount === images.newImagesLoaded) ||\n      actions.refresh\n    ) {\n      images.setNewImageCount(0);\n      images.setNewImagesLoaded(0);\n      treeState.reAdjust(\n        images.images,\n        constants.tolerance,\n        dimensions.width,\n        dimensions.height - dimensions.textHeight,\n        options.options\n      );\n      actions.setRefresh(false);\n    }\n  }, [images.newImgCount, images.newImagesLoaded, actions.refresh]);\n\n  const collageCallback = () => {};\n\n  const handleRemoveImage = (imgTitle) => {\n    const newImagesArr = images.remove(imgTitle);\n    treeState.reAdjust(\n      newImagesArr,\n      constants.tolerance,\n      dimensions.imageWidth,\n      dimensions.imageHeight,\n      options.options\n    );\n  };\n\n  const generateThumbnail = () => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    const thumbnailCanvas = document.createElement('canvas');\n    const thumbnailTree = treeState.tree.copy();\n    thumbnailTree.addSize(500 * ar, 500, ar);\n    thumbnailCanvas.width = 500 * ar;\n    thumbnailCanvas.height = 500;\n    thumbnailTree.CanvasDisplay(\n      500 * ar,\n      500,\n      thumbnailCanvas,\n      (500 * ar) / dimensions.width\n    );\n\n    // create and update details\n    const thumbnailDetails = {\n      title: `thumbnail-${collageID}.png`,\n      src: '',\n      naturalHeight: 500,\n      naturalWidth: 500 * ar,\n      aspectRatio: ar,\n      type: 'image/png',\n    };\n    setThumbnail(thumbnailDetails);\n    return [thumbnailDetails, thumbnailCanvas];\n  };\n\n  const uploadCollageDetails = (thumbnailDetails, name) => {\n    const dets = {\n      collage_id: collageID.toString(),\n      name,\n      created_at: '2021-02-18T21:54:42.123Z',\n      last_updated_at: '2021-02-18T21:54:45.123Z',\n      images: images.removeImageData(images.images),\n      tree: treeState.tree.removeImageData(),\n      thumbnail: thumbnailDetails,\n    };\n    // TODO [33] Validate collageDetails\n    console.log(dets);\n    return collageapi.newCollage(collageID, dets);\n  };\n\n  const uploadCallback = () => {\n    console.log('Setting uploaded images to ', uploadedImages + 1);\n    setUploadedImages((cnt) => cnt + 1);\n  };\n\n  const uploadCollageImages = (thumbnailCanvas, imageURLS) => {\n    const imagePromises = Object.keys(imageURLS).map(async (item) => {\n      const thumbnailKey = `thumbnail-${collageID}.jpg`;\n      if (item === thumbnailKey) {\n        const thumbnailPromise = thumbnailCanvas.toBlob(async (blob) => {\n          setThumbnail(blob);\n          return collageapi.upload(imageURLS[thumbnailKey], blob);\n        });\n        return thumbnailPromise;\n      }\n\n      const url = imageURLS[item];\n      const Img = images.images.find((img) => img.title === item);\n      const resp = await collageapi.upload(url, Img.file);\n      uploadCallback();\n      console.log('image upload resp', resp);\n      return resp;\n    });\n\n    return imagePromises;\n  };\n\n  const newCollage = async (name) => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    console.log('in generate thumbnail', ar, 500 * ar, 500);\n    const [thumbnailDetails, thumbnailCanvas] = generateThumbnail();\n    updateStatus('details', 'running');\n    const imageURLS = await uploadCollageDetails(thumbnailDetails, name);\n    updateStatus('details', 'done');\n    updateStatus('images', 'running');\n    const imagePromises = uploadCollageImages(thumbnailCanvas, imageURLS);\n    const uploadPromises = await Promise.allSettled(imagePromises);\n    // updateStatus('images', 'done');\n    updateStatus('finalizing', 'running');\n    let uploadStatus;\n    for (let i = 0; i < uploadPromises.length; i += 1) {\n      if (\n        uploadPromises[i].status === 'fulfilled' ||\n        uploadPromises[i].value.ok === true\n      ) {\n        uploadStatus = true;\n        updateStatus('finalizing', 'done');\n      } else {\n        uploadStatus = false;\n        updateStatus('finalizing', 'failed');\n        break;\n      }\n    }\n    return uploadStatus;\n  };\n\n  useEffect(() => {\n    console.log('useeffect 1');\n    if (\n      options.options.text.length > 0 &&\n      Object.keys(treeState.tree).length > 0\n    ) {\n      const tH = helpers.wrapText(\n        options.options.text,\n        0,\n        0,\n        dimensions.width,\n        20,\n        25\n      );\n      dimensions.setTextHeight(tH.length * 25);\n      const [w, h] = helpers.getCollageDimension(\n        dimensions.width,\n        dimensions.height - tH.length * 25,\n        treeState.tree.root.value.aspectRatio\n      );\n      dimensions.setImageWidth(w);\n      dimensions.setImageHeight(h);\n    } else {\n      dimensions.setTextHeight(0);\n      options.handlePositionChange(true);\n      dimensions.setImageWidth(dimensions.width);\n      dimensions.setImageHeight(dimensions.height);\n    }\n  }, [\n    dimensions.width,\n    dimensions.height,\n    treeState.tree,\n    options.options.text,\n  ]);\n\n  const getDetails = (name, thumbnailDetails) => {\n    setCollageName(name);\n    return {\n      collage_id: collageID.toString(),\n      name,\n      created_at: '2021-02-18T21:54:42.123Z',\n      last_updated_at: '2021-02-18T21:54:45.123Z',\n      images: images.removeImageData(images.images),\n      tree: treeState.tree.removeImageData(),\n      thumbnail: thumbnailDetails,\n    };\n  };\n\n  const saveCollage = async (name) => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    console.log('in generate thumbnail', ar, 500 * ar, 500);\n    const [thumbnailDetails, thumbnailCanvas] = generateThumbnail();\n    updateStatus('details', 'running');\n    const imageURLS = await collageapi.saveCollage(\n      collageID,\n      getDetails(name, thumbnailDetails)\n    );\n    console.log('save collage imageurls', imageURLS);\n    updateStatus('details', 'done');\n    updateStatus('images', 'running');\n    const imagePromises = uploadCollageImages(thumbnailCanvas, imageURLS);\n    const uploadPromises = await Promise.allSettled(imagePromises);\n    // updateStatus('images', 'done');\n    updateStatus('finalizing', 'running');\n    let uploadStatus;\n    for (let i = 0; i < uploadPromises.length; i += 1) {\n      if (\n        uploadPromises[i].status === 'fulfilled' ||\n        uploadPromises[i].value.ok === true\n      ) {\n        uploadStatus = true;\n        updateStatus('finalizing', 'done');\n      } else {\n        uploadStatus = false;\n        updateStatus('finalizing', 'failed');\n        break;\n      }\n    }\n    return uploadStatus;\n  };\n\n  console.log('saveStatus', saveStatus);\n  return [\n    getDetails,\n    collageName,\n    thumbnail,\n    collageID,\n    constants,\n    dimensions,\n    options,\n    actions,\n    images,\n    treeState,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n  ];\n}\n","import { useRef, useState, useEffect } from 'react';\nimport helpers from 'components/collage/helpers';\n\nexport default function useDimensions(aspectRatio) {\n  const headerRef = useRef();\n  const actionsRef = useRef();\n  const footerRef = useRef();\n  const addImageRef = useRef();\n\n  const [height, setHeight] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [imageWidth, setImageWidth] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [maxHeight, setMaxHeight] = useState(0);\n  const [maxWidth, setMaxWidth] = useState(0);\n  const [textHeight, setTextHeight] = useState(0);\n\n  const setDimensions = () => {\n    const headerHeight = headerRef.current ? headerRef.current.offsetHeight : 0;\n    const actionsHeight = actionsRef.current\n      ? actionsRef.current.offsetHeight\n      : 0;\n    const footerHeight = footerRef.current ? footerRef.current.offsetHeight : 0;\n    const otherHeight = headerHeight + actionsHeight + footerHeight;\n    setMaxWidth(window.innerWidth);\n    setMaxHeight(window.innerHeight - otherHeight);\n    const [w, h] = helpers.getCollageDimension(\n      window.innerWidth,\n      window.innerHeight - otherHeight - 6,\n      aspectRatio\n    );\n    console.log('other height', otherHeight);\n    setWidth(w);\n    setHeight(h);\n  };\n\n  const handleImageAddClick = () => {\n    if (addImageRef.current) addImageRef.current.click();\n  };\n\n  useEffect(() => {\n    console.log('dimensions changed');\n    setDimensions();\n  }, [\n    window.innerHeight,\n    window.innerWidth,\n    headerRef.current,\n    actionsRef.current,\n    footerRef.current,\n  ]);\n\n  useEffect(() => {\n    setDimensions();\n    window.addEventListener('resize', setDimensions);\n\n    return () => window.removeEventListener('resize', setDimensions);\n  }, []);\n\n  return {\n    addImageRef,\n    actionsRef,\n    headerRef,\n    footerRef,\n    width,\n    height,\n    imageHeight,\n    imageWidth,\n    setImageWidth,\n    setImageHeight,\n    maxHeight,\n    maxWidth,\n    handleImageAddClick,\n    textHeight,\n    setTextHeight,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useOptions() {\n  const optionsInitValue = {\n    padding: 2,\n    borderRadius: 5,\n    color: {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1,\n    },\n    text: '',\n    topText: true,\n  };\n\n  const [options, setOptions] = useState(optionsInitValue);\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n  const clear = () => setOptions(optionsInitValue);\n  const handlePaddingChange = (e) =>\n    setOptions((opts) => ({ ...opts, padding: e.target.value }));\n  const handleRadiusChange = (e) => {\n    setOptions((opts) => ({ ...opts, borderRadius: e.target.value }));\n  };\n\n  const handleColorClick = () => setDisplayColorPicker((dcp) => !dcp);\n  const handleColorClose = () => setDisplayColorPicker(false);\n  const handleColorChange = (clr) =>\n    setOptions((opts) => ({ ...opts, color: clr.rgb }));\n  const handlePositionChange = (value) =>\n    setOptions((opts) => ({ ...opts, topText: value }));\n\n  const handleTextChange = (e) => {\n    const { target } = e;\n    setOptions((opts) => ({ ...opts, text: target.value }));\n  };\n\n  return {\n    options,\n    setOptions,\n    clear,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClick,\n    handleColorClose,\n    handleColorChange,\n    handlePositionChange,\n    handleTextChange,\n    displayColorPicker,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useActions() {\n  const [open, setOpen] = useState(false);\n  const [saveOpen, setSaveOpen] = useState(false);\n  const [saveStart, setSaveStart] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [generate, setGenerate] = useState(false);\n  const [removeImage, setRemoveImage] = useState(false);\n  const [printOptions, setPrintOptions] = useState({\n    paperWidth: 0,\n    paperHeight: 0,\n  });\n\n  const onRefresh = () => setRefresh(true);\n  const handleDownload = () => setOpen(true);\n  const handleSave = () => {\n    setSaveOpen(true);\n  };\n  const onDownloadClose = () => setOpen(false);\n  const onSaveClose = () => setSaveOpen(false);\n  const clearDelete = () => setRemoveImage(false);\n  const onDelete = () => setRemoveImage((ri) => !ri);\n\n  const onDownloadClick = (w, h) => {\n    setPrintOptions({ paperWidth: w, paperHeight: h });\n    setGenerate(true);\n    setOpen(false);\n  };\n\n  const onSaveClick = () => {\n    setSaveStart(true);\n    setSaveOpen(false);\n  };\n  const handleGenerateCallback = () => {\n    setGenerate(false);\n    setPrintOptions({ paperWidth: 0, paperHeight: 0 });\n  };\n\n  return {\n    clearDelete,\n    generate,\n    handleDownload,\n    handleGenerateCallback,\n    onDelete,\n    onDownloadClick,\n    onDownloadClose,\n    onRefresh,\n    open,\n    printOptions,\n    refresh,\n    setGenerate,\n    setOpen,\n    setPrintOptions,\n    setRefresh,\n    removeImage,\n    setRemoveImage,\n    saveOpen,\n    setSaveOpen,\n    onSaveClose,\n    onSaveClick,\n    handleSave,\n    saveStart,\n    setSaveStart,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport helpers from 'components/collage/helpers';\n\nexport default function useImages(initialValue) {\n  console.log('use images', initialValue);\n  const [newImgCount, setNewImageCount] = useState(0);\n  const [newImagesLoaded, setNewImagesLoaded] = useState(0);\n  const [imgCount, setImageCount] = useState(0);\n  const [loaded, setLoaded] = useState(0);\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    console.log('setting images');\n    if ('images' in initialValue) {\n      setImages(initialValue.images);\n      if (imgCount === 0) setImageCount(initialValue.images.length);\n    }\n  }, [initialValue]);\n\n  const removeImageData = (imageArr) => {\n    const tempImgArr = [...imageArr];\n    return tempImgArr.map((img) => {\n      const { file, src, ...rest } = img;\n      return rest;\n    });\n  };\n\n  const handleImageData = (imageDetail) => {\n    setImages((arr) => arr.concat([imageDetail]));\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleLoad = (event) => {\n    helpers.handleImageLoad(\n      event,\n      setImageCount,\n      setNewImageCount,\n      handleImageData\n    );\n  };\n\n  const clear = () => {\n    setImages([]);\n    setImageCount(0);\n    setLoaded(0);\n    setNewImagesLoaded(0);\n  };\n\n  const remove = (title) => {\n    const removeIndex = images.findIndex((elem) => elem.title === title);\n    const newImagesArr = [\n      ...images.slice(0, removeIndex),\n      ...images.slice(removeIndex + 1),\n    ];\n    setImages(newImagesArr);\n    setImageCount((cnt) => cnt - 1);\n    return newImagesArr;\n  };\n\n  return {\n    clear,\n    handleImageData,\n    handleLoad,\n    images,\n    imgCount,\n    loaded,\n    newImagesLoaded,\n    newImgCount,\n    remove,\n    setImageCount,\n    setImages,\n    setLoaded,\n    setNewImageCount,\n    setNewImagesLoaded,\n    removeImageData,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport treeUtils from 'components/collage/treeUtils';\nimport BinaryTree from 'components/collage/binaryTree';\n\nexport default function useTree(initialValue, loadingCallback = () => {}) {\n  console.log('use Tree', initialValue);\n  const [tree, setTree] = useState(new BinaryTree({}));\n\n  useEffect(() => {\n    console.log('use Tree useEffect');\n    const newTree = new BinaryTree({});\n    if (\n      'details' in initialValue &&\n      Object.keys(initialValue.details).length > 0\n    ) {\n      console.log('initial value in tree', initialValue);\n      newTree.fromObject(initialValue.details.tree);\n      if ('options' in initialValue.details.tree.root) {\n        loadingCallback((opts) => ({\n          ...opts,\n          ...initialValue.details.tree.root.options,\n        }));\n      }\n      console.log('setting tree');\n      setTree(newTree);\n    }\n  }, [initialValue]);\n\n  const clear = () => setTree({});\n\n  const reAdjust = (imagesArr, tolerance, imageWidth, imageHeight, options) => {\n    const [, bestAspectRatioTree] = treeUtils.findBestAdjustTree(\n      imagesArr,\n      tolerance,\n      imageWidth,\n      imageHeight\n    );\n    bestAspectRatioTree.addOptions(options);\n    setTree(bestAspectRatioTree);\n  };\n\n  return { tree, setTree, clear, reAdjust };\n}\n","import { useState, useEffect } from 'react';\nimport helpers from './helpers';\n\nexport default function Collage({\n  dimensionProps,\n  imageProps,\n  actionProps,\n  collageCallback,\n  handleRemoveImage,\n  options,\n  tree,\n}) {\n  const [collage, setCollage] = useState(null);\n  const { images, setLoaded } = imageProps;\n  const { generate, handleGenerateCallback, printOptions, removeImage } =\n    actionProps;\n  const { height, width, imageHeight, imageWidth } = dimensionProps;\n\n  const handleCollageImageLoad = () => setLoaded((cnt) => cnt + 1);\n  const isEmpty = (t) => Object.keys(t).length === 0;\n  const createCollage = () => {\n    console.log('started collage loading', tree);\n    tree.addSize(imageWidth, imageHeight, tree.root.value.aspectRatio);\n    console.log('collage added size');\n    tree.addOptions(options);\n    console.log('collage added options', images.length);\n    if (images.length > 0) {\n      tree.addImageData(images);\n      console.log('collage added image data');\n      const collageElem = tree.DOMDisplay(\n        width,\n        height,\n        removeImage,\n        handleRemoveImage,\n        handleCollageImageLoad\n      );\n      console.log('collage added dom display');\n      setCollage(collageElem);\n      collageCallback(tree);\n    }\n  };\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      console.log('collage, tree is not empty');\n      createCollage();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      console.log('collage, tree is not empty 1');\n      createCollage();\n    } else {\n      setCollage(null);\n    }\n  }, [tree, options, imageWidth, imageHeight, removeImage, images]);\n\n  const downloadCollage = (canvas, pW, pH) => {\n    canvas.toBlob((blob) => {\n      const link = document.createElement('a');\n      link.download = `collage-${pW}X${pH}-${Date.now()}.png`;\n      link.href = URL.createObjectURL(blob);\n      link.click();\n      URL.revokeObjectURL(link.href);\n      link.href = null;\n      handleGenerateCallback();\n    }, 'image/jpeg');\n  };\n\n  useEffect(() => {\n    if (generate === true) {\n      const canvasElement = document.createElement('canvas');\n      const { paperWidth, paperHeight } = printOptions;\n      canvasElement.width = paperWidth;\n      canvasElement.height = paperHeight;\n      const scaleFactor = paperWidth / width;\n      const lineArray = helpers.wrapText(\n        options.text,\n        0,\n        0,\n        paperWidth,\n        20 * scaleFactor,\n        25 * scaleFactor\n      );\n      const textHeight = lineArray.length * 25 * scaleFactor;\n      const [imgPrintWidth, imgPrintHeight] = helpers.getCollageDimension(\n        paperWidth,\n        paperHeight - textHeight,\n        tree.root.value.aspectRatio\n      );\n      const canvasTree = tree.copy();\n      canvasTree.replaceImages(images);\n      canvasTree.addSize(\n        imgPrintWidth,\n        imgPrintHeight,\n        tree.root.value.aspectRatio\n      );\n      canvasTree.CanvasDisplay(\n        paperWidth,\n        paperHeight,\n        canvasElement,\n        scaleFactor\n      );\n\n      setTimeout(\n        () => downloadCollage(canvasElement, paperWidth, paperHeight),\n        '5000'\n      );\n    }\n  }, [generate]);\n  return collage;\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Authenticate from 'hocs/require-authentication';\n\nexport default function DownloadDialog({ open, onClick, onClose, sizes }) {\n  const [value, setValue] = useState('');\n  const handleDownload = () => {\n    console.log(sizes[value].width, sizes[value].height, onClick);\n    onClick(sizes[value].width, sizes[value].height);\n    setValue('');\n  };\n\n  const handleClose = () => {\n    setValue('');\n    onClose();\n  };\n\n  return (\n    <Authenticate>\n      <Dialog open={open} fullWidth>\n        <DialogTitle sx={{ textAlign: 'center' }}>Download Collage</DialogTitle>\n        <DialogContent\n          dividers\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <DialogContentText sx={{ display: 'inline', pr: 1 }}>\n            Choose collage size\n          </DialogContentText>\n          <FormControl fullWidth sx={{ maxWidth: '60%' }}>\n            <InputLabel id=\"demo-simple-select-label\">Download Size</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              defaultValue=\"A4\"\n              value={value}\n              label=\"Download Size\"\n              onChange={(event) => setValue(event.target.value)}\n            >\n              {Object.keys(sizes).map((key) => (\n                <MenuItem key={sizes[key].text} value={key}>\n                  {sizes[key].text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"outlined\"\n            disabled={value.length === 0}\n            onClick={handleDownload}\n          >\n            Download\n          </Button>\n          <Button variant=\"text\" onClick={handleClose}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Authenticate>\n  );\n}\n\nDownloadDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\n// import DialogContentText from '@mui/material/DialogContentText';\nimport TextField from '@mui/material/TextField';\n// import Authenticate from 'hocs/require-authentication';\n\nexport default function SaveDialog({ open, onClick, onClose }) {\n  const [name, setName] = useState('');\n  const [nameError] = useState('');\n  const handleSave = () => {\n    onClick(name);\n  };\n\n  const handleNameChange = (e) => {\n    const { target } = e;\n    setName(target.value);\n  };\n  const handleClose = () => {\n    setName('');\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <TextField\n          variant=\"outlined\"\n          label=\"Set Collage Name\"\n          defaultValue={name}\n          onChange={handleNameChange}\n          size=\"small\"\n          sx={{ width: '100%', mb: 1 }}\n          InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n          helperText={nameError}\n          error={!!nameError}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          disabled={name.length === 0}\n          onClick={handleSave}\n        >\n          Save\n        </Button>\n        <Button variant=\"text\" onClick={handleClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nSaveDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport PendingIcon from '@mui/icons-material/Pending';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CloseIcon from '@mui/icons-material/Close';\n\nfunction StatusIndicator({ status }) {\n  if (status === 'running') {\n    return <CircularProgress color=\"info\" size=\"1rem\" />;\n  }\n  if (status === 'pending') {\n    return <PendingIcon color=\"disabled\" size=\"0.875rem\" />;\n  }\n  if (status === 'done') {\n    return <CheckCircleOutlineIcon color=\"success\" size=\"0.875rem\" />;\n  }\n  if (status === 'failed') {\n    return <CloseIcon color=\"error\" size=\"0.875rem\" />;\n  }\n}\n\nStatusIndicator.propTypes = {\n  status: PropTypes.string.isRequired,\n};\n\nfunction Status({ text, status }) {\n  const color = {\n    pending: alpha('#000', 0.26),\n    done: 'black',\n    running: 'black',\n    failed: 'red',\n  };\n\n  return (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n      <Typography\n        sx={{ fontWeight: 'bold', fontSize: '1rem', color: color[status] }}\n      >\n        {text}\n      </Typography>\n      <StatusIndicator status={status} />\n    </Stack>\n  );\n}\n\nStatus.propTypes = {\n  text: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nfunction OverAllStatus({ status, counter }) {\n  if (status === 'failed') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <CloseIcon color=\"error\" />\n        <Typography>Collage creation failed</Typography>\n      </Stack>\n    );\n  }\n\n  if (status === 'running' || status === 'pending') return null;\n\n  if (status === 'success') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <CheckCircleOutlineIcon color=\"success\" sx={{ fontSize: '2rem' }} />\n        <Typography>\n          Collage creation successful. Navigation to collages in {counter}{' '}\n          seconds...\n        </Typography>\n      </Stack>\n    );\n  }\n\n  return null;\n}\n\nOverAllStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  counter: PropTypes.number.isRequired,\n};\n\nexport default function SaveStatusDialog({ open, status }) {\n  let overAllStatus = 'pending';\n  const [counter, setCounter] = useState(-1);\n  useEffect(() => {\n    let timerId;\n    if (counter > 0 && overAllStatus === 'success') {\n      timerId = setTimeout(() => setCounter(counter - 1), 1000);\n    }\n    return () => clearTimeout(timerId);\n  }, [counter, overAllStatus]);\n\n  const statusArr = Object.values(status).map((val) => val.status);\n  if (statusArr.includes('failed')) {\n    overAllStatus = 'failed';\n  } else if (statusArr.includes('running')) {\n    overAllStatus = 'running';\n  } else if (!statusArr.includes('pending')) {\n    console.log('setting counter', counter, status);\n    if (counter === -1) {\n      setCounter(3);\n    }\n    overAllStatus = 'success';\n  }\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent dividers>\n        <Stack direction=\"column\" justifyContent=\"center\" spacing={2}>\n          {Object.values(status).map((st) => (\n            <Status key={st.text} text={st.text} status={st.status} />\n          ))}\n        </Stack>\n      </DialogContent>\n      <OverAllStatus status={overAllStatus} counter={counter} />\n    </Dialog>\n  );\n}\n\nSaveStatusDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  status: PropTypes.objectOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      status: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Paper from '@mui/material/Paper';\nimport { Typography, Box, Link } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { alpha } from '@mui/material/styles';\nimport commonUtils from 'utils';\nimport ProfileLink from 'components/profile';\n\nimport LoginButton from 'components/LoginButton';\n\nexport default function Header({ headerRef, name }) {\n  console.log('in collage header', name);\n  const cookieValue = commonUtils.getUserInfo();\n  const isLoggedIn = cookieValue !== '';\n  return (\n    <Paper\n      ref={headerRef}\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        p: 1,\n        backgroundColor: alpha('#fff', 0.1),\n        borderRadius: 0,\n      }}\n      elevation={3}\n    >\n      <Box sx={{ postion: 'absolute', left: '5px' }}>\n        <Link href=\"/collages\" color=\"muted.main\" underline=\"none\">\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <ArrowBackIcon />\n          </Box>\n        </Link>\n      </Box>\n      <Typography\n        variant=\"h4\"\n        component=\"h4\"\n        sx={{ color: alpha('#fff', 0.5) }}\n      >\n        {name}\n      </Typography>\n      {isLoggedIn === true ? (\n        <ProfileLink />\n      ) : (\n        <LoginButton\n          authURL={process.env.REACT_APP_AUTH_URL}\n          next=\"collage/create\"\n        />\n      )}\n    </Paper>\n  );\n}\n\nHeader.propTypes = {\n  name: PropTypes.string.isRequired,\n  headerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport collageBack from 'static/images/collage_back1.webp';\n\nexport default function EmptyCollage({ width, height, loadComponent }) {\n  return (\n    <Box\n      sx={{\n        width,\n        height,\n        //  border: '2px solid white',\n        position: 'relative',\n        backgroundImage: `url(${collageBack})`,\n        backgroundSize: width,\n        objectFit: 'contain',\n        backgroundRepeat: 'no-repeat',\n        alignItems: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      >\n        {loadComponent}\n      </Box>\n    </Box>\n  );\n}\n\nEmptyCollage.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  loadComponent: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport EmptyCollage from 'components/collage/EmptyCollage';\nimport Loading from 'components/Loading';\nimport AddPhotos from 'components/AddPhotos';\nimport Authenticate from 'hocs/require-authentication';\n\nexport default function View({\n  open,\n  saveOpen,\n  saveStatusOpen,\n  status,\n  dimensionProps,\n  imageProps,\n  header,\n  actions,\n  downloadDialog,\n  saveDialog,\n  saveStatusDialog,\n  collage,\n  controls,\n  saveType,\n}) {\n  const { width, height, maxWidth, maxHeight, imageHeight } = dimensionProps;\n  const { images, imgCount, handleLoad } = imageProps;\n  console.log(\n    'from view',\n    images.length,\n    imgCount,\n    imageHeight,\n    collage,\n    status\n  );\n  let content;\n  if (status === 'fetching') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={<Loading title=\"Fetching existing collage data ...\" />}\n      />\n    );\n  }\n\n  if (status === 'preparing') {\n    content = (\n      <>\n        {collage}\n        <Loading title=\"Preparing collage...\" />\n      </>\n    );\n  }\n\n  if (status === 'loading') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          <Loading\n            title={`Loading (${images.length} / ${imgCount}) images...`}\n          />\n        }\n      />\n    );\n  }\n\n  if (status === 'empty') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          width ? <AddPhotos handleChange={handleLoad} /> : <div />\n        }\n      />\n    );\n  }\n\n  if (status === 'ready') {\n    content = collage;\n  }\n\n  return saveType === 'new' ? (\n    <Box component=\"div\" sx={{ backgroundColor: 'black' }}>\n      {header}\n      {actions}\n      {open ? downloadDialog : null}\n      {saveOpen ? saveDialog : null}\n      {saveStatusOpen ? saveStatusDialog : null}\n      <Box\n        width={maxWidth}\n        height={maxHeight}\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'black',\n        }}\n      >\n        {content}\n      </Box>\n      {controls}\n    </Box>\n  ) : (\n    <Box component=\"div\" sx={{ backgroundColor: 'black' }}>\n      {header}\n      <Authenticate>\n        {actions}\n        {open ? downloadDialog : null}\n        {saveOpen ? saveDialog : null}\n        {saveStatusOpen ? saveStatusDialog : null}\n        <Box\n          width={maxWidth}\n          height={maxHeight}\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: 'black',\n          }}\n        >\n          {content}\n        </Box>\n        {controls}\n      </Authenticate>\n    </Box>\n  );\n}\n\nView.propTypes = {\n  dimensionProps: PropTypes.shape({\n    maxWidth: PropTypes.number.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    imageHeight: PropTypes.number.isRequired,\n  }).isRequired,\n  imageProps: PropTypes.shape({\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        src: PropTypes.string.isRequired,\n        naturalHeight: PropTypes.number.isRequired,\n        naturalWidth: PropTypes.number.isRequired,\n        aspectRatio: PropTypes.number.isRequired,\n        type: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    imgCount: PropTypes.number.isRequired,\n    handleLoad: PropTypes.func.isRequired,\n    loaded: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  saveOpen: PropTypes.bool.isRequired,\n  saveStatusOpen: PropTypes.bool.isRequired,\n  status: PropTypes.string.isRequired,\n  header: PropTypes.node.isRequired,\n  actions: PropTypes.node.isRequired,\n  collage: PropTypes.node.isRequired,\n  controls: PropTypes.node.isRequired,\n  downloadDialog: PropTypes.node.isRequired,\n  saveDialog: PropTypes.node.isRequired,\n  saveStatusDialog: PropTypes.node.isRequired,\n  saveType: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport { alpha } from '@mui/material/styles';\n\nexport default function DBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      icon={icon}\n      sx={{\n        py: 1,\n        fontWeight: 'bold',\n        color: 'gray',\n        outline: 'none',\n        '&:focus': {\n          color: alpha('#fff', 0.8),\n          outline: 'none',\n        },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\nDBNA.defaultProps = {\n  handleChange: () => {},\n};\n\nDBNA.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Drawer from '@mui/material/Drawer';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopDrawer({ anchor, children }) {\n  return (\n    <Drawer\n      anchor={anchor}\n      variant=\"permanent\"\n      PaperProps={{\n        sx: {\n          height: 'fit-content',\n          top: '50%',\n          backgroundColor: 'transparent',\n          color: 'gray',\n          fontWeight: 'bold',\n          borderRadius: anchor === 'left' ? '0 10px 10px 0' : '10px 0 0 10px',\n          transform: 'translate(0, -50%)',\n        },\n      }}\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nDesktopDrawer.propTypes = {\n  anchor: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Divider from '@mui/material/Divider';\n\nexport default function ControlsDivider() {\n  return <Divider sx={{ backgroundColor: 'gray', my: 1 }} variant=\"middle\" />;\n}\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport List from '@mui/material/List';\nimport { alpha } from '@mui/material/styles';\n\nimport DBNA from 'components/collage/DesktopActionItem';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport ControlsDivider from 'components/collage/ControlsDivider';\n\nexport default function DesktopActions({ onDownload, onSave }) {\n  const handleChange = (newValue) => {\n    console.log(newValue);\n    if (newValue === 'download') {\n      onDownload();\n    }\n    if (newValue === 'save') {\n      onSave();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  return (\n    <DesktopDrawer anchor=\"right\">\n      <List sx={{ backgroundColor: alpha('#fff', 0.1) }}>\n        <DBNA\n          label=\"Save\"\n          icon={<SaveIcon />}\n          handleChange={() => handleChange('save')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label=\"Download\"\n          icon={<DownloadIcon />}\n          handleChange={() => handleChange('download')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label={\n            <>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Order\n              </Typography>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Print(s)\n              </Typography>\n            </>\n          }\n          icon={<PrintIcon />}\n          handleChange={() => handleChange('print')}\n        />\n      </List>\n    </DesktopDrawer>\n  );\n}\n\nDesktopActions.propTypes = {\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\n\nexport default function ClearCollageDialog({ open, onSubmit, onCancel }) {\n  return (\n    <Dialog open={open}>\n      <DialogTitle\n        sx={{\n          textAlign: 'center',\n          fontWeight: 'bold',\n          color: alpha('#000', 0.8),\n        }}\n      >\n        Clear Collage\n      </DialogTitle>\n      <DialogContent dividers>\n        <DialogContentText sx={{ fontWeight: 'bold', color: 'gray' }}>\n          Do you want to clear collage?\n        </DialogContentText>\n        <Typography\n          variant=\"subtitle2\"\n          sx={{ color: 'red', fontWeight: 'bold' }}\n          noWrap\n        >\n          Note:\n        </Typography>\n        <Typography sx={{ fontSize: '0.8rem', color: 'gray' }}>\n          This change is not reversible\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onSubmit} sx={{ color: 'red' }}>\n          {' '}\n          Clear{' '}\n        </Button>\n        <Button variant=\"outlined\" onClick={onCancel}>\n          {' '}\n          Cancel{' '}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nClearCollageDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Stack from '@mui/material/Stack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport { alpha } from '@mui/material/styles';\n\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function DesktopControls({\n  onRefresh,\n  photosComp,\n  editComp,\n  handleClear,\n  clearDelete,\n}) {\n  const [imageOptionsOpen, setImageOptionsOpen] = useState(false);\n  const [editOptionsOpen, setEditOptionsOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const closeAll = () => {\n    clearDelete();\n    setImageOptionsOpen(false);\n    setEditOptionsOpen(false);\n    setClearOpen(false);\n  };\n  const handlePhotosClick = () => {\n    if (imageOptionsOpen) {\n      setImageOptionsOpen(false);\n    } else {\n      closeAll();\n      setImageOptionsOpen(true);\n    }\n  };\n\n  const handleEditClick = () => {\n    if (editOptionsOpen) {\n      setEditOptionsOpen(false);\n    } else {\n      closeAll();\n      setEditOptionsOpen(true);\n    }\n  };\n  const handleRearrange = () => {\n    closeAll();\n    onRefresh();\n  };\n\n  const handleClearClick = () => {\n    console.log('clear open', clearOpen);\n    if (clearOpen) {\n      setClearOpen(false);\n    } else {\n      closeAll();\n      setClearOpen(true);\n    }\n  };\n\n  const handleClearClose = () => setClearOpen(false);\n  const handleClearSubmit = () => {\n    handleClearClose();\n    handleClear();\n  };\n\n  console.log('clear open', clearOpen);\n  console.log('rendering desktop controls');\n  return (\n    <DesktopDrawer anchor=\"left\">\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n        <List\n          sx={{\n            backgroundColor: alpha('#fff', 0.1),\n            borderRadius: '0 10px 10px 0',\n          }}\n        >\n          <DBNA\n            label=\"Rearrange\"\n            icon={<AutoAwesomeMosaicIcon />}\n            handleChange={handleRearrange}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Photos\"\n            icon={<PhotoIcon />}\n            handleChange={handlePhotosClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Edit\"\n            icon={<EditIcon />}\n            handleChange={handleEditClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Clear\"\n            icon={<RefreshIcon />}\n            handleChange={handleClearClick}\n          />\n        </List>\n        {imageOptionsOpen ? photosComp : null}\n        {editOptionsOpen ? editComp : null}\n        <ClearCollageDialog\n          open={clearOpen}\n          onSubmit={handleClearSubmit}\n          onCancel={handleClearClose}\n        />\n      </Stack>\n    </DesktopDrawer>\n  );\n}\n\nDesktopControls.propTypes = {\n  onRefresh: PropTypes.func.isRequired,\n  photosComp: PropTypes.node.isRequired,\n  editComp: PropTypes.node.isRequired,\n  handleClear: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\n\nexport default function DesktopImageOptions({ onDelete, onAdd, clearDelete }) {\n  const handleAdd = () => {\n    clearDelete();\n    onAdd();\n  };\n\n  return (\n    <List\n      sx={{\n        backgroundColor: alpha('#fff', 0.15),\n        borderRadius: '10px 10px 10px 10px',\n        height: 'fit-content',\n      }}\n    >\n      <DBNA\n        label=\"Add\"\n        icon={<AddPhotoAlternateIcon />}\n        handleChange={handleAdd}\n      />\n      <ControlsDivider />\n      <DBNA label=\"Delete\" icon={<DeleteIcon />} handleChange={onDelete} />\n    </List>\n  );\n}\n\nDesktopImageOptions.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function PaddingControl({ padding, handlePaddingChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n          mixBlendMode: 'difference',\n        }}\n      >\n        Padding\n      </Typography>\n      <Slider\n        aria-label=\"Padding\"\n        defaultValue={0}\n        value={padding}\n        valueLabelDisplay=\"auto\"\n        step={0.1}\n        min={0}\n        max={10}\n        onChange={handlePaddingChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nPaddingControl.propTypes = {\n  padding: PropTypes.number.isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function RadiusControl({ radius, handleRadiusChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n        }}\n      >\n        Corner Radius\n      </Typography>\n      <Slider\n        aria-label=\"Corner Radius\"\n        defaultValue={0}\n        value={radius}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        min={0}\n        max={40}\n        onChange={handleRadiusChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nRadiusControl.propTypes = {\n  radius: PropTypes.number.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { ChromePicker } from 'react-color';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function ColorControl({\n  color,\n  displayColorPicker,\n  handleClick,\n  handleClose,\n  handleChange,\n}) {\n  console.log('color control', color, displayColorPicker);\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      spacing={2}\n      sx={{ my: 2 }}\n    >\n      <Typography\n        sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n      >\n        Background Color\n      </Typography>\n      <Box\n        component=\"div\"\n        sx={{\n          padding: '2px',\n          background: '#fff',\n          borderRadius: '5px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        }}\n        onClick={handleClick}\n      >\n        <Box\n          component=\"div\"\n          sx={{\n            width: '70px',\n            height: '30px',\n            borderRadius: '18px',\n            background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n          }}\n        />\n      </Box>\n      <ColorPicker\n        open={displayColorPicker}\n        color={color}\n        handleClose={handleClose}\n        handleChange={handleChange}\n      />\n    </Stack>\n  );\n}\n\nColorControl.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport function ColorPicker({ open, color, handleClose, handleChange }) {\n  console.log(handleClose);\n  return open ? (\n    <>\n      <Box\n        component=\"div\"\n        sx={{\n          position: 'absolute',\n          zIndex: 3,\n          bottom: 10,\n        }}\n      >\n        <IconButton\n          sx={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            zIndex: 2,\n            backgroundColor: 'button.main',\n            p: 0,\n            transform: 'translate(0, -110%)',\n            border: '2px solid black',\n          }}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n        <ChromePicker color={color} onChange={handleChange} />\n      </Box>\n    </>\n  ) : null;\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n//  import FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function TextControl({\n  text,\n  handleTextChange,\n  topText,\n  handlePositionChange,\n}) {\n  const [collageTextError] = useState('');\n  return (\n    <Stack\n      sx={{\n        backgroundColor: 'transparent',\n      }}\n    >\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        spacing={2}\n      >\n        <Typography\n          sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n        >\n          Collage Text\n        </Typography>\n        <FormGroup row>\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === false}\n                onChange={() => handlePositionChange(false)}\n                sx={{ color: 'white', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Bottom\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold' }}\n          />\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === true}\n                onChange={() => handlePositionChange(true)}\n                sx={{ color: 'gray', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Top\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold', fontSize: '0.8rem' }}\n          />\n        </FormGroup>\n      </Stack>\n      <TextField\n        variant=\"outlined\"\n        label=\"\"\n        defaultValue={text}\n        onChange={handleTextChange}\n        size=\"small\"\n        sx={{ width: '100%', mb: 1 }}\n        InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n        helperText={\n          <Typography sx={{ color: 'gray', fontSize: '0.75rem' }}>\n            {collageTextError}\n          </Typography>\n        }\n        error={!!collageTextError}\n      />\n    </Stack>\n  );\n}\n\nTextControl.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  handlePositionChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport ColorControl from 'components/collage/ColorControl';\nimport TextControl from 'components/collage/TextControl';\n\nexport default function EditControl({ optionProps }) {\n  const {\n    options,\n    handlePaddingChange,\n    displayColorPicker,\n    handleColorChange,\n    handleColorClose,\n    handleColorClick,\n    handleRadiusChange,\n    handleTextChange,\n    handlePositionChange,\n  } = optionProps;\n\n  return (\n    <Stack\n      direction=\"column\"\n      spacing={4}\n      sx={{\n        p: 2,\n        backgroundColor: alpha('#000', 0.7),\n        borderRadius: '10px 10px 10px 10px',\n        boxShadow: '0 0 10px inset rgba(255, 255, 255, 0.3)',\n      }}\n    >\n      <PaddingControl\n        padding={options.padding}\n        handlePaddingChange={handlePaddingChange}\n      />\n      <RadiusControl\n        radius={options.borderRadius}\n        handleRadiusChange={handleRadiusChange}\n      />\n      <ColorControl\n        color={options.color}\n        displayColorPicker={displayColorPicker}\n        handleChange={handleColorChange}\n        handleClose={handleColorClose}\n        handleClick={handleColorClick}\n      />\n      <TextControl\n        text={options.text}\n        topText={options.topText}\n        handleTextChange={handleTextChange}\n        handlePositionChange={handlePositionChange}\n      />\n    </Stack>\n  );\n}\n\nEditControl.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n\nexport default function MBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      value={label.toLowerCase()}\n      icon={icon}\n      sx={{\n        fontWeight: 'bold',\n        color: 'gray',\n        '&.Mui-selected': { color: 'white', outline: 'none' },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\n\nMBNA.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function MobileActions({ actionsRef, onDownload, onSave }) {\n  return (\n    <BottomNavigation\n      ref={actionsRef}\n      showLabels\n      sx={{ py: 1, fontWeight: 'bold', backgroundColor: alpha('#fff', 0.2) }}\n    >\n      <MBNA label=\"Save\" icon={<SaveIcon />} handleChange={onSave} />\n      <MBNA\n        label=\"Download\"\n        icon={<DownloadIcon />}\n        handleChange={onDownload}\n      />\n      <MBNA label=\"Print\" icon={<PrintIcon />} handleChange={() => {}} />\n    </BottomNavigation>\n  );\n}\n\nMobileActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport { alpha } from '@mui/material/styles';\n\nexport default function MainControls({ value, handleChange }) {\n  return (\n    <BottomNavigation\n      showLabels\n      value={value}\n      onChange={handleChange}\n      sx={{\n        fontWeight: 'bold',\n        backgroundColor: alpha('#fff', 0.2),\n        '&.Mui-selected': { color: 'white' },\n      }}\n    >\n      <BottomNavigationAction\n        label=\"Rearrange\"\n        value=\"rearrange\"\n        icon={<AutoAwesomeMosaicIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Photos\"\n        value=\"photo\"\n        icon={<PhotoIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Edit\"\n        value=\"edit\"\n        icon={<EditIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Clear\"\n        value=\"clear\"\n        icon={<RefreshIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n    </BottomNavigation>\n  );\n}\n\nMainControls.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport Typography from '@mui/material/Typography';\nimport PaddingIcon from '@mui/icons-material/Padding';\nimport CropFreeIcon from '@mui/icons-material/CropFree';\nimport SquareIcon from '@mui/icons-material/Square';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TitleIcon from '@mui/icons-material/Title';\nimport { alpha } from '@mui/material/styles';\n\nexport default function EditOptions({\n  color,\n  editOptionsValue,\n  open,\n  handleOptionsClose,\n  handleEditOptionsClick,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={editOptionsValue}\n        onChange={handleEditOptionsClick}\n        sx={{\n          display: 'flex',\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          position: 'relative',\n          alignItems: 'center',\n        }}\n      >\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Padding\n            </Typography>\n          }\n          value=\"padding\"\n          icon={<PaddingIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Corner\n            </Typography>\n          }\n          value=\"border radius\"\n          icon={<CropFreeIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Color\n            </Typography>\n          }\n          value=\"color\"\n          icon={\n            <SquareIcon\n              sx={{\n                fill: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n                borderRadius: '5px',\n              }}\n            />\n          }\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label=\"Text\"\n          value=\"text\"\n          icon={<TitleIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nEditOptions.propTypes = {\n  editOptionsValue: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleEditOptionsClick: PropTypes.func.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function ImageOptions({\n  open,\n  value,\n  handleOptionsClose,\n  handleDelete,\n  handleAdd,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={value}\n        sx={{\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          '&.Mui-selected': { color: 'white' },\n        }}\n      >\n        <MBNA\n          label=\"Delete\"\n          icon={<DeleteIcon />}\n          handleChange={handleDelete}\n        />\n        <MBNA\n          label=\"Add\"\n          icon={<AddPhotoAlternateIcon />}\n          handleChange={handleAdd}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nImageOptions.propTypes = {\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\n\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport TextControl from 'components/collage/TextControl';\nimport { ColorPicker } from 'components/collage/ColorControl';\nimport MainControls from 'components/collage/MainControls';\nimport EditOptions from 'components/collage/EditOptions';\nimport ImageOptions from 'components/collage/ImageOptions';\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function MobileControls({\n  optionProps,\n  actionProps,\n  dimensionProps,\n  handleClear,\n}) {\n  const {\n    options,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClose,\n    handleColorClick,\n    handleColorChange,\n    handleTextChange,\n    handlePositionChange,\n    displayColorPicker,\n  } = optionProps;\n\n  const { onRefresh, onDelete, clearDelete } = actionProps;\n  const { footerRef, handleImageAddClick } = dimensionProps;\n\n  const [mainOpen, setMainOpen] = useState(true);\n  const [value, setValue] = useState('');\n  const [editOpen, setEditOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const [editControl, setEditControl] = useState(null);\n  const [editOptionsValue, setEditOptionsValue] = useState('');\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageValue, setImageValue] = useState('');\n\n  const handleImageOptionsClose = () => {\n    setImageOpen(false);\n    setImageValue('');\n    setMainOpen(true);\n    clearDelete();\n    setValue('');\n  };\n\n  const handleEditOptionsClose = () => {\n    setEditOpen(false);\n    setEditControl(null);\n    setEditOptionsValue('');\n    setMainOpen(true);\n    setValue('');\n  };\n\n  const handleEditOptionsClick = (e, nV) => {\n    console.log('handle edit options click');\n    setEditOptionsValue(nV);\n    if (nV === 'padding') {\n      setEditControl(\n        <PaddingControl\n          padding={options.padding}\n          handlePaddingChange={handlePaddingChange}\n        />\n      );\n    } else if (nV === 'border radius') {\n      setEditControl(\n        <RadiusControl\n          radius={options.borderRadius}\n          handleRadiusChange={handleRadiusChange}\n        />\n      );\n    } else if (nV === 'color') {\n      handleColorClick();\n      setEditControl(\n        <ColorPicker\n          open={displayColorPicker}\n          color={options.color}\n          handleChange={handleColorChange}\n          handleClose={() => {\n            setEditControl(null);\n            handleColorClose();\n          }}\n        />\n      );\n    } else if (nV === 'text') {\n      console.log(nV);\n      setEditControl(\n        <TextControl\n          text={options.text}\n          handleTextChange={handleTextChange}\n          topText={options.topText}\n          handlePositionChange={handlePositionChange}\n        />\n      );\n    } else {\n      setEditControl(<Typography color=\"secondary\">{nV}</Typography>);\n    }\n  };\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'padding') {\n      setEditControl(\n        <PaddingControl\n          padding={options.padding}\n          handlePaddingChange={handlePaddingChange}\n        />\n      );\n    }\n  }, [options.padding, editOpen]);\n  // }, [options.padding, editOpen, editOptionsValue]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'border radius') {\n      setEditControl(\n        <RadiusControl\n          radius={options.borderRadius}\n          handleRadiusChange={handleRadiusChange}\n        />\n      );\n    }\n  }, [options.borderRadius, editOpen]);\n  // }, [options.borderRadius, editOpen, editOptionsValue]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'color') {\n      setEditControl(\n        <ColorPicker\n          open={displayColorPicker}\n          color={options.color}\n          handleChange={handleColorChange}\n          handleClose={handleColorClose}\n        />\n      );\n    }\n  }, [options.color, editOpen, displayColorPicker]);\n  // }, [options.color, editOpen, editOptionsValue, displayColorPicker]);\n\n  useEffect(() => {\n    console.log('text control useEffect');\n    if (editOpen && editOptionsValue === 'text') {\n      setEditControl(\n        <TextControl\n          text={options.text}\n          handleTextChange={handleTextChange}\n          topText={options.topText}\n          handlePositionChange={handlePositionChange}\n        />\n      );\n    }\n  }, [options.text, editOpen, options.topText]);\n  // }, [options.text, editOpen, editOptionsValue, options.topText]);\n\n  const handleImageClose = () => {\n    setImageValue('');\n    setImageOpen(false);\n    setMainOpen(true);\n  };\n\n  const handleChange = (event, newValue) => {\n    clearDelete();\n    handleImageClose();\n    handleEditOptionsClose();\n    setValue(newValue);\n    if (newValue === 'rearrange') {\n      onRefresh();\n    } else if (newValue === 'photo') {\n      setMainOpen(false);\n      setImageOpen(true);\n    } else if (newValue === 'edit') {\n      setMainOpen(false);\n      setEditOpen(true);\n    } else if (newValue === 'clear') {\n      setClearOpen(true);\n      //  handleClear();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  const handleImageAdd = () => {\n    clearDelete();\n    handleImageAddClick();\n  };\n\n  const handleClearSubmit = () => {\n    handleClear();\n    setClearOpen(false);\n    setValue('');\n  };\n\n  const handleClearCancel = () => {\n    setClearOpen(false);\n    setValue('');\n  };\n\n  console.log('rerendering', editControl);\n  return (\n    <Paper\n      ref={footerRef}\n      sx={{\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        mt: 1,\n        backgroundColor: 'black',\n        borderRadius: 0,\n      }}\n      elevation={4}\n    >\n      <ClearCollageDialog\n        open={clearOpen}\n        onSubmit={handleClearSubmit}\n        onCancel={handleClearCancel}\n      />\n      {editControl ? (\n        <Box\n          sx={{\n            backgroundColor: alpha('#fff', 0.15),\n            p: 1,\n          }}\n        >\n          {editControl}\n        </Box>\n      ) : null}\n      <ImageOptions\n        open={imageOpen}\n        value={imageValue}\n        handleDelete={onDelete}\n        handleAdd={handleImageAdd}\n        handleOptionsClose={handleImageOptionsClose}\n      />\n      <EditOptions\n        color={options.color}\n        editOptionsValue={editOptionsValue}\n        open={editOpen}\n        handleOptionsClose={handleEditOptionsClose}\n        handleEditOptionsClick={handleEditOptionsClick}\n      />\n      {mainOpen ? (\n        <MainControls value={value} handleChange={handleChange} />\n      ) : null}\n    </Paper>\n  );\n}\n\nMobileControls.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n  }).isRequired,\n  actionProps: PropTypes.shape({\n    onRefresh: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    clearDelete: PropTypes.func.isRequired,\n  }).isRequired,\n  handleClear: PropTypes.func.isRequired,\n  dimensionProps: PropTypes.shape({\n    handleImageAddClick: PropTypes.func.isRequired,\n    footerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport db from 'db';\nimport { useEffect, useState } from 'react';\nimport dbutils from 'components/collage/dbutils';\nimport useBase from 'hooks/collage/base';\nimport utils from 'utils';\nimport { useNavigate } from 'react-router-dom';\nimport Dialog from '@mui/material/Dialog';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport DialogContent from '@mui/material/DialogContent';\n\nimport Authenticate from 'hocs/require-authentication';\nimport Collage from 'components/collage/Collage';\nimport DownloadDialog from 'components/collage/DownloadDialog';\nimport SaveDialog from 'components/collage/SaveDialog';\nimport SaveStatusDialog from 'components/collage/SaveStatusDialog';\nimport Header from 'components/collage/Header';\nimport Loading from 'components/Loading';\nimport View from 'components/collage/View';\n\nimport DesktopActions from 'components/collage/DesktopActions';\nimport DesktopControls from 'components/collage/DesktopControls';\nimport DesktopImageOptions from 'components/collage/DesktopImageOptions';\nimport EditControl from 'components/collage/EditControl';\nimport MobileActions from 'components/collage/MobileActions';\nimport MobileControls from 'components/collage/MobileControls';\n\nexport default function BaseCollage({ getCollage, clearCollage, saveType }) {\n  console.log('base collage', saveType);\n  const navigate = useNavigate();\n  const [details, setDetails] = useState({});\n  const [status, setStatus] = useState('fetching');\n  const [commonOpen, setCommonOpen] = useState(false);\n  const [commonMessage, setCommonMessage] = useState('fetching');\n\n  const openCommonDialog = (message) => {\n    console.log('opening common dialog with message', message);\n    if (message !== '') {\n      setCommonMessage(message);\n      setCommonOpen(true);\n    }\n  };\n\n  const closeCommonDialog = () => {\n    console.log('closing common dialog', commonMessage);\n    setCommonOpen(false);\n  };\n\n  const [\n    getDetails,\n    collageName,\n    ,\n    collageID,\n    constants,\n    dimensionProps,\n    optionProps,\n    actionProps,\n    imageProps,\n    treeProps,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n  ] = useBase(details);\n\n  useEffect(async () => {\n    if (Object.keys(details).length === 0) {\n      setStatus('fetching');\n      const collageDetails =\n        saveType === 'new'\n          ? await getCollage()\n          : await getCollage(\n              imageProps.setImageCount,\n              imageProps.setNewImageCount,\n              imageProps.handleImageData\n            );\n      setStatus('fetch end');\n      console.log('setting collage details', collageDetails);\n      setDetails(collageDetails);\n      if (saveType === 'new') {\n        clearCollage();\n      }\n    }\n  }, []);\n\n  console.log(\n    'base collage',\n    details,\n    imageProps.imgCount,\n    imageProps.loaded,\n    imageProps.images,\n    imageProps.newImagesLoaded,\n    collageName,\n    collageID\n  );\n\n  useEffect(() => {\n    let st = status;\n    // if (st === 'fetching') return;\n    if (\n      imageProps.imgCount === 0 &&\n      Object.keys(details).length === 0 &&\n      st === 'fetch end'\n    ) {\n      st = 'empty';\n    }\n    if (\n      imageProps.images.length > 0 &&\n      imageProps.images.length === imageProps.imgCount\n    ) {\n      st = 'preparing';\n    }\n    if (imageProps.images.length < imageProps.imgCount) {\n      st = 'loading';\n    }\n    if (imageProps.loaded >= imageProps.imgCount && imageProps.imgCount > 0) {\n      st = 'ready';\n    }\n    setStatus(st);\n    console.log(\n      'status calculation',\n      imageProps.loaded,\n      imageProps.imgCount,\n      imageProps.images.length,\n      st,\n      details\n    );\n  }, [imageProps]);\n\n  const clearAll = () => {\n    openCommonDialog('Deleting Collage');\n    setDetails({});\n    handleClear();\n    clearCollage();\n    setStatus('fetch end');\n    closeCommonDialog();\n    if (saveType === 'existing') {\n      openCommonDialog('Navigating to collages page');\n      setTimeout(() => navigate('/collages'), 3000);\n      closeCommonDialog();\n    }\n  };\n\n  const handleSave = async (name) => {\n    console.log('in handle save', getDetails(name), imageProps.images);\n\n    actionProps.onSaveClick();\n    const res =\n      saveType === 'new' ? await newCollage(name) : await saveCollage(name);\n    console.log('save results', res, collageID);\n    if (res) {\n      setTimeout(() => {\n        if (saveType === 'new') clearAll();\n        actionProps.setSaveStart(false);\n        navigate('/collages');\n      }, 3000);\n    }\n  };\n\n  const downloadDialog = (\n    <DownloadDialog\n      open={actionProps.open}\n      onClick={actionProps.onDownloadClick}\n      onClose={actionProps.onDownloadClose}\n      sizes={constants.paperSizes}\n    />\n  );\n\n  const saveDialog = (\n    <Authenticate>\n      <SaveDialog\n        open={actionProps.saveOpen}\n        onClick={handleSave}\n        onClose={actionProps.onSaveClose}\n      />\n    </Authenticate>\n  );\n\n  const saveStatusDialog = (\n    <Authenticate>\n      <SaveStatusDialog open={actionProps.saveStart} status={saveStatus} />\n    </Authenticate>\n  );\n\n  const collage = (\n    <Collage\n      dimensionProps={dimensionProps}\n      imageProps={imageProps}\n      actionProps={actionProps}\n      collageCallback={collageCallback}\n      handleRemoveImage={handleRemoveImage}\n      options={optionProps.options}\n      tree={treeProps.tree}\n    />\n  );\n\n  const mobileControls = (\n    <MobileControls\n      optionProps={optionProps}\n      actionProps={actionProps}\n      dimensionProps={dimensionProps}\n      handleClear={clearAll}\n    />\n  );\n\n  const header = (\n    <Header headerRef={dimensionProps.headerRef} name={collageName} />\n  );\n\n  const desktopPhotosComp = (\n    <DesktopImageOptions\n      onDelete={actionProps.onDelete}\n      onAdd={dimensionProps.handleImageAddClick}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n  const desktopControls = (\n    <DesktopControls\n      onRefresh={actionProps.onRefresh}\n      photosComp={desktopPhotosComp}\n      editComp={<EditControl optionProps={optionProps} />}\n      handleClear={clearAll}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n\n  const isMobile = window.innerWidth < window.innerHeight;\n  const controls = isMobile ? mobileControls : desktopControls;\n\n  const onSave = async () => {\n    const userInfo = utils.getUserInfo();\n    console.log('user info', userInfo);\n    if (saveType === 'new' && userInfo === '') {\n      openCommonDialog('Saving collage locally');\n      console.time('saving locally');\n      await db.collageDB.details.clear();\n      await db.collageDB.images.clear();\n      console.timeEnd('saving locally');\n      console.time('saving locally state');\n      const respdets = await dbutils.save(\n        [getDetails(collageName, {})],\n        'details'\n      );\n      const respImgs = await dbutils.save(imageProps.images, 'images');\n      console.log('save responses', respdets, respImgs);\n      console.timeEnd('saving locally state');\n      closeCommonDialog();\n    }\n    actionProps.handleSave();\n  };\n\n  const actionsComp = isMobile ? (\n    <MobileActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={onSave}\n    />\n  ) : (\n    <DesktopActions onDownload={actionProps.handleDownload} onSave={onSave} />\n  );\n\n  return (\n    <>\n      <View\n        open={actionProps.open}\n        saveOpen={actionProps.saveOpen}\n        saveStatusOpen={actionProps.saveStart}\n        dimensionProps={dimensionProps}\n        imageProps={imageProps}\n        header={header}\n        actions={actionsComp}\n        downloadDialog={downloadDialog}\n        saveDialog={saveDialog}\n        saveStatusDialog={saveStatusDialog}\n        collage={collage}\n        controls={controls}\n        status={status}\n        saveType={saveType}\n      />\n      <input\n        ref={dimensionProps.addImageRef}\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={imageProps.handleLoad}\n      />\n      {actionProps.generate ? <Loading title=\"Creating collage ...\" /> : null}\n      <Dialog open={commonOpen}>\n        <DialogContent>\n          <Stack\n            direction=\"row\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <CircularProgress />\n            <Typography variant=\"h6\">{commonMessage}</Typography>\n          </Stack>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n  // return 'base';\n}\n\nBaseCollage.propTypes = {\n  getCollage: PropTypes.func.isRequired,\n  clearCollage: PropTypes.func.isRequired,\n  saveType: PropTypes.string.isRequired,\n};\n","const parseCookie = (str) =>\n  Object.fromEntries(str.split(';').map((cookie) => cookie.split('=', 2)));\n\nfunction getUserInfo() {\n  const parsedCookies = parseCookie(document.cookie);\n  if ('userInfo' in parsedCookies) {\n    return JSON.parse(atob(parsedCookies.userInfo));\n  }\n  return '';\n}\n\nfunction handleMaxPhotos(containerWidth) {\n  if (containerWidth < 450) return { maxPhotos: 2 };\n  if (containerWidth < 800) return { maxPhotos: 3 };\n  return { maxPhotos: 4 };\n}\n\nfunction handleColumns(containerWidth) {\n  if (containerWidth < 450) return 2;\n  if (containerWidth < 800) return 3;\n  return 4;\n}\n\nfunction handleArrangement(images, callback) {\n  let twidth = 0;\n  let theight = 0;\n  images.forEach(({ height, width }) => {\n    if (height > width) theight += 1;\n    else twidth += 1;\n  });\n  if (twidth > theight) {\n    callback('rows');\n  } else {\n    callback('columns');\n  }\n}\n\nasync function isFieldValid(key, value, setFieldError, schema) {\n  let hasError = false;\n  const testField = await schema\n    .validate({ [key]: value }, { abortEarly: false })\n    .catch((error) => error);\n  setFieldError('');\n  if (testField.inner) {\n    testField.inner.forEach((error) => setFieldError(error.message));\n    hasError = true;\n  }\n  return !hasError;\n}\n\nexport default {\n  parseCookie,\n  getUserInfo,\n  handleMaxPhotos,\n  handleColumns,\n  handleArrangement,\n  isFieldValid,\n};\n"],"names":["url","body","params","method","fetch","then","response","resp","console","log","newCollage","collageID","collageDetails","collage_id","helpers","process","JSON","stringify","error","saveCollage","upload","listCollages","nextToken","next_token","getThumbnail","collageId","getCollage","deleteCollage","checkOptimizeStatus","get","path","newUrl","options","credentials","headers","Headers","URLSearchParams","toString","ok","status","document","cookie","json","post","apiUrl","deleteMethod","OptionsButton","children","onClick","name","Button","id","variant","component","sx","color","borderRadius","backgroundColor","padding","defaultProps","AddPhotos","handleChange","type","hidden","multiple","accept","onChange","fontSize","Typography","fontWeight","LoginButton","authURL","next","href","target","style","textDecoration","borderColor","alpha","getData","tableName","db","toArray","rows","length","clearData","clear","getCollageDetails","details","images","data","map","dt","put","getCollageData","clearCollageData","save","getClosest","arr","index1","index2","downscaleImage","image","newWidth","newHeight","fileType","canvas","createElement","width","height","getContext","drawImage","toDataURL","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","getCut","Math","round","random","findClosest","n","start","end","mid","findImgPair","i","j","minMatchingCost","abs","getAspectRatio","cut","ar1","ar2","handleImageLoad","event","handleImageCount","handleNewImageCount","handleImageData","files","cnt","Array","from","Image","e","naturalWidth","naturalHeight","src","imageDetail","title","Date","now","aspectRatio","resizeImages","originalImages","maxWidth","handleImages","addImagesToDB","tempImages","forEach","origImage","tempImage","push","imgs","ind","findIndex","elem","slice","wrapText","text","x","y","lineHeight","textCanvas","ctx","font","textAlign","tempX","tempY","words","split","line","testLine","lineArray","testWidth","measureText","letterSpacing","convertToRGBA","value","r","g","b","a","getCollageDimension","maxW","maxH","origAR","convertBase64String","readAsD","Blob","ProfileAvatar","picture","email","initials","toUpperCase","referrerPolicy","alt","ProfileIcon","open","handleClick","avatar","display","alignItems","marginRight","size","undefined","ml","ProfileMenu","handleClose","anchorEl","profileIdentifier","onClose","PaperProps","elevation","filter","mt","mr","content","position","top","right","bgcolor","transform","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","underline","Profile","React","setAnchorEl","Boolean","userInfo","commonUtils","userAvatar","currentTarget","ProfileLink","item","paddingTop","collageDB","Dexie","version","stores","AuthDialog","onLogin","fullWidth","dividers","justifyContent","Authenticate","nextPath","useState","setOpen","location","useLocation","isLoggedIn","to","replace","pathname","search","window","Node","this","left","obj","fromObject","getScore","output","concat","copyNode","copy","newImages","replaceImages","removeImageData","imageData","find","addImageData","delImg","handleRemoveImage","yOffset","xOffset","handleCollageImageLoad","newX","newY","Box","onLoad","Tooltip","IconButton","Delete","DOMDisplay","RenderImage","tempCanvas","tempCtx","scaleFactor","floor","log2","radius","clipwidth","clipheight","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","canvasElement","CanvasDisplay","newImg","ResizeImage","ImageStyling","clearRect","tar","imageCount","targetAspectRatioArr","closestIndex","restImages","targetAspectRatio","leftIndex","rightIndex","index","includes","first","second","generate","th","adjustments","adjust","parentWidth","parentHeight","parentX","parentY","parentCut","nodeType","addSize","TextDisplay","textArray","chunk","paddingX","fontFamily","BinaryTree","root","tempTree","canvasWidth","canvasHeight","topText","lA","textHeight","fillStyle","fillRect","textBaseline","textPart","fillText","TextCanvasDraw","score","min","trys","bestAdjust","bestAspectRatio","tolerableDifference","ajstCnt","diff","copyTree","findBestAdjustTree","tolerance","imageWidth","imageHeight","sortedImages","sort","collageArray","imgTree","generateCollageTree","aspR","bAR","toFixed","maxScore","maxElem","element","generateScore","useBase","initialValue","setDetails","collageName","setCollageName","constants","resizeImageWidth","paperSizes","A4","A3","A4LandScape","A3LandScape","FBCoverDesktop","WhatsappStatus","uploadedImages","setUploadedImages","dimensions","headerRef","useRef","actionsRef","footerRef","addImageRef","setHeight","setImageHeight","setImageWidth","setWidth","maxHeight","setMaxHeight","setMaxWidth","setTextHeight","setDimensions","otherHeight","current","offsetHeight","innerWidth","innerHeight","w","h","useEffect","addEventListener","removeEventListener","handleImageAddClick","click","useDimensions","optionsInitValue","setOptions","displayColorPicker","setDisplayColorPicker","handlePaddingChange","opts","handleRadiusChange","handleColorClick","dcp","handleColorClose","handleColorChange","clr","rgb","handlePositionChange","handleTextChange","useOptions","actions","saveOpen","setSaveOpen","saveStart","setSaveStart","refresh","setRefresh","setGenerate","removeImage","setRemoveImage","paperWidth","paperHeight","printOptions","setPrintOptions","clearDelete","handleDownload","handleGenerateCallback","onDelete","ri","onDownloadClick","onDownloadClose","onRefresh","onSaveClose","onSaveClick","handleSave","useActions","newImgCount","setNewImageCount","newImagesLoaded","setNewImagesLoaded","imgCount","setImageCount","loaded","setLoaded","setImages","handleLoad","remove","removeIndex","newImagesArr","imageArr","img","useImages","treeState","loadingCallback","tree","setTree","newTree","Object","keys","reAdjust","imagesArr","treeUtils","bestAspectRatioTree","addOptions","useTree","thumbnail","setThumbnail","finalizing","saveStatus","setSaveStatus","updateStatus","key","st","imagesText","updateImagesStatus","handleClear","allSettled","clearPromises","generateThumbnail","ar","thumbnailCanvas","thumbnailTree","thumbnailDetails","uploadCollageDetails","dets","created_at","last_updated_at","collageapi","uploadCollageImages","imageURLS","imagePromises","thumbnailKey","thumbnailPromise","toBlob","blob","Img","uploadPromises","uploadStatus","tH","getDetails","imgTitle","Collage","dimensionProps","imageProps","actionProps","collageCallback","collage","setCollage","isEmpty","t","createCollage","collageElem","imgPrintWidth","imgPrintHeight","canvasTree","setTimeout","pW","pH","link","download","URL","createObjectURL","revokeObjectURL","DownloadDialog","sizes","setValue","Dialog","DialogTitle","DialogContent","DialogContentText","pr","FormControl","InputLabel","Select","labelId","defaultValue","label","MenuItem","DialogActions","disabled","SaveDialog","setName","nameError","TextField","mb","InputProps","helperText","StatusIndicator","CircularProgress","Pending","CheckCircleOutline","Close","Status","pending","done","running","failed","Stack","direction","OverAllStatus","counter","spacing","p","SaveStatusDialog","overAllStatus","setCounter","timerId","clearTimeout","statusArr","values","val","Header","Paper","ref","postion","Link","ArrowBack","EmptyCollage","loadComponent","backgroundImage","collageBack","backgroundSize","objectFit","backgroundRepeat","View","saveStatusOpen","header","downloadDialog","saveDialog","saveStatusDialog","controls","saveType","Loading","DBNA","icon","BottomNavigationAction","showLabel","py","outline","DesktopDrawer","anchor","Drawer","ControlsDivider","Divider","my","DesktopActions","onDownload","onSave","newValue","List","Save","Download","Print","ClearCollageDialog","onSubmit","onCancel","noWrap","DesktopControls","photosComp","editComp","imageOptionsOpen","setImageOptionsOpen","editOptionsOpen","setEditOptionsOpen","clearOpen","setClearOpen","closeAll","handleClearClose","AutoAwesomeMosaic","Photo","Edit","Refresh","DesktopImageOptions","onAdd","AddPhotoAlternate","PaddingControl","mixBlendMode","Slider","valueLabelDisplay","step","max","RadiusControl","ColorControl","background","boxShadow","cursor","ColorPicker","bottom","border","TextControl","collageTextError","FormGroup","row","FormControlLabel","disableTypography","control","Checkbox","checked","EditControl","optionProps","MBNA","toLowerCase","MobileActions","BottomNavigation","showLabels","MainControls","EditOptions","editOptionsValue","handleOptionsClose","handleEditOptionsClick","borderTop","Padding","CropFree","Square","fill","Title","ImageOptions","handleDelete","handleAdd","MobileControls","mainOpen","setMainOpen","editOpen","setEditOpen","editControl","setEditControl","setEditOptionsValue","imageOpen","setImageOpen","imageValue","setImageValue","handleEditOptionsClose","nV","BaseCollage","clearCollage","navigate","useNavigate","setStatus","commonOpen","setCommonOpen","commonMessage","setCommonMessage","openCommonDialog","message","closeCommonDialog","treeProps","clearAll","res","mobileControls","desktopPhotosComp","desktopControls","isMobile","utils","time","timeEnd","dbutils","respdets","respImgs","actionsComp","parseCookie","str","fromEntries","setFieldError","schema","hasError","validate","abortEarly","catch","testField","inner","getUserInfo","parsedCookies","parse","atob","handleMaxPhotos","containerWidth","maxPhotos","handleColumns","handleArrangement","callback","twidth","theight","isFieldValid"],"sourceRoot":""}