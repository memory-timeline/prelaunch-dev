{"version":3,"file":"static/js/58.32367b12.chunk.js","mappings":"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","sources":["api/collage.jsx","api/helpers.js","components/OptionsButton.jsx","components/AddPhotos.jsx","components/LoginButton.jsx","db.js","components/collage/dbutils.js","components/profile.jsx","components/collage/helpers.js","components/collage/node.jsx","components/collage/binaryTree.jsx","components/collage/treeUtils.js","hooks/collage/base.jsx","hooks/collage/dimensions.jsx","hooks/collage/options.jsx","hooks/collage/actions.jsx","hooks/collage/images.jsx","hooks/collage/tree.jsx","components/collage/Collage.jsx","components/collage/DownloadDialog.jsx","components/collage/SaveDialog.jsx","components/collage/SaveStatusDialog.jsx","components/collage/Header.jsx","components/collage/EmptyCollage.jsx","components/collage/View.jsx","components/collage/DesktopActionItem.jsx","components/collage/DesktopDrawer.jsx","components/collage/ControlsDivider.jsx","components/collage/DesktopActions.jsx","components/collage/ClearCollageDialog.jsx","components/collage/DesktopControls.jsx","components/collage/DesktopImageOptions.jsx","components/collage/PaddingControl.jsx","components/collage/RadiusControl.jsx","components/collage/ColorControl.jsx","components/collage/TextControl.jsx","components/collage/EditControl.jsx","components/collage/MobileActionItem.jsx","components/collage/MobileActions.jsx","components/collage/MainControls.jsx","components/collage/EditOptions.jsx","components/collage/ImageOptions.jsx","components/collage/MobileControls.jsx","pages/collage/Base.jsx"],"sourcesContent":["import helpers from 'api/helpers';\n\nfunction newCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/new';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nasync function upload(url, body) {\n  try {\n    const params = { body, method: 'PUT' };\n    const resp = await fetch(url, params).then((response) => response);\n    return resp;\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction listCollages(nextToken) {\n  try {\n    const path = '/api/collage/list';\n    const params = { next_token: nextToken };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getThumbnail(collageId) {\n  try {\n    const path = '/api/collage/thumbnail';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getCollage(collageId) {\n  try {\n    const path = '/api/collage/get';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nexport default { newCollage, upload, listCollages, getThumbnail, getCollage };\n","const get = async (url, path, params = {}) => {\n  let newUrl = `https://${url}${path}`;\n  const options = {\n    method: 'GET',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  newUrl += `?${new URLSearchParams(params).toString()}`;\n  const resp = await fetch(newUrl, options);\n  if (!resp.ok) {\n    if (resp.status === 401) {\n      document.cookie =\n        'userInfo=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return { status: 'unauthenticated' };\n    }\n    if (resp.status === 403) {\n      return { status: 'forbidden' };\n    }\n  }\n\n  return resp.json();\n};\n\nconst post = async (url, path, params, body) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'POST',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body,\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\n\nexport default { get, post };\n","import PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\n\nexport default function OptionsButton({ children, onClick, name }) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: 'muted.main',\n        borderRadius: 15,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: 'muted.main',\n          backgroundColor: 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  //  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport OptionsButton from 'components/OptionsButton';\nimport Typography from '@mui/material/Typography';\n\nexport default function AddPhotos({ handleChange }) {\n  return (\n    <OptionsButton name=\"add\">\n      <input\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={handleChange}\n      />\n      <AddPhotoIcon sx={{ fontSize: '2rem' }} />\n      <Typography sx={{ fontWeight: 'bold' }}>Add Images</Typography>\n    </OptionsButton>\n  );\n}\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import Button from '@mui/material/Button';\n// import Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\n\nexport default function LoginButton({ authURL, next }) {\n  const url =\n    next !== ''\n      ? `https://${authURL}/oauth2/authorize?next=${next}`\n      : `https://${authURL}/oauth2/authorize`;\n  return (\n    <a\n      href={url}\n      target=\"_self\"\n      style={{ textDecoration: 'none', color: 'white' }}\n    >\n      <Button\n        type=\"submit\"\n        variant=\"outlined\"\n        sx={{\n          borderRadius: '5px',\n          borderColor: 'white',\n          fontWeight: 'bold',\n          color: 'white',\n          '&:hover': {\n            color: 'white',\n            borderColor: 'white',\n            backgroundColor: alpha('#fff', 0.1),\n          },\n        }}\n      >\n        Login\n      </Button>\n    </a>\n  );\n}\n\nLoginButton.propTypes = {\n  authURL: PropTypes.string.isRequired,\n  next: PropTypes.string.isRequired,\n};\n","import Dexie from 'dexie';\n\nconst collageDB = new Dexie('collage');\n\ncollageDB.version(1).stores({\n  images:\n    'title, src,naturalWidth,naturalHeight,aspectRatio,type,targetAspectRatio', // Primary key and indexed props\n  originalImages:\n    'title, src,naturalWidth,naturalHeight,aspectRatio,type,targetAspectRatio', // Primary key and indexed props\n  imgCount: '++id, count',\n  collageTree: '++id, collageTree',\n  details: '++id, details',\n});\n\nexport default { collageDB };\n","import db from 'db';\n\nasync function getData(tableName) {\n  const rows = await db.collageDB[tableName].toArray();\n  if (rows.length) return rows;\n  return [];\n}\n\nfunction clearData(tableName) {\n  return db.collageDB[tableName].clear();\n}\n\nasync function getCollageDetails() {\n  const rows = await getData('details');\n  if (rows.length) return rows[0];\n  return {};\n}\n\nasync function getCollageData() {\n  const details = await getCollageDetails();\n  const images = await getData('images');\n  const originalImages = await getData('originalImages');\n  return { details, images, originalImages };\n}\n\nfunction clearCollageData() {\n  clearData('details');\n  clearData('images');\n  clearData('originalImages');\n}\n\nasync function save(data, tableName) {\n  await db.collageDB[tableName].clear();\n  const resp = await Promise.allSettled(\n    data.map((dt) => db.collageDB[tableName].put(dt))\n  );\n  return resp;\n}\n\nexport default { getCollageData, clearCollageData, save };\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport Logout from '@mui/icons-material/Logout';\nimport Typography from '@mui/material/Typography';\nimport ListItemText from '@mui/material/ListItemText';\nimport Link from '@mui/material/Link';\nimport { alpha } from '@mui/material/styles';\nimport Authenticate from '../hocs/require-authentication';\nimport commonUtils from '../utils';\n\nexport function ProfileAvatar({ name, picture, email }) {\n  const initials = Array.from(email)[0].toUpperCase();\n  return (\n    <Avatar\n      sx={{\n        borderRadius: '50%',\n        // border: 3,\n        borderColor: alpha('#fff', 0.8),\n        referrerPolicy: 'no-referrer',\n      }}\n      alt={name}\n      src={picture}\n    >\n      {initials}\n    </Avatar>\n  );\n}\n\nfunction ProfileIcon({ name, email, open, handleClick, avatar }) {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        textAlign: 'center',\n        marginRight: '10px',\n      }}\n    >\n      <Tooltip\n        title={\n          <>\n            <Typography>{name}</Typography>\n            <Typography>{email}</Typography>\n          </>\n        }\n      >\n        <IconButton\n          onClick={handleClick}\n          size=\"small\"\n          aria-controls={open ? 'account-menu' : undefined}\n          aria-haspopup=\"true\"\n          aria-expanded={open ? 'true' : undefined}\n          sx={{ ml: 2 }}\n        >\n          {avatar}\n        </IconButton>\n      </Tooltip>\n    </Box>\n  );\n}\n\nfunction ProfileMenu({ name, open, handleClose, anchorEl, avatar, email }) {\n  const profileIdentifier = name || email;\n  const authURL = process.env.REACT_APP_AUTH_URL;\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      id=\"account-menu\"\n      open={open}\n      onClose={handleClose}\n      onClick={handleClose}\n      PaperProps={{\n        elevation: 0,\n        sx: {\n          filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n          mt: 1.5,\n          '& .MuiAvatar-root': {\n            width: 32,\n            height: 32,\n            ml: -0.5,\n            mr: 1,\n          },\n          '&:before': {\n            content: '\"\"',\n            display: 'block',\n            position: 'absolute',\n            top: 0,\n            right: 14,\n            width: 10,\n            height: 10,\n            bgcolor: 'background.paper',\n            transform: 'translateY(-50%) rotate(45deg)',\n            zIndex: 0,\n          },\n        },\n      }}\n      transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n      anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n    >\n      <MenuItem>\n        {avatar}\n        <ListItemText>{profileIdentifier}</ListItemText>\n      </MenuItem>\n      <Divider />\n      <Link\n        href={`https://${authURL}/oauth2/logout`}\n        underline=\"none\"\n        sx={{ alignItems: 'center', display: 'flex' }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <Logout fontSize=\"small\" />\n          </ListItemIcon>\n          <Typography sx={{ color: 'muted.main' }}>Logout</Typography>\n        </MenuItem>\n      </Link>\n    </Menu>\n  );\n}\n\nfunction Profile() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const userInfo = commonUtils.getUserInfo();\n  const handleClose = () => setAnchorEl(null);\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const userAvatar = (\n    <ProfileAvatar\n      name={userInfo.name}\n      picture={userInfo.picture}\n      email={userInfo.email}\n    />\n  );\n\n  return (\n    <>\n      <ProfileIcon\n        avatar={userAvatar}\n        open={open}\n        email={userInfo.email}\n        handleClick={handleClick}\n        name={userInfo.name}\n      />\n      <ProfileMenu\n        anchorEl={anchorEl}\n        avatar={userAvatar}\n        handleClose={handleClose}\n        name={userInfo.name}\n        email={userInfo.email}\n        open={open}\n      />\n    </>\n  );\n}\n\nexport default function ProfileLink() {\n  //  const ProfileButton = Authenticate(Profile);\n  return (\n    <Grid item sx={{ paddingTop: '0.3rem' }}>\n      <Authenticate>\n        <Profile />\n      </Authenticate>\n    </Grid>\n  );\n}\n\nProfileIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  avatar: PropTypes.node.isRequired,\n};\n\nProfileMenu.defaultProps = {\n  anchorEl: '',\n};\n\nProfileMenu.propTypes = {\n  name: PropTypes.string.isRequired,\n  anchorEl: PropTypes.node,\n  handleClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  avatar: PropTypes.node.isRequired,\n  email: PropTypes.string.isRequired,\n};\n\nProfileAvatar.propTypes = {\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n};\n","function getClosest(arr, index1, index2, target) {\n  if (target - arr[index1] >= arr[index2] - target) return index2;\n  return index1;\n}\n\nfunction findClosest(arr, target) {\n  const n = arr.length;\n\n  if (target <= arr[0]) return 0;\n  if (target >= arr[n - 1]) return n - 1;\n\n  let start = 0;\n  let end = n;\n  let mid = 0;\n  while (start < end) {\n    mid = (start + end) / 2;\n\n    if (arr[mid] === target) return mid;\n\n    if (target < arr[mid]) {\n      if (mid > 0 && target > arr[mid - 1])\n        return getClosest(arr, mid - 1, mid, target);\n      end = mid;\n    } else {\n      if (mid < n - 1 && target < arr[mid + 1])\n        return getClosest(arr, mid, mid + 1, target);\n      start = mid + 1;\n    }\n  }\n\n  return mid;\n}\n\nfunction getCut() {\n  const cutArr = ['v', 'h'];\n  return cutArr[Math.round(Math.random())];\n}\n\nfunction findImgPair(arr, target) {\n  let start = 0;\n  let end = arr.length - 1;\n  let i = start;\n  let j = end;\n  let minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n  while (start <= end) {\n    if (arr[start] + arr[end] > target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        // update fetched pair and matching cost\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      end -= 1;\n    } else if (arr[start] + arr[end] <= target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      start += 1;\n    } else {\n      // best pair (m === 0) found\n      i = start;\n      j = end;\n      break;\n    }\n  }\n  const randomNumber = Math.round(Math.random());\n  if (randomNumber) return [i, j];\n  return [j, i];\n}\n\nfunction getAspectRatio(cut, ar1, ar2) {\n  if (cut === 'v') return ar1 + ar2;\n  return (ar1 * ar2) / (ar1 + ar2);\n}\n\nfunction downscaleImage(image, newWidth, newHeight, fileType) {\n  const canvas = document.createElement('canvas');\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, newWidth, newHeight);\n  return canvas.toDataURL(fileType);\n}\n\nfunction resizeImages(originalImages, maxWidth, handleImages, addImagesToDB) {\n  const tempImages = [];\n  originalImages.forEach((origImage) => {\n    const image = new Image();\n    image.onload = () => {\n      const { title, aspectRatio, type } = origImage;\n      const dataurl = downscaleImage(\n        image,\n        maxWidth,\n        maxWidth / aspectRatio,\n        origImage.type\n      );\n      const tempImage = {\n        title,\n        src: dataurl,\n        naturalHeight: maxWidth / aspectRatio,\n        naturalWidth: maxWidth,\n        aspectRatio,\n        type,\n      };\n      tempImages.push(tempImage);\n      handleImages((imgs) => {\n        const ind = imgs.findIndex((elem) => elem.title === origImage.title);\n        return [...imgs.slice(0, ind), tempImage, ...imgs.slice(ind + 1)];\n      });\n      addImagesToDB(tempImage);\n    };\n    image.src = origImage.src;\n  });\n}\n\nfunction convertBase64(file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\n\nfunction handleImageLoad(\n  event,\n  maxWidth,\n  handleImageCount,\n  handleNewImageCount,\n  handleImageData\n) {\n  if (event.target.files) {\n    handleImageCount((cnt) => cnt + event.target.files.length);\n    handleNewImageCount(event.target.files.length);\n    const files = Array.from(event.target.files);\n    files.map(async (file) => {\n      const image = new Image();\n      image.onload = (e) => {\n        const { naturalWidth, naturalHeight, src } = e.target;\n        const title = `${Date.now()}-${file.name}`;\n        const aspectRatio = naturalWidth / naturalHeight;\n\n        const dataurl = downscaleImage(\n          image,\n          maxWidth,\n          maxWidth / aspectRatio,\n          file.type\n        );\n        const originalImageDetail = {\n          title,\n          src,\n          naturalHeight,\n          naturalWidth,\n          aspectRatio,\n          type: file.type,\n        };\n        const imageDetail = {\n          title,\n          src: dataurl,\n          naturalHeight: maxWidth / aspectRatio,\n          naturalWidth: maxWidth,\n          aspectRatio,\n          type: file.type,\n        };\n        handleImageData(imageDetail, originalImageDetail);\n      };\n      image.src = await convertBase64(file);\n    });\n    files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n  }\n}\n\nfunction wrapText(text, x, y, maxWidth, fontSize, lineHeight) {\n  // First, start by splitting all of our text into words,\n  // but splitting it into an array split by spaces\n  const paddingX = 1; // 8px on both sided\n  const textCanvas = document.createElement('canvas');\n  textCanvas.width = maxWidth - 2 * paddingX * 8;\n  textCanvas.height = 1000;\n  const ctx = textCanvas.getContext('2d');\n  ctx.font = `${fontSize}px Arial`;\n  ctx.textAlign = 'center';\n  const tempX = x;\n  let tempY = y;\n  const words = text.split(' ');\n  let line = ''; // This will store the text of the current line\n  let testLine = ''; // This will store the text when we add a word, to test if it's too long\n  const lineArray = []; // This is an array of lines, which the function will return\n\n  // Lets iterate over each word\n  for (let n = 0; n < words.length; n += 1) {\n    // Create a test line, and measure it..\n    testLine += `${words[n]} `;\n    const metrics = ctx.measureText(testLine);\n    const testWidth = metrics.width;\n    console.log(\n      'wrap text ',\n      line,\n      testLine,\n      testWidth,\n      textCanvas.width,\n      ctx.letterSpacing\n    );\n    // If the width of this test line is more than the max width\n    if (testWidth > textCanvas.width && n > 0) {\n      // Then the line is finished, push the current line into \"lineArray\"\n      lineArray.push([line, tempX, tempY]);\n      // Increase the line height, so a new line is started\n      tempY += lineHeight;\n      // Update line and test line to use this word as the first word on the next line\n      line = `${words[n]} `;\n      testLine = `${words[n]} `;\n    } else {\n      // If the test line is still less than the max width, then add the word to the current line\n      line += `${words[n]} `;\n    }\n    // If we never reach the full max width, then there is only one line..\n    // so push it into the lineArray so we return something\n    if (n === words.length - 1) {\n      lineArray.push([line, tempX, tempY]);\n    }\n  }\n  // Return the line array\n  return lineArray;\n}\n\nconst convertToRGBA = (value) =>\n  `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nconst getCollageDimension = (maxW, maxH, a) => {\n  const origAR = maxW / maxH;\n  if (origAR < a) return [maxW, maxW / a];\n  if (origAR > a) return [maxH * a, maxH];\n  return [maxW, maxH];\n};\n\nexport default {\n  getCut,\n  findClosest,\n  findImgPair,\n  getAspectRatio,\n  handleImageLoad,\n  resizeImages,\n  wrapText,\n  convertToRGBA,\n  getCollageDimension,\n};\n","import Box from '@mui/material/Box';\n//  import Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Tooltip from '@mui/material/Tooltip';\nimport { alpha } from '@mui/material/styles';\nimport helpers from 'components/collage/helpers';\n\nexport default class Node {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n\n  fromObject(obj) {\n    if (obj != null) {\n      this.value = obj.value;\n      if (obj.left != null) {\n        this.left = new Node(obj.left.value);\n        this.left.fromObject(obj.left);\n      }\n      if (obj.right != null) {\n        this.right = new Node(obj.right.value);\n        this.right.fromObject(obj.right);\n      }\n      return this;\n    }\n    return null;\n  }\n\n  getScore() {\n    if ('cut' in this.value) {\n      return [...this.left.getScore(), ...this.right.getScore()];\n    }\n\n    return [this.value.width + this.value.height];\n  }\n\n  display() {\n    let output = [];\n    const { cut, title, aspectRatio } = this.value;\n    if (this === null) return null;\n    if ('cut' in this.value) output.push([cut, aspectRatio]);\n    if ('title' in this.value) output.push([title, aspectRatio]);\n    if (this.left !== null) output = output.concat(this.left.display());\n    if (this.right !== null) output = output.concat(this.right.display());\n    return output;\n  }\n\n  copy() {\n    if (this === null) return null;\n    const copyNode = new Node({ ...this.value });\n    if (this.left != null) copyNode.left = this.left.copy();\n    if (this.right != null) copyNode.right = this.right.copy();\n    return copyNode;\n  }\n\n  replaceImages(newImages) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const findIndex = newImages.findIndex(\n          (elem) => elem.title === this.value.title\n        );\n        const origImage = newImages[findIndex];\n        this.value.src = origImage.src;\n        this.value.naturalWidth = origImage.naturalWidth;\n        this.value.naturalHeight = origImage.naturalHeight;\n      }\n      if (this.left != null) this.left.replaceImages(newImages);\n      if (this.right != null) this.right.replaceImages(newImages);\n    }\n  }\n\n  removeImageData() {\n    if (this !== null) {\n      if ('title' in this.value) {\n        this.value.src = '';\n      }\n      if (this.left != null) this.left.removeImageData();\n      if (this.right != null) this.right.removeImageData();\n    }\n  }\n\n  addImageData(imageData) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const image = imageData.find((elem) => elem.title === this.value.title);\n        this.value.src = image.src;\n      }\n      if (this.left != null) this.left.addImageData(imageData);\n      if (this.right != null) this.right.addImageData(imageData);\n    }\n  }\n\n  RenderImage(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    const { width, title, src, x, y } = this.value;\n\n    const newX = x + xOffset;\n    const newY = y + yOffset;\n    console.log('rendering image', title);\n    return (\n      <>\n        <Box\n          key={title}\n          component=\"img\"\n          title={title}\n          alt={title}\n          width={width}\n          onLoad={() => {\n            handleCollageImageLoad();\n            console.log('loaded', title);\n          }}\n          src={src}\n          sx={{\n            position: 'absolute',\n            padding: `${padding}px`,\n            borderRadius: `${borderRadius}px`,\n            left: this.value.x + xOffset,\n            top: this.value.y + yOffset,\n          }}\n        />\n        {/*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    top: newY,\n         *    left: newX,\n         *    backgroundColor: 'white',\n         *    fontSize: '15px',\n         *  }}\n         *>\n         *  {newX.toFixed(2)}\n         *  ,\n         *  {newY.toFixed(2)}\n         *</Typography>\n         */\n        /*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    top: this.value.y + yOffset + padding,\n         *    left: this.value.x + xOffset + padding,\n         *    backgroundColor: 'white',\n         *  }}\n         *>\n         *  {width.toFixed(2)}\n         *  ,\n         *  {height.toFixed(2)}\n         *</Typography>\n         */\n        /*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    bottom: 38,\n         *    right: 10,\n         *    backgroundColor: 'white',\n         *    fontSize: '0.5rem',\n         *    fontWeight: 700,\n         *  }}\n         *>\n         *  {title}\n         *</Typography>\n         */}\n\n        {delImg === true ? (\n          <Tooltip title=\"Remove Image\">\n            <IconButton\n              size=\"medium\"\n              sx={{\n                color: alpha('#000', 0.7),\n                bgcolor: alpha('#fff', 0.5),\n                position: 'absolute',\n                top: newY + padding,\n                left: newX + padding,\n                padding: `${padding}px`,\n                borderRadius: '0 0 5px 0',\n              }}\n              onClick={() => handleRemoveImage(title)}\n            >\n              <DeleteIcon size=\"medium\" />\n            </IconButton>\n          </Tooltip>\n        ) : null}\n      </>\n    );\n  }\n\n  DOMDisplay(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    console.log(\n      'node dom display',\n      padding,\n      borderRadius,\n      delImg,\n      handleRemoveImage,\n      yOffset,\n      xOffset,\n      this.value.title\n    );\n    const { cut } = this.value;\n    if (this === null) return null;\n    if (cut) {\n      console.log(this.right, this.left);\n      return (\n        <>\n          {this.left != null\n            ? this.left.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n          {this.right != null\n            ? this.right.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n        </>\n      );\n    }\n    if ('title' in this.value)\n      return this.RenderImage(\n        padding,\n        borderRadius,\n        delImg,\n        handleRemoveImage,\n        yOffset,\n        xOffset,\n        handleCollageImageLoad\n      );\n    return null;\n  }\n\n  ResizeImage(image) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = this.value.naturalWidth;\n    tempCanvas.height = this.value.naturalHeight;\n    const tempCtx = tempCanvas.getContext('2d');\n    let width = this.value.naturalWidth;\n    let height = this.value.naturalHeight;\n    let newWidth;\n    let newHeight;\n    const scaleFactor = Math.floor(\n      Math.log2(this.value.naturalWidth / this.value.width)\n    );\n    if (scaleFactor === 0) {\n      tempCtx.drawImage(\n        image,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    } else {\n      for (let i = 0; i < scaleFactor; i += 1) {\n        newWidth = width >> 1; // eslint-disable-line no-bitwise\n        newHeight = newWidth / this.value.aspectRatio; // eslint-disable-line no-bitwise\n        if (i === 0) {\n          tempCtx.drawImage(\n            image,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        } else {\n          tempCtx.drawImage(\n            tempCanvas,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        }\n        width = newWidth;\n        height = newHeight;\n      }\n\n      tempCtx.drawImage(\n        tempCanvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    }\n    return tempCanvas;\n  }\n\n  ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset) {\n    const x = this.value.x + padding + xOffset;\n    const y = this.value.y + padding + yOffset;\n    const clipwidth = this.value.width - 2 * padding;\n    const clipheight = clipwidth / this.value.aspectRatio;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + clipwidth - radius, y);\n    ctx.quadraticCurveTo(x + clipwidth, y, x + clipwidth, y + radius);\n    ctx.lineTo(x + clipwidth, y + clipheight - radius);\n    ctx.quadraticCurveTo(\n      x + clipwidth,\n      y + clipheight,\n      x + clipwidth - radius,\n      y + clipheight\n    );\n    ctx.lineTo(x + radius, y + clipheight);\n    ctx.quadraticCurveTo(x, y + clipheight, x, y + clipheight - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.clip();\n\n    ctx.drawImage(\n      tempCanvas,\n      0,\n      0,\n      this.value.width,\n      this.value.height,\n      x,\n      y,\n      clipwidth,\n      clipheight\n    );\n    ctx.restore();\n  }\n\n  CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset) {\n    if ('cut' in this.value) {\n      this.left.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n      this.right.CanvasDisplay(\n        canvasElement,\n        padding,\n        radius,\n        yOffset,\n        xOffset\n      );\n    }\n\n    if ('title' in this.value) {\n      const ctx = canvasElement.getContext('2d');\n      const newImg = new Image();\n      newImg.onload = () => {\n        const tempCanvas = this.ResizeImage(newImg);\n        const tempCtx = tempCanvas.getContext('2d');\n        this.ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset);\n        tempCtx.clearRect(0, 0, tempCanvas.width, tempCanvas.height);\n      };\n      newImg.src = this.value.src;\n    }\n  }\n\n  generate(images, tar, imageCount) {\n    const targetAspectRatioArr = images.map(\n      (image) => image.naturalWidth / image.naturalHeight\n    );\n    if (imageCount < 1) return [];\n    if (imageCount === 1) {\n      const closestIndex = helpers.findClosest(targetAspectRatioArr, tar);\n      this.value = images[closestIndex];\n      this.left = null;\n      this.right = null;\n      return [\n        ...images.slice(0, closestIndex),\n        ...images.slice(closestIndex + 1),\n      ];\n    }\n\n    const cut = helpers.getCut();\n    this.value = { cut, targetAspectRatio: tar };\n    if (imageCount === 2) {\n      const [leftIndex, rightIndex] = helpers.findImgPair(\n        targetAspectRatioArr,\n        tar\n      );\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        images[leftIndex].aspectRatio,\n        images[rightIndex].aspectRatio\n      );\n      this.left = new Node(images[leftIndex]);\n      this.right = new Node(images[rightIndex]);\n      return images.filter(\n        (item, index) => ![leftIndex, rightIndex].includes(index)\n      );\n    }\n\n    let restImages;\n    let targetAspectRatio;\n    this.left = new Node({ cut: helpers.getCut() });\n    //  this.right = new Node({ cut: helpers.getCut() });\n    this.right = new Node({ cut: this.left.value.cut === 'v' ? 'h' : 'v' });\n\n    targetAspectRatio = tar / 2;\n    if (cut === 'v') {\n      targetAspectRatio = tar * 2;\n    }\n\n    const randomNumber = Math.round(Math.random());\n    const [first, second] = randomNumber\n      ? ['left', 'right']\n      : ['right', 'left'];\n    restImages = this[first].generate(\n      images,\n      targetAspectRatio,\n      imageCount - Math.floor(imageCount / 2)\n    );\n    restImages = this[second].generate(\n      restImages,\n      targetAspectRatio,\n      Math.floor(imageCount / 2)\n    );\n\n    this.value.aspectRatio = helpers.getAspectRatio(\n      this.value.cut,\n      this.left.value.aspectRatio,\n      this.right.value.aspectRatio\n    );\n\n    return restImages;\n  }\n\n  adjust(th) {\n    let adjustments = 0;\n    if (this === null) return adjustments;\n\n    if (this.left !== null && this.right !== null) {\n      if (this.value.aspectRatio > this.value.targetAspectRatio * th) {\n        this.value.cut = 'h';\n        adjustments += 1;\n      }\n      if (this.value.aspectRatio < this.value.targetAspectRatio / th) {\n        this.value.cut = 'v';\n        adjustments += 1;\n      }\n\n      if (this.value.cut === 'v') {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n      } else {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n      }\n      adjustments += this.left.adjust(th) + this.right.adjust(th);\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        this.left.value.aspectRatio,\n        this.right.value.aspectRatio\n      );\n    }\n\n    return adjustments;\n  }\n\n  addSize(parentWidth, parentHeight, parentX, parentY, parentCut, nodeType) {\n    if (parentCut === 'v') {\n      this.value.height = parentHeight;\n      this.value.width = this.value.height * this.value.aspectRatio;\n    } else {\n      this.value.width = parentWidth;\n      this.value.height = this.value.width / this.value.aspectRatio;\n    }\n\n    if (nodeType === 'left') {\n      this.value.x = parentX;\n      this.value.y = parentY;\n    } else if (parentCut === 'h') {\n      this.value.y = parentY + parentHeight - this.value.height;\n      this.value.x = parentX;\n    } else {\n      this.value.x = parentX + parentWidth - this.value.width;\n      this.value.y = parentY;\n    }\n\n    if (this.left !== null) {\n      this.left.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'left'\n      );\n    }\n    if (this.right !== null) {\n      this.right.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'right'\n      );\n    }\n  }\n}\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\nimport Node from './node';\nimport helpers from './helpers';\n\nconst convertToRGBA = (value) =>\n  `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nfunction TextDisplay(textArray, position) {\n  return (\n    <>\n      {\n        // eslint-disable-next-line react/destructuring-assignment\n        textArray.map((chunk) => (\n          <Typography\n            key={chunk[2]}\n            sx={{\n              width: '100%',\n              position: 'absolute',\n              top: position + chunk[2],\n              bgcolor: alpha('#1c1c1c', 0.7),\n              paddingX: 1,\n              color: 'button.main',\n              textAlign: 'center',\n              fontFamily: 'Arial',\n              fontSize: '20px',\n              lineHeight: '25px',\n              letterSpacing: 'normal',\n            }}\n          >\n            {chunk[0]}\n          </Typography>\n        ))\n      }\n    </>\n  );\n}\n\nfunction TextCanvasDraw(\n  ctx,\n  textArray,\n  position,\n  scaleFactor,\n  canvasWidth,\n  textHeight\n) {\n  ctx.font = `${scaleFactor * 20}px Arial`;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'top';\n  ctx.fillStyle = '#1c1c1cb3';\n  ctx.fillRect(0, position, canvasWidth, position + textHeight);\n  ctx.fillStyle = 'white';\n\n  console.log('text array', textArray, textHeight);\n  // eslint-disable-next-line no-restricted-syntax\n  for (const chunk of textArray) {\n    const [textPart, , y] = chunk;\n    ctx.fillText(textPart, canvasWidth / 2, y + position + 2.5 * scaleFactor);\n  }\n}\n\nexport default class BinaryTree {\n  constructor(value) {\n    if (this.root === undefined) {\n      this.root = new Node(value);\n      return this;\n    }\n  }\n\n  addOptions(options) {\n    //  const convertToRGBA = (value) => `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n    this.root.options = { ...options };\n  }\n\n  display() {\n    if (this.root !== null) {\n      return this.root.display();\n    }\n    return null;\n  }\n\n  replaceImages(newImages) {\n    if (this.root !== null) {\n      this.root.replaceImages(newImages);\n    }\n  }\n\n  fromObject(obj) {\n    if (obj.root != null) this.root.fromObject(obj.root);\n    return this;\n  }\n\n  removeImageData() {\n    const tempTree = this.copy();\n    if (this.root !== null) {\n      tempTree.root.removeImageData();\n    }\n    return tempTree;\n  }\n\n  addImageData(imageData) {\n    if (this.root !== null) {\n      this.root.addImageData(imageData);\n    }\n  }\n\n  DOMDisplay(\n    canvasWidth,\n    canvasHeight,\n    delImg,\n    handleRemoveImage,\n    handleCollageImageLoad\n  ) {\n    const { text, topText, padding, borderRadius, color } = this.root.options;\n    const { width, height } = this.root.value;\n    const lA = helpers.wrapText(text, 0, 0, canvasWidth, 20, 25);\n    const textHeight = text.length ? lA.length * 25 : 0;\n    let yOffset = (canvasHeight - textHeight - height) / 2;\n    const xOffset = (canvasWidth - width) / 2;\n    let position = canvasHeight - textHeight;\n    if (topText && text.length > 0) {\n      yOffset += textHeight;\n      position = 0;\n    }\n\n    console.log(\n      'tree dom display',\n      canvasWidth,\n      canvasHeight,\n      height,\n      this.root.options,\n      textHeight,\n      yOffset,\n      xOffset,\n      width,\n      this,\n      lA\n    );\n    if (this.root !== null) {\n      return (\n        <Box sx={{ backgroundColor: 'white' }}>\n          <Box\n            width={canvasWidth}\n            height={canvasHeight}\n            sx={{\n              position: 'relative',\n              backgroundColor: convertToRGBA(color),\n            }}\n          >\n            {this.root.DOMDisplay(\n              padding,\n              borderRadius,\n              delImg,\n              handleRemoveImage,\n              yOffset,\n              xOffset,\n              handleCollageImageLoad\n            )}\n            {text.length ? TextDisplay(lA, position) : null}\n          </Box>\n        </Box>\n      );\n    }\n    return null;\n  }\n\n  CanvasDisplay(canvasWidth, canvasHeight, canvasElement, scaleFactor) {\n    if (this.root !== null) {\n      const { text, topText, padding, borderRadius, color } = this.root.options;\n      const { width, height } = this.root.value;\n      const lA = helpers.wrapText(\n        text,\n        0,\n        0,\n        canvasWidth,\n        20 * scaleFactor,\n        25 * scaleFactor\n      );\n      const textHeight = text.length ? lA.length * 25 * scaleFactor : 0;\n      let yOffset = (canvasHeight - textHeight - height) / 2;\n      const xOffset = (canvasWidth - width) / 2;\n      let position = canvasHeight - textHeight;\n      if (topText && text.length > 0) {\n        yOffset += textHeight;\n        position = 0;\n      }\n      const ctx = canvasElement.getContext('2d');\n      ctx.fillStyle = convertToRGBA(color);\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      this.root.CanvasDisplay(\n        canvasElement,\n        padding * scaleFactor,\n        borderRadius * scaleFactor,\n        yOffset,\n        xOffset\n      );\n      TextCanvasDraw(ctx, lA, position, scaleFactor, canvasWidth, textHeight);\n    }\n  }\n\n  generateScore() {\n    const score = this.root.getScore();\n    // console.log('from', ...score);\n    return Math.min(...score);\n  }\n\n  generateCollageTree(images, tar) {\n    this.root.generate(images, tar, images.length);\n  }\n\n  adjust(th) {\n    let trys = 0;\n    let bestAdjust = this.copy();\n    let bestAspectRatio = this.root.value.aspectRatio;\n    const tolerableDifference = this.root.value.targetAspectRatio * (1 - th);\n    let ajstCnt = 1000;\n    while (trys < 100 && ajstCnt > 0) {\n      ajstCnt = this.root.adjust(th);\n      trys += 1;\n      const diff =\n        this.root.value.aspectRatio - this.root.value.targetAspectRatio;\n      if (\n        Math.abs(diff) <\n        Math.abs(bestAspectRatio - this.root.value.targetAspectRatio)\n      ) {\n        bestAspectRatio = this.root.value.aspectRatio;\n        bestAdjust = this.copy();\n      }\n      if ((diff > 0 && diff < tolerableDifference) || diff === 0) break;\n    }\n\n    return [bestAspectRatio, bestAdjust];\n  }\n\n  copy() {\n    const copyTree = new BinaryTree({});\n    copyTree.root = this.root.copy();\n    copyTree.root.options = { ...this.root.options };\n    return copyTree;\n  }\n\n  addSize(canvasWidth, canvasHeight, aspectRatio) {\n    const [maxW, maxH] = helpers.getCollageDimension(\n      canvasWidth,\n      canvasHeight,\n      aspectRatio\n    );\n    this.root.value.width = maxW;\n    this.root.value.height = maxH;\n    console.log('add size', this.root.value.width, this.root.value.height);\n    this.root.value.x = 0;\n    this.root.value.y = 0;\n    const { width, height, x, y, cut } = this.root.value;\n    if (this.root.left !== null)\n      this.root.left.addSize(width, height, x, y, cut, 'left');\n    if (this.root.right !== null)\n      this.root.right.addSize(width, height, x, y, cut, 'right');\n  }\n}\n","import BinaryTree from './binaryTree';\nimport helpers from './helpers';\n\nfunction findBestAdjustTree(images, tolerance, imageWidth, imageHeight) {\n  const sortedImages = images.sort((a, b) =>\n    a.aspectRatio <= b.aspectRatio ? 1 : -1\n  );\n  const collageArray = [];\n  for (let i = 0; i < 100; i += 1) {\n    const imgTree = new BinaryTree({ cut: helpers.getCut() });\n    imgTree.generateCollageTree(sortedImages, imageWidth / imageHeight);\n\n    collageArray.push(imgTree.adjust(1 - tolerance));\n  }\n\n  collageArray.sort((a, b) => {\n    const aspR = imageWidth / imageHeight;\n    const diffA = Math.abs(a[0] - aspR);\n    const diffB = Math.abs(b[0] - aspR);\n    return diffA - diffB;\n  });\n\n  const bAR = collageArray.filter(\n    (elem) => elem[0].toFixed(1) === collageArray[0][0].toFixed(1)\n  );\n  console.log('from bar', bAR);\n  let maxScore = 0;\n  let maxElem = {};\n  bAR.forEach((element) => {\n    element[1].addSize(\n      1000 * (imageWidth / imageHeight),\n      1000,\n      imageWidth / imageHeight\n    );\n    const score = element[1].generateScore();\n    // console.log('from bar all matching', score);\n    if (score > maxScore) {\n      maxScore = score;\n      maxElem = element;\n    }\n  });\n  // console.log('from returning', maxElem, maxScore);\n  return maxElem;\n  // collageArray[0][1].addSize(\n  //   1000 * (imageWidth / imageHeight),\n  //   1000,\n  //   imageWidth / imageHeight\n  // );\n  // console.log(\n  //   'from best adjust tree',\n  //   collageArray[0][0],\n  //   collageArray[0][1].generateScore()\n  // );\n  // return collageArray[0];\n}\n\nexport default { findBestAdjustTree };\n","import { useEffect, useState } from 'react';\nimport useDimensions from 'hooks/collage/dimensions';\nimport useOptions from 'hooks/collage/options';\nimport useActions from 'hooks/collage/actions';\nimport useImages from 'hooks/collage/images';\nimport useTree from 'hooks/collage/tree';\n\nimport helpers from 'components/collage/helpers';\nimport collageapi from 'api/collage';\n\nexport default function useBase(initialValue) {\n  console.log('use base', initialValue);\n  const constants = {\n    tolerance: 0.1,\n    resizeImageWidth: 1500,\n    aspectRatio: 0.7,\n    paperSizes: {\n      A4: { width: 2480, height: 3508, text: '8 X 11 inches' },\n      A3: { width: 3508, height: 4961, text: '11 X 16 inches' },\n    },\n  };\n  const [uploadedImages, setUploadedImages] = useState(0);\n  const dimensions = useDimensions(constants.aspectRatio);\n  const options = useOptions();\n  const actions = useActions();\n  const images = useImages(initialValue, constants.resizeImageWidth);\n\n  const treeState = useTree(initialValue, options.setOptions);\n  const [thumbnail, setThumbnail] = useState({});\n  let collageName = 'Untitled';\n  const collageID =\n    'details' in initialValue && 'collageID' in initialValue.details\n      ? initialValue.details.collageID\n      : Date.now();\n\n  if (\n    'details' in initialValue &&\n    'name' in initialValue.details &&\n    collageName === 'Untitled'\n  ) {\n    collageName = initialValue.details.name;\n  }\n\n  useEffect(\n    () => console.log('CHANGE DETECTIONS tree state changed'),\n    [treeState]\n  );\n  useEffect(() => console.log('CHANGE DETECTIONS images changed'), [images]);\n  useEffect(\n    () => console.log('CHANGE DETECTIONS dimensions changed'),\n    [dimensions]\n  );\n  useEffect(() => console.log('CHANGE DETECTIONS actions changed'), [actions]);\n  useEffect(() => console.log('CHANGE DETECTIONS options changed'), [options]);\n  useEffect(\n    () => console.log('CHANGE DETECTIONS uploaded images changed'),\n    [uploadedImages]\n  );\n  // useEffect(\n  //   () => console.log('CHANGE DETECTIONS collage name changed'),\n  //   [collageName]\n  // );\n\n  const initialStatus = () => ({\n    details: {\n      text: 'Saving Details',\n      status: 'pending',\n    },\n    images: {\n      text: `Saving Images (${uploadedImages} / ${images.images.length})`,\n      status: 'pending',\n    },\n    finalizing: {\n      text: 'Finalizing Collage',\n      status: 'pending',\n    },\n  });\n  const [saveStatus, setSaveStatus] = useState(initialStatus);\n\n  useEffect(\n    () => console.log('CHANGE DETECTIONS save status changed'),\n    [saveStatus]\n  );\n  const updateStatus = (key, status) => {\n    const value = { ...saveStatus[key], status };\n    setSaveStatus((st) => ({ ...st, [key]: value }));\n  };\n\n  const updateImagesStatus = () => {\n    const imagesText = `Saving Images (${uploadedImages} / ${images.imgCount})`;\n    let value = { ...saveStatus.images, text: imagesText };\n    if (uploadedImages === images.imgCount && images.imgCount > 0) {\n      value = { ...value, status: 'done' };\n    }\n    setSaveStatus((st) => ({ ...st, images: value }));\n  };\n\n  useEffect(() => {\n    console.log('useeffect 3');\n    updateImagesStatus();\n  }, [uploadedImages, images.imgCount]);\n\n  const handleClear = async () => {\n    const clearPromises = await Promise.allSettled([\n      treeState.clear(),\n      images.clear(),\n      options.clear(),\n    ]);\n\n    for (let i = 0; i < clearPromises.length; i += 1) {\n      if (\n        clearPromises[i].status === 'fulfilled' ||\n        clearPromises[i].value.ok === true\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    console.log('useeffect 2');\n    if (\n      (images.newImgCount > 0 &&\n        images.newImgCount === images.newImagesLoaded) ||\n      actions.refresh\n    ) {\n      images.setNewImageCount(0);\n      images.setNewImagesLoaded(0);\n      treeState.reAdjust(\n        images.images,\n        constants.tolerance,\n        dimensions.width,\n        dimensions.height - dimensions.textHeight,\n        options.options\n      );\n      actions.setRefresh(false);\n    }\n  }, [images.newImgCount, images.newImagesLoaded, actions.refresh]);\n\n  const collageCallback = () => {};\n\n  const handleRemoveImage = (imgTitle) => {\n    const newImagesArr = images.remove(imgTitle);\n    treeState.reAdjust(\n      newImagesArr,\n      constants.tolerance,\n      dimensions.imageWidth,\n      dimensions.imageHeight,\n      options.options\n    );\n  };\n\n  const generateThumbnail = () => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    const thumbnailCanvas = document.createElement('canvas');\n    const thumbnailTree = treeState.tree.copy();\n    thumbnailTree.addSize(500 * ar, 500, ar);\n    thumbnailCanvas.width = 500 * ar;\n    thumbnailCanvas.height = 500;\n    thumbnailTree.CanvasDisplay(\n      500 * ar,\n      500,\n      thumbnailCanvas,\n      (500 * ar) / dimensions.width\n    );\n\n    // create and update details\n    const thumbnailDetails = {\n      title: `thumbnail-${collageID}.png`,\n      src: '',\n      naturalHeight: 500,\n      naturalWidth: 500 * ar,\n      aspectRatio: ar,\n      type: 'image/png',\n    };\n    setThumbnail(thumbnailDetails);\n    return [thumbnailDetails, thumbnailCanvas];\n  };\n\n  const uploadCollageDetails = (thumbnailDetails, name) => {\n    const dets = {\n      collage_id: collageID.toString(),\n      name,\n      created_at: '2021-02-18T21:54:42.123Z',\n      last_updated_at: '2021-02-18T21:54:45.123Z',\n      images: images.removeImageData(images.originalImages),\n      tree: treeState.tree.removeImageData(),\n      thumbnail: thumbnailDetails,\n    };\n    // TODO [33] Validate collageDetails\n    console.log(dets);\n    return collageapi.newCollage(collageID, dets);\n  };\n\n  const uploadCallback = () => {\n    console.log('Setting uploaded images to ', uploadedImages + 1);\n    setUploadedImages((cnt) => cnt + 1);\n  };\n\n  const uploadCollageImages = (thumbnailCanvas, imageURLS) => {\n    const thumbnailPromise = thumbnailCanvas.toBlob(async (blob) => {\n      setThumbnail(blob);\n      const thumbnailKey = `thumbnail-${collageID}.png`;\n      return collageapi.upload(imageURLS[thumbnailKey], blob);\n    });\n\n    const imagePromises = images.originalImages.map(async (item) => {\n      const url = imageURLS[item.title];\n      const body = item.src;\n      const resp = await collageapi.upload(url, body);\n      uploadCallback();\n      console.log('image upload resp', resp);\n      return resp;\n    });\n\n    return [thumbnailPromise, ...imagePromises];\n  };\n\n  const newCollage = async (name) => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    console.log('in generate thumbnail', ar, 500 * ar, 500);\n    const [thumbnailDetails, thumbnailCanvas] = generateThumbnail();\n    updateStatus('details', 'running');\n    const imageURLS = await uploadCollageDetails(thumbnailDetails, name);\n    updateStatus('details', 'done');\n    updateStatus('images', 'running');\n    const imagePromises = uploadCollageImages(thumbnailCanvas, imageURLS);\n    const uploadPromises = await Promise.allSettled(imagePromises);\n    // updateStatus('images', 'done');\n    updateStatus('finalizing', 'running');\n    let uploadStatus;\n    for (let i = 0; i < uploadPromises.length; i += 1) {\n      if (\n        uploadPromises[i].status === 'fulfilled' ||\n        uploadPromises[i].value.ok === true\n      ) {\n        uploadStatus = true;\n        updateStatus('finalizing', 'done');\n      } else {\n        uploadStatus = false;\n        updateStatus('finalizing', 'failed');\n        break;\n      }\n    }\n    return uploadStatus;\n  };\n\n  useEffect(() => {\n    console.log('useeffect 1');\n    if (\n      options.options.text.length > 0 &&\n      Object.keys(treeState.tree).length > 0\n    ) {\n      const tH = helpers.wrapText(\n        options.options.text,\n        0,\n        0,\n        dimensions.width,\n        20,\n        25\n      );\n      dimensions.setTextHeight(tH.length * 25);\n      const [w, h] = helpers.getCollageDimension(\n        dimensions.width,\n        dimensions.height - tH.length * 25,\n        treeState.tree.root.value.aspectRatio\n      );\n      dimensions.setImageWidth(w);\n      dimensions.setImageHeight(h);\n    } else {\n      dimensions.setTextHeight(0);\n      options.handlePositionChange(true);\n      dimensions.setImageWidth(dimensions.width);\n      dimensions.setImageHeight(dimensions.height);\n    }\n  }, [\n    dimensions.width,\n    dimensions.height,\n    treeState.tree,\n    options.options.text,\n  ]);\n\n  const getDetails = () => ({\n    collage_id: collageID.toString(),\n    name: collageName,\n    created_at: '2021-02-18T21:54:42.123Z',\n    last_updated_at: '2021-02-18T21:54:45.123Z',\n    images: images.removeImageData(images.originalImages),\n    tree: treeState.tree.removeImageData(),\n    thumbnail,\n  });\n\n  const saveCollage = async () => {\n    console.log('save existing collage, not yet implemented', getDetails());\n  };\n\n  console.log('saveStatus', saveStatus);\n  return [\n    getDetails,\n    thumbnail,\n    collageID,\n    constants,\n    dimensions,\n    options,\n    actions,\n    images,\n    treeState,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n  ];\n}\n","import { useRef, useState, useEffect } from 'react';\nimport helpers from 'components/collage/helpers';\n\nexport default function useDimensions(aspectRatio) {\n  const headerRef = useRef();\n  const actionsRef = useRef();\n  const footerRef = useRef();\n  const addImageRef = useRef();\n\n  const [height, setHeight] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [imageWidth, setImageWidth] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [maxHeight, setMaxHeight] = useState(0);\n  const [maxWidth, setMaxWidth] = useState(0);\n  const [textHeight, setTextHeight] = useState(0);\n\n  const setDimensions = () => {\n    const headerHeight = headerRef.current ? headerRef.current.offsetHeight : 0;\n    const actionsHeight = actionsRef.current\n      ? actionsRef.current.offsetHeight\n      : 0;\n    const footerHeight = footerRef.current ? footerRef.current.offsetHeight : 0;\n    const otherHeight = headerHeight + actionsHeight + footerHeight;\n    setMaxWidth(window.innerWidth);\n    setMaxHeight(window.innerHeight - otherHeight);\n    const [w, h] = helpers.getCollageDimension(\n      window.innerWidth,\n      window.innerHeight - otherHeight - 6,\n      aspectRatio\n    );\n    console.log('other height', otherHeight);\n    setWidth(w);\n    setHeight(h);\n  };\n\n  const handleImageAddClick = () => {\n    if (addImageRef.current) addImageRef.current.click();\n  };\n\n  useEffect(() => {\n    console.log('dimensions changed');\n    setDimensions();\n  }, [\n    window.innerHeight,\n    window.innerWidth,\n    headerRef.current,\n    actionsRef.current,\n    footerRef.current,\n  ]);\n\n  useEffect(() => {\n    setDimensions();\n    window.addEventListener('resize', setDimensions);\n\n    return () => window.removeEventListener('resize', setDimensions);\n  }, []);\n\n  return {\n    actionsRef,\n    headerRef,\n    footerRef,\n    width,\n    height,\n    imageHeight,\n    imageWidth,\n    setImageWidth,\n    setImageHeight,\n    maxHeight,\n    maxWidth,\n    handleImageAddClick,\n    textHeight,\n    setTextHeight,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useOptions() {\n  const optionsInitValue = {\n    padding: 2,\n    borderRadius: 5,\n    color: {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1,\n    },\n    text: '',\n    topText: true,\n  };\n\n  const [options, setOptions] = useState(optionsInitValue);\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n  const clear = () => setOptions(optionsInitValue);\n  const handlePaddingChange = (e) =>\n    setOptions((opts) => ({ ...opts, padding: e.target.value }));\n  const handleRadiusChange = (e) => {\n    setOptions((opts) => ({ ...opts, borderRadius: e.target.value }));\n  };\n\n  const handleColorClick = () => setDisplayColorPicker((dcp) => !dcp);\n  const handleColorClose = () => setDisplayColorPicker(false);\n  const handleColorChange = (clr) =>\n    setOptions((opts) => ({ ...opts, color: clr.rgb }));\n  const handlePositionChange = (value) =>\n    setOptions((opts) => ({ ...opts, topText: value }));\n\n  const handleTextChange = (e) => {\n    const { target } = e;\n    setOptions((opts) => ({ ...opts, text: target.value }));\n  };\n\n  return {\n    options,\n    setOptions,\n    clear,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClick,\n    handleColorClose,\n    handleColorChange,\n    handlePositionChange,\n    handleTextChange,\n    displayColorPicker,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useActions() {\n  const [open, setOpen] = useState(false);\n  const [saveOpen, setSaveOpen] = useState(false);\n  const [saveStart, setSaveStart] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [generate, setGenerate] = useState(false);\n  const [removeImage, setRemoveImage] = useState(false);\n  const [printOptions, setPrintOptions] = useState({\n    paperWidth: 0,\n    paperHeight: 0,\n  });\n\n  const onRefresh = () => setRefresh(true);\n  const handleDownload = () => setOpen(true);\n  const handleSave = () => setSaveOpen(true);\n  const onDownloadClose = () => setOpen(false);\n  const onSaveClose = () => setSaveOpen(false);\n  const clearDelete = () => setRemoveImage(false);\n  const onDelete = () => setRemoveImage((ri) => !ri);\n\n  const onDownloadClick = (w, h) => {\n    setPrintOptions({ paperWidth: w, paperHeight: h });\n    setGenerate(true);\n    setOpen(false);\n  };\n\n  const onSaveClick = () => {\n    setSaveStart(true);\n    setSaveOpen(false);\n  };\n  const handleGenerateCallback = () => {\n    setGenerate(false);\n    setPrintOptions({ paperWidth: 0, paperHeight: 0 });\n  };\n\n  return {\n    clearDelete,\n    generate,\n    handleDownload,\n    handleGenerateCallback,\n    onDelete,\n    onDownloadClick,\n    onDownloadClose,\n    onRefresh,\n    open,\n    printOptions,\n    refresh,\n    setGenerate,\n    setOpen,\n    setPrintOptions,\n    setRefresh,\n    removeImage,\n    setRemoveImage,\n    saveOpen,\n    setSaveOpen,\n    onSaveClose,\n    onSaveClick,\n    handleSave,\n    saveStart,\n    setSaveStart,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport helpers from 'components/collage/helpers';\n\nexport default function useImages(initialValue, resizeImageWidth) {\n  console.log('use images', initialValue);\n  const [newImgCount, setNewImageCount] = useState(0);\n  const [newImagesLoaded, setNewImagesLoaded] = useState(0);\n  const [imgCount, setImageCount] = useState(0);\n  const [loaded, setLoaded] = useState(0);\n  const [images, setImages] = useState([]);\n  const [originalImages, setOriginalImages] = useState([]);\n\n  useEffect(() => {\n    console.log('setting images');\n    if ('images' in initialValue) {\n      setImages(initialValue.images);\n      if (imgCount === 0) setImageCount(initialValue.images.length);\n    }\n    if ('originalImages' in initialValue)\n      setOriginalImages(initialValue.originalImages);\n  }, [initialValue]);\n\n  const removeImageData = (imageArr) => {\n    const tempImgArr = [...imageArr];\n    return tempImgArr.map((img) => {\n      const { src: _, ...rest } = img;\n      return rest;\n    });\n  };\n\n  const handleImageData = (imageDetail, originalImageDetail) => {\n    setOriginalImages((arr) => arr.concat([originalImageDetail]));\n    setImages((arr) => arr.concat([imageDetail]));\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleLoad = (event) => {\n    helpers.handleImageLoad(\n      event,\n      resizeImageWidth,\n      setImageCount,\n      setNewImageCount,\n      handleImageData\n    );\n  };\n\n  const clear = () => {\n    setImages([]);\n    setOriginalImages([]);\n    setImageCount(0);\n    setLoaded(0);\n    setNewImagesLoaded(0);\n  };\n\n  const remove = (title) => {\n    const removeIndex = images.findIndex((elem) => elem.title === title);\n    const newImagesArr = [\n      ...images.slice(0, removeIndex),\n      ...images.slice(removeIndex + 1),\n    ];\n    setImages(newImagesArr);\n    setImageCount((cnt) => cnt - 1);\n    return newImagesArr;\n  };\n\n  return {\n    clear,\n    handleImageData,\n    handleLoad,\n    images,\n    imgCount,\n    loaded,\n    newImagesLoaded,\n    newImgCount,\n    originalImages,\n    remove,\n    setImageCount,\n    setImages,\n    setLoaded,\n    setNewImageCount,\n    setNewImagesLoaded,\n    setOriginalImages,\n    removeImageData,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport treeUtils from 'components/collage/treeUtils';\nimport BinaryTree from 'components/collage/binaryTree';\n\nexport default function useTree(initialValue, loadingCallback = () => {}) {\n  console.log('use Tree', initialValue);\n  const [tree, setTree] = useState(new BinaryTree({}));\n\n  useEffect(() => {\n    console.log('use Tree useEffect');\n    const newTree = new BinaryTree({});\n    if (\n      'details' in initialValue &&\n      Object.keys(initialValue.details).length > 0\n    ) {\n      console.log('initial value in tree', initialValue);\n      newTree.fromObject(initialValue.details.tree);\n      if ('options' in initialValue.details.tree.root) {\n        loadingCallback((opts) => ({\n          ...opts,\n          ...initialValue.details.tree.root.options,\n        }));\n      }\n      console.log('setting tree');\n      setTree(newTree);\n    }\n  }, [initialValue]);\n\n  const clear = () => setTree({});\n\n  const reAdjust = (imagesArr, tolerance, imageWidth, imageHeight, options) => {\n    const [, bestAspectRatioTree] = treeUtils.findBestAdjustTree(\n      imagesArr,\n      tolerance,\n      imageWidth,\n      imageHeight\n    );\n    bestAspectRatioTree.addOptions(options);\n    setTree(bestAspectRatioTree);\n  };\n\n  return { tree, setTree, clear, reAdjust };\n}\n","import { useState, useEffect } from 'react';\nimport helpers from './helpers';\n\nexport default function Collage({\n  dimensionProps,\n  imageProps,\n  actionProps,\n  collageCallback,\n  handleRemoveImage,\n  options,\n  tree,\n}) {\n  const [collage, setCollage] = useState(null);\n  const { images, originalImages, setLoaded } = imageProps;\n  const { generate, handleGenerateCallback, printOptions, removeImage } =\n    actionProps;\n  const { height, width, imageHeight, imageWidth } = dimensionProps;\n\n  const handleCollageImageLoad = () => setLoaded((cnt) => cnt + 1);\n  const isEmpty = (t) => Object.keys(t).length === 0;\n  const createCollage = () => {\n    console.log('started collage loading', tree);\n    tree.addSize(imageWidth, imageHeight, tree.root.value.aspectRatio);\n    console.log('collage added size');\n    tree.addOptions(options);\n    console.log('collage added options', images.length);\n    if (images.length > 0) {\n      tree.addImageData(images);\n      console.log('collage added image data');\n      const collageElem = tree.DOMDisplay(\n        width,\n        height,\n        removeImage,\n        handleRemoveImage,\n        handleCollageImageLoad\n      );\n      console.log('collage added dom display');\n      setCollage(collageElem);\n      collageCallback(tree);\n    }\n  };\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      console.log('collage, tree is not empty');\n      createCollage();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      console.log('collage, tree is not empty 1');\n      createCollage();\n    } else {\n      setCollage(null);\n    }\n  }, [tree, options, imageWidth, imageHeight, removeImage, images]);\n\n  const downloadCollage = (canvas, pW, pH) => {\n    canvas.toBlob((blob) => {\n      const link = document.createElement('a');\n      link.download = `collage-${pW}X${pH}-${Date.now()}.png`;\n      link.href = URL.createObjectURL(blob);\n      link.click();\n      URL.revokeObjectURL(link.href);\n      link.href = null;\n      handleGenerateCallback();\n    });\n  };\n\n  useEffect(() => {\n    if (generate === true) {\n      const canvasElement = document.createElement('canvas');\n      const { paperWidth, paperHeight } = printOptions;\n      canvasElement.width = paperWidth;\n      canvasElement.height = paperHeight;\n      const scaleFactor = paperWidth / width;\n      const lineArray = helpers.wrapText(\n        options.text,\n        0,\n        0,\n        paperWidth,\n        20 * scaleFactor,\n        25 * scaleFactor\n      );\n      const textHeight = lineArray.length * 25 * scaleFactor;\n      const [imgPrintWidth, imgPrintHeight] = helpers.getCollageDimension(\n        paperWidth,\n        paperHeight - textHeight,\n        tree.root.value.aspectRatio\n      );\n      const canvasTree = tree.copy();\n      canvasTree.replaceImages(originalImages);\n      canvasTree.addSize(\n        imgPrintWidth,\n        imgPrintHeight,\n        tree.root.value.aspectRatio\n      );\n      canvasTree.CanvasDisplay(\n        paperWidth,\n        paperHeight,\n        canvasElement,\n        scaleFactor\n      );\n\n      setTimeout(\n        () => downloadCollage(canvasElement, paperWidth, paperHeight),\n        '5000'\n      );\n    }\n  }, [generate]);\n  return collage;\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Authenticate from 'hocs/require-authentication';\n\nexport default function DownloadDialog({ open, onClick, onClose, sizes }) {\n  const [value, setValue] = useState('');\n  const handleDownload = () => {\n    console.log(sizes[value].width, sizes[value].height, onClick);\n    onClick(sizes[value].width, sizes[value].height);\n    setValue('');\n  };\n\n  const handleClose = () => {\n    setValue('');\n    onClose();\n  };\n\n  return (\n    <Authenticate>\n      <Dialog open={open} fullWidth>\n        <DialogTitle sx={{ textAlign: 'center' }}>Download Collage</DialogTitle>\n        <DialogContent\n          dividers\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <DialogContentText sx={{ display: 'inline', pr: 1 }}>\n            Choose collage size\n          </DialogContentText>\n          <FormControl fullWidth sx={{ maxWidth: '60%' }}>\n            <InputLabel id=\"demo-simple-select-label\">Download Size</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              defaultValue=\"A4\"\n              value={value}\n              label=\"Download Size\"\n              onChange={(event) => setValue(event.target.value)}\n            >\n              {Object.keys(sizes).map((key) => (\n                <MenuItem key={sizes[key].text} value={key}>\n                  {sizes[key].text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"outlined\"\n            disabled={value.length === 0}\n            onClick={handleDownload}\n          >\n            Download\n          </Button>\n          <Button variant=\"text\" onClick={handleClose}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Authenticate>\n  );\n}\n\nDownloadDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\n// import DialogContentText from '@mui/material/DialogContentText';\nimport TextField from '@mui/material/TextField';\n// import Authenticate from 'hocs/require-authentication';\n\nexport default function SaveDialog({ open, onClick, onClose }) {\n  const [name, setName] = useState('');\n  const [nameError] = useState('');\n  const handleSave = () => {\n    onClick(name);\n  };\n\n  const handleNameChange = (e) => {\n    const { target } = e;\n    setName(target.value);\n  };\n  const handleClose = () => {\n    setName('');\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <TextField\n          variant=\"outlined\"\n          label=\"Set Collage Name\"\n          defaultValue={name}\n          onChange={handleNameChange}\n          size=\"small\"\n          sx={{ width: '100%', mb: 1 }}\n          InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n          helperText={nameError}\n          error={!!nameError}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          disabled={name.length === 0}\n          onClick={handleSave}\n        >\n          Save\n        </Button>\n        <Button variant=\"text\" onClick={handleClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nSaveDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport PendingIcon from '@mui/icons-material/Pending';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CloseIcon from '@mui/icons-material/Close';\n\nfunction StatusIndicator({ status }) {\n  if (status === 'running') {\n    return <CircularProgress color=\"info\" size=\"1rem\" />;\n  }\n  if (status === 'pending') {\n    return <PendingIcon color=\"disabled\" size=\"0.875rem\" />;\n  }\n  if (status === 'done') {\n    return <CheckCircleOutlineIcon color=\"success\" size=\"0.875rem\" />;\n  }\n  if (status === 'failed') {\n    return <CloseIcon color=\"error\" size=\"0.875rem\" />;\n  }\n}\n\nStatusIndicator.propTypes = {\n  status: PropTypes.string.isRequired,\n};\n\nfunction Status({ text, status }) {\n  const color = {\n    pending: alpha('#000', 0.26),\n    done: 'black',\n    running: 'black',\n    failed: 'red',\n  };\n\n  return (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n      <Typography\n        sx={{ fontWeight: 'bold', fontSize: '1rem', color: color[status] }}\n      >\n        {text}\n      </Typography>\n      <StatusIndicator status={status} />\n    </Stack>\n  );\n}\n\nStatus.propTypes = {\n  text: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nfunction OverAllStatus({ status, counter }) {\n  if (status === 'failed') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <CloseIcon color=\"error\" />\n        <Typography>Collage creation failed</Typography>\n      </Stack>\n    );\n  }\n\n  if (status === 'running' || status === 'pending') return null;\n\n  if (status === 'success') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <CheckCircleOutlineIcon color=\"success\" sx={{ fontSize: '2rem' }} />\n        <Typography>\n          Collage creation successful. Navigation to collages in {counter}{' '}\n          seconds...\n        </Typography>\n      </Stack>\n    );\n  }\n\n  return null;\n}\n\nOverAllStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  counter: PropTypes.number.isRequired,\n};\n\nexport default function SaveStatusDialog({ open, status }) {\n  let overAllStatus = 'pending';\n  const [counter, setCounter] = useState(-1);\n  useEffect(() => {\n    let timerId;\n    if (counter > 0 && overAllStatus === 'success') {\n      timerId = setTimeout(() => setCounter(counter - 1), 1000);\n    }\n    return () => clearTimeout(timerId);\n  }, [counter, overAllStatus]);\n\n  const statusArr = Object.values(status).map((val) => val.status);\n  if (statusArr.includes('failed')) {\n    overAllStatus = 'failed';\n  } else if (statusArr.includes('running')) {\n    overAllStatus = 'running';\n  } else if (!statusArr.includes('pending')) {\n    console.log('setting counter', counter, status);\n    if (counter === -1) {\n      setCounter(3);\n    }\n    overAllStatus = 'success';\n  }\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent dividers>\n        <Stack direction=\"column\" justifyContent=\"center\" spacing={2}>\n          {Object.values(status).map((st) => (\n            <Status key={st.text} text={st.text} status={st.status} />\n          ))}\n        </Stack>\n      </DialogContent>\n      <OverAllStatus status={overAllStatus} counter={counter} />\n    </Dialog>\n  );\n}\n\nSaveStatusDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  status: PropTypes.objectOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      status: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Paper from '@mui/material/Paper';\nimport { Typography, Box, Link } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { alpha } from '@mui/material/styles';\nimport commonUtils from 'utils';\nimport ProfileLink from 'components/profile';\n\nimport LoginButton from 'components/LoginButton';\n\nexport default function Header({ headerRef }) {\n  const cookieValue = commonUtils.getUserInfo();\n  const isLoggedIn = cookieValue !== '';\n  return (\n    <Paper\n      ref={headerRef}\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        p: 1,\n        backgroundColor: alpha('#fff', 0.1),\n        borderRadius: 0,\n      }}\n      elevation={3}\n    >\n      <Box sx={{ postion: 'absolute', left: '5px' }}>\n        <Link href=\"/collages\" color=\"muted.main\" underline=\"none\">\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <ArrowBackIcon />\n          </Box>\n        </Link>\n      </Box>\n      <Typography\n        variant=\"h4\"\n        component=\"h4\"\n        sx={{ color: alpha('#fff', 0.5) }}\n      >\n        Collage Maker\n      </Typography>\n      {isLoggedIn === true ? (\n        <ProfileLink />\n      ) : (\n        <LoginButton\n          authURL={process.env.REACT_APP_AUTH_URL}\n          next=\"collage/create\"\n        />\n      )}\n    </Paper>\n  );\n}\n\nHeader.propTypes = {\n  headerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport collageBack from 'static/images/collage_back1.webp';\n\nexport default function EmptyCollage({ width, height, loadComponent }) {\n  return (\n    <Box\n      sx={{\n        width,\n        height,\n        //  border: '2px solid white',\n        position: 'relative',\n        backgroundImage: `url(${collageBack})`,\n        backgroundSize: width,\n        objectFit: 'contain',\n        backgroundRepeat: 'no-repeat',\n        alignItems: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      >\n        {loadComponent}\n      </Box>\n    </Box>\n  );\n}\n\nEmptyCollage.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  loadComponent: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport EmptyCollage from 'components/collage/EmptyCollage';\nimport Loading from 'components/Loading';\nimport AddPhotos from 'components/AddPhotos';\n\nexport default function View({\n  open,\n  saveOpen,\n  saveStatusOpen,\n  status,\n  dimensionProps,\n  imageProps,\n  header,\n  actions,\n  downloadDialog,\n  saveDialog,\n  saveStatusDialog,\n  collage,\n  controls,\n}) {\n  const { width, height, maxWidth, maxHeight, imageHeight } = dimensionProps;\n  const { images, imgCount, handleLoad } = imageProps;\n  console.log(\n    'from view',\n    images.length,\n    imgCount,\n    imageHeight,\n    collage,\n    status\n  );\n  let content;\n  if (status === 'fetching') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={<Loading title=\"Fetching existing collage data ...\" />}\n      />\n    );\n  }\n\n  if (status === 'preparing') {\n    content = (\n      <>\n        {collage}\n        <Loading title=\"Preparing collage...\" />\n      </>\n    );\n  }\n\n  if (status === 'loading') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          <Loading\n            title={`Loading (${images.length} / ${imgCount}) images...`}\n          />\n        }\n      />\n    );\n  }\n\n  if (status === 'empty') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          width ? <AddPhotos handleChange={handleLoad} /> : <div />\n        }\n      />\n    );\n  }\n\n  if (status === 'ready') {\n    content = collage;\n  }\n  return (\n    <Box component=\"div\" sx={{ backgroundColor: 'black' }}>\n      {header}\n      {actions}\n      {open ? downloadDialog : null}\n      {saveOpen ? saveDialog : null}\n      {saveStatusOpen ? saveStatusDialog : null}\n      <Box\n        width={maxWidth}\n        height={maxHeight}\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'black',\n        }}\n      >\n        {content}\n      </Box>\n      {controls}\n    </Box>\n  );\n}\n\nView.propTypes = {\n  dimensionProps: PropTypes.shape({\n    maxWidth: PropTypes.number.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    imageHeight: PropTypes.number.isRequired,\n  }).isRequired,\n  imageProps: PropTypes.shape({\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        src: PropTypes.string.isRequired,\n        naturalHeight: PropTypes.number.isRequired,\n        naturalWidth: PropTypes.number.isRequired,\n        aspectRatio: PropTypes.number.isRequired,\n        type: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    imgCount: PropTypes.number.isRequired,\n    handleLoad: PropTypes.func.isRequired,\n    loaded: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  saveOpen: PropTypes.bool.isRequired,\n  saveStatusOpen: PropTypes.bool.isRequired,\n  status: PropTypes.string.isRequired,\n  header: PropTypes.node.isRequired,\n  actions: PropTypes.node.isRequired,\n  collage: PropTypes.node.isRequired,\n  controls: PropTypes.node.isRequired,\n  downloadDialog: PropTypes.node.isRequired,\n  saveDialog: PropTypes.node.isRequired,\n  saveStatusDialog: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport { alpha } from '@mui/material/styles';\n\nexport default function DBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      icon={icon}\n      sx={{\n        py: 1,\n        fontWeight: 'bold',\n        color: 'gray',\n        outline: 'none',\n        '&:focus': {\n          color: alpha('#fff', 0.8),\n          outline: 'none',\n        },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\nDBNA.defaultProps = {\n  handleChange: () => {},\n};\n\nDBNA.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Drawer from '@mui/material/Drawer';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopDrawer({ anchor, children }) {\n  return (\n    <Drawer\n      anchor={anchor}\n      variant=\"permanent\"\n      PaperProps={{\n        sx: {\n          height: 'fit-content',\n          top: '50%',\n          backgroundColor: 'transparent',\n          color: 'gray',\n          fontWeight: 'bold',\n          borderRadius: anchor === 'left' ? '0 10px 10px 0' : '10px 0 0 10px',\n          transform: 'translate(0, -50%)',\n        },\n      }}\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nDesktopDrawer.propTypes = {\n  anchor: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Divider from '@mui/material/Divider';\n\nexport default function ControlsDivider() {\n  return <Divider sx={{ backgroundColor: 'gray', my: 1 }} variant=\"middle\" />;\n}\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport List from '@mui/material/List';\nimport { alpha } from '@mui/material/styles';\n\nimport DBNA from 'components/collage/DesktopActionItem';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport ControlsDivider from 'components/collage/ControlsDivider';\n\nexport default function DesktopActions({ onDownload, onSave }) {\n  const handleChange = (newValue) => {\n    console.log(newValue);\n    if (newValue === 'download') {\n      onDownload();\n    }\n    if (newValue === 'save') {\n      onSave();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  return (\n    <DesktopDrawer anchor=\"right\">\n      <List sx={{ backgroundColor: alpha('#fff', 0.1) }}>\n        <DBNA\n          label=\"Save\"\n          icon={<SaveIcon />}\n          handleChange={() => handleChange('save')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label=\"Download\"\n          icon={<DownloadIcon />}\n          handleChange={() => handleChange('download')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label={\n            <>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Order\n              </Typography>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Print(s)\n              </Typography>\n            </>\n          }\n          icon={<PrintIcon />}\n          handleChange={() => handleChange('print')}\n        />\n      </List>\n    </DesktopDrawer>\n  );\n}\n\nDesktopActions.propTypes = {\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\n\nexport default function ClearCollageDialog({ open, onSubmit, onCancel }) {\n  return (\n    <Dialog open={open}>\n      <DialogTitle\n        sx={{\n          textAlign: 'center',\n          fontWeight: 'bold',\n          color: alpha('#000', 0.8),\n        }}\n      >\n        Clear Collage\n      </DialogTitle>\n      <DialogContent dividers>\n        <DialogContentText sx={{ fontWeight: 'bold', color: 'gray' }}>\n          Do you want to clear collage?\n        </DialogContentText>\n        <Typography\n          variant=\"subtitle2\"\n          sx={{ color: 'red', fontWeight: 'bold' }}\n          noWrap\n        >\n          Note:\n        </Typography>\n        <Typography sx={{ fontSize: '0.8rem', color: 'gray' }}>\n          This change is not reversible\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onSubmit} sx={{ color: 'red' }}>\n          {' '}\n          Clear{' '}\n        </Button>\n        <Button variant=\"outlined\" onClick={onCancel}>\n          {' '}\n          Cancel{' '}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nClearCollageDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Stack from '@mui/material/Stack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport { alpha } from '@mui/material/styles';\n\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function DesktopControls({\n  onRefresh,\n  photosComp,\n  editComp,\n  handleClear,\n  clearDelete,\n}) {\n  const [imageOptionsOpen, setImageOptionsOpen] = useState(false);\n  const [editOptionsOpen, setEditOptionsOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const closeAll = () => {\n    clearDelete();\n    setImageOptionsOpen(false);\n    setEditOptionsOpen(false);\n    setClearOpen(false);\n  };\n  const handlePhotosClick = () => {\n    if (imageOptionsOpen) {\n      setImageOptionsOpen(false);\n    } else {\n      closeAll();\n      setImageOptionsOpen(true);\n    }\n  };\n\n  const handleEditClick = () => {\n    if (editOptionsOpen) {\n      setEditOptionsOpen(false);\n    } else {\n      closeAll();\n      setEditOptionsOpen(true);\n    }\n  };\n  const handleRearrange = () => {\n    closeAll();\n    onRefresh();\n  };\n\n  const handleClearClick = () => {\n    console.log('clear open', clearOpen);\n    if (clearOpen) {\n      setClearOpen(false);\n    } else {\n      closeAll();\n      setClearOpen(true);\n    }\n  };\n\n  const handleClearClose = () => setClearOpen(false);\n  const handleClearSubmit = () => {\n    handleClearClose();\n    handleClear();\n  };\n\n  console.log('clear open', clearOpen);\n  console.log('rendering desktop controls');\n  return (\n    <DesktopDrawer anchor=\"left\">\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n        <List\n          sx={{\n            backgroundColor: alpha('#fff', 0.1),\n            borderRadius: '0 10px 10px 0',\n          }}\n        >\n          <DBNA\n            label=\"Rearrange\"\n            icon={<AutoAwesomeMosaicIcon />}\n            handleChange={handleRearrange}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Photos\"\n            icon={<PhotoIcon />}\n            handleChange={handlePhotosClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Edit\"\n            icon={<EditIcon />}\n            handleChange={handleEditClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Clear\"\n            icon={<RefreshIcon />}\n            handleChange={handleClearClick}\n          />\n        </List>\n        {imageOptionsOpen ? photosComp : null}\n        {editOptionsOpen ? editComp : null}\n        <ClearCollageDialog\n          open={clearOpen}\n          onSubmit={handleClearSubmit}\n          onCancel={handleClearClose}\n        />\n      </Stack>\n    </DesktopDrawer>\n  );\n}\n\nDesktopControls.propTypes = {\n  onRefresh: PropTypes.func.isRequired,\n  photosComp: PropTypes.node.isRequired,\n  editComp: PropTypes.node.isRequired,\n  handleClear: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\n\nexport default function DesktopImageOptions({ onDelete, onAdd, clearDelete }) {\n  const handleAdd = () => {\n    clearDelete();\n    onAdd();\n  };\n\n  return (\n    <List\n      sx={{\n        backgroundColor: alpha('#fff', 0.15),\n        borderRadius: '10px 10px 10px 10px',\n        height: 'fit-content',\n      }}\n    >\n      <DBNA\n        label=\"Add\"\n        icon={<AddPhotoAlternateIcon />}\n        handleChange={handleAdd}\n      />\n      <ControlsDivider />\n      <DBNA label=\"Delete\" icon={<DeleteIcon />} handleChange={onDelete} />\n    </List>\n  );\n}\n\nDesktopImageOptions.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function PaddingControl({ padding, handlePaddingChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n          mixBlendMode: 'difference',\n        }}\n      >\n        Padding\n      </Typography>\n      <Slider\n        aria-label=\"Padding\"\n        defaultValue={0}\n        value={padding}\n        valueLabelDisplay=\"auto\"\n        step={0.1}\n        min={0}\n        max={10}\n        onChange={handlePaddingChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nPaddingControl.propTypes = {\n  padding: PropTypes.number.isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function RadiusControl({ radius, handleRadiusChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n        }}\n      >\n        Corner Radius\n      </Typography>\n      <Slider\n        aria-label=\"Corner Radius\"\n        defaultValue={0}\n        value={radius}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        min={0}\n        max={40}\n        onChange={handleRadiusChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nRadiusControl.propTypes = {\n  radius: PropTypes.number.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { ChromePicker } from 'react-color';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function ColorControl({\n  color,\n  displayColorPicker,\n  handleClick,\n  handleClose,\n  handleChange,\n}) {\n  console.log('color control', color, displayColorPicker);\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      spacing={2}\n      sx={{ my: 2 }}\n    >\n      <Typography\n        sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n      >\n        Background Color\n      </Typography>\n      <Box\n        component=\"div\"\n        sx={{\n          padding: '2px',\n          background: '#fff',\n          borderRadius: '5px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        }}\n        onClick={handleClick}\n      >\n        <Box\n          component=\"div\"\n          sx={{\n            width: '70px',\n            height: '30px',\n            borderRadius: '18px',\n            background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n          }}\n        />\n      </Box>\n      <ColorPicker\n        open={displayColorPicker}\n        color={color}\n        handleClose={handleClose}\n        handleChange={handleChange}\n      />\n    </Stack>\n  );\n}\n\nColorControl.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport function ColorPicker({ open, color, handleClose, handleChange }) {\n  console.log(handleClose);\n  return open ? (\n    <>\n      <Box\n        component=\"div\"\n        sx={{\n          position: 'absolute',\n          zIndex: 3,\n          bottom: 10,\n        }}\n      >\n        <IconButton\n          sx={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            zIndex: 2,\n            backgroundColor: 'button.main',\n            p: 0,\n            transform: 'translate(0, -110%)',\n            border: '2px solid black',\n          }}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n        <ChromePicker color={color} onChange={handleChange} />\n      </Box>\n    </>\n  ) : null;\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n//  import FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function TextControl({\n  text,\n  handleTextChange,\n  topText,\n  handlePositionChange,\n}) {\n  const [collageTextError] = useState('');\n  return (\n    <Stack\n      sx={{\n        backgroundColor: 'transparent',\n      }}\n    >\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        spacing={2}\n      >\n        <Typography\n          sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n        >\n          Collage Text\n        </Typography>\n        <FormGroup row>\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === false}\n                onChange={() => handlePositionChange(false)}\n                sx={{ color: 'white', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Bottom\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold' }}\n          />\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === true}\n                onChange={() => handlePositionChange(true)}\n                sx={{ color: 'gray', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Top\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold', fontSize: '0.8rem' }}\n          />\n        </FormGroup>\n      </Stack>\n      <TextField\n        variant=\"outlined\"\n        label=\"\"\n        defaultValue={text}\n        onChange={handleTextChange}\n        size=\"small\"\n        sx={{ width: '100%', mb: 1 }}\n        InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n        helperText={\n          <Typography sx={{ color: 'gray', fontSize: '0.75rem' }}>\n            {collageTextError}\n          </Typography>\n        }\n        error={!!collageTextError}\n      />\n    </Stack>\n  );\n}\n\nTextControl.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  handlePositionChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport ColorControl from 'components/collage/ColorControl';\nimport TextControl from 'components/collage/TextControl';\n\nexport default function EditControl({ optionProps }) {\n  const {\n    options,\n    handlePaddingChange,\n    displayColorPicker,\n    handleColorChange,\n    handleColorClose,\n    handleColorClick,\n    handleRadiusChange,\n    handleTextChange,\n    handlePositionChange,\n  } = optionProps;\n\n  return (\n    <Stack\n      direction=\"column\"\n      spacing={4}\n      sx={{\n        p: 2,\n        backgroundColor: alpha('#000', 0.7),\n        borderRadius: '10px 10px 10px 10px',\n        boxShadow: '0 0 10px inset rgba(255, 255, 255, 0.3)',\n      }}\n    >\n      <PaddingControl\n        padding={options.padding}\n        handlePaddingChange={handlePaddingChange}\n      />\n      <RadiusControl\n        radius={options.borderRadius}\n        handleRadiusChange={handleRadiusChange}\n      />\n      <ColorControl\n        color={options.color}\n        displayColorPicker={displayColorPicker}\n        handleChange={handleColorChange}\n        handleClose={handleColorClose}\n        handleClick={handleColorClick}\n      />\n      <TextControl\n        text={options.text}\n        topText={options.topText}\n        handleTextChange={handleTextChange}\n        handlePositionChange={handlePositionChange}\n      />\n    </Stack>\n  );\n}\n\nEditControl.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n\nexport default function MBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      value={label.toLowerCase()}\n      icon={icon}\n      sx={{\n        fontWeight: 'bold',\n        color: 'gray',\n        '&.Mui-selected': { color: 'white', outline: 'none' },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\n\nMBNA.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function MobileActions({ actionsRef, onDownload, onSave }) {\n  return (\n    <BottomNavigation\n      ref={actionsRef}\n      showLabels\n      sx={{ py: 1, fontWeight: 'bold', backgroundColor: alpha('#fff', 0.2) }}\n    >\n      <MBNA label=\"Save\" icon={<SaveIcon />} handleChange={onSave} />\n      <MBNA\n        label=\"Download\"\n        icon={<DownloadIcon />}\n        handleChange={onDownload}\n      />\n      <MBNA label=\"Print\" icon={<PrintIcon />} handleChange={() => {}} />\n    </BottomNavigation>\n  );\n}\n\nMobileActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport { alpha } from '@mui/material/styles';\n\nexport default function MainControls({ value, handleChange }) {\n  return (\n    <BottomNavigation\n      showLabels\n      value={value}\n      onChange={handleChange}\n      sx={{\n        fontWeight: 'bold',\n        backgroundColor: alpha('#fff', 0.2),\n        '&.Mui-selected': { color: 'white' },\n      }}\n    >\n      <BottomNavigationAction\n        label=\"Rearrange\"\n        value=\"rearrange\"\n        icon={<AutoAwesomeMosaicIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Photos\"\n        value=\"photo\"\n        icon={<PhotoIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Edit\"\n        value=\"edit\"\n        icon={<EditIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Clear\"\n        value=\"clear\"\n        icon={<RefreshIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n    </BottomNavigation>\n  );\n}\n\nMainControls.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport Typography from '@mui/material/Typography';\nimport PaddingIcon from '@mui/icons-material/Padding';\nimport CropFreeIcon from '@mui/icons-material/CropFree';\nimport SquareIcon from '@mui/icons-material/Square';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TitleIcon from '@mui/icons-material/Title';\nimport { alpha } from '@mui/material/styles';\n\nexport default function EditOptions({\n  color,\n  editOptionsValue,\n  open,\n  handleOptionsClose,\n  handleEditOptionsClick,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={editOptionsValue}\n        onChange={handleEditOptionsClick}\n        sx={{\n          display: 'flex',\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          position: 'relative',\n          alignItems: 'center',\n        }}\n      >\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Padding\n            </Typography>\n          }\n          value=\"padding\"\n          icon={<PaddingIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Corner\n            </Typography>\n          }\n          value=\"border radius\"\n          icon={<CropFreeIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Color\n            </Typography>\n          }\n          value=\"color\"\n          icon={\n            <SquareIcon\n              sx={{\n                fill: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n                borderRadius: '5px',\n              }}\n            />\n          }\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label=\"Text\"\n          value=\"text\"\n          icon={<TitleIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nEditOptions.propTypes = {\n  editOptionsValue: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleEditOptionsClick: PropTypes.func.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function ImageOptions({\n  open,\n  value,\n  handleOptionsClose,\n  handleDelete,\n  handleAdd,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={value}\n        sx={{\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          '&.Mui-selected': { color: 'white' },\n        }}\n      >\n        <MBNA\n          label=\"Delete\"\n          icon={<DeleteIcon />}\n          handleChange={handleDelete}\n        />\n        <MBNA\n          label=\"Add\"\n          icon={<AddPhotoAlternateIcon />}\n          handleChange={handleAdd}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nImageOptions.propTypes = {\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\n\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport TextControl from 'components/collage/TextControl';\nimport { ColorPicker } from 'components/collage/ColorControl';\nimport MainControls from 'components/collage/MainControls';\nimport EditOptions from 'components/collage/EditOptions';\nimport ImageOptions from 'components/collage/ImageOptions';\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function MobileControls({\n  optionProps,\n  actionProps,\n  dimensionProps,\n  handleClear,\n}) {\n  const {\n    options,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClose,\n    handleColorClick,\n    handleColorChange,\n    handleTextChange,\n    handlePositionChange,\n    displayColorPicker,\n  } = optionProps;\n\n  const { onRefresh, onDelete, clearDelete } = actionProps;\n  const { footerRef, handleImageAddClick } = dimensionProps;\n\n  const [mainOpen, setMainOpen] = useState(true);\n  const [value, setValue] = useState('');\n  const [editOpen, setEditOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const [editControl, setEditControl] = useState(null);\n  const [editOptionsValue, setEditOptionsValue] = useState('');\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageValue, setImageValue] = useState('');\n\n  const handleImageOptionsClose = () => {\n    setImageOpen(false);\n    setImageValue('');\n    setMainOpen(true);\n    clearDelete();\n    setValue('');\n  };\n\n  const handleEditOptionsClose = () => {\n    setEditOpen(false);\n    setEditControl(null);\n    setEditOptionsValue('');\n    setMainOpen(true);\n    setValue('');\n  };\n\n  const handleEditOptionsClick = (e, nV) => {\n    console.log('handle edit options click');\n    setEditOptionsValue(nV);\n    if (nV === 'padding') {\n      setEditControl(\n        <PaddingControl\n          padding={options.padding}\n          handlePaddingChange={handlePaddingChange}\n        />\n      );\n    } else if (nV === 'border radius') {\n      setEditControl(\n        <RadiusControl\n          radius={options.borderRadius}\n          handleRadiusChange={handleRadiusChange}\n        />\n      );\n    } else if (nV === 'color') {\n      handleColorClick();\n      setEditControl(\n        <ColorPicker\n          open={displayColorPicker}\n          color={options.color}\n          handleChange={handleColorChange}\n          handleClose={() => {\n            setEditControl(null);\n            handleColorClose();\n          }}\n        />\n      );\n    } else if (nV === 'text') {\n      console.log(nV);\n      setEditControl(\n        <TextControl\n          text={options.text}\n          handleTextChange={handleTextChange}\n          topText={options.topText}\n          handlePositionChange={handlePositionChange}\n        />\n      );\n    } else {\n      setEditControl(<Typography color=\"secondary\">{nV}</Typography>);\n    }\n  };\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'padding') {\n      setEditControl(\n        <PaddingControl\n          padding={options.padding}\n          handlePaddingChange={handlePaddingChange}\n        />\n      );\n    }\n  }, [options.padding, editOpen]);\n  // }, [options.padding, editOpen, editOptionsValue]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'border radius') {\n      setEditControl(\n        <RadiusControl\n          radius={options.borderRadius}\n          handleRadiusChange={handleRadiusChange}\n        />\n      );\n    }\n  }, [options.borderRadius, editOpen]);\n  // }, [options.borderRadius, editOpen, editOptionsValue]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'color') {\n      setEditControl(\n        <ColorPicker\n          open={displayColorPicker}\n          color={options.color}\n          handleChange={handleColorChange}\n          handleClose={handleColorClose}\n        />\n      );\n    }\n  }, [options.color, editOpen, displayColorPicker]);\n  // }, [options.color, editOpen, editOptionsValue, displayColorPicker]);\n\n  useEffect(() => {\n    console.log('text control useEffect');\n    if (editOpen && editOptionsValue === 'text') {\n      setEditControl(\n        <TextControl\n          text={options.text}\n          handleTextChange={handleTextChange}\n          topText={options.topText}\n          handlePositionChange={handlePositionChange}\n        />\n      );\n    }\n  }, [options.text, editOpen, options.topText]);\n  // }, [options.text, editOpen, editOptionsValue, options.topText]);\n\n  const handleImageClose = () => {\n    setImageValue('');\n    setImageOpen(false);\n    setMainOpen(true);\n  };\n\n  const handleChange = (event, newValue) => {\n    clearDelete();\n    handleImageClose();\n    handleEditOptionsClose();\n    setValue(newValue);\n    if (newValue === 'rearrange') {\n      onRefresh();\n    } else if (newValue === 'photo') {\n      setMainOpen(false);\n      setImageOpen(true);\n    } else if (newValue === 'edit') {\n      setMainOpen(false);\n      setEditOpen(true);\n    } else if (newValue === 'clear') {\n      setClearOpen(true);\n      //  handleClear();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  const handleImageAdd = () => {\n    clearDelete();\n    handleImageAddClick();\n  };\n\n  const handleClearSubmit = () => {\n    handleClear();\n    setClearOpen(false);\n    setValue('');\n  };\n\n  const handleClearCancel = () => {\n    setClearOpen(false);\n    setValue('');\n  };\n\n  console.log('rerendering', editControl);\n  return (\n    <Paper\n      ref={footerRef}\n      sx={{\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        mt: 1,\n        backgroundColor: 'black',\n        borderRadius: 0,\n      }}\n      elevation={4}\n    >\n      <ClearCollageDialog\n        open={clearOpen}\n        onSubmit={handleClearSubmit}\n        onCancel={handleClearCancel}\n      />\n      {editControl ? (\n        <Box\n          sx={{\n            backgroundColor: alpha('#fff', 0.15),\n            p: 1,\n          }}\n        >\n          {editControl}\n        </Box>\n      ) : null}\n      <ImageOptions\n        open={imageOpen}\n        value={imageValue}\n        handleDelete={onDelete}\n        handleAdd={handleImageAdd}\n        handleOptionsClose={handleImageOptionsClose}\n      />\n      <EditOptions\n        color={options.color}\n        editOptionsValue={editOptionsValue}\n        open={editOpen}\n        handleOptionsClose={handleEditOptionsClose}\n        handleEditOptionsClick={handleEditOptionsClick}\n      />\n      {mainOpen ? (\n        <MainControls value={value} handleChange={handleChange} />\n      ) : null}\n    </Paper>\n  );\n}\n\nMobileControls.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n  }).isRequired,\n  actionProps: PropTypes.shape({\n    onRefresh: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    clearDelete: PropTypes.func.isRequired,\n  }).isRequired,\n  handleClear: PropTypes.func.isRequired,\n  dimensionProps: PropTypes.shape({\n    handleImageAddClick: PropTypes.func.isRequired,\n    footerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport dbutils from 'components/collage/dbutils';\nimport useBase from 'hooks/collage/base';\nimport { useNavigate } from 'react-router-dom';\n\nimport Authenticate from 'hocs/require-authentication';\nimport Collage from 'components/collage/Collage';\nimport DownloadDialog from 'components/collage/DownloadDialog';\nimport SaveDialog from 'components/collage/SaveDialog';\nimport SaveStatusDialog from 'components/collage/SaveStatusDialog';\nimport Header from 'components/collage/Header';\nimport Loading from 'components/Loading';\nimport View from 'components/collage/View';\n\nimport DesktopActions from 'components/collage/DesktopActions';\nimport DesktopControls from 'components/collage/DesktopControls';\nimport DesktopImageOptions from 'components/collage/DesktopImageOptions';\nimport EditControl from 'components/collage/EditControl';\nimport MobileActions from 'components/collage/MobileActions';\nimport MobileControls from 'components/collage/MobileControls';\n\nexport default function BaseCollage({ getCollage, clearCollage, saveType }) {\n  console.log('base collage');\n  const navigate = useNavigate();\n  const [details, setDetails] = useState({});\n  const [status, setStatus] = useState('fetching');\n\n  const [\n    getDetails,\n    ,\n    collageID,\n    constants,\n    dimensionProps,\n    optionProps,\n    actionProps,\n    imageProps,\n    treeProps,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n  ] = useBase(details);\n\n  useEffect(async () => {\n    if (Object.keys(details).length === 0) {\n      setStatus('fetching');\n      const collageDetails = await getCollage();\n      setStatus('fetch end');\n      console.log('setting collage details', collageDetails);\n      setDetails(collageDetails);\n      clearCollage();\n    }\n  }, []);\n\n  console.log(\n    'base collage',\n    details,\n    imageProps.imgCount,\n    imageProps.loaded,\n    imageProps.images.length,\n    imageProps.newImagesLoaded\n  );\n\n  useEffect(() => {\n    let st = status;\n    if (st === 'fetching') return;\n    if (imageProps.imgCount === 0 && Object.keys(details).length === 0) {\n      st = 'empty';\n    }\n    if (\n      imageProps.images.length > 0 &&\n      imageProps.images.length === imageProps.imgCount\n    ) {\n      st = 'preparing';\n    }\n    if (imageProps.images.length < imageProps.imgCount) {\n      st = 'loading';\n    }\n    if (imageProps.loaded >= imageProps.imgCount && imageProps.imgCount > 0) {\n      st = 'ready';\n    }\n    setStatus(st);\n    console.log(\n      'status calculation',\n      imageProps.loaded,\n      imageProps.imgCount,\n      imageProps.images.length,\n      st,\n      details\n    );\n  }, [imageProps]);\n\n  const clearAll = () => {\n    setDetails({});\n    handleClear();\n    clearCollage();\n  };\n\n  const handleSave = async (name) => {\n    console.log(\n      'in handle save',\n      getDetails(),\n      imageProps.images,\n      imageProps.originalImages\n    );\n\n    if (saveType === 'new') {\n      const respdets = await dbutils.save([getDetails()], 'details');\n      const respImgs = await dbutils.save(imageProps.images, 'images');\n      const respOrigImgs = await dbutils.save(\n        imageProps.originalImages,\n        'originalImages'\n      );\n      console.log(respdets, respImgs, respOrigImgs, name);\n    }\n\n    actionProps.onSaveClick();\n    const res =\n      saveType === 'new' ? await newCollage(name) : await saveCollage();\n    console.log('save results', res, collageID);\n    if (res) {\n      setTimeout(() => {\n        clearAll();\n        actionProps.setSaveStart(false);\n        navigate('/collages');\n      }, 3000);\n    }\n  };\n\n  const downloadDialog = (\n    <DownloadDialog\n      open={actionProps.open}\n      onClick={actionProps.onDownloadClick}\n      onClose={actionProps.onDownloadClose}\n      sizes={constants.paperSizes}\n    />\n  );\n\n  const saveDialog = (\n    <SaveDialog\n      open={actionProps.saveOpen}\n      onClick={handleSave}\n      onClose={actionProps.onSaveClose}\n    />\n  );\n\n  const saveStatusDialog = (\n    <Authenticate>\n      <SaveStatusDialog open={actionProps.saveStart} status={saveStatus} />\n    </Authenticate>\n  );\n\n  const collage = (\n    <Collage\n      dimensionProps={dimensionProps}\n      imageProps={imageProps}\n      actionProps={actionProps}\n      collageCallback={collageCallback}\n      handleRemoveImage={handleRemoveImage}\n      options={optionProps.options}\n      tree={treeProps.tree}\n    />\n  );\n\n  const mobileControls = (\n    <MobileControls\n      optionProps={optionProps}\n      actionProps={actionProps}\n      dimensionProps={dimensionProps}\n      handleClear={clearAll}\n    />\n  );\n\n  const header = <Header headerRef={dimensionProps.headerRef} />;\n  const desktopPhotosComp = (\n    <DesktopImageOptions\n      onDelete={actionProps.onDelete}\n      onAdd={dimensionProps.handleImageAddClick}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n  const desktopControls = (\n    <DesktopControls\n      onRefresh={actionProps.onRefresh}\n      photosComp={desktopPhotosComp}\n      editComp={<EditControl optionProps={optionProps} />}\n      handleClear={clearAll}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n\n  const isMobile = window.innerWidth < window.innerHeight;\n  const controls = isMobile ? mobileControls : desktopControls;\n\n  const actionsComp = isMobile ? (\n    <MobileActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={actionProps.handleSave}\n    />\n  ) : (\n    <DesktopActions\n      onDownload={actionProps.handleDownload}\n      onSave={actionProps.handleSave}\n    />\n  );\n\n  return (\n    <>\n      <View\n        open={actionProps.open}\n        saveOpen={actionProps.saveOpen}\n        saveStatusOpen={actionProps.saveStart}\n        dimensionProps={dimensionProps}\n        imageProps={imageProps}\n        header={header}\n        actions={actionsComp}\n        downloadDialog={downloadDialog}\n        saveDialog={saveDialog}\n        saveStatusDialog={saveStatusDialog}\n        collage={collage}\n        controls={controls}\n        status={status}\n      />\n      <input\n        ref={dimensionProps.addImageRef}\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={imageProps.handleLoad}\n      />\n      {actionProps.generate ? <Loading title=\"Creating collage ...\" /> : null}\n    </>\n  );\n  // return 'base';\n}\n\nBaseCollage.propTypes = {\n  getCollage: PropTypes.func.isRequired,\n  clearCollage: PropTypes.func.isRequired,\n  saveType: PropTypes.string.isRequired,\n};\n"],"names":["url","body","params","method","fetch","then","response","resp","console","log","newCollage","collageID","collageDetails","collage_id","helpers","process","JSON","stringify","error","upload","listCollages","nextToken","next_token","getThumbnail","collageId","getCollage","get","path","newUrl","options","credentials","headers","Headers","URLSearchParams","toString","ok","status","document","cookie","json","post","apiUrl","OptionsButton","children","onClick","name","Button","id","variant","component","sx","color","borderRadius","backgroundColor","padding","defaultProps","AddPhotos","handleChange","type","hidden","multiple","accept","onChange","fontSize","Typography","fontWeight","LoginButton","authURL","next","href","target","style","textDecoration","borderColor","alpha","collageDB","Dexie","version","stores","images","originalImages","imgCount","collageTree","details","getData","tableName","db","toArray","rows","length","clearData","clear","getCollageDetails","data","Promise","allSettled","map","dt","put","getCollageData","clearCollageData","save","ProfileAvatar","picture","email","initials","Array","from","toUpperCase","referrerPolicy","alt","src","ProfileIcon","open","handleClick","avatar","display","alignItems","textAlign","marginRight","title","size","undefined","ml","ProfileMenu","handleClose","anchorEl","profileIdentifier","onClose","PaperProps","elevation","filter","mt","width","height","mr","content","position","top","right","bgcolor","transform","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","underline","Profile","React","setAnchorEl","Boolean","userInfo","commonUtils","userAvatar","event","currentTarget","ProfileLink","item","paddingTop","getClosest","arr","index1","index2","downscaleImage","image","newWidth","newHeight","fileType","canvas","createElement","getContext","drawImage","toDataURL","convertBase64","file","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","getCut","Math","round","random","findClosest","n","start","end","mid","findImgPair","i","j","minMatchingCost","abs","getAspectRatio","cut","ar1","ar2","handleImageLoad","maxWidth","handleImageCount","handleNewImageCount","handleImageData","files","cnt","Image","e","naturalWidth","naturalHeight","Date","now","aspectRatio","dataurl","originalImageDetail","imageDetail","URL","revokeObjectURL","resizeImages","handleImages","addImagesToDB","tempImages","forEach","origImage","tempImage","push","imgs","ind","findIndex","elem","slice","wrapText","text","x","y","lineHeight","textCanvas","ctx","font","tempX","tempY","words","split","line","testLine","lineArray","testWidth","measureText","letterSpacing","convertToRGBA","value","r","g","b","a","getCollageDimension","maxW","maxH","origAR","Node","this","left","obj","fromObject","getScore","output","concat","copyNode","copy","newImages","replaceImages","removeImageData","imageData","find","addImageData","delImg","handleRemoveImage","yOffset","xOffset","handleCollageImageLoad","newX","newY","Box","onLoad","Tooltip","IconButton","Delete","DOMDisplay","RenderImage","tempCanvas","tempCtx","scaleFactor","floor","log2","radius","clipwidth","clipheight","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","canvasElement","CanvasDisplay","newImg","ResizeImage","ImageStyling","clearRect","tar","imageCount","targetAspectRatioArr","closestIndex","restImages","targetAspectRatio","leftIndex","rightIndex","index","includes","first","second","generate","th","adjustments","adjust","parentWidth","parentHeight","parentX","parentY","parentCut","nodeType","addSize","TextDisplay","textArray","chunk","paddingX","fontFamily","BinaryTree","root","tempTree","canvasWidth","canvasHeight","topText","lA","textHeight","fillStyle","fillRect","textBaseline","textPart","fillText","TextCanvasDraw","score","min","trys","bestAdjust","bestAspectRatio","tolerableDifference","ajstCnt","diff","copyTree","findBestAdjustTree","tolerance","imageWidth","imageHeight","sortedImages","sort","collageArray","imgTree","generateCollageTree","aspR","bAR","toFixed","maxScore","maxElem","element","generateScore","useBase","initialValue","constants","resizeImageWidth","paperSizes","A4","A3","useState","uploadedImages","setUploadedImages","dimensions","headerRef","useRef","actionsRef","footerRef","addImageRef","setHeight","setImageHeight","setImageWidth","setWidth","maxHeight","setMaxHeight","setMaxWidth","setTextHeight","setDimensions","otherHeight","current","offsetHeight","window","innerWidth","innerHeight","w","h","useEffect","addEventListener","removeEventListener","handleImageAddClick","click","useDimensions","optionsInitValue","setOptions","displayColorPicker","setDisplayColorPicker","handlePaddingChange","opts","handleRadiusChange","handleColorClick","dcp","handleColorClose","handleColorChange","clr","rgb","handlePositionChange","handleTextChange","useOptions","actions","setOpen","saveOpen","setSaveOpen","saveStart","setSaveStart","refresh","setRefresh","setGenerate","removeImage","setRemoveImage","paperWidth","paperHeight","printOptions","setPrintOptions","clearDelete","handleDownload","handleGenerateCallback","onDelete","ri","onDownloadClick","onDownloadClose","onRefresh","onSaveClose","onSaveClick","handleSave","useActions","newImgCount","setNewImageCount","newImagesLoaded","setNewImagesLoaded","setImageCount","loaded","setLoaded","setImages","setOriginalImages","handleLoad","remove","removeIndex","newImagesArr","imageArr","img","useImages","treeState","loadingCallback","tree","setTree","newTree","Object","keys","reAdjust","imagesArr","treeUtils","bestAspectRatioTree","addOptions","useTree","thumbnail","setThumbnail","collageName","finalizing","saveStatus","setSaveStatus","updateStatus","key","st","imagesText","updateImagesStatus","handleClear","clearPromises","generateThumbnail","ar","thumbnailCanvas","thumbnailTree","thumbnailDetails","uploadCollageDetails","dets","created_at","last_updated_at","collageapi","uploadCollageImages","imageURLS","thumbnailPromise","toBlob","blob","thumbnailKey","imagePromises","uploadPromises","uploadStatus","tH","getDetails","saveCollage","imgTitle","Collage","dimensionProps","imageProps","actionProps","collageCallback","collage","setCollage","isEmpty","t","createCollage","collageElem","imgPrintWidth","imgPrintHeight","canvasTree","setTimeout","pW","pH","link","download","createObjectURL","DownloadDialog","sizes","setValue","Dialog","fullWidth","DialogTitle","DialogContent","dividers","justifyContent","DialogContentText","pr","FormControl","InputLabel","Select","labelId","defaultValue","label","MenuItem","DialogActions","disabled","SaveDialog","setName","nameError","TextField","mb","InputProps","helperText","StatusIndicator","CircularProgress","Pending","CheckCircleOutline","Close","Status","pending","done","running","failed","Stack","direction","OverAllStatus","counter","spacing","p","SaveStatusDialog","overAllStatus","setCounter","timerId","clearTimeout","statusArr","values","val","Header","isLoggedIn","Paper","ref","postion","Link","ArrowBack","EmptyCollage","loadComponent","backgroundImage","collageBack","backgroundSize","objectFit","backgroundRepeat","View","saveStatusOpen","header","downloadDialog","saveDialog","saveStatusDialog","controls","Loading","DBNA","icon","BottomNavigationAction","showLabel","py","outline","DesktopDrawer","anchor","Drawer","ControlsDivider","Divider","my","DesktopActions","onDownload","onSave","newValue","List","Save","Download","Print","ClearCollageDialog","onSubmit","onCancel","noWrap","DesktopControls","photosComp","editComp","imageOptionsOpen","setImageOptionsOpen","editOptionsOpen","setEditOptionsOpen","clearOpen","setClearOpen","closeAll","handleClearClose","AutoAwesomeMosaic","Photo","Edit","Refresh","DesktopImageOptions","onAdd","AddPhotoAlternate","PaddingControl","mixBlendMode","Slider","valueLabelDisplay","step","max","RadiusControl","ColorControl","background","boxShadow","cursor","ColorPicker","bottom","border","TextControl","collageTextError","FormGroup","row","FormControlLabel","disableTypography","control","Checkbox","checked","EditControl","optionProps","MBNA","toLowerCase","MobileActions","BottomNavigation","showLabels","MainControls","EditOptions","editOptionsValue","handleOptionsClose","handleEditOptionsClick","borderTop","Padding","CropFree","Square","fill","Title","ImageOptions","handleDelete","handleAdd","MobileControls","mainOpen","setMainOpen","editOpen","setEditOpen","editControl","setEditControl","setEditOptionsValue","imageOpen","setImageOpen","imageValue","setImageValue","handleEditOptionsClose","nV","BaseCollage","clearCollage","saveType","navigate","useNavigate","setDetails","setStatus","treeProps","clearAll","dbutils","respdets","respImgs","respOrigImgs","res","mobileControls","desktopPhotosComp","desktopControls","isMobile","actionsComp"],"sourceRoot":""}