{"version":3,"file":"static/js/148.12fe959d.chunk.js","mappings":"oPAG6C,SAE9BA,EAAU,EAAD,iDAgBvB,OAhBuB,0BAAxB,WAAyBC,EAASC,EAAMC,GAAkB,4FAC/BC,QAAQC,WAC/BJ,EAAQK,IAAG,yCAAC,WAAOC,GAAG,gGACGC,MAAMN,EAAKK,EAAIE,QAAQC,MAAK,SAACC,GAAI,OAAKA,EAAKC,MAAM,IAAE,KAAD,EAA3D,OAARC,EAAQ,gBACUC,EAAAA,EAAAA,cAAsBD,GAAU,KAAD,EAO5B,OAPrBE,EAAS,OACTC,GAAM,kBACPT,GAAG,IACNU,IAAKF,EACLG,QAASH,EACTI,KAAMN,IAERV,EAAmBa,GAAQ,kBACpBA,GAAM,2CACd,mDAXU,KAYX,KAAD,EAbe,OAAVI,EAAU,yBAcTA,EAAWd,KAAI,SAACe,GAAI,OAAKA,EAAKC,KAAK,KAAC,2CAC5C,wBAEc,SAASC,IACtB,IACQC,GADOC,EAAAA,EAAAA,MACPD,UAEFE,EAAU,yCAAG,WACjBC,EACAC,EACAzB,GAAkB,8EAEmC,OAArD0B,QAAQC,IAAI,yCAAyC,SAC/BC,EAAAA,EAAAA,WAAsBP,GAAW,KAAD,EAEH,OAF7CQ,EAAO,OACbL,EAAiBK,EAAQA,QAAQC,OAAOC,QACxCN,EAAoBI,EAAQA,QAAQC,OAAOC,QAAQ,SAC9BlC,EACnBgC,EAAQA,QAAQC,OAChBD,EAAQ9B,KACRC,GACA,KAAD,EAJW,OAAN8B,EAAM,yBAKL,CAAED,QAASA,EAAQA,QAASC,OAAAA,IAAQ,4CAC5C,gBAfe,0CAiBhB,OACE,SAAC,UAAW,CACVP,WAAYA,EACZS,aAAc,kBAAMJ,EAAAA,EAAAA,cAAyBP,EAAU,EACvDY,SAAS,YAGf,C","sources":["pages/collage/View.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport collageapi from 'api/collage';\nimport helpers from 'components/collage/helpers';\nimport BaseCollage from 'pages/collage/Base';\n\nasync function getImages(imgDets, urls, handleImageDetails) {\n  const tempImages = await Promise.allSettled(\n    imgDets.map(async (img) => {\n      const imageSRC = await fetch(urls[img.title]).then((resp) => resp.blob());\n      const base64SRC = await helpers.convertBase64(imageSRC);\n      const imgDet = {\n        ...img,\n        src: base64SRC,\n        origSRC: base64SRC,\n        file: imageSRC,\n      };\n      handleImageDetails(imgDet);\n      return imgDet;\n    })\n  );\n  return tempImages.map((elem) => elem.value);\n}\n\nexport default function CollageView() {\n  const params = useParams();\n  const { collageID } = params;\n\n  const getCollage = async (\n    handleImageCount,\n    handleNewImageCount,\n    handleImageDetails\n  ) => {\n    console.log('use effect making call to get collage');\n    const details = await collageapi.getCollage(collageID);\n    handleImageCount(details.details.images.length);\n    handleNewImageCount(details.details.images.length);\n    const images = await getImages(\n      details.details.images,\n      details.urls,\n      handleImageDetails\n    );\n    return { details: details.details, images };\n  };\n\n  return (\n    <BaseCollage\n      getCollage={getCollage}\n      clearCollage={() => collageapi.deleteCollage(collageID)}\n      saveType=\"existing\"\n    />\n  );\n}\n"],"names":["getImages","imgDets","urls","handleImageDetails","Promise","allSettled","map","img","fetch","title","then","resp","blob","imageSRC","helpers","base64SRC","imgDet","src","origSRC","file","tempImages","elem","value","CollageView","collageID","useParams","getCollage","handleImageCount","handleNewImageCount","console","log","collageapi","details","images","length","clearCollage","saveType"],"sourceRoot":""}