{"version":3,"file":"static/js/3.ffc5efd6.chunk.js","mappings":"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","sources":["components/RemovePhotoIcon.jsx","hooks/date.jsx","hooks/story.jsx","hooks/title.jsx","components/ActionIcon.jsx","components/confirmation.jsx","pages/memory/Delete.jsx","components/UpdateMemoryIcon.jsx","hooks/email.jsx","components/EmailInput.jsx","components/NewShares.jsx","components/StatusTable.jsx","components/CheckboxCell.jsx","components/PersonalDetailsCell.jsx","components/ExpandStatusIconCell.jsx","components/ShareRow.jsx","components/SelectAllCheckboxCell.jsx","components/TableHeader.jsx","components/ExistingShares.jsx","components/CloseButton.jsx","pages/memory/Share.jsx","pages/memory/Actions.jsx","pages/memory/ContentStructure.jsx","components/MemoryImageSlide.jsx","pages/memory/MemoryCarousel.jsx","pages/memory/MemoryTitle.jsx","pages/memory/MemoryDate.jsx","pages/memory/MemoryStory.jsx","pages/memory/MemoryImages.jsx","pages/memory/MemoryContent.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { alpha } from '@mui/material/styles';\n\nexport default function RemovePhotoIcon({ size, handleClick }) {\n  return (\n    <IconButton\n      size={size}\n      sx={{\n        color: 'black',\n        bgcolor: alpha('#fff', 0.4),\n        position: 'absolute',\n        top: 10,\n        right: 12,\n      }}\n      onClick={handleClick}\n    >\n      <CloseIcon size={size} />\n    </IconButton>\n  );\n}\n\nRemovePhotoIcon.defaultProps = {\n  size: 'small',\n};\n\nRemovePhotoIcon.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  size: PropTypes.string,\n};\n","import { useState } from 'react';\n\nexport default function useDate(initialDate) {\n  const [date, setDate] = useState(initialDate);\n  const handleDateChange = (e) => {\n    const newDate = new Date(e);\n    if (e) {\n      const formattedDate = newDate.toLocaleDateString('en-in', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric',\n      });\n      setDate(formattedDate);\n    } else {\n      setDate(null);\n    }\n  };\n  return [date, setDate, handleDateChange];\n}\n","import { useState } from 'react';\n\nexport default function useStory(initialState) {\n  const [story, setStory] = useState(initialState);\n  const handleStoryChange = (event) => setStory(event.target.value);\n  return [story, setStory, handleStoryChange];\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useTitle(initialValue) {\n  const [title, setTitle] = useState(initialValue);\n  useEffect(() => setTitle(initialValue), [initialValue]);\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  return [title, setTitle, handleTitleChange];\n}\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\n\nexport default function ActionIcon({ icon, label }) {\n  return (\n    <Box sx={{ alignItems: 'center' }}>\n      <IconButton\n        aria-label=\"delete\"\n        sx={{\n          bgcolor: 'form.input',\n        }}\n      >\n        {icon}\n      </IconButton>\n      {label}\n    </Box>\n  );\n}\n\nActionIcon.propTypes = {\n  icon: PropTypes.node.isRequired,\n  label: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@mui/material/Dialog';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function Confirm({\n  confirm, handleCallback, handleCloseCallback, title, message,\n}) {\n  const [open, setOpen] = useState(confirm);\n  useEffect(() => setOpen(confirm), [confirm]);\n\n  const handleClose = () => {\n    setOpen(false);\n    handleCloseCallback();\n  };\n\n  const handleSubmit = () => {\n    handleClose();\n    handleCallback();\n  };\n\n  return (\n    <Dialog open={open} sx={{ backgroundColor: 'faded.black' }}>\n      <DialogTitle>{title}</DialogTitle>\n      <Box sx={{ p: 2 }}>\n        <Typography sx={{ pb: 2 }}>{message}</Typography>\n        <Stack spacing={2} direction=\"row\">\n          <Button variant=\"contained\" onClick={handleClose}>Cancel</Button>\n          <Button variant=\"outlined\" onClick={handleSubmit}>OK</Button>\n        </Stack>\n      </Box>\n    </Dialog>\n  );\n}\n\nConfirm.propTypes = {\n  confirm: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  handleCallback: PropTypes.func.isRequired,\n  handleCloseCallback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ActionIcon from 'components/ActionIcon';\nimport Confirm from 'components/confirmation';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport api from '../Api';\n\nexport function DeleteMemoryIcon() {\n  return (\n    <ActionIcon icon={<DeleteIcon />} label=\"Delete\" />\n  );\n}\n\nexport function ConfirmDelete({ callback, open, closeCallback }) {\n  const DeleteTitle = 'Delete Memory';\n  const DeleteConfirmMessage = 'Do you want to delete this memory?';\n  return (\n    <Confirm\n      confirm={open}\n      title={DeleteTitle}\n      handleCallback={callback}\n      handleCloseCallback={() => closeCallback()}\n      message={DeleteConfirmMessage}\n    />\n  );\n}\n\nexport default async function deleteMemory(bucket, authURL, memoryID, memoryDeleteCallback) {\n  try {\n    const deleteResults = await api.deleteMemory(bucket, authURL, memoryID);\n    memoryDeleteCallback(deleteResults);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nConfirmDelete.propTypes = {\n  open: PropTypes.bool.isRequired,\n  callback: PropTypes.func.isRequired,\n  closeCallback: PropTypes.func.isRequired,\n};\n","import ActionIcon from 'components/ActionIcon';\nimport EditIcon from '@mui/icons-material/Edit';\n\nexport default function UpdateMemoryIcon() {\n  return (\n    <ActionIcon icon={<EditIcon />} label=\"Edit\" />\n  );\n}\n","import { useState } from 'react';\nimport commonUtils from 'utils';\n\nfunction ownEmail() {\n  const cookieValue = commonUtils.getUserInfo();\n  return cookieValue.email;\n}\n\nexport default function useEmail() {\n  const [items, setItems] = useState([]);\n  const [value, setValue] = useState('');\n  const [error, setError] = useState(null);\n\n  const isInList = (email) => items.includes(email);\n\n  // eslint-disable-next-line\n  const isEmail = (email) => /[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/.test(email);\n\n  const isValid = (email) => {\n    let err = null;\n\n    if (isInList(email)) {\n      err = `${email} has already been added.`;\n    }\n\n    if (!isEmail(email)) {\n      err = `${email} is not a valid email address.`;\n    }\n\n    if (email === ownEmail()) {\n      err = 'Cannot share memory with owner email.';\n    }\n\n    if (err) {\n      setError(err);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleKeyDown = (evt) => {\n    if (['Enter', 'Tab', ','].includes(evt.key)) {\n      evt.preventDefault();\n\n      const val = value.trim();\n\n      if (val && isValid(val)) {\n        setItems([...items, value]);\n        setValue('');\n      }\n    }\n  };\n\n  const handleChange = (evt) => {\n    setValue(evt.target.value);\n    setError(null);\n  };\n\n  const handleDelete = (item) => {\n    setItems((prevItems) => prevItems.filter((i) => i !== item));\n  };\n\n  const handlePaste = (evt) => {\n    evt.preventDefault();\n\n    const paste = evt.clipboardData.getData('text');\n    // eslint-disable-next-line\n    var emails = paste.match(/[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g);\n\n    if (emails) {\n      const toBeAdded = emails.filter((email) => !isInList(email));\n      setItems([...items, ...toBeAdded]);\n    }\n  };\n\n  return [items, value, error, setItems, handleKeyDown, handleChange, handleDelete, handlePaste];\n}\n","import PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Grid from '@mui/material/Grid';\n\nexport default function EmailInput({\n  items,\n  value,\n  error,\n  handleKeyDown,\n  handleChange,\n  handleDelete,\n  handlePaste,\n}) {\n  return (\n    <Stack direction=\"column\" spacing={2} sx={{ mb: 3 }}>\n      <TextField\n        id=\"outlined-error\"\n        value={value}\n        label=\"Email List\"\n        placeholder=\"Type or paste email addresses and press `Enter`...\"\n        onKeyDown={handleKeyDown}\n        onChange={handleChange}\n        onPaste={handlePaste}\n        helperText={\n          error || 'Type or paste email addresses and press `Enter`...'\n        }\n        error={!!error}\n        sx={{ my: 1 }}\n      />\n      <Grid container spacing={2}>\n        {items.map((item) => (\n          <Chip\n            key={item}\n            label={item}\n            variant=\"outlined\"\n            onDelete={() => handleDelete(item)}\n            sx={{ margin: 0.5 }}\n            size=\"small\"\n          />\n        ))}\n      </Grid>\n    </Stack>\n  );\n}\n\nEmailInput.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  value: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  handleKeyDown: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handlePaste: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport EmailInput from 'components/EmailInput';\nimport Box from '@mui/material/Box';\n\nexport default function NewShares({\n  items,\n  value,\n  error,\n  handleKeyDown,\n  handleChange,\n  handleDelete,\n  handlePaste,\n  handleClear,\n  handleSubmit,\n  sharing,\n}) {\n  return (\n    <Box sx={{ p: 2 }}>\n      <EmailInput\n        items={items}\n        value={value}\n        error={error}\n        handleKeyDown={handleKeyDown}\n        handleChange={handleChange}\n        handleDelete={handleDelete}\n        handlePaste={handlePaste}\n      />\n      <Stack spacing={2} direction=\"row\">\n        <Button variant=\"outlined\" onClick={handleClear}>\n          Clear\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleSubmit}\n          disabled={items.length === 0 || sharing === true}\n        >\n          Share\n        </Button>\n      </Stack>\n    </Box>\n  );\n}\n\nNewShares.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  value: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  handleKeyDown: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handlePaste: PropTypes.func.isRequired,\n  handleClear: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  sharing: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Chip from '@mui/material/Chip';\nimport TableHead from '@mui/material/TableHead';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\n\nexport default function StatusTable({ invitation, accept }) {\n  const colorMap = {\n    pending: 'warning',\n    sent: 'success',\n    failed: 'error',\n    rejected: 'error',\n    accepted: 'success',\n  };\n  return (\n    <Table size=\"small\" aria-label=\"statuses\">\n      <TableHead>\n        <TableRow>\n          <TableCell align=\"left\">Invitation</TableCell>\n          <TableCell align=\"left\">Accepted</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        <TableRow key={new Date()}>\n          <TableCell align=\"left\">\n            <Chip color={colorMap[invitation]} size=\"small\" label={invitation} />\n          </TableCell>\n          <TableCell align=\"left\">\n            <Chip color={colorMap[accept]} size=\"small\" label={accept} />\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  );\n}\n\nStatusTable.propTypes = {\n  invitation: PropTypes.string.isRequired,\n  accept: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport TableCell from '@mui/material/TableCell';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function CheckboxCell({ selected, handleChange }) {\n  const [checked, setChecked] = useState(selected);\n\n  useEffect(() => {\n    setChecked(selected);\n  }, [selected]);\n\n  // eslint-disable-next-line no-console\n  console.log('check box cell', selected, checked, handleChange);\n  return (\n    <TableCell padding=\"checkbox\" key=\"checkbox\">\n      <Checkbox color=\"primary\" checked={checked} onChange={handleChange} />\n    </TableCell>\n  );\n}\n\nCheckboxCell.propTypes = {\n  selected: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TableCell from '@mui/material/TableCell';\nimport Chip from '@mui/material/Chip';\nimport Avatar from '@mui/material/Avatar';\n\nexport default function PersonalDetailsCell({ email, picture, name }) {\n  return (\n    <TableCell component=\"th\" scope=\"row\" sx={{ p: 1 }} key=\"personal-details\">\n      <Chip\n        avatar={(\n          <Avatar\n            alt={email}\n            src={picture}\n            sx={{ referrerPolicy: 'no-referrer' }}\n          />\n        )}\n        label={name}\n        sx={{ b: 1, maxWidth: 170 }}\n        color=\"primary\"\n        variant=\"outlined\"\n      />\n    </TableCell>\n  );\n}\n\nPersonalDetailsCell.propTypes = {\n  email: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TableCell from '@mui/material/TableCell';\nimport IconButton from '@mui/material/IconButton';\nimport ExpandCircleDownIcon from '@mui/icons-material/ExpandCircleDown';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\n\nexport default function ExpandStatusIconCell({ open, handleClick }) {\n  return (\n    <TableCell\n      align=\"center\"\n      style={{ paddingBottom: 0, paddingTop: 0 }}\n      colSpan={6}\n      onClick={handleClick}\n      key=\"expand-status\"\n    >\n      <IconButton aria-label=\"expand row\" size=\"small\">\n        {!open ? <ExpandCircleDownIcon /> : <ExpandLessIcon />}\n      </IconButton>\n    </TableCell>\n  );\n}\n\nExpandStatusIconCell.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Collapse from '@mui/material/Collapse';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\n\nimport StatusTable from './StatusTable';\nimport CheckboxCell from './CheckboxCell';\nimport PersonalDetailsCell from './PersonalDetailsCell';\nimport ExpandStatusIconCell from './ExpandStatusIconCell';\n\nexport default function ShareeRow({\n  name,\n  email,\n  picture,\n  invitation,\n  accept,\n  isSelected,\n  onCheckBoxClick,\n}) {\n  const [open, setOpen] = useState(false);\n  const handleClick = () => setOpen(!open);\n\n  return (\n    <>\n      <TableRow\n        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n        key={`${{ email }}details`}\n      >\n        <CheckboxCell selected={isSelected} handleChange={onCheckBoxClick} />\n        <PersonalDetailsCell email={email} picture={picture} name={name} />\n        <ExpandStatusIconCell open={open} handleClick={handleClick} />\n      </TableRow>\n      <TableRow key={`${{ email }}status`}>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography gutterBottom component=\"div\">\n                Email:\n                {' '}\n                {email}\n              </Typography>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Status\n              </Typography>\n              <StatusTable invitation={invitation} accept={accept} />\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\n\nShareeRow.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  invitation: PropTypes.string.isRequired,\n  accept: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onCheckBoxClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TableCell from '@mui/material/TableCell';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function SelectAllCheckboxCell({ numSelected, rowCount, onSelectAllClick }) {\n  return (\n    <TableCell padding=\"checkbox\" key=\"selectAll\">\n      <Checkbox\n        color=\"primary\"\n        indeterminate={numSelected > 0 && numSelected < rowCount}\n        checked={rowCount > 0 && numSelected === rowCount}\n        onChange={onSelectAllClick}\n      />\n    </TableCell>\n  );\n}\n\nSelectAllCheckboxCell.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Button from '@mui/material/Button';\n\nimport SelectAllCheckboxCell from './SelectAllCheckboxCell';\n\nexport default function TableHeader({\n  numSelected, rowCount, onSelectAllClick, handleUnshareClick, unsharing,\n}) {\n  return (\n    <TableHead>\n      <TableRow>\n        <SelectAllCheckboxCell\n          numSelected={numSelected}\n          rowCount={rowCount}\n          onSelectAllClick={onSelectAllClick}\n          key=\"selectAll\"\n        />\n        <TableCell\n          align=\"center\"\n          sx={{ fontWeight: 'bold', fontSize: '1em' }}\n          key=\"message\"\n        >\n          {numSelected === 0 ? 'Shared With' : `${numSelected} selected`}\n        </TableCell>\n        <TableCell align=\"center\" sx={{ fontWeight: 'bold' }} key=\"action\">\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            sx={{ textTransform: 'none' }}\n            disabled={(numSelected === 0) || (unsharing === true)}\n            onClick={handleUnshareClick}\n          >\n            Unshare\n          </Button>\n        </TableCell>\n      </TableRow>\n    </TableHead>\n  );\n}\n\nTableHeader.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  handleUnshareClick: PropTypes.func.isRequired,\n  unsharing: PropTypes.bool.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TablePagination from '@mui/material/TablePagination';\nimport Paper from '@mui/material/Paper';\n\nimport ShareeRow from './ShareRow';\nimport TableHeader from './TableHeader';\n\nexport default function ExistingShares({ shareData, onUnShare, unsharing }) {\n  const rowsPerPage = 5;\n  const [page, setPage] = useState(0);\n  const [numSelected, setNumSelected] = useState(0);\n  const [selected, setSelected] = useState(Array(shareData.length).fill(0));\n\n  // eslint-disable-next-line no-console\n  console.log('share data', shareData, selected);\n\n  useEffect(() => {\n    setSelected(Array(shareData.length).fill(0));\n    setNumSelected(0);\n  }, [shareData]);\n\n  const handleCheckBoxClick = (ind) => {\n    console.log('handle click index', ind);\n    if (selected[ind] === 1) {\n      setNumSelected((prevSelected) => prevSelected - 1);\n    } else {\n      setNumSelected((prevSelected) => prevSelected + 1);\n    }\n\n    setSelected([\n      ...selected.slice(0, ind),\n      1 - selected[ind],\n      ...selected.slice(ind + 1),\n    ]);\n  };\n\n  const handleSelectAllClick = () => {\n    if (selected.length > 0 && numSelected < selected.length) {\n      setSelected(Array(shareData.length).fill(1));\n      setNumSelected(selected.length);\n    } else {\n      setSelected(Array(shareData.length).fill(0));\n      setNumSelected(0);\n    }\n  };\n\n  const handleUnshare = () => {\n    const unshareEmails = [];\n    for (let i = 0; i < selected.length; i += 1) {\n      if (selected[i] === 1) {\n        unshareEmails.push(shareData[i].email);\n      }\n    }\n    console.log('Unshare emails', unshareEmails);\n    onUnShare(unshareEmails);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    console.log(page, newPage);\n    setPage(newPage);\n  };\n\n  return (shareData.length > 0) ? (\n    <>\n      <TableContainer component={Paper}>\n        <Table stickyHeader aria-label=\"memory share table\">\n          <TableHeader\n            numSelected={numSelected}\n            rowCount={shareData.length}\n            onSelectAllClick={handleSelectAllClick}\n            handleUnshareClick={handleUnshare}\n            unsharing={unsharing}\n          />\n          <TableBody>\n            {shareData\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((sharee, index) => (\n                <ShareeRow\n                  key={sharee.email}\n                  email={sharee.email}\n                  name={sharee.name}\n                  picture={sharee.picture}\n                  invitation={sharee.status.invitation}\n                  accept={sharee.status.accept}\n                  isSelected={selected[page * rowsPerPage + index] === 1}\n                  onCheckBoxClick={() => handleCheckBoxClick(page * rowsPerPage + index)}\n                />\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[rowsPerPage]}\n        component=\"div\"\n        count={selected.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n      />\n    </>\n\n  ) : null;\n}\n\nExistingShares.propTypes = {\n  shareData: PropTypes.arrayOf(PropTypes.shape(\n    {\n      email: PropTypes.string.isRequired,\n      status: PropTypes.shape({\n        accept: PropTypes.string.isRequired,\n        invitation: PropTypes.string.isRequired,\n      }).isRequired,\n      name: PropTypes.string,\n      picture: PropTypes.string,\n    },\n  )).isRequired,\n  onUnShare: PropTypes.func.isRequired,\n  unsharing: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function CloseButton({ handleClose }) {\n  return (\n    <IconButton\n      aria-label=\"close\"\n      onClick={handleClose}\n      sx={{\n        position: 'absolute',\n        right: 8,\n        top: 8,\n        color: (theme) => theme.palette.grey[500],\n      }}\n    >\n      <CloseIcon />\n    </IconButton>\n  );\n}\n\nCloseButton.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n};\n","import ActionIcon from 'components/ActionIcon';\nimport ShareIcon from '@mui/icons-material/Share';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@mui/material/Typography';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Divider from '@mui/material/Divider';\nimport useEmail from 'hooks/email';\n\nimport NewShares from 'components/NewShares';\nimport ExistingShares from 'components/ExistingShares';\nimport CloseButton from 'components/CloseButton';\nimport api from '../Api';\n\nexport function ShareMemoryIcon() {\n  return <ActionIcon icon={<ShareIcon />} label=\"Share\" />;\n}\n\nexport function ShareComponent({\n  confirm, memoryShareCallback, memoryUnShareCallback, closeCallback, memoryID,\n}) {\n  const [shareTitle, setShareTitle] = useState('Share Memory');\n  const [\n    items,\n    value,\n    error,\n    setItems,\n    handleKeyDown,\n    handleChange,\n    handleDelete,\n    handlePaste,\n  ] = useEmail();\n\n  const [shareData, setShareData] = useState(null);\n  const resetShareTitle = () => setShareTitle('Share Memory');\n  const [sharing, setSharing] = useState(false);\n  const [unsharing, setUnSharing] = useState(false);\n\n  useEffect(async () => {\n    try {\n      const data = await api.getShareData(memoryID);\n      setShareData(data);\n    } catch (err) {\n      /* eslint-disable no-console */\n      console.log(err);\n    }\n  }, []);\n\n  const [open, setOpen] = useState(confirm);\n  useEffect(() => setOpen(confirm), [confirm]);\n\n  const handleClose = () => {\n    setOpen(false);\n    closeCallback();\n  };\n\n  const handleSubmit = async () => {\n    //  callback(items);\n    try {\n      /* eslint-disable no-console */\n      console.log('share memory', memoryID, items);\n      setSharing(true);\n      setShareTitle('Sharing Memory. Please wait...');\n      const shareResults = await api.shareMemory(memoryID, items);\n      console.log(shareResults);\n      memoryShareCallback(shareResults);\n      const resultsJSON = await shareResults.json();\n      setItems([]);\n      setShareData(resultsJSON);\n      resetShareTitle();\n      setSharing(false);\n    } catch (err) {\n      /* eslint-disable no-console */\n      console.log(err);\n      resetShareTitle();\n      setSharing(false);\n    }\n  };\n\n  const handleUnshare = async (emails) => {\n    //  callback(items);\n    try {\n      /* eslint-disable no-console */\n      console.log('share memory', memoryID, emails);\n      setUnSharing(true);\n      setShareTitle('Unsharing Memory. Please wait...');\n      const shareResults = await api.revokeShare(memoryID, emails);\n      console.log(shareResults);\n      memoryUnShareCallback(shareResults);\n      const resultsJSON = await shareResults.json();\n      setShareData(resultsJSON);\n      resetShareTitle();\n      setUnSharing(false);\n    } catch (err) {\n      /* eslint-disable no-console */\n      console.log(err);\n      resetShareTitle();\n      setUnSharing(false);\n    }\n  };\n\n  const existingShares = (shareData !== null) ? (\n    <>\n      <Typography sx={{ m: 2, fontSize: '1.2rem' }}>Existing Shares</Typography>\n      <ExistingShares shareData={shareData} onUnShare={handleUnshare} unsharing={unsharing} />\n    </>\n  ) : null;\n\n  console.log(shareData);\n\n  return (\n    <Dialog\n      open={open}\n      sx={{\n        '& .MuiPaper-root': { m: 0 },\n        backgroundColor: 'faded.black',\n      }}\n    >\n      <DialogTitle>\n        {shareTitle}\n        <CloseButton handleClose={handleClose} />\n      </DialogTitle>\n      <Divider />\n      <Typography sx={{ m: 2 }}>\n        New Shares (\n        {items.length}\n        {' '}\n        added)\n      </Typography>\n      <NewShares\n        items={items}\n        value={value}\n        error={error}\n        handleKeyDown={handleKeyDown}\n        handleChange={handleChange}\n        handleDelete={handleDelete}\n        handlePaste={handlePaste}\n        handleClear={() => setItems([])}\n        handleSubmit={handleSubmit}\n        sharing={sharing}\n      />\n      <Divider />\n      {existingShares}\n    </Dialog>\n  );\n}\n\nShareComponent.propTypes = {\n  confirm: PropTypes.bool.isRequired,\n  memoryShareCallback: PropTypes.func.isRequired,\n  memoryUnShareCallback: PropTypes.func.isRequired,\n  closeCallback: PropTypes.func.isRequired,\n  memoryID: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Confirm from 'components/confirmation';\nimport UpdateMemoryIcon from 'components/UpdateMemoryIcon';\nimport { ShareComponent, ShareMemoryIcon } from './Share';\nimport { ConfirmDelete, DeleteMemoryIcon } from './Delete';\n\nfunction ConfirmAction({\n  title, message, callback, open, closeCallback,\n}) {\n  const [confirm, setConfirm] = useState(open);\n  useEffect(() => setConfirm(open), [open]);\n\n  return (\n    <Confirm\n      title={title}\n      confirm={confirm}\n      handleCallback={callback}\n      handleCloseCallback={() => {\n        setConfirm(false);\n        closeCallback();\n      }}\n      message={message}\n    />\n  );\n}\n\nexport default function MemoryActions({\n  snackBar, handleDelete, memoryShareCallback, memoryUnShareCallback, handleEditClick, memoryID,\n}) {\n  let actionComponent;\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [action, setAction] = useState(null);\n\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  const closeConfirm = () => setAction(null);\n\n  if (action === 'delete') {\n    actionComponent = (\n      <ConfirmDelete open callback={handleDelete} closeCallback={closeConfirm} />\n    );\n  }\n\n  if (action === 'share') {\n    actionComponent = (\n      <ShareComponent\n        confirm\n        memoryShareCallback={memoryShareCallback}\n        memoryUnShareCallback={memoryUnShareCallback}\n        closeCallback={() => setAction(null)}\n        memoryID={memoryID}\n      />\n    );\n  }\n\n  const handleDeleteClick = () => {\n    setAction('delete');\n    handleClose();\n  };\n\n  const handleShareClick = () => {\n    setAction('share');\n    handleClose();\n  };\n\n  const handleEdit = () => {\n    handleEditClick();\n    handleClose();\n  };\n\n  return (\n    <div>\n      <MoreVertIcon onClick={handleClick} />\n      <Menu\n        id=\"memory-actions\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n        sx={{ borderRadius: '10px' }}\n      >\n        <MenuItem onClick={handleEdit}><UpdateMemoryIcon /></MenuItem>\n        <MenuItem onClick={handleShareClick}><ShareMemoryIcon /></MenuItem>\n        <MenuItem onClick={handleDeleteClick}><DeleteMemoryIcon /></MenuItem>\n      </Menu>\n      {actionComponent}\n      {snackBar}\n    </div>\n  );\n}\n\nMemoryActions.propTypes = {\n  snackBar: PropTypes.node.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  memoryShareCallback: PropTypes.func.isRequired,\n  memoryUnShareCallback: PropTypes.func.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n  memoryID: PropTypes.string.isRequired,\n};\n\nConfirmAction.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  callback: PropTypes.func.isRequired,\n  closeCallback: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Navigate } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport Box from '@mui/material/Box';\n//  import MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Divider from '@mui/material/Divider';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport SimpleSnackbar from 'components/simple_snackbar';\nimport deleteMemory from './Delete';\nimport MemoryActions from './Actions';\n\nexport default function MemoryContentStructure({\n  header, subheader, photoLayout, storyLayout, bucket, memoryID, authURL, handleEditClick, memType,\n}) {\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  const [redir, setRedir] = useState(null);\n  let className;\n  const theme = useTheme();\n  const lgdown = useMediaQuery(theme.breakpoints.down('lg'));\n  if (lgdown) className = '';\n  else className = 'vertical-scroll';\n\n  const handleSnackMessage = (msg, error) => {\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const memoryDeleteCallback = (open) => {\n    if (open.status === 'ok') {\n      handleSnackMessage('Memory deleted successfully', false);\n    } else {\n      handleSnackMessage('Error while deleting memory', true);\n    }\n    setSnack(true);\n    setRedir(true);\n  };\n\n  const memoryShareCallback = (results) => {\n    console.log(results);\n    if (results.ok === true) {\n      handleSnackMessage('Memory shared successfully', false);\n    } else {\n      handleSnackMessage('Error while sharing memory', true);\n    }\n    setSnack(true);\n  };\n\n  const memoryUnShareCallback = (results) => {\n    console.log(results);\n    if (results.ok === true) {\n      handleSnackMessage('Memory unshared successfully', false);\n    } else {\n      handleSnackMessage('Error while unsharing memory', true);\n    }\n    setSnack(true);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const snackBar = (\n    <SimpleSnackbar\n      snackBarOpen={snack}\n      message={snackMessage}\n      onClose={handleSnackBarClose}\n      error={snackError}\n    />\n  );\n\n  const actions = (memType === 'own') ? (\n    <MemoryActions\n      snackBar={snackBar}\n      handleDelete={() => {\n        deleteMemory(bucket, authURL, memoryID, memoryDeleteCallback);\n      }}\n      memoryID={memoryID}\n      memoryShareCallback={memoryShareCallback}\n      memoryUnShareCallback={memoryUnShareCallback}\n      handleEditClick={handleEditClick}\n    />\n  ) : null;\n\n  return (snack === false && redir === true) ? (\n    <Navigate to=\"/memories\" replace />\n  ) : (\n    <Card\n      sx={{\n        boxShadow: 0,\n        bgcolor: 'button.main',\n        p: 1,\n      }}\n    >\n      <CardHeader\n        title={header}\n        subheader={subheader}\n        action={actions}\n      />\n      <Divider />\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-start',\n          flexDirection: {\n            lg: 'row',\n            xs: 'column',\n          },\n          height: {\n            lg: '72vh',\n          },\n          my: 1,\n        }}\n      >\n        <Box\n          sx={{\n            width: {\n              lg: '70%',\n              xs: '100%',\n            },\n            overflowY: 'scroll',\n            borderRadius: 5,\n          }}\n          className={className}\n        >\n          {photoLayout}\n        </Box>\n        <Box\n          sx={{\n            width: { lg: '30%', sx: '100%' },\n            overflowY: 'scroll',\n            mt: {\n              lg: 0,\n              xs: 2,\n            },\n            p: {\n              lg: 1,\n            },\n            px: 1,\n          }}\n          className={className}\n        >\n          {storyLayout}\n        </Box>\n      </Box>\n    </Card>\n  );\n}\n\nMemoryContentStructure.propTypes = {\n  header: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  subheader: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  photoLayout: PropTypes.element.isRequired,\n  storyLayout: PropTypes.element.isRequired,\n  memoryID: PropTypes.string.isRequired,\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n  memType: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SwipeableViews from 'react-swipeable-views';\nimport Box from '@mui/material/Box';\nimport { autoPlay, virtualize, bindKeyboard } from 'react-swipeable-views-utils';\n\nconst EnhancedSwipeableViews = bindKeyboard(autoPlay(virtualize(SwipeableViews)));\n\nfunction mod(count, total) {\n  const modulus = count % total;\n  if (modulus < 0) {\n    return modulus + total;\n  }\n  return modulus;\n}\n\nexport default function MemoryImageSlide({\n  ind, images, handleNext, handleStepChange,\n}) {\n  const [activeStep, setActiveStep] = useState(ind);\n  const [loadedImages, setLoadedImages] = useState(0);\n  const [display, setDisplay] = useState(null);\n\n  useEffect(() => {\n    setActiveStep(ind);\n  }, [ind]);\n\n  useEffect(() => {\n    if (loadedImages < images.length) {\n      setDisplay('none');\n    } else {\n      setDisplay('flex');\n    }\n  }, [loadedImages]);\n\n  const handleImageLoad = () => setLoadedImages((prevLoaded) => prevLoaded + 1);\n\n  const slideRenderer = (props) => {\n    /* eslint-disable  react/prop-types */\n    const { index, key } = props;\n    const virtNum = mod(index, images.length);\n    const srcSetList = images[virtNum].images ? (\n      images[virtNum].images.map(({ src, width }) => `${src} ${width}w`)\n    ) : [];\n    const srcSet = srcSetList.join(',');\n    const style = {\n      display: 'block',\n      boxSizing: 'content-box',\n      cursor: 'pointer',\n      objectFit: 'contain',\n      height: '100vh',\n    };\n\n    return (\n      <Box\n        component=\"img\"\n        onLoad={handleImageLoad}\n        sx={{\n          display: { display },\n          justifyContents: 'center',\n          width: '100%',\n          bgcolor: '#1c1c1c',\n        }}\n        src={images[virtNum].src}\n        srcSet={srcSet}\n        style={style}\n        alt={images[virtNum].src}\n        key={key}\n      />\n    );\n  };\n\n  return (\n    <EnhancedSwipeableViews\n      index={activeStep}\n      onChangeIndex={handleStepChange}\n      enableMouseEvents\n      animateTransitions\n      interval={10000}\n      onClick={handleNext}\n      style={{ backgroundColor: 'muted.main' }}\n      slideRenderer={slideRenderer}\n    />\n  );\n}\n\nMemoryImageSlide.defaultProps = {\n  ind: 0,\n};\n\nMemoryImageSlide.propTypes = {\n  ind: PropTypes.number,\n  handleNext: PropTypes.func.isRequired,\n  handleStepChange: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport CardHeader from '@mui/material/CardHeader';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport IconButton from '@mui/material/IconButton';\n\nimport RemovePhotoIcon from 'components/RemovePhotoIcon';\nimport MemoryImageSlide from 'components/MemoryImageSlide';\n\nfunction NextPic({ handleClick }) {\n  return (\n    <IconButton\n      edge=\"start\"\n      color=\"primary\"\n      aria-label=\"close\"\n      onClick={handleClick}\n      sx={{\n        position: 'absolute', top: '50%', right: 0, transform: 'translate(0%, -50%)',\n      }}\n    >\n      <KeyboardArrowRight sx={{ color: 'button.main', fontSize: '4.5rem' }} />\n    </IconButton>\n  );\n}\n\nfunction PreviousPic({ handleClick }) {\n  return (\n    <IconButton\n      edge=\"start\"\n      color=\"primary\"\n      aria-label=\"close\"\n      onClick={handleClick}\n      sx={{\n        position: 'absolute', top: '50%', left: 0, transform: 'translate(0%, -50%)',\n      }}\n    >\n      <KeyboardArrowLeft sx={{ color: 'button.main', fontSize: '4.5rem' }} />\n    </IconButton>\n  );\n}\n\nexport default function MemoryCarousel({\n  open, title, date, images, index, handleNext, handleBack, handleClose, handleChange,\n}) {\n  return (\n    <Dialog\n      open={open}\n      fullScreen\n    >\n      <MemoryImageSlide\n        images={images}\n        ind={index}\n        handleNext={handleNext}\n        handleStepChange={handleChange}\n      />\n      <CardHeader\n        title={title}\n        subheader={date}\n        sx={{\n          position: 'absolute',\n          top: 10,\n          left: 10,\n          bgcolor: 'button.main',\n          borderRadius: 3,\n          padding: 1,\n        }}\n      />\n      <PreviousPic handleClick={handleBack} />\n      <NextPic handleClick={handleNext} />\n      <RemovePhotoIcon size=\"large\" handleClick={handleClose} />\n    </Dialog>\n  );\n}\n\nNextPic.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nPreviousPic.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nMemoryCarousel.defaultProps = {\n  index: 0,\n};\n\nMemoryCarousel.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport useTitle from '../../hooks/title';\n\nexport default function MemoryTitle({ editable, text, handleTitleUpdate }) {\n  const [title, setTitle, handleTitleChange] = useTitle(text);\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n\n  useEffect(() => {\n    setEdit(editable);\n    setTitle(text);\n    setStartEdit(false);\n  }, [editable]);\n\n  if (!edit && !startEdit) {\n    return <Typography variant=\"h6\">{title}</Typography>;\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'center' }} spacing={2}>\n        <Typography variant=\"h6\">{title}</Typography>\n        <EditIcon fontSize=\"medium\" onClick={() => setStartEdit(true)} />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'flex-end', justifyContent: 'flex-start' }} spacing={2}>\n        <TextField\n          id=\"standard-basic\"\n          size=\"small\"\n          label=\"Title\"\n          onChange={handleTitleChange}\n          variant=\"standard\"\n          defaultValue={title}\n          sx={{ maxWidth: '200px' }}\n        />\n        <DoneTwoToneIcon\n          fontSize=\"medium\"\n          onClick={() => {\n            handleTitleUpdate(title);\n            setStartEdit(false);\n          }}\n        />\n        <ClearIcon fontSize=\"medium\" onClick={() => { setTitle(text); setStartEdit(false); }} />\n      </Stack>\n    );\n  }\n}\n\nMemoryTitle.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  handleTitleUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n\nimport useDate from '../../hooks/date';\n\nexport default function MemoryDate({ editable, prevDate, handleDateUpdate }) {\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n  const [date, setDate, handleDateChange] = useDate(prevDate);\n\n  useEffect(() => {\n    setEdit(editable);\n    setDate(prevDate);\n    setStartEdit(false);\n  }, [editable, prevDate]);\n\n  if (!edit && !startEdit) {\n    return <Typography>{date}</Typography>;\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'center' }} spacing={2}>\n        <Typography>{date}</Typography>\n        <EditIcon fontSize=\"medium\" onClick={() => setStartEdit(true)} />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'flex-end', justifyContent: 'flex-start', mt: 3 }} spacing={2}>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <DatePicker\n            label=\"Memory Date\"\n            value={date}\n            onChange={handleDateChange}\n            placeholder=\"dd/MM/yyyy\"\n            inputFormat=\"dd/MM/yyyy\"\n            maxDate={new Date()}\n            renderInput={(props) => (\n              <TextField\n                readOnly\n                required\n          // eslint-disable-next-line react/jsx-props-no-spreading\n                {...props}\n              />\n            )}\n          />\n        </LocalizationProvider>\n        <DoneTwoToneIcon\n          fontSize=\"medium\"\n          onClick={() => {\n            handleDateUpdate(date);\n            setStartEdit(false);\n          }}\n        />\n        <ClearIcon fontSize=\"medium\" onClick={() => { setDate(prevDate); setStartEdit(false); }} />\n      </Stack>\n    );\n  }\n}\n\nMemoryDate.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  prevDate: PropTypes.string.isRequired,\n  handleDateUpdate: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Box from '@mui/material/Box';\nimport useStory from '../../hooks/story';\nimport './memory.css';\n\nexport default function MemoryStory({ editable, prevStory, handleStoryUpdate }) {\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n  const [story, setStory, handleStoryChange] = useStory(prevStory);\n  const storyRef = useRef();\n\n  useEffect(() => {\n    setEdit(editable);\n    setStory(prevStory);\n    setStartEdit(false);\n  }, [editable, prevStory]);\n\n  if (!edit && !startEdit) {\n    return (\n      <Typography style={{ whiteSpace: 'pre-wrap' }}>{story}</Typography>\n    );\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"column\" spacing={2}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'muted.main' }}>Edit Story</Typography>\n          <EditIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              setStartEdit(true);\n            }}\n          />\n        </Stack>\n        <Divider sx={{ width: 1 }} />\n        <Typography style={{ whiteSpace: 'pre-wrap' }}>{story}</Typography>\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"column\" spacing={2}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'muted.main' }}>Editing Story</Typography>\n          <DoneTwoToneIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              handleStoryUpdate(story);\n              setStartEdit(false);\n            }}\n          />\n          <ClearIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              setStory(prevStory);\n              setStartEdit(false);\n            }}\n          />\n        </Stack>\n        <Divider sx={{ width: 1 }} />\n        <Box\n          sx={{\n            p: 2,\n            m: 1,\n            my: 2,\n            border: 1,\n            borderColor: 'primary.main',\n            bgcolor: 'input.background',\n            minHeight: '70vh',\n            borderRadius: 5,\n            width: '90%',\n          }}\n          onClick={() => storyRef.current.focus()}\n        >\n          <TextareaAutosize\n            autoFocus\n            aria-label=\"minimum height\"\n            placeholder=\"Tell your story...\"\n            value={story}\n            onChange={handleStoryChange}\n            style={{\n              width: '100%',\n              minHeight: '184px',\n              maxHeight: '70vh',\n              boxSizing: 'border-box',\n              paddingTop: '5px',\n              border: 0,\n              overflow: 'auto',\n              outline: 'none',\n              resize: 'vertical',\n              borderRadius: 5,\n              '&:focus': {\n                border: 0,\n              },\n            }}\n            ref={storyRef}\n          />\n\n        </Box>\n      </Stack>\n    );\n  }\n}\n\nMemoryStory.propTypes = {\n  prevStory: PropTypes.string.isRequired,\n  editable: PropTypes.bool.isRequired,\n  handleStoryUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport PhotoAlbum from 'react-photo-album';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport Button from '@mui/material/Button';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { alpha } from '@mui/material/styles';\n\nfunction OptionsButton({\n  children, onClick, name, updateOp,\n}) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: (updateOp === name) ? 'button.main' : 'muted.main',\n        borderRadius: 5,\n        backgroundColor: (updateOp === name) ? 'primary.main' : 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: (updateOp === name) ? 'button.main' : 'muted.main',\n          backgroundColor: (updateOp === name) ? 'primary.main' : 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nfunction AddPhotos({ handleChange, onClick, updateOp }) {\n  return (\n    <OptionsButton onClick={onClick} name=\"add\" updateOp={updateOp}>\n      <input type=\"file\" hidden multiple accept=\"image/*\" onChange={handleChange} />\n      <AddPhotoIcon sx={{ fontSize: '1.5rem' }} />\n      Add\n    </OptionsButton>\n  );\n}\n\nfunction MemoryPhotoAlbum({ images, handlePhotoClick, renderPhoto }) {\n  const [arrangement, setArrangement] = useState(null);\n  useEffect(() => {\n    let twidth = 0;\n    let theight = 0;\n    images.forEach(({ height, width }) => {\n      if (height > width) theight += 1;\n      else twidth += 1;\n    });\n    if (twidth > theight) setArrangement('rows');\n    else setArrangement('columns');\n  }, [images]);\n\n  return renderPhoto ? (\n    <PhotoAlbum\n      layout={arrangement}\n      photos={images}\n      onClick={handlePhotoClick}\n      spacing={2}\n      renderPhoto={renderPhoto}\n    />\n  ) : (\n    <PhotoAlbum\n      layout={arrangement}\n      photos={images}\n      onClick={handlePhotoClick}\n      spacing={2}\n    />\n  );\n}\n\nexport default function MemoryImages({\n  editable, images, handlePhotoClick, handleThumbnailUpdate, deleteImage, addImage,\n}) {\n  const [edit, setEdit] = useState(editable);\n  const [updateOp, setUpdateOp] = useState(null);\n  const [thumbnail, setThumbnail] = useState(null);\n\n  const handleOpUpdate = (op) => {\n    if (updateOp === op) {\n      setUpdateOp(null);\n    } else {\n      setUpdateOp(op);\n    }\n  };\n\n  useEffect(() => {\n    setEdit(editable);\n    setUpdateOp(null);\n  }, [editable]);\n\n  const handleThumbnailChange = (name) => {\n    setThumbnail(name);\n    const thumbnailImage = images.find((image) => image.alt === name);\n    handleThumbnailUpdate(thumbnailImage);\n  };\n\n  const handleImageDelete = (name) => {\n    const deleted = images.find((image) => image.alt === name);\n    deleteImage(deleted);\n  };\n\n  const renderPhotosWithDeleteIcon = ({\n    layout,\n    imageProps: { alt, style, ...restImageProps },\n  }) => (\n    <Button component=\"div\">\n      <img\n        alt={alt}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        style={{ ...style, width: layout.width, padding: 0 }}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        {...restImageProps}\n      />\n      <IconButton\n        size=\"medium\"\n        sx={{\n          color: 'black',\n          bgcolor: alpha('#fff', 0.4),\n          position: 'absolute',\n          top: 10,\n          right: 12,\n        }}\n        onClick={() => handleImageDelete(alt)}\n      >\n        <CloseIcon size=\"medium\" />\n      </IconButton>\n    </Button>\n  );\n\n  const renderPhotosWithRadioButton = ({\n    layout,\n    imageProps: { alt, style, ...restImageProps },\n  }) => (\n    <Button component=\"div\">\n      <img\n        alt={alt}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        style={{ ...style, width: layout.width, padding: 0 }}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        {...restImageProps}\n      />\n      <FormControlLabel\n        control={<Radio />}\n        label=\"\"\n        checked={alt === thumbnail}\n        onChange={() => handleThumbnailChange(alt)}\n        sx={{\n          pr: 1,\n          position: 'absolute',\n          bgcolor: alpha('#fff', 0.6),\n          color: 'black',\n          borderRadius: '0px 5px 5px 0px',\n          borderColor: 'secondary.main',\n          borderLeft: 0,\n          bottom: 20,\n          left: 15,\n        }}\n      />\n    </Button>\n  );\n\n  const OptionsRow = (\n    <Stack direction=\"row\" spacing={2}>\n      <AddPhotos handleChange={addImage} onClick={() => handleOpUpdate('add')} updateOp={updateOp} />\n      <OptionsButton onClick={() => handleOpUpdate('delete')} name=\"delete\" updateOp={updateOp}>\n        <DeleteIcon sx={{ fontSize: '1.5rem' }} />\n        Delete\n      </OptionsButton>\n      <OptionsButton onClick={() => handleOpUpdate('thumbnail')} name=\"thumbnail\" updateOp={updateOp}>Set Thumbnail</OptionsButton>\n    </Stack>\n  );\n\n  const updatePanel = (\n    <Stack direction=\"row\">\n      <Typography variant=\"h6\" color=\"muted.main\">\n        Images:\n        {images.length}\n      </Typography>\n    </Stack>\n  );\n\n  if (!edit) {\n    return (\n      <MemoryPhotoAlbum images={images} handlePhotoClick={handlePhotoClick} />\n    );\n  }\n\n  if (edit && updateOp === 'delete') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n          renderPhoto={renderPhotosWithDeleteIcon}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && updateOp === 'thumbnail') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n          renderPhoto={renderPhotosWithRadioButton}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && updateOp === 'add') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && !updateOp) {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum images={images} handlePhotoClick={handlePhotoClick} />\n      </Stack>\n    );\n  }\n}\n\nMemoryImages.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  handlePhotoClick: PropTypes.func.isRequired,\n  handleThumbnailUpdate: PropTypes.func.isRequired,\n  deleteImage: PropTypes.func.isRequired,\n  addImage: PropTypes.func.isRequired,\n};\n\nMemoryPhotoAlbum.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  handlePhotoClick: PropTypes.func.isRequired,\n  renderPhoto: PropTypes.func,\n};\n\nMemoryPhotoAlbum.defaultProps = {\n  renderPhoto: null,\n};\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  updateOp: PropTypes.string.isRequired,\n};\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Link from '@mui/material/Link';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Divider from '@mui/material/Divider';\nimport Box from '@mui/material/Box';\nimport SimpleSnackbar from 'components/simple_snackbar';\nimport MemoryCarousel from './MemoryCarousel';\nimport MemoryContentStructure from './ContentStructure';\nimport MemoryTitle from './MemoryTitle';\nimport MemoryDate from './MemoryDate';\nimport MemoryStory from './MemoryStory';\nimport MemoryImages from './MemoryImages';\nimport api from '../Api';\nimport './memory.css';\n\nfunction BackButton({ memType }) {\n  const to = `/#/memories/${memType}`;\n  if (memType !== 'preview') {\n    return (\n      <Stack\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        sx={{ backgroundColor: 'button.main', paddingX: 2, paddingY: 1 }}\n      >\n        <Link href={to} underline=\"none\">\n          <Button\n            variant=\"contained\"\n            component=\"label\"\n            sx={{\n              color: 'primary.main',\n              backgroundColor: 'button.main',\n              padding: '6px 8px',\n              boxShadow: 0,\n              '&:hover': {\n                backgroundColor: 'button.main',\n              },\n            }}\n          >\n            <ArrowBackIcon size=\"medium\" sx={{ paddingRight: 1 }} />\n            <Typography variant=\"body1\" color=\"muted.main\">Memories</Typography>\n          </Button>\n        </Link>\n      </Stack>\n    );\n  }\n  return null;\n}\n\nexport default function MemoryContent({\n  memType,\n  memTitle,\n  memDate,\n  memStory,\n  memImages,\n  bucket,\n  memoryID,\n  authURL,\n}) {\n  const [open, setOpen] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [title, setTitle] = useState(memTitle);\n  const [date, setDate] = useState(memDate);\n  const [story, setStory] = useState(memStory);\n  const [images, setImages] = useState(memImages);\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n\n  const [newImages, setNewImages] = useState([]);\n  const [newImagesCount, setNewImagesCount] = useState(null);\n  const [errorUploadImages, setErrorUploadImages] = useState([]);\n  const [addImageOpen, setAddImageOpen] = useState(false);\n  const [uploadImageProgress, setUploadImageProgress] = useState(null);\n  const [uploadImageStatus, setUploadImageStatus] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  const [httpError, setHTTPError] = useState(false);\n\n  const maxSteps = images.length;\n\n  useEffect(() => setTitle(memTitle), [memTitle]);\n  useEffect(() => setDate(memDate), [memDate]);\n  useEffect(() => setStory(memStory), [memStory]);\n  useEffect(() => setImages(memImages), [memImages]);\n\n  const handleSnackMessage = (msg, error) => {\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const handleHTTPError = (response, operation, callback) => {\n    if (response.status === 401) {\n      handleSnackMessage('You have been logged out. Please login to continue.', true);\n    } else if (response.status === 403) {\n      handleSnackMessage('You do not have permissions to do this operation.', true);\n    } else {\n      handleSnackMessage(`Unknown error occured while ${operation}`, true);\n    }\n    callback(response.status);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const httpErrorCallback = (status) => {\n    setSnack(true);\n    setHTTPError(status);\n  };\n\n  const UpdateDetails = async (item, value) => {\n    try {\n      const resp = await api.updateMemoryDetails(\n        bucket,\n        authURL,\n        memoryID,\n        item,\n        value,\n      );\n      if (resp.ok) {\n        handleSnackMessage(`Memory ${item} updated successfully`, false);\n      } else {\n        handleHTTPError(resp, `updating ${item}`, httpErrorCallback);\n      }\n      setSnack(true);\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const UpdateThumbnail = async (image) => {\n    try {\n      const resp = await api.updateMemoryImage(\n        bucket,\n        authURL,\n        memoryID,\n        'thumbnail',\n        image,\n      );\n      if (resp.ok) {\n        handleSnackMessage('Thumbnail updated successfully', false);\n        setSnack(true);\n      } else {\n        handleHTTPError(resp, 'updating thumbnail', httpErrorCallback);\n      }\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const deleteImage = async (image) => {\n    try {\n      let resp;\n      if (images.length > 1) {\n        resp = await api.updateMemoryImage(\n          bucket,\n          authURL,\n          memoryID,\n          'delete',\n          image,\n        );\n        if (resp.ok) {\n          handleSnackMessage('Memory image deleted successfully', false);\n          setImages(images.filter((item) => item.title !== image.title));\n        } else {\n          handleHTTPError(resp, 'deleting image', httpErrorCallback);\n        }\n      } else {\n        handleSnackMessage('Atleast 1 image is needed for memory. Unable to delete', true);\n      }\n      setSnack(true);\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const addImage = async (details) => {\n    try {\n      const resp = await api.updateMemoryImage(\n        bucket,\n        authURL,\n        memoryID,\n        'add',\n        details,\n      );\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const handleNewImages = async () => {\n    /* eslint-disable  no-await-in-loop, no-restricted-syntax */\n    for (const [index, img] of newImages.entries()) {\n      const [det, file, src] = img;\n      const putURL = await addImage(det).then((response) => {\n        if (response.ok) {\n          return response.text();\n        }\n        handleHTTPError(response, 'adding image', httpErrorCallback);\n        return '';\n      });\n      const photo = {\n        key: `memories/${memoryID}/images/${det.name}`,\n        src,\n        alt: det.name,\n        title: det.name,\n        width: det.width,\n        height: det.height,\n        images: [],\n      };\n      const uploadResp = await fetch(putURL, { body: file, method: 'PUT' });\n      if (uploadResp.ok) {\n        setUploadImageProgress(`Images uploaded: ${index + 1} / ${newImagesCount} `);\n        setImages((pics) => pics.concat([photo]));\n      } else {\n        setUploadImageStatus('Error while uploading memory image');\n        setErrorUploadImages((errImgs) => errImgs.concat([det.name]));\n        handleHTTPError(uploadResp, 'deleting image', httpErrorCallback);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    if (newImages.length > 0) {\n      setAddImageOpen(true);\n      setUploadImageProgress('Preparing images for upload....');\n    }\n    if (newImages.length === newImagesCount) {\n      await handleNewImages();\n      if (errorUploadImages.length > 0) {\n        setUploadImageStatus(`Error while uploading ${errorUploadImages.length} images`);\n      } else {\n        setUploadImageStatus(`${newImages.length} image(s) uploaded successfully`);\n      }\n      setErrorUploadImages([]);\n      setNewImagesCount(null);\n      setNewImages([]);\n      setTimeout(() => {\n        setAddImageOpen(false);\n        setUploadImageStatus(null);\n        setUploadImageProgress(null);\n      }, 3000);\n    }\n  }, [newImages]);\n\n  const handleImageAdd = async (event) => {\n    if (event.target.files) {\n      const files = Array.from(event.target.files);\n      setNewImagesCount(files.length);\n      if (images.length + files.length <= 15) {\n        files.forEach((file) => {\n          const image = new Image();\n          image.onload = async (e) => {\n            const height = e.target.naturalHeight;\n            const width = e.target.naturalWidth;\n            const size = file.size / (1024 * 1024);\n            const { name } = file;\n            const resImages = [500, 1000, 1500].map((resHeight) => ({\n              height: resHeight, width: Math.ceil((resHeight * width) / height),\n            }));\n            const creationDate = Date.now();\n            const newName = `${creationDate}-${name}`;\n            const imageDetails = [{\n              name: newName, size, height, width, images: resImages,\n            }, file, e.target.src];\n            setNewImages((pics) => pics.concat([imageDetails]));\n          };\n          image.src = URL.createObjectURL(file);\n        });\n        files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n      } else {\n        handleSnackMessage(`Unable to add ${files.length} images. Maximum images allowed per memory is 15`, true);\n        setSnack(true);\n      }\n    }\n  };\n\n  const updateTitle = (value) => {\n    const resp = UpdateDetails('title', value);\n    if (resp) {\n      setTitle(value);\n    }\n  };\n\n  const updateDate = (value) => {\n    const resp = UpdateDetails('date', value);\n    if (resp) {\n      setDate(value);\n    }\n  };\n\n  const updateStory = (value) => {\n    const resp = UpdateDetails('story', value);\n    if (resp) {\n      setStory(value);\n    }\n  };\n\n  const handleClose = () => setOpen(false);\n\n  const handleActiveIndexChange = (step) => setActiveIndex(step);\n\n  const handleBack = () => {\n    setActiveIndex(\n      (prevActiveStep) => (prevActiveStep - 1 + maxSteps) % maxSteps,\n    );\n  };\n\n  const handleNext = () => {\n    setActiveIndex((prevActiveStep) => (prevActiveStep + 1) % maxSteps);\n  };\n\n  const handlePhotoClick = (photo, event, index) => {\n    setOpen(true);\n    setActiveIndex(index);\n  };\n\n  const handleEditClick = () => setEdit(true);\n\n  const memoryTitle = (\n    <MemoryTitle\n      editable={edit}\n      text={title}\n      handleTitleUpdate={updateTitle}\n    />\n  );\n\n  const memoryDate = (\n    <MemoryDate editable={edit} prevDate={date} handleDateUpdate={updateDate} />\n  );\n\n  const storyLayout = (\n    <MemoryStory\n      editable={edit}\n      prevStory={story}\n      handleStoryUpdate={updateStory}\n    />\n  );\n\n  const photoLayout = (\n    <MemoryImages\n      editable={edit}\n      images={images}\n      handlePhotoClick={handlePhotoClick}\n      handleThumbnailUpdate={UpdateThumbnail}\n      deleteImage={deleteImage}\n      addImage={handleImageAdd}\n    />\n  );\n\n  const updateDone = (\n    <Button\n      variant=\"contained\"\n      component=\"label\"\n      onClick={() => setEdit(false)}\n      sx={{\n        color: 'primary.main',\n        borderRadius: 5,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n      }}\n    >\n      <DoneIcon size=\"medium\" sx={{ paddingRight: 1 }} />\n      <Typography variant=\"body1\" color=\"muted.main\">Edit</Typography>\n    </Button>\n  );\n\n  if (httpError === 401 && snack === false) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return (\n    <>\n      {edit ? (\n        <Stack\n          direction=\"row\"\n          justifyContent=\"flex-start\"\n          sx={{ backgroundColor: 'button.main', paddingX: 2, paddingY: 1 }}\n        >\n          {updateDone}\n        </Stack>\n      ) : <BackButton memType={memType} /> }\n      <Box\n        component=\"div\"\n        sx={{\n          backgroundColor: 'button.main',\n          margin: edit ? '5px' : 0,\n        }}\n      >\n        <MemoryContentStructure\n          header={memoryTitle}\n          subheader={memoryDate}\n          photoLayout={photoLayout}\n          storyLayout={storyLayout}\n          memoryID={memoryID}\n          bucket={bucket}\n          authURL={authURL}\n          handleEditClick={handleEditClick}\n          memType={memType}\n        />\n      </Box>\n      <MemoryCarousel\n        open={open}\n        title={title}\n        date={date}\n        images={images}\n        index={activeIndex}\n        handleNext={handleNext}\n        handleBack={handleBack}\n        handleClose={handleClose}\n        handleChange={handleActiveIndexChange}\n      />\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n        error={snackError}\n      />\n      <Dialog\n        open={addImageOpen}\n        fullWidth\n        sx={{\n          p: 1,\n        }}\n      >\n        <Card sx={{ maxWidth: 1, p: 1 }}>\n          <CardHeader title=\"Adding Images\" sx={{ textAlign: 'center' }} />\n          <Divider />\n          <CardContent>\n            <Typography variant=\"h6\" sx={{ color: 'muted.main' }}>{uploadImageProgress}</Typography>\n            <Stack justifyContent=\"center\" sx={{ py: 2 }}>\n              <Typography variant=\"h5\">{uploadImageStatus}</Typography>\n            </Stack>\n          </CardContent>\n        </Card>\n      </Dialog>\n\n    </>\n  );\n}\n\nMemoryContent.defaultProps = {\n  memTitle: 'Memory Title',\n  memDate: 'Memory Date',\n  memStory: 'Memory Text',\n};\n\nMemoryContent.propTypes = {\n  memType: PropTypes.string.isRequired,\n  memTitle: PropTypes.string,\n  memDate: PropTypes.string,\n  memStory: PropTypes.string,\n  memoryID: PropTypes.string.isRequired,\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n  memImages: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n};\n\nBackButton.propTypes = {\n  memType: PropTypes.string.isRequired,\n};\n"],"names":["RemovePhotoIcon","size","handleClick","sx","color","bgcolor","alpha","position","top","right","onClick","defaultProps","useDate","initialDate","useState","date","setDate","e","newDate","Date","formattedDate","toLocaleDateString","day","month","year","useStory","initialState","story","setStory","event","target","value","useTitle","initialValue","title","setTitle","useEffect","ActionIcon","icon","label","Box","alignItems","IconButton","Confirm","confirm","handleCallback","handleCloseCallback","message","open","setOpen","handleClose","Dialog","backgroundColor","DialogTitle","p","Typography","pb","Stack","spacing","direction","Button","variant","DeleteMemoryIcon","Delete","ConfirmDelete","callback","closeCallback","bucket","authURL","memoryID","memoryDeleteCallback","api","deleteResults","console","log","UpdateMemoryIcon","Edit","useEmail","items","setItems","setValue","error","setError","isInList","email","includes","isValid","err","test","isEmail","commonUtils","evt","key","preventDefault","val","trim","item","prevItems","filter","i","emails","clipboardData","getData","match","toBeAdded","EmailInput","handleKeyDown","handleChange","handleDelete","handlePaste","mb","TextField","id","placeholder","onKeyDown","onChange","onPaste","helperText","my","Grid","container","map","Chip","onDelete","margin","NewShares","handleClear","handleSubmit","sharing","disabled","length","StatusTable","invitation","accept","colorMap","pending","sent","failed","rejected","accepted","Table","TableHead","TableRow","TableCell","align","TableBody","CheckboxCell","selected","checked","setChecked","padding","Checkbox","PersonalDetailsCell","picture","name","component","scope","avatar","Avatar","alt","src","referrerPolicy","b","maxWidth","ExpandStatusIconCell","style","paddingBottom","paddingTop","colSpan","ExpandLess","ExpandCircleDown","ShareeRow","isSelected","onCheckBoxClick","border","Collapse","in","timeout","unmountOnExit","gutterBottom","SelectAllCheckboxCell","numSelected","rowCount","onSelectAllClick","indeterminate","TableHeader","handleUnshareClick","unsharing","fontWeight","fontSize","textTransform","ExistingShares","shareData","onUnShare","page","setPage","setNumSelected","Array","fill","setSelected","TableContainer","Paper","stickyHeader","unshareEmails","push","slice","sharee","index","status","ind","prevSelected","TablePagination","rowsPerPageOptions","count","rowsPerPage","onPageChange","newPage","CloseButton","theme","palette","grey","Close","ShareMemoryIcon","Share","ShareComponent","memoryShareCallback","memoryUnShareCallback","shareTitle","setShareTitle","setShareData","resetShareTitle","setSharing","setUnSharing","data","shareResults","json","resultsJSON","handleUnshare","existingShares","m","Divider","MemoryActions","actionComponent","snackBar","handleEditClick","anchorEl","setAnchorEl","action","setAction","Boolean","MoreVert","currentTarget","Menu","onClose","MenuListProps","borderRadius","MenuItem","MemoryContentStructure","className","header","subheader","photoLayout","storyLayout","memType","snack","setSnack","snackMessage","setSnackMessage","snackError","setSnackError","redir","setRedir","useTheme","useMediaQuery","breakpoints","down","handleSnackMessage","msg","snackBarOpen","actions","deleteMemory","results","ok","to","replace","Card","boxShadow","CardHeader","display","justifyContent","flexDirection","lg","xs","height","width","overflowY","mt","px","EnhancedSwipeableViews","bindKeyboard","autoPlay","virtualize","SwipeableViews","MemoryImageSlide","images","handleNext","handleStepChange","activeStep","setActiveStep","loadedImages","setLoadedImages","setDisplay","handleImageLoad","prevLoaded","onChangeIndex","enableMouseEvents","animateTransitions","interval","slideRenderer","props","virtNum","total","modulus","mod","srcSet","join","onLoad","justifyContents","boxSizing","cursor","objectFit","NextPic","edge","transform","KeyboardArrowRight","PreviousPic","left","KeyboardArrowLeft","MemoryCarousel","handleBack","fullScreen","MemoryTitle","editable","text","handleTitleUpdate","handleTitleChange","edit","setEdit","startEdit","setStartEdit","defaultValue","DoneTwoTone","Clear","MemoryDate","prevDate","handleDateUpdate","handleDateChange","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","inputFormat","maxDate","renderInput","readOnly","required","MemoryStory","prevStory","handleStoryUpdate","handleStoryChange","storyRef","useRef","whiteSpace","borderColor","minHeight","current","focus","TextareaAutosize","autoFocus","maxHeight","overflow","outline","resize","ref","OptionsButton","children","updateOp","AddPhotos","type","hidden","multiple","MemoryPhotoAlbum","handlePhotoClick","renderPhoto","arrangement","setArrangement","twidth","theight","forEach","layout","photos","MemoryImages","handleThumbnailUpdate","deleteImage","addImage","setUpdateOp","thumbnail","setThumbnail","handleOpUpdate","op","OptionsRow","updatePanel","imageProps","restImageProps","deleted","find","image","handleImageDelete","FormControlLabel","control","Radio","thumbnailImage","handleThumbnailChange","pr","borderLeft","bottom","BackButton","paddingX","paddingY","Link","href","underline","ArrowBack","paddingRight","MemoryContent","memTitle","memDate","memStory","memImages","activeIndex","setActiveIndex","setImages","newImages","setNewImages","newImagesCount","setNewImagesCount","errorUploadImages","setErrorUploadImages","addImageOpen","setAddImageOpen","uploadImageProgress","setUploadImageProgress","uploadImageStatus","setUploadImageStatus","httpError","setHTTPError","maxSteps","handleHTTPError","response","operation","httpErrorCallback","UpdateDetails","resp","UpdateThumbnail","details","handleNewImages","entries","img","det","file","then","putURL","photo","fetch","body","method","uploadResp","pics","concat","errImgs","setTimeout","handleImageAdd","files","from","Image","onload","naturalHeight","naturalWidth","resImages","resHeight","Math","ceil","creationDate","now","newName","imageDetails","URL","createObjectURL","revokeObjectURL","memoryTitle","memoryDate","updateDone","Done","prevActiveStep","step","fullWidth","textAlign","CardContent","py"],"sourceRoot":""}