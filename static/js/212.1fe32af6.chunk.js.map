{"version":3,"file":"static/js/212.1fe32af6.chunk.js","mappings":"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","sources":["api/collage.jsx","api/helpers.js","components/OptionsButton.jsx","components/AddPhotos.jsx","components/LoginButton.jsx","components/collage/dbutils.js","components/collage/helpers.js","components/profile.jsx","db.js","hocs/require-authentication.jsx","components/collage/node.jsx","components/collage/binaryTree.jsx","components/collage/treeUtils.js","hooks/collage/base.jsx","hooks/collage/dimensions.jsx","hooks/collage/options.jsx","hooks/collage/actions.jsx","hooks/collage/images.jsx","hooks/collage/tree.jsx","components/collage/Collage.jsx","components/collage/DownloadDialog.jsx","components/collage/SaveDialog.jsx","components/collage/SaveStatusDialog.jsx","components/collage/Header.jsx","components/collage/EmptyCollage.jsx","components/collage/View.jsx","components/collage/DesktopActionItem.jsx","components/collage/DesktopDrawer.jsx","components/collage/ControlsDivider.jsx","components/collage/DesktopActions.jsx","components/collage/ClearCollageDialog.jsx","components/collage/DesktopControls.jsx","components/collage/DesktopImageOptions.jsx","components/collage/PaddingControl.jsx","components/collage/RadiusControl.jsx","components/collage/ColorControl.jsx","components/collage/TextControl.jsx","components/collage/EditControl.jsx","components/collage/MobileActionItem.jsx","components/collage/MobileActions.jsx","components/collage/MainControls.jsx","components/collage/EditOptions.jsx","components/collage/ImageOptions.jsx","components/collage/MobileControls.jsx","pages/collage/Base.jsx","utils.jsx"],"sourcesContent":["import helpers from 'api/helpers';\n\nfunction newCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/new';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction saveCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/save';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\nasync function upload(url, body) {\n  try {\n    const params = { body, method: 'PUT' };\n    const resp = await fetch(url, params).then((response) => response);\n    return resp;\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction listCollages(nextToken) {\n  try {\n    const path = '/api/collage/list';\n    const params = { next_token: nextToken };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getThumbnail(collageId) {\n  try {\n    const path = '/api/collage/thumbnail';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getCollage(collageId) {\n  try {\n    const path = '/api/collage/get';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction deleteCollage(collageId) {\n  try {\n    const path = '/api/collage/delete';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.deleteMethod(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nexport default {\n  newCollage,\n  saveCollage,\n  upload,\n  listCollages,\n  getThumbnail,\n  getCollage,\n  deleteCollage,\n};\n","const get = async (url, path, params = {}) => {\n  let newUrl = `https://${url}${path}`;\n  const options = {\n    method: 'GET',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  newUrl += `?${new URLSearchParams(params).toString()}`;\n  const resp = await fetch(newUrl, options);\n  if (!resp.ok) {\n    if (resp.status === 401) {\n      document.cookie =\n        'userInfo=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return { status: 'unauthenticated' };\n    }\n    if (resp.status === 403) {\n      return { status: 'forbidden' };\n    }\n  }\n\n  return resp.json();\n};\n\nconst post = async (url, path, params, body) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'POST',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body,\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\n\nconst deleteMethod = async (url, path, params) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'DELETE',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\nexport default { get, post, deleteMethod };\n","import PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\n\nexport default function OptionsButton({ children, onClick, name }) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: 'muted.main',\n        borderRadius: 15,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: 'muted.main',\n          backgroundColor: 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  //  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport OptionsButton from 'components/OptionsButton';\nimport Typography from '@mui/material/Typography';\n\nexport default function AddPhotos({ handleChange }) {\n  return (\n    <OptionsButton name=\"add\">\n      <input\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={handleChange}\n      />\n      <AddPhotoIcon sx={{ fontSize: '2rem' }} />\n      <Typography sx={{ fontWeight: 'bold' }}>Add Images</Typography>\n    </OptionsButton>\n  );\n}\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import Button from '@mui/material/Button';\n// import Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\n\nexport default function LoginButton({ authURL, next }) {\n  const url =\n    next !== ''\n      ? `https://${authURL}/oauth2/authorize?next=${next}`\n      : `https://${authURL}/oauth2/authorize`;\n  return (\n    <a\n      href={url}\n      target=\"_self\"\n      style={{ textDecoration: 'none', color: 'white' }}\n    >\n      <Button\n        type=\"submit\"\n        variant=\"outlined\"\n        sx={{\n          borderRadius: '5px',\n          borderColor: 'white',\n          fontWeight: 'bold',\n          color: 'white',\n          '&:hover': {\n            color: 'white',\n            borderColor: 'white',\n            backgroundColor: alpha('#fff', 0.1),\n          },\n        }}\n      >\n        Login\n      </Button>\n    </a>\n  );\n}\n\nLoginButton.propTypes = {\n  authURL: PropTypes.string.isRequired,\n  next: PropTypes.string.isRequired,\n};\n","import db from 'db';\n\nasync function getData(tableName) {\n  const rows = await db.collageDB[tableName].toArray();\n  if (rows.length) return rows;\n  return [];\n}\n\nfunction clearData(tableName) {\n  return db.collageDB[tableName].clear();\n}\n\nasync function getCollageDetails() {\n  const rows = await getData('details');\n  console.log('in get collage details', rows);\n  if (rows.length) return rows[0];\n  return {};\n}\n\nasync function getCollageData() {\n  const details = await getCollageDetails();\n  const images = await getData('images');\n  return { details, images };\n}\n\nfunction clearCollageData() {\n  clearData('details');\n  clearData('images');\n}\n\nasync function save(data, tableName) {\n  return data.map((dt) => db.collageDB[tableName].put(dt));\n}\n\nexport default { getCollageData, clearCollageData, save };\n","function getClosest(arr, index1, index2, target) {\n  if (target - arr[index1] >= arr[index2] - target) return index2;\n  return index1;\n}\n\nfunction findClosest(arr, target) {\n  const n = arr.length;\n\n  if (target <= arr[0]) return 0;\n  if (target >= arr[n - 1]) return n - 1;\n\n  let start = 0;\n  let end = n;\n  let mid = 0;\n  while (start < end) {\n    mid = (start + end) / 2;\n\n    if (arr[mid] === target) return mid;\n\n    if (target < arr[mid]) {\n      if (mid > 0 && target > arr[mid - 1])\n        return getClosest(arr, mid - 1, mid, target);\n      end = mid;\n    } else {\n      if (mid < n - 1 && target < arr[mid + 1])\n        return getClosest(arr, mid, mid + 1, target);\n      start = mid + 1;\n    }\n  }\n\n  return mid;\n}\n\nfunction getCut() {\n  const cutArr = ['v', 'h'];\n  return cutArr[Math.round(Math.random())];\n}\n\nfunction findImgPair(arr, target) {\n  let start = 0;\n  let end = arr.length - 1;\n  let i = start;\n  let j = end;\n  let minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n  while (start <= end) {\n    if (arr[start] + arr[end] > target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        // update fetched pair and matching cost\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      end -= 1;\n    } else if (arr[start] + arr[end] <= target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      start += 1;\n    } else {\n      // best pair (m === 0) found\n      i = start;\n      j = end;\n      break;\n    }\n  }\n  const randomNumber = Math.round(Math.random());\n  if (randomNumber) return [i, j];\n  return [j, i];\n}\n\nfunction getAspectRatio(cut, ar1, ar2) {\n  if (cut === 'v') return ar1 + ar2;\n  return (ar1 * ar2) / (ar1 + ar2);\n}\n\nfunction downscaleImage(image, newWidth, newHeight, fileType) {\n  const canvas = document.createElement('canvas');\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, newWidth, newHeight);\n  return canvas.toDataURL(fileType);\n}\n\nfunction resizeImages(originalImages, maxWidth, handleImages, addImagesToDB) {\n  const tempImages = [];\n  originalImages.forEach((origImage) => {\n    const image = new Image();\n    image.onload = () => {\n      const { title, aspectRatio, type } = origImage;\n      const dataurl = downscaleImage(\n        image,\n        maxWidth,\n        maxWidth / aspectRatio,\n        origImage.type\n      );\n      const tempImage = {\n        title,\n        src: dataurl,\n        naturalHeight: maxWidth / aspectRatio,\n        naturalWidth: maxWidth,\n        aspectRatio,\n        type,\n      };\n      tempImages.push(tempImage);\n      handleImages((imgs) => {\n        const ind = imgs.findIndex((elem) => elem.title === origImage.title);\n        return [...imgs.slice(0, ind), tempImage, ...imgs.slice(ind + 1)];\n      });\n      addImagesToDB(tempImage);\n    };\n    image.src = origImage.src;\n  });\n}\n\nfunction convertBase64(file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\n\nfunction handleImageLoad(\n  event,\n  handleImageCount,\n  handleNewImageCount,\n  handleImageData\n) {\n  if (event.target.files) {\n    handleImageCount((cnt) => cnt + event.target.files.length);\n    handleNewImageCount(event.target.files.length);\n    const files = Array.from(event.target.files);\n    files.map(async (file) => {\n      const image = new Image();\n      image.onload = (e) => {\n        const { naturalWidth, naturalHeight, src } = e.target;\n        const title = `${Date.now()}-${file.name}`;\n        const aspectRatio = naturalWidth / naturalHeight;\n        const imageDetail = {\n          title,\n          src,\n          naturalHeight,\n          naturalWidth,\n          aspectRatio,\n          type: file.type,\n          file,\n        };\n        handleImageData(imageDetail);\n      };\n      image.src = await convertBase64(file);\n    });\n  }\n}\n\nfunction wrapText(text, x, y, maxWidth, fontSize, lineHeight) {\n  // First, start by splitting all of our text into words,\n  // but splitting it into an array split by spaces\n  const paddingX = 1; // 8px on both sided\n  const textCanvas = document.createElement('canvas');\n  textCanvas.width = maxWidth - 2 * paddingX * 8;\n  textCanvas.height = 1000;\n  const ctx = textCanvas.getContext('2d');\n  ctx.font = `${fontSize}px Arial`;\n  ctx.textAlign = 'center';\n  const tempX = x;\n  let tempY = y;\n  const words = text.split(' ');\n  let line = ''; // This will store the text of the current line\n  let testLine = ''; // This will store the text when we add a word, to test if it's too long\n  const lineArray = []; // This is an array of lines, which the function will return\n\n  // Lets iterate over each word\n  for (let n = 0; n < words.length; n += 1) {\n    // Create a test line, and measure it..\n    testLine += `${words[n]} `;\n    const metrics = ctx.measureText(testLine);\n    const testWidth = metrics.width;\n    console.log(\n      'wrap text ',\n      line,\n      testLine,\n      testWidth,\n      textCanvas.width,\n      ctx.letterSpacing\n    );\n    // If the width of this test line is more than the max width\n    if (testWidth > textCanvas.width && n > 0) {\n      // Then the line is finished, push the current line into \"lineArray\"\n      lineArray.push([line, tempX, tempY]);\n      // Increase the line height, so a new line is started\n      tempY += lineHeight;\n      // Update line and test line to use this word as the first word on the next line\n      line = `${words[n]} `;\n      testLine = `${words[n]} `;\n    } else {\n      // If the test line is still less than the max width, then add the word to the current line\n      line += `${words[n]} `;\n    }\n    // If we never reach the full max width, then there is only one line..\n    // so push it into the lineArray so we return something\n    if (n === words.length - 1) {\n      lineArray.push([line, tempX, tempY]);\n    }\n  }\n  // Return the line array\n  return lineArray;\n}\n\nconst convertToRGBA = (value) =>\n  `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nconst getCollageDimension = (maxW, maxH, a) => {\n  const origAR = maxW / maxH;\n  if (origAR < a) return [maxW, maxW / a];\n  if (origAR > a) return [maxH * a, maxH];\n  return [maxW, maxH];\n};\n\nexport default {\n  getCut,\n  findClosest,\n  findImgPair,\n  getAspectRatio,\n  handleImageLoad,\n  resizeImages,\n  wrapText,\n  convertToRGBA,\n  getCollageDimension,\n  downscaleImage,\n  convertBase64,\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport Logout from '@mui/icons-material/Logout';\nimport Typography from '@mui/material/Typography';\nimport ListItemText from '@mui/material/ListItemText';\nimport Link from '@mui/material/Link';\nimport { alpha } from '@mui/material/styles';\nimport Authenticate from '../hocs/require-authentication';\nimport commonUtils from '../utils';\n\nexport function ProfileAvatar({ name, picture, email }) {\n  const initials = Array.from(email)[0].toUpperCase();\n  return (\n    <Avatar\n      sx={{\n        borderRadius: '50%',\n        // border: 3,\n        borderColor: alpha('#fff', 0.8),\n        referrerPolicy: 'no-referrer',\n      }}\n      alt={name}\n      src={picture}\n    >\n      {initials}\n    </Avatar>\n  );\n}\n\nfunction ProfileIcon({ name, email, open, handleClick, avatar }) {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        textAlign: 'center',\n        marginRight: '10px',\n      }}\n    >\n      <Tooltip\n        title={\n          <>\n            <Typography>{name}</Typography>\n            <Typography>{email}</Typography>\n          </>\n        }\n      >\n        <IconButton\n          onClick={handleClick}\n          size=\"small\"\n          aria-controls={open ? 'account-menu' : undefined}\n          aria-haspopup=\"true\"\n          aria-expanded={open ? 'true' : undefined}\n          sx={{ ml: 2 }}\n        >\n          {avatar}\n        </IconButton>\n      </Tooltip>\n    </Box>\n  );\n}\n\nfunction ProfileMenu({ name, open, handleClose, anchorEl, avatar, email }) {\n  const profileIdentifier = name || email;\n  const authURL = process.env.REACT_APP_AUTH_URL;\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      id=\"account-menu\"\n      open={open}\n      onClose={handleClose}\n      onClick={handleClose}\n      PaperProps={{\n        elevation: 0,\n        sx: {\n          filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n          mt: 1.5,\n          '& .MuiAvatar-root': {\n            width: 32,\n            height: 32,\n            ml: -0.5,\n            mr: 1,\n          },\n          '&:before': {\n            content: '\"\"',\n            display: 'block',\n            position: 'absolute',\n            top: 0,\n            right: 14,\n            width: 10,\n            height: 10,\n            bgcolor: 'background.paper',\n            transform: 'translateY(-50%) rotate(45deg)',\n            zIndex: 0,\n          },\n        },\n      }}\n      transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n      anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n    >\n      <MenuItem>\n        {avatar}\n        <ListItemText>{profileIdentifier}</ListItemText>\n      </MenuItem>\n      <Divider />\n      <Link\n        href={`https://${authURL}/oauth2/logout`}\n        underline=\"none\"\n        sx={{ alignItems: 'center', display: 'flex' }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <Logout fontSize=\"small\" />\n          </ListItemIcon>\n          <Typography sx={{ color: 'muted.main' }}>Logout</Typography>\n        </MenuItem>\n      </Link>\n    </Menu>\n  );\n}\n\nfunction Profile() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const userInfo = commonUtils.getUserInfo();\n  const handleClose = () => setAnchorEl(null);\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const userAvatar = (\n    <ProfileAvatar\n      name={userInfo.name}\n      picture={userInfo.picture}\n      email={userInfo.email}\n    />\n  );\n\n  return (\n    <>\n      <ProfileIcon\n        avatar={userAvatar}\n        open={open}\n        email={userInfo.email}\n        handleClick={handleClick}\n        name={userInfo.name}\n      />\n      <ProfileMenu\n        anchorEl={anchorEl}\n        avatar={userAvatar}\n        handleClose={handleClose}\n        name={userInfo.name}\n        email={userInfo.email}\n        open={open}\n      />\n    </>\n  );\n}\n\nexport default function ProfileLink() {\n  //  const ProfileButton = Authenticate(Profile);\n  return (\n    <Grid item sx={{ paddingTop: '0.3rem' }}>\n      <Authenticate>\n        <Profile />\n      </Authenticate>\n    </Grid>\n  );\n}\n\nProfileIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  avatar: PropTypes.node.isRequired,\n};\n\nProfileMenu.defaultProps = {\n  anchorEl: '',\n};\n\nProfileMenu.propTypes = {\n  name: PropTypes.string.isRequired,\n  anchorEl: PropTypes.node,\n  handleClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  avatar: PropTypes.node.isRequired,\n  email: PropTypes.string.isRequired,\n};\n\nProfileAvatar.propTypes = {\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n};\n","import Dexie from 'dexie';\n\nconst collageDB = new Dexie('collage');\n\ncollageDB.version(1).stores({\n  images:\n    'title, src,naturalWidth,naturalHeight,aspectRatio,type,targetAspectRatio,file', // Primary key and indexed props\n  details: '++id, details',\n});\n\nexport default { collageDB };\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport Button from '@mui/material/Button';\nimport commonUtils from '../utils';\n\nfunction AuthDialog({ open, onLogin }) {\n  console.log('auth dialog', open);\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Login</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        Please login to your account to complete this action\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          onClick={onLogin}\n          sx={{ color: 'primary', fontWeight: 'bold' }}\n        >\n          Login\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\nAuthDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onLogin: PropTypes.func.isRequired,\n};\n\nfunction Authenticate({ children, nextPath }) {\n  const [open, setOpen] = useState(true);\n  const authURL = process.env.REACT_APP_AUTH_URL;\n  const location = useLocation();\n  const cookieValue = commonUtils.getUserInfo();\n  const isLoggedIn = cookieValue !== '';\n\n  console.log('auth', open);\n  if (isLoggedIn === true) {\n    return children;\n  }\n\n  const redirectToLogin = () => {\n    const path = `https://${authURL}/oauth2/authorize?next=${location.pathname}${location.search}`;\n    window.location.replace(path);\n  };\n\n  if (nextPath) {\n    return <Navigate to={nextPath} replace />;\n  }\n\n  return (\n    <AuthDialog\n      open={open}\n      onLogin={redirectToLogin}\n      onClose={() => setOpen(false)}\n    />\n  );\n}\n\nAuthenticate.defaultProps = {\n  nextPath: '',\n};\n\nAuthenticate.propTypes = {\n  children: PropTypes.node.isRequired,\n  nextPath: PropTypes.string,\n};\n\nexport default Authenticate;\n","import Box from '@mui/material/Box';\n//  import Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Tooltip from '@mui/material/Tooltip';\nimport { alpha } from '@mui/material/styles';\nimport helpers from 'components/collage/helpers';\n\nexport default class Node {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n\n  fromObject(obj) {\n    if (obj != null) {\n      this.value = obj.value;\n      if (obj.left != null) {\n        this.left = new Node(obj.left.value);\n        this.left.fromObject(obj.left);\n      }\n      if (obj.right != null) {\n        this.right = new Node(obj.right.value);\n        this.right.fromObject(obj.right);\n      }\n      return this;\n    }\n    return null;\n  }\n\n  getScore() {\n    if ('cut' in this.value) {\n      return [...this.left.getScore(), ...this.right.getScore()];\n    }\n\n    return [this.value.width + this.value.height];\n  }\n\n  display() {\n    let output = [];\n    const { cut, title, aspectRatio } = this.value;\n    if (this === null) return null;\n    if ('cut' in this.value) output.push([cut, aspectRatio]);\n    if ('title' in this.value) output.push([title, aspectRatio]);\n    if (this.left !== null) output = output.concat(this.left.display());\n    if (this.right !== null) output = output.concat(this.right.display());\n    return output;\n  }\n\n  copy() {\n    if (this === null) return null;\n    const copyNode = new Node({ ...this.value });\n    if (this.left != null) copyNode.left = this.left.copy();\n    if (this.right != null) copyNode.right = this.right.copy();\n    return copyNode;\n  }\n\n  replaceImages(newImages) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const findIndex = newImages.findIndex(\n          (elem) => elem.title === this.value.title\n        );\n        const origImage = newImages[findIndex];\n        this.value.src = origImage.src;\n        this.value.naturalWidth = origImage.naturalWidth;\n        this.value.naturalHeight = origImage.naturalHeight;\n      }\n      if (this.left != null) this.left.replaceImages(newImages);\n      if (this.right != null) this.right.replaceImages(newImages);\n    }\n  }\n\n  removeImageData() {\n    if (this !== null) {\n      if ('title' in this.value) {\n        this.value.src = '';\n      }\n      if (this.left != null) this.left.removeImageData();\n      if (this.right != null) this.right.removeImageData();\n    }\n  }\n\n  addImageData(imageData) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const image = imageData.find((elem) => elem.title === this.value.title);\n        this.value.src = image.src;\n      }\n      if (this.left != null) this.left.addImageData(imageData);\n      if (this.right != null) this.right.addImageData(imageData);\n    }\n  }\n\n  RenderImage(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    const { width, title, src, x, y } = this.value;\n\n    const newX = x + xOffset;\n    const newY = y + yOffset;\n    console.log('rendering image', title);\n    return (\n      <>\n        <Box\n          key={title}\n          component=\"img\"\n          title={title}\n          alt={title}\n          width={width}\n          onLoad={() => {\n            handleCollageImageLoad();\n            console.log('loaded', title);\n          }}\n          src={src}\n          sx={{\n            position: 'absolute',\n            padding: `${padding}px`,\n            borderRadius: `${borderRadius}px`,\n            left: this.value.x + xOffset,\n            top: this.value.y + yOffset,\n          }}\n        />\n        {/*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    top: newY,\n         *    left: newX,\n         *    backgroundColor: 'white',\n         *    fontSize: '15px',\n         *  }}\n         *>\n         *  {newX.toFixed(2)}\n         *  ,\n         *  {newY.toFixed(2)}\n         *</Typography>\n         */\n        /*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    top: this.value.y + yOffset + padding,\n         *    left: this.value.x + xOffset + padding,\n         *    backgroundColor: 'white',\n         *  }}\n         *>\n         *  {width.toFixed(2)}\n         *  ,\n         *  {height.toFixed(2)}\n         *</Typography>\n         */\n        /*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    bottom: 38,\n         *    right: 10,\n         *    backgroundColor: 'white',\n         *    fontSize: '0.5rem',\n         *    fontWeight: 700,\n         *  }}\n         *>\n         *  {title}\n         *</Typography>\n         */}\n\n        {delImg === true ? (\n          <Tooltip title=\"Remove Image\">\n            <IconButton\n              size=\"medium\"\n              sx={{\n                color: alpha('#000', 0.7),\n                bgcolor: alpha('#fff', 0.5),\n                position: 'absolute',\n                top: newY + padding,\n                left: newX + padding,\n                padding: `${padding}px`,\n                borderRadius: '0 0 5px 0',\n              }}\n              onClick={() => handleRemoveImage(title)}\n            >\n              <DeleteIcon size=\"medium\" />\n            </IconButton>\n          </Tooltip>\n        ) : null}\n      </>\n    );\n  }\n\n  DOMDisplay(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    console.log(\n      'node dom display',\n      padding,\n      borderRadius,\n      delImg,\n      handleRemoveImage,\n      yOffset,\n      xOffset,\n      this.value.title\n    );\n    const { cut } = this.value;\n    if (this === null) return null;\n    if (cut) {\n      console.log(this.right, this.left);\n      return (\n        <>\n          {this.left != null\n            ? this.left.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n          {this.right != null\n            ? this.right.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n        </>\n      );\n    }\n    if ('title' in this.value)\n      return this.RenderImage(\n        padding,\n        borderRadius,\n        delImg,\n        handleRemoveImage,\n        yOffset,\n        xOffset,\n        handleCollageImageLoad\n      );\n    return null;\n  }\n\n  ResizeImage(image) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = this.value.naturalWidth;\n    tempCanvas.height = this.value.naturalHeight;\n    const tempCtx = tempCanvas.getContext('2d');\n    let width = this.value.naturalWidth;\n    let height = this.value.naturalHeight;\n    let newWidth;\n    let newHeight;\n    const scaleFactor = Math.floor(\n      Math.log2(this.value.naturalWidth / this.value.width)\n    );\n    if (scaleFactor === 0) {\n      tempCtx.drawImage(\n        image,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    } else {\n      for (let i = 0; i < scaleFactor; i += 1) {\n        newWidth = width >> 1; // eslint-disable-line no-bitwise\n        newHeight = newWidth / this.value.aspectRatio; // eslint-disable-line no-bitwise\n        if (i === 0) {\n          tempCtx.drawImage(\n            image,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        } else {\n          tempCtx.drawImage(\n            tempCanvas,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        }\n        width = newWidth;\n        height = newHeight;\n      }\n\n      tempCtx.drawImage(\n        tempCanvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    }\n    return tempCanvas;\n  }\n\n  ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset) {\n    const x = this.value.x + padding + xOffset;\n    const y = this.value.y + padding + yOffset;\n    const clipwidth = this.value.width - 2 * padding;\n    const clipheight = clipwidth / this.value.aspectRatio;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + clipwidth - radius, y);\n    ctx.quadraticCurveTo(x + clipwidth, y, x + clipwidth, y + radius);\n    ctx.lineTo(x + clipwidth, y + clipheight - radius);\n    ctx.quadraticCurveTo(\n      x + clipwidth,\n      y + clipheight,\n      x + clipwidth - radius,\n      y + clipheight\n    );\n    ctx.lineTo(x + radius, y + clipheight);\n    ctx.quadraticCurveTo(x, y + clipheight, x, y + clipheight - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.clip();\n\n    ctx.drawImage(\n      tempCanvas,\n      0,\n      0,\n      this.value.width,\n      this.value.height,\n      x,\n      y,\n      clipwidth,\n      clipheight\n    );\n    ctx.restore();\n  }\n\n  CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset) {\n    if ('cut' in this.value) {\n      this.left.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n      this.right.CanvasDisplay(\n        canvasElement,\n        padding,\n        radius,\n        yOffset,\n        xOffset\n      );\n    }\n\n    if ('title' in this.value) {\n      const ctx = canvasElement.getContext('2d');\n      const newImg = new Image();\n      newImg.onload = () => {\n        const tempCanvas = this.ResizeImage(newImg);\n        const tempCtx = tempCanvas.getContext('2d');\n        this.ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset);\n        tempCtx.clearRect(0, 0, tempCanvas.width, tempCanvas.height);\n      };\n      newImg.src = this.value.src;\n    }\n  }\n\n  generate(images, tar, imageCount) {\n    const targetAspectRatioArr = images.map(\n      (image) => image.naturalWidth / image.naturalHeight\n    );\n    if (imageCount < 1) return [];\n    if (imageCount === 1) {\n      const closestIndex = helpers.findClosest(targetAspectRatioArr, tar);\n      this.value = images[closestIndex];\n      this.left = null;\n      this.right = null;\n      return [\n        ...images.slice(0, closestIndex),\n        ...images.slice(closestIndex + 1),\n      ];\n    }\n\n    const cut = helpers.getCut();\n    this.value = { cut, targetAspectRatio: tar };\n    if (imageCount === 2) {\n      const [leftIndex, rightIndex] = helpers.findImgPair(\n        targetAspectRatioArr,\n        tar\n      );\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        images[leftIndex].aspectRatio,\n        images[rightIndex].aspectRatio\n      );\n      this.left = new Node(images[leftIndex]);\n      this.right = new Node(images[rightIndex]);\n      return images.filter(\n        (item, index) => ![leftIndex, rightIndex].includes(index)\n      );\n    }\n\n    let restImages;\n    let targetAspectRatio;\n    this.left = new Node({ cut: helpers.getCut() });\n    //  this.right = new Node({ cut: helpers.getCut() });\n    this.right = new Node({ cut: this.left.value.cut === 'v' ? 'h' : 'v' });\n\n    targetAspectRatio = tar / 2;\n    if (cut === 'v') {\n      targetAspectRatio = tar * 2;\n    }\n\n    const randomNumber = Math.round(Math.random());\n    const [first, second] = randomNumber\n      ? ['left', 'right']\n      : ['right', 'left'];\n    restImages = this[first].generate(\n      images,\n      targetAspectRatio,\n      imageCount - Math.floor(imageCount / 2)\n    );\n    restImages = this[second].generate(\n      restImages,\n      targetAspectRatio,\n      Math.floor(imageCount / 2)\n    );\n\n    this.value.aspectRatio = helpers.getAspectRatio(\n      this.value.cut,\n      this.left.value.aspectRatio,\n      this.right.value.aspectRatio\n    );\n\n    return restImages;\n  }\n\n  adjust(th) {\n    let adjustments = 0;\n    if (this === null) return adjustments;\n\n    if (this.left !== null && this.right !== null) {\n      if (this.value.aspectRatio > this.value.targetAspectRatio * th) {\n        this.value.cut = 'h';\n        adjustments += 1;\n      }\n      if (this.value.aspectRatio < this.value.targetAspectRatio / th) {\n        this.value.cut = 'v';\n        adjustments += 1;\n      }\n\n      if (this.value.cut === 'v') {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n      } else {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n      }\n      adjustments += this.left.adjust(th) + this.right.adjust(th);\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        this.left.value.aspectRatio,\n        this.right.value.aspectRatio\n      );\n    }\n\n    return adjustments;\n  }\n\n  addSize(parentWidth, parentHeight, parentX, parentY, parentCut, nodeType) {\n    if (parentCut === 'v') {\n      this.value.height = parentHeight;\n      this.value.width = this.value.height * this.value.aspectRatio;\n    } else {\n      this.value.width = parentWidth;\n      this.value.height = this.value.width / this.value.aspectRatio;\n    }\n\n    if (nodeType === 'left') {\n      this.value.x = parentX;\n      this.value.y = parentY;\n    } else if (parentCut === 'h') {\n      this.value.y = parentY + parentHeight - this.value.height;\n      this.value.x = parentX;\n    } else {\n      this.value.x = parentX + parentWidth - this.value.width;\n      this.value.y = parentY;\n    }\n\n    if (this.left !== null) {\n      this.left.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'left'\n      );\n    }\n    if (this.right !== null) {\n      this.right.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'right'\n      );\n    }\n  }\n}\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\nimport Node from './node';\nimport helpers from './helpers';\n\nconst convertToRGBA = (value) =>\n  `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nfunction TextDisplay(textArray, position) {\n  return (\n    <>\n      {\n        // eslint-disable-next-line react/destructuring-assignment\n        textArray.map((chunk) => (\n          <Typography\n            key={chunk[2]}\n            sx={{\n              width: '100%',\n              position: 'absolute',\n              top: position + chunk[2],\n              bgcolor: alpha('#1c1c1c', 0.7),\n              paddingX: 1,\n              color: 'button.main',\n              textAlign: 'center',\n              fontFamily: 'Arial',\n              fontSize: '20px',\n              lineHeight: '25px',\n              letterSpacing: 'normal',\n            }}\n          >\n            {chunk[0]}\n          </Typography>\n        ))\n      }\n    </>\n  );\n}\n\nfunction TextCanvasDraw(\n  ctx,\n  textArray,\n  position,\n  scaleFactor,\n  canvasWidth,\n  textHeight\n) {\n  ctx.font = `${scaleFactor * 20}px Arial`;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'top';\n  ctx.fillStyle = '#1c1c1cb3';\n  ctx.fillRect(0, position, canvasWidth, position + textHeight);\n  ctx.fillStyle = 'white';\n\n  console.log('text array', textArray, textHeight);\n  // eslint-disable-next-line no-restricted-syntax\n  for (const chunk of textArray) {\n    const [textPart, , y] = chunk;\n    ctx.fillText(textPart, canvasWidth / 2, y + position + 2.5 * scaleFactor);\n  }\n}\n\nexport default class BinaryTree {\n  constructor(value) {\n    if (this.root === undefined) {\n      this.root = new Node(value);\n      return this;\n    }\n  }\n\n  addOptions(options) {\n    //  const convertToRGBA = (value) => `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n    this.root.options = { ...options };\n  }\n\n  display() {\n    if (this.root !== null) {\n      return this.root.display();\n    }\n    return null;\n  }\n\n  replaceImages(newImages) {\n    if (this.root !== null) {\n      this.root.replaceImages(newImages);\n    }\n  }\n\n  fromObject(obj) {\n    if (obj.root != null) this.root.fromObject(obj.root);\n    return this;\n  }\n\n  removeImageData() {\n    const tempTree = this.copy();\n    if (this.root !== null) {\n      tempTree.root.removeImageData();\n    }\n    return tempTree;\n  }\n\n  addImageData(imageData) {\n    if (this.root !== null) {\n      this.root.addImageData(imageData);\n    }\n  }\n\n  DOMDisplay(\n    canvasWidth,\n    canvasHeight,\n    delImg,\n    handleRemoveImage,\n    handleCollageImageLoad\n  ) {\n    const { text, topText, padding, borderRadius, color } = this.root.options;\n    const { width, height } = this.root.value;\n    const lA = helpers.wrapText(text, 0, 0, canvasWidth, 20, 25);\n    const textHeight = text.length ? lA.length * 25 : 0;\n    let yOffset = (canvasHeight - textHeight - height) / 2;\n    const xOffset = (canvasWidth - width) / 2;\n    let position = canvasHeight - textHeight;\n    if (topText && text.length > 0) {\n      yOffset += textHeight;\n      position = 0;\n    }\n\n    console.log(\n      'tree dom display',\n      canvasWidth,\n      canvasHeight,\n      height,\n      this.root.options,\n      textHeight,\n      yOffset,\n      xOffset,\n      width,\n      this,\n      lA\n    );\n    if (this.root !== null) {\n      return (\n        <Box sx={{ backgroundColor: 'white' }}>\n          <Box\n            width={canvasWidth}\n            height={canvasHeight}\n            sx={{\n              position: 'relative',\n              backgroundColor: convertToRGBA(color),\n            }}\n          >\n            {this.root.DOMDisplay(\n              padding,\n              borderRadius,\n              delImg,\n              handleRemoveImage,\n              yOffset,\n              xOffset,\n              handleCollageImageLoad\n            )}\n            {text.length ? TextDisplay(lA, position) : null}\n          </Box>\n        </Box>\n      );\n    }\n    return null;\n  }\n\n  CanvasDisplay(canvasWidth, canvasHeight, canvasElement, scaleFactor) {\n    if (this.root !== null) {\n      const { text, topText, padding, borderRadius, color } = this.root.options;\n      const { width, height } = this.root.value;\n      const lA = helpers.wrapText(\n        text,\n        0,\n        0,\n        canvasWidth,\n        20 * scaleFactor,\n        25 * scaleFactor\n      );\n      const textHeight = text.length ? lA.length * 25 * scaleFactor : 0;\n      let yOffset = (canvasHeight - textHeight - height) / 2;\n      const xOffset = (canvasWidth - width) / 2;\n      let position = canvasHeight - textHeight;\n      if (topText && text.length > 0) {\n        yOffset += textHeight;\n        position = 0;\n      }\n      const ctx = canvasElement.getContext('2d');\n      ctx.fillStyle = convertToRGBA(color);\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      this.root.CanvasDisplay(\n        canvasElement,\n        padding * scaleFactor,\n        borderRadius * scaleFactor,\n        yOffset,\n        xOffset\n      );\n      TextCanvasDraw(ctx, lA, position, scaleFactor, canvasWidth, textHeight);\n    }\n  }\n\n  generateScore() {\n    const score = this.root.getScore();\n    // console.log('from', ...score);\n    return Math.min(...score);\n  }\n\n  generateCollageTree(images, tar) {\n    this.root.generate(images, tar, images.length);\n  }\n\n  adjust(th) {\n    let trys = 0;\n    let bestAdjust = this.copy();\n    let bestAspectRatio = this.root.value.aspectRatio;\n    const tolerableDifference = this.root.value.targetAspectRatio * (1 - th);\n    let ajstCnt = 1000;\n    while (trys < 100 && ajstCnt > 0) {\n      ajstCnt = this.root.adjust(th);\n      trys += 1;\n      const diff =\n        this.root.value.aspectRatio - this.root.value.targetAspectRatio;\n      if (\n        Math.abs(diff) <\n        Math.abs(bestAspectRatio - this.root.value.targetAspectRatio)\n      ) {\n        bestAspectRatio = this.root.value.aspectRatio;\n        bestAdjust = this.copy();\n      }\n      if ((diff > 0 && diff < tolerableDifference) || diff === 0) break;\n    }\n\n    return [bestAspectRatio, bestAdjust];\n  }\n\n  copy() {\n    const copyTree = new BinaryTree({});\n    copyTree.root = this.root.copy();\n    copyTree.root.options = { ...this.root.options };\n    return copyTree;\n  }\n\n  addSize(canvasWidth, canvasHeight, aspectRatio) {\n    const [maxW, maxH] = helpers.getCollageDimension(\n      canvasWidth,\n      canvasHeight,\n      aspectRatio\n    );\n    this.root.value.width = maxW;\n    this.root.value.height = maxH;\n    console.log('add size', this.root.value.width, this.root.value.height);\n    this.root.value.x = 0;\n    this.root.value.y = 0;\n    const { width, height, x, y, cut } = this.root.value;\n    if (this.root.left !== null)\n      this.root.left.addSize(width, height, x, y, cut, 'left');\n    if (this.root.right !== null)\n      this.root.right.addSize(width, height, x, y, cut, 'right');\n  }\n}\n","import BinaryTree from './binaryTree';\nimport helpers from './helpers';\n\nfunction findBestAdjustTree(images, tolerance, imageWidth, imageHeight) {\n  const sortedImages = images.sort((a, b) =>\n    a.aspectRatio <= b.aspectRatio ? 1 : -1\n  );\n  const collageArray = [];\n  for (let i = 0; i < 100; i += 1) {\n    const imgTree = new BinaryTree({ cut: helpers.getCut() });\n    imgTree.generateCollageTree(sortedImages, imageWidth / imageHeight);\n\n    collageArray.push(imgTree.adjust(1 - tolerance));\n  }\n\n  collageArray.sort((a, b) => {\n    const aspR = imageWidth / imageHeight;\n    const diffA = Math.abs(a[0] - aspR);\n    const diffB = Math.abs(b[0] - aspR);\n    return diffA - diffB;\n  });\n\n  const bAR = collageArray.filter(\n    (elem) => elem[0].toFixed(1) === collageArray[0][0].toFixed(1)\n  );\n  console.log('from bar', bAR);\n  let maxScore = 0;\n  let maxElem = {};\n  bAR.forEach((element) => {\n    element[1].addSize(\n      1000 * (imageWidth / imageHeight),\n      1000,\n      imageWidth / imageHeight\n    );\n    const score = element[1].generateScore();\n    // console.log('from bar all matching', score);\n    if (score > maxScore) {\n      maxScore = score;\n      maxElem = element;\n    }\n  });\n  // console.log('from returning', maxElem, maxScore);\n  return maxElem;\n  // collageArray[0][1].addSize(\n  //   1000 * (imageWidth / imageHeight),\n  //   1000,\n  //   imageWidth / imageHeight\n  // );\n  // console.log(\n  //   'from best adjust tree',\n  //   collageArray[0][0],\n  //   collageArray[0][1].generateScore()\n  // );\n  // return collageArray[0];\n}\n\nexport default { findBestAdjustTree };\n","import { useEffect, useState } from 'react';\nimport useDimensions from 'hooks/collage/dimensions';\nimport useOptions from 'hooks/collage/options';\nimport useActions from 'hooks/collage/actions';\nimport useImages from 'hooks/collage/images';\nimport useTree from 'hooks/collage/tree';\n\nimport helpers from 'components/collage/helpers';\nimport collageapi from 'api/collage';\n\nexport default function useBase(initialValue) {\n  console.log('use base', initialValue);\n  const [details, setDetails] = useState(initialValue);\n  const [collageName, setCollageName] = useState('Untitled');\n  const constants = {\n    tolerance: 0.1,\n    resizeImageWidth: 1500,\n    aspectRatio: 0.7,\n    paperSizes: {\n      A4: { width: 2480, height: 3508, text: '8 X 11 inches' },\n      A3: { width: 3508, height: 4961, text: '11 X 16 inches' },\n    },\n  };\n  const [uploadedImages, setUploadedImages] = useState(0);\n  const dimensions = useDimensions(constants.aspectRatio);\n  const options = useOptions();\n  const actions = useActions();\n  const images = useImages(details, constants.resizeImageWidth);\n\n  const treeState = useTree(details, options.setOptions);\n  const [thumbnail, setThumbnail] = useState({});\n  const collageID =\n    'details' in initialValue && 'collage_id' in initialValue.details\n      ? initialValue.details.collage_id\n      : Date.now();\n\n  useEffect(() => {\n    setDetails(initialValue);\n    if (\n      'details' in initialValue &&\n      'name' in initialValue.details &&\n      collageName === 'Untitled'\n    ) {\n      console.log('setting collage name', initialValue.details.name);\n      setCollageName(initialValue.details.name);\n    }\n  }, [initialValue]);\n\n  const initialStatus = () => ({\n    details: {\n      text: 'Saving Details',\n      status: 'pending',\n    },\n    images: {\n      text: `Saving Images (${uploadedImages} / ${images.images.length})`,\n      status: 'pending',\n    },\n    finalizing: {\n      text: 'Finalizing Collage',\n      status: 'pending',\n    },\n  });\n  const [saveStatus, setSaveStatus] = useState(initialStatus);\n\n  const updateStatus = (key, status) => {\n    const value = { ...saveStatus[key], status };\n    setSaveStatus((st) => ({ ...st, [key]: value }));\n  };\n\n  const updateImagesStatus = () => {\n    const imagesText = `Saving Images (${uploadedImages} / ${images.imgCount})`;\n    let value = { ...saveStatus.images, text: imagesText };\n    if (uploadedImages === images.imgCount && images.imgCount > 0) {\n      value = { ...value, status: 'done' };\n    }\n    setSaveStatus((st) => ({ ...st, images: value }));\n  };\n\n  useEffect(() => {\n    console.log('useeffect 3');\n    updateImagesStatus();\n  }, [uploadedImages, images.imgCount]);\n\n  const handleClear = async () => {\n    const clearPromises = await Promise.allSettled([\n      treeState.clear(),\n      images.clear(),\n      options.clear(),\n    ]);\n\n    for (let i = 0; i < clearPromises.length; i += 1) {\n      if (\n        clearPromises[i].status === 'fulfilled' ||\n        clearPromises[i].value.ok === true\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    console.log('useeffect 2');\n    if (\n      (images.newImgCount > 0 &&\n        images.newImgCount === images.newImagesLoaded) ||\n      actions.refresh\n    ) {\n      images.setNewImageCount(0);\n      images.setNewImagesLoaded(0);\n      treeState.reAdjust(\n        images.images,\n        constants.tolerance,\n        dimensions.width,\n        dimensions.height - dimensions.textHeight,\n        options.options\n      );\n      actions.setRefresh(false);\n    }\n  }, [images.newImgCount, images.newImagesLoaded, actions.refresh]);\n\n  const collageCallback = () => {};\n\n  const handleRemoveImage = (imgTitle) => {\n    const newImagesArr = images.remove(imgTitle);\n    treeState.reAdjust(\n      newImagesArr,\n      constants.tolerance,\n      dimensions.imageWidth,\n      dimensions.imageHeight,\n      options.options\n    );\n  };\n\n  const generateThumbnail = () => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    const thumbnailCanvas = document.createElement('canvas');\n    const thumbnailTree = treeState.tree.copy();\n    thumbnailTree.addSize(500 * ar, 500, ar);\n    thumbnailCanvas.width = 500 * ar;\n    thumbnailCanvas.height = 500;\n    thumbnailTree.CanvasDisplay(\n      500 * ar,\n      500,\n      thumbnailCanvas,\n      (500 * ar) / dimensions.width\n    );\n\n    // create and update details\n    const thumbnailDetails = {\n      title: `thumbnail-${collageID}.png`,\n      src: '',\n      naturalHeight: 500,\n      naturalWidth: 500 * ar,\n      aspectRatio: ar,\n      type: 'image/png',\n    };\n    setThumbnail(thumbnailDetails);\n    return [thumbnailDetails, thumbnailCanvas];\n  };\n\n  const uploadCollageDetails = (thumbnailDetails, name) => {\n    const dets = {\n      collage_id: collageID.toString(),\n      name,\n      created_at: '2021-02-18T21:54:42.123Z',\n      last_updated_at: '2021-02-18T21:54:45.123Z',\n      images: images.removeImageData(images.images),\n      tree: treeState.tree.removeImageData(),\n      thumbnail: thumbnailDetails,\n    };\n    // TODO [33] Validate collageDetails\n    console.log(dets);\n    return collageapi.newCollage(collageID, dets);\n  };\n\n  const uploadCallback = () => {\n    console.log('Setting uploaded images to ', uploadedImages + 1);\n    setUploadedImages((cnt) => cnt + 1);\n  };\n\n  const uploadCollageImages = (thumbnailCanvas, imageURLS) => {\n    const imagePromises = Object.keys(imageURLS).map(async (item) => {\n      const thumbnailKey = `thumbnail-${collageID}.png`;\n      if (item === thumbnailKey) {\n        const thumbnailPromise = thumbnailCanvas.toBlob(async (blob) => {\n          setThumbnail(blob);\n          return collageapi.upload(imageURLS[thumbnailKey], blob);\n        });\n        return thumbnailPromise;\n      }\n\n      const url = imageURLS[item];\n      const Img = images.images.find((img) => img.title === item);\n      const resp = await collageapi.upload(url, Img.file);\n      uploadCallback();\n      console.log('image upload resp', resp);\n      return resp;\n    });\n\n    return imagePromises;\n  };\n\n  const newCollage = async (name) => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    console.log('in generate thumbnail', ar, 500 * ar, 500);\n    const [thumbnailDetails, thumbnailCanvas] = generateThumbnail();\n    updateStatus('details', 'running');\n    const imageURLS = await uploadCollageDetails(thumbnailDetails, name);\n    updateStatus('details', 'done');\n    updateStatus('images', 'running');\n    const imagePromises = uploadCollageImages(thumbnailCanvas, imageURLS);\n    const uploadPromises = await Promise.allSettled(imagePromises);\n    // updateStatus('images', 'done');\n    updateStatus('finalizing', 'running');\n    let uploadStatus;\n    for (let i = 0; i < uploadPromises.length; i += 1) {\n      if (\n        uploadPromises[i].status === 'fulfilled' ||\n        uploadPromises[i].value.ok === true\n      ) {\n        uploadStatus = true;\n        updateStatus('finalizing', 'done');\n      } else {\n        uploadStatus = false;\n        updateStatus('finalizing', 'failed');\n        break;\n      }\n    }\n    return uploadStatus;\n  };\n\n  useEffect(() => {\n    console.log('useeffect 1');\n    if (\n      options.options.text.length > 0 &&\n      Object.keys(treeState.tree).length > 0\n    ) {\n      const tH = helpers.wrapText(\n        options.options.text,\n        0,\n        0,\n        dimensions.width,\n        20,\n        25\n      );\n      dimensions.setTextHeight(tH.length * 25);\n      const [w, h] = helpers.getCollageDimension(\n        dimensions.width,\n        dimensions.height - tH.length * 25,\n        treeState.tree.root.value.aspectRatio\n      );\n      dimensions.setImageWidth(w);\n      dimensions.setImageHeight(h);\n    } else {\n      dimensions.setTextHeight(0);\n      options.handlePositionChange(true);\n      dimensions.setImageWidth(dimensions.width);\n      dimensions.setImageHeight(dimensions.height);\n    }\n  }, [\n    dimensions.width,\n    dimensions.height,\n    treeState.tree,\n    options.options.text,\n  ]);\n\n  const getDetails = (name, thumbnailDetails) => {\n    setCollageName(name);\n    return {\n      collage_id: collageID.toString(),\n      name,\n      created_at: '2021-02-18T21:54:42.123Z',\n      last_updated_at: '2021-02-18T21:54:45.123Z',\n      images: images.removeImageData(images.images),\n      tree: treeState.tree.removeImageData(),\n      thumbnail: thumbnailDetails,\n    };\n  };\n\n  const saveCollage = async (name) => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    console.log('in generate thumbnail', ar, 500 * ar, 500);\n    const [thumbnailDetails, thumbnailCanvas] = generateThumbnail();\n    updateStatus('details', 'running');\n    const imageURLS = await collageapi.saveCollage(\n      collageID,\n      getDetails(name, thumbnailDetails)\n    );\n    console.log('save collage imageurls', imageURLS);\n    updateStatus('details', 'done');\n    updateStatus('images', 'running');\n    const imagePromises = uploadCollageImages(thumbnailCanvas, imageURLS);\n    const uploadPromises = await Promise.allSettled(imagePromises);\n    // updateStatus('images', 'done');\n    updateStatus('finalizing', 'running');\n    let uploadStatus;\n    for (let i = 0; i < uploadPromises.length; i += 1) {\n      if (\n        uploadPromises[i].status === 'fulfilled' ||\n        uploadPromises[i].value.ok === true\n      ) {\n        uploadStatus = true;\n        updateStatus('finalizing', 'done');\n      } else {\n        uploadStatus = false;\n        updateStatus('finalizing', 'failed');\n        break;\n      }\n    }\n    return uploadStatus;\n  };\n\n  console.log('saveStatus', saveStatus);\n  return [\n    getDetails,\n    collageName,\n    thumbnail,\n    collageID,\n    constants,\n    dimensions,\n    options,\n    actions,\n    images,\n    treeState,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n  ];\n}\n","import { useRef, useState, useEffect } from 'react';\nimport helpers from 'components/collage/helpers';\n\nexport default function useDimensions(aspectRatio) {\n  const headerRef = useRef();\n  const actionsRef = useRef();\n  const footerRef = useRef();\n  const addImageRef = useRef();\n\n  const [height, setHeight] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [imageWidth, setImageWidth] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [maxHeight, setMaxHeight] = useState(0);\n  const [maxWidth, setMaxWidth] = useState(0);\n  const [textHeight, setTextHeight] = useState(0);\n\n  const setDimensions = () => {\n    const headerHeight = headerRef.current ? headerRef.current.offsetHeight : 0;\n    const actionsHeight = actionsRef.current\n      ? actionsRef.current.offsetHeight\n      : 0;\n    const footerHeight = footerRef.current ? footerRef.current.offsetHeight : 0;\n    const otherHeight = headerHeight + actionsHeight + footerHeight;\n    setMaxWidth(window.innerWidth);\n    setMaxHeight(window.innerHeight - otherHeight);\n    const [w, h] = helpers.getCollageDimension(\n      window.innerWidth,\n      window.innerHeight - otherHeight - 6,\n      aspectRatio\n    );\n    console.log('other height', otherHeight);\n    setWidth(w);\n    setHeight(h);\n  };\n\n  const handleImageAddClick = () => {\n    if (addImageRef.current) addImageRef.current.click();\n  };\n\n  useEffect(() => {\n    console.log('dimensions changed');\n    setDimensions();\n  }, [\n    window.innerHeight,\n    window.innerWidth,\n    headerRef.current,\n    actionsRef.current,\n    footerRef.current,\n  ]);\n\n  useEffect(() => {\n    setDimensions();\n    window.addEventListener('resize', setDimensions);\n\n    return () => window.removeEventListener('resize', setDimensions);\n  }, []);\n\n  return {\n    actionsRef,\n    headerRef,\n    footerRef,\n    width,\n    height,\n    imageHeight,\n    imageWidth,\n    setImageWidth,\n    setImageHeight,\n    maxHeight,\n    maxWidth,\n    handleImageAddClick,\n    textHeight,\n    setTextHeight,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useOptions() {\n  const optionsInitValue = {\n    padding: 2,\n    borderRadius: 5,\n    color: {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1,\n    },\n    text: '',\n    topText: true,\n  };\n\n  const [options, setOptions] = useState(optionsInitValue);\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n  const clear = () => setOptions(optionsInitValue);\n  const handlePaddingChange = (e) =>\n    setOptions((opts) => ({ ...opts, padding: e.target.value }));\n  const handleRadiusChange = (e) => {\n    setOptions((opts) => ({ ...opts, borderRadius: e.target.value }));\n  };\n\n  const handleColorClick = () => setDisplayColorPicker((dcp) => !dcp);\n  const handleColorClose = () => setDisplayColorPicker(false);\n  const handleColorChange = (clr) =>\n    setOptions((opts) => ({ ...opts, color: clr.rgb }));\n  const handlePositionChange = (value) =>\n    setOptions((opts) => ({ ...opts, topText: value }));\n\n  const handleTextChange = (e) => {\n    const { target } = e;\n    setOptions((opts) => ({ ...opts, text: target.value }));\n  };\n\n  return {\n    options,\n    setOptions,\n    clear,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClick,\n    handleColorClose,\n    handleColorChange,\n    handlePositionChange,\n    handleTextChange,\n    displayColorPicker,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useActions() {\n  const [open, setOpen] = useState(false);\n  const [saveOpen, setSaveOpen] = useState(false);\n  const [saveStart, setSaveStart] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [generate, setGenerate] = useState(false);\n  const [removeImage, setRemoveImage] = useState(false);\n  const [printOptions, setPrintOptions] = useState({\n    paperWidth: 0,\n    paperHeight: 0,\n  });\n\n  const onRefresh = () => setRefresh(true);\n  const handleDownload = () => setOpen(true);\n  const handleSave = () => {\n    setSaveOpen(true);\n  };\n  const onDownloadClose = () => setOpen(false);\n  const onSaveClose = () => setSaveOpen(false);\n  const clearDelete = () => setRemoveImage(false);\n  const onDelete = () => setRemoveImage((ri) => !ri);\n\n  const onDownloadClick = (w, h) => {\n    setPrintOptions({ paperWidth: w, paperHeight: h });\n    setGenerate(true);\n    setOpen(false);\n  };\n\n  const onSaveClick = () => {\n    setSaveStart(true);\n    setSaveOpen(false);\n  };\n  const handleGenerateCallback = () => {\n    setGenerate(false);\n    setPrintOptions({ paperWidth: 0, paperHeight: 0 });\n  };\n\n  return {\n    clearDelete,\n    generate,\n    handleDownload,\n    handleGenerateCallback,\n    onDelete,\n    onDownloadClick,\n    onDownloadClose,\n    onRefresh,\n    open,\n    printOptions,\n    refresh,\n    setGenerate,\n    setOpen,\n    setPrintOptions,\n    setRefresh,\n    removeImage,\n    setRemoveImage,\n    saveOpen,\n    setSaveOpen,\n    onSaveClose,\n    onSaveClick,\n    handleSave,\n    saveStart,\n    setSaveStart,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport helpers from 'components/collage/helpers';\n\nexport default function useImages(initialValue) {\n  console.log('use images', initialValue);\n  const [newImgCount, setNewImageCount] = useState(0);\n  const [newImagesLoaded, setNewImagesLoaded] = useState(0);\n  const [imgCount, setImageCount] = useState(0);\n  const [loaded, setLoaded] = useState(0);\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    console.log('setting images');\n    if ('images' in initialValue) {\n      setImages(initialValue.images);\n      if (imgCount === 0) setImageCount(initialValue.images.length);\n    }\n  }, [initialValue]);\n\n  const removeImageData = (imageArr) => {\n    const tempImgArr = [...imageArr];\n    return tempImgArr.map((img) => {\n      const { file, src, ...rest } = img;\n      return rest;\n    });\n  };\n\n  const handleImageData = (imageDetail) => {\n    setImages((arr) => arr.concat([imageDetail]));\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleLoad = (event) => {\n    helpers.handleImageLoad(\n      event,\n      setImageCount,\n      setNewImageCount,\n      handleImageData\n    );\n  };\n\n  const clear = () => {\n    setImages([]);\n    setImageCount(0);\n    setLoaded(0);\n    setNewImagesLoaded(0);\n  };\n\n  const remove = (title) => {\n    const removeIndex = images.findIndex((elem) => elem.title === title);\n    const newImagesArr = [\n      ...images.slice(0, removeIndex),\n      ...images.slice(removeIndex + 1),\n    ];\n    setImages(newImagesArr);\n    setImageCount((cnt) => cnt - 1);\n    return newImagesArr;\n  };\n\n  return {\n    clear,\n    handleImageData,\n    handleLoad,\n    images,\n    imgCount,\n    loaded,\n    newImagesLoaded,\n    newImgCount,\n    remove,\n    setImageCount,\n    setImages,\n    setLoaded,\n    setNewImageCount,\n    setNewImagesLoaded,\n    removeImageData,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport treeUtils from 'components/collage/treeUtils';\nimport BinaryTree from 'components/collage/binaryTree';\n\nexport default function useTree(initialValue, loadingCallback = () => {}) {\n  console.log('use Tree', initialValue);\n  const [tree, setTree] = useState(new BinaryTree({}));\n\n  useEffect(() => {\n    console.log('use Tree useEffect');\n    const newTree = new BinaryTree({});\n    if (\n      'details' in initialValue &&\n      Object.keys(initialValue.details).length > 0\n    ) {\n      console.log('initial value in tree', initialValue);\n      newTree.fromObject(initialValue.details.tree);\n      if ('options' in initialValue.details.tree.root) {\n        loadingCallback((opts) => ({\n          ...opts,\n          ...initialValue.details.tree.root.options,\n        }));\n      }\n      console.log('setting tree');\n      setTree(newTree);\n    }\n  }, [initialValue]);\n\n  const clear = () => setTree({});\n\n  const reAdjust = (imagesArr, tolerance, imageWidth, imageHeight, options) => {\n    const [, bestAspectRatioTree] = treeUtils.findBestAdjustTree(\n      imagesArr,\n      tolerance,\n      imageWidth,\n      imageHeight\n    );\n    bestAspectRatioTree.addOptions(options);\n    setTree(bestAspectRatioTree);\n  };\n\n  return { tree, setTree, clear, reAdjust };\n}\n","import { useState, useEffect } from 'react';\nimport helpers from './helpers';\n\nexport default function Collage({\n  dimensionProps,\n  imageProps,\n  actionProps,\n  collageCallback,\n  handleRemoveImage,\n  options,\n  tree,\n}) {\n  const [collage, setCollage] = useState(null);\n  const { images, setLoaded } = imageProps;\n  const { generate, handleGenerateCallback, printOptions, removeImage } =\n    actionProps;\n  const { height, width, imageHeight, imageWidth } = dimensionProps;\n\n  const handleCollageImageLoad = () => setLoaded((cnt) => cnt + 1);\n  const isEmpty = (t) => Object.keys(t).length === 0;\n  const createCollage = () => {\n    console.log('started collage loading', tree);\n    tree.addSize(imageWidth, imageHeight, tree.root.value.aspectRatio);\n    console.log('collage added size');\n    tree.addOptions(options);\n    console.log('collage added options', images.length);\n    if (images.length > 0) {\n      tree.addImageData(images);\n      console.log('collage added image data');\n      const collageElem = tree.DOMDisplay(\n        width,\n        height,\n        removeImage,\n        handleRemoveImage,\n        handleCollageImageLoad\n      );\n      console.log('collage added dom display');\n      setCollage(collageElem);\n      collageCallback(tree);\n    }\n  };\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      console.log('collage, tree is not empty');\n      createCollage();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      console.log('collage, tree is not empty 1');\n      createCollage();\n    } else {\n      setCollage(null);\n    }\n  }, [tree, options, imageWidth, imageHeight, removeImage, images]);\n\n  const downloadCollage = (canvas, pW, pH) => {\n    canvas.toBlob((blob) => {\n      const link = document.createElement('a');\n      link.download = `collage-${pW}X${pH}-${Date.now()}.png`;\n      link.href = URL.createObjectURL(blob);\n      link.click();\n      URL.revokeObjectURL(link.href);\n      link.href = null;\n      handleGenerateCallback();\n    });\n  };\n\n  useEffect(() => {\n    if (generate === true) {\n      const canvasElement = document.createElement('canvas');\n      const { paperWidth, paperHeight } = printOptions;\n      canvasElement.width = paperWidth;\n      canvasElement.height = paperHeight;\n      const scaleFactor = paperWidth / width;\n      const lineArray = helpers.wrapText(\n        options.text,\n        0,\n        0,\n        paperWidth,\n        20 * scaleFactor,\n        25 * scaleFactor\n      );\n      const textHeight = lineArray.length * 25 * scaleFactor;\n      const [imgPrintWidth, imgPrintHeight] = helpers.getCollageDimension(\n        paperWidth,\n        paperHeight - textHeight,\n        tree.root.value.aspectRatio\n      );\n      const canvasTree = tree.copy();\n      canvasTree.replaceImages(images);\n      canvasTree.addSize(\n        imgPrintWidth,\n        imgPrintHeight,\n        tree.root.value.aspectRatio\n      );\n      canvasTree.CanvasDisplay(\n        paperWidth,\n        paperHeight,\n        canvasElement,\n        scaleFactor\n      );\n\n      setTimeout(\n        () => downloadCollage(canvasElement, paperWidth, paperHeight),\n        '5000'\n      );\n    }\n  }, [generate]);\n  return collage;\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Authenticate from 'hocs/require-authentication';\n\nexport default function DownloadDialog({ open, onClick, onClose, sizes }) {\n  const [value, setValue] = useState('');\n  const handleDownload = () => {\n    console.log(sizes[value].width, sizes[value].height, onClick);\n    onClick(sizes[value].width, sizes[value].height);\n    setValue('');\n  };\n\n  const handleClose = () => {\n    setValue('');\n    onClose();\n  };\n\n  return (\n    <Authenticate>\n      <Dialog open={open} fullWidth>\n        <DialogTitle sx={{ textAlign: 'center' }}>Download Collage</DialogTitle>\n        <DialogContent\n          dividers\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <DialogContentText sx={{ display: 'inline', pr: 1 }}>\n            Choose collage size\n          </DialogContentText>\n          <FormControl fullWidth sx={{ maxWidth: '60%' }}>\n            <InputLabel id=\"demo-simple-select-label\">Download Size</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              defaultValue=\"A4\"\n              value={value}\n              label=\"Download Size\"\n              onChange={(event) => setValue(event.target.value)}\n            >\n              {Object.keys(sizes).map((key) => (\n                <MenuItem key={sizes[key].text} value={key}>\n                  {sizes[key].text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"outlined\"\n            disabled={value.length === 0}\n            onClick={handleDownload}\n          >\n            Download\n          </Button>\n          <Button variant=\"text\" onClick={handleClose}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Authenticate>\n  );\n}\n\nDownloadDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\n// import DialogContentText from '@mui/material/DialogContentText';\nimport TextField from '@mui/material/TextField';\n// import Authenticate from 'hocs/require-authentication';\n\nexport default function SaveDialog({ open, onClick, onClose }) {\n  const [name, setName] = useState('');\n  const [nameError] = useState('');\n  const handleSave = () => {\n    onClick(name);\n  };\n\n  const handleNameChange = (e) => {\n    const { target } = e;\n    setName(target.value);\n  };\n  const handleClose = () => {\n    setName('');\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <TextField\n          variant=\"outlined\"\n          label=\"Set Collage Name\"\n          defaultValue={name}\n          onChange={handleNameChange}\n          size=\"small\"\n          sx={{ width: '100%', mb: 1 }}\n          InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n          helperText={nameError}\n          error={!!nameError}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          disabled={name.length === 0}\n          onClick={handleSave}\n        >\n          Save\n        </Button>\n        <Button variant=\"text\" onClick={handleClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nSaveDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport PendingIcon from '@mui/icons-material/Pending';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CloseIcon from '@mui/icons-material/Close';\n\nfunction StatusIndicator({ status }) {\n  if (status === 'running') {\n    return <CircularProgress color=\"info\" size=\"1rem\" />;\n  }\n  if (status === 'pending') {\n    return <PendingIcon color=\"disabled\" size=\"0.875rem\" />;\n  }\n  if (status === 'done') {\n    return <CheckCircleOutlineIcon color=\"success\" size=\"0.875rem\" />;\n  }\n  if (status === 'failed') {\n    return <CloseIcon color=\"error\" size=\"0.875rem\" />;\n  }\n}\n\nStatusIndicator.propTypes = {\n  status: PropTypes.string.isRequired,\n};\n\nfunction Status({ text, status }) {\n  const color = {\n    pending: alpha('#000', 0.26),\n    done: 'black',\n    running: 'black',\n    failed: 'red',\n  };\n\n  return (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n      <Typography\n        sx={{ fontWeight: 'bold', fontSize: '1rem', color: color[status] }}\n      >\n        {text}\n      </Typography>\n      <StatusIndicator status={status} />\n    </Stack>\n  );\n}\n\nStatus.propTypes = {\n  text: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nfunction OverAllStatus({ status, counter }) {\n  if (status === 'failed') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <CloseIcon color=\"error\" />\n        <Typography>Collage creation failed</Typography>\n      </Stack>\n    );\n  }\n\n  if (status === 'running' || status === 'pending') return null;\n\n  if (status === 'success') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <CheckCircleOutlineIcon color=\"success\" sx={{ fontSize: '2rem' }} />\n        <Typography>\n          Collage creation successful. Navigation to collages in {counter}{' '}\n          seconds...\n        </Typography>\n      </Stack>\n    );\n  }\n\n  return null;\n}\n\nOverAllStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  counter: PropTypes.number.isRequired,\n};\n\nexport default function SaveStatusDialog({ open, status }) {\n  let overAllStatus = 'pending';\n  const [counter, setCounter] = useState(-1);\n  useEffect(() => {\n    let timerId;\n    if (counter > 0 && overAllStatus === 'success') {\n      timerId = setTimeout(() => setCounter(counter - 1), 1000);\n    }\n    return () => clearTimeout(timerId);\n  }, [counter, overAllStatus]);\n\n  const statusArr = Object.values(status).map((val) => val.status);\n  if (statusArr.includes('failed')) {\n    overAllStatus = 'failed';\n  } else if (statusArr.includes('running')) {\n    overAllStatus = 'running';\n  } else if (!statusArr.includes('pending')) {\n    console.log('setting counter', counter, status);\n    if (counter === -1) {\n      setCounter(3);\n    }\n    overAllStatus = 'success';\n  }\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent dividers>\n        <Stack direction=\"column\" justifyContent=\"center\" spacing={2}>\n          {Object.values(status).map((st) => (\n            <Status key={st.text} text={st.text} status={st.status} />\n          ))}\n        </Stack>\n      </DialogContent>\n      <OverAllStatus status={overAllStatus} counter={counter} />\n    </Dialog>\n  );\n}\n\nSaveStatusDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  status: PropTypes.objectOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      status: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Paper from '@mui/material/Paper';\nimport { Typography, Box, Link } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { alpha } from '@mui/material/styles';\nimport commonUtils from 'utils';\nimport ProfileLink from 'components/profile';\n\nimport LoginButton from 'components/LoginButton';\n\nexport default function Header({ headerRef, name }) {\n  console.log('in collage header', name);\n  const cookieValue = commonUtils.getUserInfo();\n  const isLoggedIn = cookieValue !== '';\n  return (\n    <Paper\n      ref={headerRef}\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        p: 1,\n        backgroundColor: alpha('#fff', 0.1),\n        borderRadius: 0,\n      }}\n      elevation={3}\n    >\n      <Box sx={{ postion: 'absolute', left: '5px' }}>\n        <Link href=\"/collages\" color=\"muted.main\" underline=\"none\">\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <ArrowBackIcon />\n          </Box>\n        </Link>\n      </Box>\n      <Typography\n        variant=\"h4\"\n        component=\"h4\"\n        sx={{ color: alpha('#fff', 0.5) }}\n      >\n        {name}\n      </Typography>\n      {isLoggedIn === true ? (\n        <ProfileLink />\n      ) : (\n        <LoginButton\n          authURL={process.env.REACT_APP_AUTH_URL}\n          next=\"collage/create\"\n        />\n      )}\n    </Paper>\n  );\n}\n\nHeader.propTypes = {\n  name: PropTypes.string.isRequired,\n  headerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport collageBack from 'static/images/collage_back1.webp';\n\nexport default function EmptyCollage({ width, height, loadComponent }) {\n  return (\n    <Box\n      sx={{\n        width,\n        height,\n        //  border: '2px solid white',\n        position: 'relative',\n        backgroundImage: `url(${collageBack})`,\n        backgroundSize: width,\n        objectFit: 'contain',\n        backgroundRepeat: 'no-repeat',\n        alignItems: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      >\n        {loadComponent}\n      </Box>\n    </Box>\n  );\n}\n\nEmptyCollage.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  loadComponent: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport EmptyCollage from 'components/collage/EmptyCollage';\nimport Loading from 'components/Loading';\nimport AddPhotos from 'components/AddPhotos';\nimport Authenticate from 'hocs/require-authentication';\n\nexport default function View({\n  open,\n  saveOpen,\n  saveStatusOpen,\n  status,\n  dimensionProps,\n  imageProps,\n  header,\n  actions,\n  downloadDialog,\n  saveDialog,\n  saveStatusDialog,\n  collage,\n  controls,\n  saveType,\n}) {\n  const { width, height, maxWidth, maxHeight, imageHeight } = dimensionProps;\n  const { images, imgCount, handleLoad } = imageProps;\n  console.log(\n    'from view',\n    images.length,\n    imgCount,\n    imageHeight,\n    collage,\n    status\n  );\n  let content;\n  if (status === 'fetching') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={<Loading title=\"Fetching existing collage data ...\" />}\n      />\n    );\n  }\n\n  if (status === 'preparing') {\n    content = (\n      <>\n        {collage}\n        <Loading title=\"Preparing collage...\" />\n      </>\n    );\n  }\n\n  if (status === 'loading') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          <Loading\n            title={`Loading (${images.length} / ${imgCount}) images...`}\n          />\n        }\n      />\n    );\n  }\n\n  if (status === 'empty') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          width ? <AddPhotos handleChange={handleLoad} /> : <div />\n        }\n      />\n    );\n  }\n\n  if (status === 'ready') {\n    content = collage;\n  }\n\n  return saveType === 'new' ? (\n    <Box component=\"div\" sx={{ backgroundColor: 'black' }}>\n      {header}\n      {actions}\n      {open ? downloadDialog : null}\n      {saveOpen ? saveDialog : null}\n      {saveStatusOpen ? saveStatusDialog : null}\n      <Box\n        width={maxWidth}\n        height={maxHeight}\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'black',\n        }}\n      >\n        {content}\n      </Box>\n      {controls}\n    </Box>\n  ) : (\n    <Box component=\"div\" sx={{ backgroundColor: 'black' }}>\n      {header}\n      <Authenticate>\n        {actions}\n        {open ? downloadDialog : null}\n        {saveOpen ? saveDialog : null}\n        {saveStatusOpen ? saveStatusDialog : null}\n        <Box\n          width={maxWidth}\n          height={maxHeight}\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: 'black',\n          }}\n        >\n          {content}\n        </Box>\n        {controls}\n      </Authenticate>\n    </Box>\n  );\n}\n\nView.propTypes = {\n  dimensionProps: PropTypes.shape({\n    maxWidth: PropTypes.number.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    imageHeight: PropTypes.number.isRequired,\n  }).isRequired,\n  imageProps: PropTypes.shape({\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        src: PropTypes.string.isRequired,\n        naturalHeight: PropTypes.number.isRequired,\n        naturalWidth: PropTypes.number.isRequired,\n        aspectRatio: PropTypes.number.isRequired,\n        type: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    imgCount: PropTypes.number.isRequired,\n    handleLoad: PropTypes.func.isRequired,\n    loaded: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  saveOpen: PropTypes.bool.isRequired,\n  saveStatusOpen: PropTypes.bool.isRequired,\n  status: PropTypes.string.isRequired,\n  header: PropTypes.node.isRequired,\n  actions: PropTypes.node.isRequired,\n  collage: PropTypes.node.isRequired,\n  controls: PropTypes.node.isRequired,\n  downloadDialog: PropTypes.node.isRequired,\n  saveDialog: PropTypes.node.isRequired,\n  saveStatusDialog: PropTypes.node.isRequired,\n  saveType: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport { alpha } from '@mui/material/styles';\n\nexport default function DBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      icon={icon}\n      sx={{\n        py: 1,\n        fontWeight: 'bold',\n        color: 'gray',\n        outline: 'none',\n        '&:focus': {\n          color: alpha('#fff', 0.8),\n          outline: 'none',\n        },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\nDBNA.defaultProps = {\n  handleChange: () => {},\n};\n\nDBNA.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Drawer from '@mui/material/Drawer';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopDrawer({ anchor, children }) {\n  return (\n    <Drawer\n      anchor={anchor}\n      variant=\"permanent\"\n      PaperProps={{\n        sx: {\n          height: 'fit-content',\n          top: '50%',\n          backgroundColor: 'transparent',\n          color: 'gray',\n          fontWeight: 'bold',\n          borderRadius: anchor === 'left' ? '0 10px 10px 0' : '10px 0 0 10px',\n          transform: 'translate(0, -50%)',\n        },\n      }}\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nDesktopDrawer.propTypes = {\n  anchor: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Divider from '@mui/material/Divider';\n\nexport default function ControlsDivider() {\n  return <Divider sx={{ backgroundColor: 'gray', my: 1 }} variant=\"middle\" />;\n}\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport List from '@mui/material/List';\nimport { alpha } from '@mui/material/styles';\n\nimport DBNA from 'components/collage/DesktopActionItem';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport ControlsDivider from 'components/collage/ControlsDivider';\n\nexport default function DesktopActions({ onDownload, onSave }) {\n  const handleChange = (newValue) => {\n    console.log(newValue);\n    if (newValue === 'download') {\n      onDownload();\n    }\n    if (newValue === 'save') {\n      onSave();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  return (\n    <DesktopDrawer anchor=\"right\">\n      <List sx={{ backgroundColor: alpha('#fff', 0.1) }}>\n        <DBNA\n          label=\"Save\"\n          icon={<SaveIcon />}\n          handleChange={() => handleChange('save')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label=\"Download\"\n          icon={<DownloadIcon />}\n          handleChange={() => handleChange('download')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label={\n            <>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Order\n              </Typography>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Print(s)\n              </Typography>\n            </>\n          }\n          icon={<PrintIcon />}\n          handleChange={() => handleChange('print')}\n        />\n      </List>\n    </DesktopDrawer>\n  );\n}\n\nDesktopActions.propTypes = {\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\n\nexport default function ClearCollageDialog({ open, onSubmit, onCancel }) {\n  return (\n    <Dialog open={open}>\n      <DialogTitle\n        sx={{\n          textAlign: 'center',\n          fontWeight: 'bold',\n          color: alpha('#000', 0.8),\n        }}\n      >\n        Clear Collage\n      </DialogTitle>\n      <DialogContent dividers>\n        <DialogContentText sx={{ fontWeight: 'bold', color: 'gray' }}>\n          Do you want to clear collage?\n        </DialogContentText>\n        <Typography\n          variant=\"subtitle2\"\n          sx={{ color: 'red', fontWeight: 'bold' }}\n          noWrap\n        >\n          Note:\n        </Typography>\n        <Typography sx={{ fontSize: '0.8rem', color: 'gray' }}>\n          This change is not reversible\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onSubmit} sx={{ color: 'red' }}>\n          {' '}\n          Clear{' '}\n        </Button>\n        <Button variant=\"outlined\" onClick={onCancel}>\n          {' '}\n          Cancel{' '}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nClearCollageDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Stack from '@mui/material/Stack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport { alpha } from '@mui/material/styles';\n\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function DesktopControls({\n  onRefresh,\n  photosComp,\n  editComp,\n  handleClear,\n  clearDelete,\n}) {\n  const [imageOptionsOpen, setImageOptionsOpen] = useState(false);\n  const [editOptionsOpen, setEditOptionsOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const closeAll = () => {\n    clearDelete();\n    setImageOptionsOpen(false);\n    setEditOptionsOpen(false);\n    setClearOpen(false);\n  };\n  const handlePhotosClick = () => {\n    if (imageOptionsOpen) {\n      setImageOptionsOpen(false);\n    } else {\n      closeAll();\n      setImageOptionsOpen(true);\n    }\n  };\n\n  const handleEditClick = () => {\n    if (editOptionsOpen) {\n      setEditOptionsOpen(false);\n    } else {\n      closeAll();\n      setEditOptionsOpen(true);\n    }\n  };\n  const handleRearrange = () => {\n    closeAll();\n    onRefresh();\n  };\n\n  const handleClearClick = () => {\n    console.log('clear open', clearOpen);\n    if (clearOpen) {\n      setClearOpen(false);\n    } else {\n      closeAll();\n      setClearOpen(true);\n    }\n  };\n\n  const handleClearClose = () => setClearOpen(false);\n  const handleClearSubmit = () => {\n    handleClearClose();\n    handleClear();\n  };\n\n  console.log('clear open', clearOpen);\n  console.log('rendering desktop controls');\n  return (\n    <DesktopDrawer anchor=\"left\">\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n        <List\n          sx={{\n            backgroundColor: alpha('#fff', 0.1),\n            borderRadius: '0 10px 10px 0',\n          }}\n        >\n          <DBNA\n            label=\"Rearrange\"\n            icon={<AutoAwesomeMosaicIcon />}\n            handleChange={handleRearrange}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Photos\"\n            icon={<PhotoIcon />}\n            handleChange={handlePhotosClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Edit\"\n            icon={<EditIcon />}\n            handleChange={handleEditClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Clear\"\n            icon={<RefreshIcon />}\n            handleChange={handleClearClick}\n          />\n        </List>\n        {imageOptionsOpen ? photosComp : null}\n        {editOptionsOpen ? editComp : null}\n        <ClearCollageDialog\n          open={clearOpen}\n          onSubmit={handleClearSubmit}\n          onCancel={handleClearClose}\n        />\n      </Stack>\n    </DesktopDrawer>\n  );\n}\n\nDesktopControls.propTypes = {\n  onRefresh: PropTypes.func.isRequired,\n  photosComp: PropTypes.node.isRequired,\n  editComp: PropTypes.node.isRequired,\n  handleClear: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\n\nexport default function DesktopImageOptions({ onDelete, onAdd, clearDelete }) {\n  const handleAdd = () => {\n    clearDelete();\n    onAdd();\n  };\n\n  return (\n    <List\n      sx={{\n        backgroundColor: alpha('#fff', 0.15),\n        borderRadius: '10px 10px 10px 10px',\n        height: 'fit-content',\n      }}\n    >\n      <DBNA\n        label=\"Add\"\n        icon={<AddPhotoAlternateIcon />}\n        handleChange={handleAdd}\n      />\n      <ControlsDivider />\n      <DBNA label=\"Delete\" icon={<DeleteIcon />} handleChange={onDelete} />\n    </List>\n  );\n}\n\nDesktopImageOptions.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function PaddingControl({ padding, handlePaddingChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n          mixBlendMode: 'difference',\n        }}\n      >\n        Padding\n      </Typography>\n      <Slider\n        aria-label=\"Padding\"\n        defaultValue={0}\n        value={padding}\n        valueLabelDisplay=\"auto\"\n        step={0.1}\n        min={0}\n        max={10}\n        onChange={handlePaddingChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nPaddingControl.propTypes = {\n  padding: PropTypes.number.isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function RadiusControl({ radius, handleRadiusChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n        }}\n      >\n        Corner Radius\n      </Typography>\n      <Slider\n        aria-label=\"Corner Radius\"\n        defaultValue={0}\n        value={radius}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        min={0}\n        max={40}\n        onChange={handleRadiusChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nRadiusControl.propTypes = {\n  radius: PropTypes.number.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { ChromePicker } from 'react-color';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function ColorControl({\n  color,\n  displayColorPicker,\n  handleClick,\n  handleClose,\n  handleChange,\n}) {\n  console.log('color control', color, displayColorPicker);\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      spacing={2}\n      sx={{ my: 2 }}\n    >\n      <Typography\n        sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n      >\n        Background Color\n      </Typography>\n      <Box\n        component=\"div\"\n        sx={{\n          padding: '2px',\n          background: '#fff',\n          borderRadius: '5px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        }}\n        onClick={handleClick}\n      >\n        <Box\n          component=\"div\"\n          sx={{\n            width: '70px',\n            height: '30px',\n            borderRadius: '18px',\n            background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n          }}\n        />\n      </Box>\n      <ColorPicker\n        open={displayColorPicker}\n        color={color}\n        handleClose={handleClose}\n        handleChange={handleChange}\n      />\n    </Stack>\n  );\n}\n\nColorControl.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport function ColorPicker({ open, color, handleClose, handleChange }) {\n  console.log(handleClose);\n  return open ? (\n    <>\n      <Box\n        component=\"div\"\n        sx={{\n          position: 'absolute',\n          zIndex: 3,\n          bottom: 10,\n        }}\n      >\n        <IconButton\n          sx={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            zIndex: 2,\n            backgroundColor: 'button.main',\n            p: 0,\n            transform: 'translate(0, -110%)',\n            border: '2px solid black',\n          }}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n        <ChromePicker color={color} onChange={handleChange} />\n      </Box>\n    </>\n  ) : null;\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n//  import FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function TextControl({\n  text,\n  handleTextChange,\n  topText,\n  handlePositionChange,\n}) {\n  const [collageTextError] = useState('');\n  return (\n    <Stack\n      sx={{\n        backgroundColor: 'transparent',\n      }}\n    >\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        spacing={2}\n      >\n        <Typography\n          sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n        >\n          Collage Text\n        </Typography>\n        <FormGroup row>\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === false}\n                onChange={() => handlePositionChange(false)}\n                sx={{ color: 'white', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Bottom\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold' }}\n          />\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === true}\n                onChange={() => handlePositionChange(true)}\n                sx={{ color: 'gray', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Top\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold', fontSize: '0.8rem' }}\n          />\n        </FormGroup>\n      </Stack>\n      <TextField\n        variant=\"outlined\"\n        label=\"\"\n        defaultValue={text}\n        onChange={handleTextChange}\n        size=\"small\"\n        sx={{ width: '100%', mb: 1 }}\n        InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n        helperText={\n          <Typography sx={{ color: 'gray', fontSize: '0.75rem' }}>\n            {collageTextError}\n          </Typography>\n        }\n        error={!!collageTextError}\n      />\n    </Stack>\n  );\n}\n\nTextControl.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  handlePositionChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport ColorControl from 'components/collage/ColorControl';\nimport TextControl from 'components/collage/TextControl';\n\nexport default function EditControl({ optionProps }) {\n  const {\n    options,\n    handlePaddingChange,\n    displayColorPicker,\n    handleColorChange,\n    handleColorClose,\n    handleColorClick,\n    handleRadiusChange,\n    handleTextChange,\n    handlePositionChange,\n  } = optionProps;\n\n  return (\n    <Stack\n      direction=\"column\"\n      spacing={4}\n      sx={{\n        p: 2,\n        backgroundColor: alpha('#000', 0.7),\n        borderRadius: '10px 10px 10px 10px',\n        boxShadow: '0 0 10px inset rgba(255, 255, 255, 0.3)',\n      }}\n    >\n      <PaddingControl\n        padding={options.padding}\n        handlePaddingChange={handlePaddingChange}\n      />\n      <RadiusControl\n        radius={options.borderRadius}\n        handleRadiusChange={handleRadiusChange}\n      />\n      <ColorControl\n        color={options.color}\n        displayColorPicker={displayColorPicker}\n        handleChange={handleColorChange}\n        handleClose={handleColorClose}\n        handleClick={handleColorClick}\n      />\n      <TextControl\n        text={options.text}\n        topText={options.topText}\n        handleTextChange={handleTextChange}\n        handlePositionChange={handlePositionChange}\n      />\n    </Stack>\n  );\n}\n\nEditControl.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n\nexport default function MBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      value={label.toLowerCase()}\n      icon={icon}\n      sx={{\n        fontWeight: 'bold',\n        color: 'gray',\n        '&.Mui-selected': { color: 'white', outline: 'none' },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\n\nMBNA.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function MobileActions({ actionsRef, onDownload, onSave }) {\n  return (\n    <BottomNavigation\n      ref={actionsRef}\n      showLabels\n      sx={{ py: 1, fontWeight: 'bold', backgroundColor: alpha('#fff', 0.2) }}\n    >\n      <MBNA label=\"Save\" icon={<SaveIcon />} handleChange={onSave} />\n      <MBNA\n        label=\"Download\"\n        icon={<DownloadIcon />}\n        handleChange={onDownload}\n      />\n      <MBNA label=\"Print\" icon={<PrintIcon />} handleChange={() => {}} />\n    </BottomNavigation>\n  );\n}\n\nMobileActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport { alpha } from '@mui/material/styles';\n\nexport default function MainControls({ value, handleChange }) {\n  return (\n    <BottomNavigation\n      showLabels\n      value={value}\n      onChange={handleChange}\n      sx={{\n        fontWeight: 'bold',\n        backgroundColor: alpha('#fff', 0.2),\n        '&.Mui-selected': { color: 'white' },\n      }}\n    >\n      <BottomNavigationAction\n        label=\"Rearrange\"\n        value=\"rearrange\"\n        icon={<AutoAwesomeMosaicIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Photos\"\n        value=\"photo\"\n        icon={<PhotoIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Edit\"\n        value=\"edit\"\n        icon={<EditIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Clear\"\n        value=\"clear\"\n        icon={<RefreshIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n    </BottomNavigation>\n  );\n}\n\nMainControls.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport Typography from '@mui/material/Typography';\nimport PaddingIcon from '@mui/icons-material/Padding';\nimport CropFreeIcon from '@mui/icons-material/CropFree';\nimport SquareIcon from '@mui/icons-material/Square';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TitleIcon from '@mui/icons-material/Title';\nimport { alpha } from '@mui/material/styles';\n\nexport default function EditOptions({\n  color,\n  editOptionsValue,\n  open,\n  handleOptionsClose,\n  handleEditOptionsClick,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={editOptionsValue}\n        onChange={handleEditOptionsClick}\n        sx={{\n          display: 'flex',\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          position: 'relative',\n          alignItems: 'center',\n        }}\n      >\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Padding\n            </Typography>\n          }\n          value=\"padding\"\n          icon={<PaddingIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Corner\n            </Typography>\n          }\n          value=\"border radius\"\n          icon={<CropFreeIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Color\n            </Typography>\n          }\n          value=\"color\"\n          icon={\n            <SquareIcon\n              sx={{\n                fill: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n                borderRadius: '5px',\n              }}\n            />\n          }\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label=\"Text\"\n          value=\"text\"\n          icon={<TitleIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nEditOptions.propTypes = {\n  editOptionsValue: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleEditOptionsClick: PropTypes.func.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function ImageOptions({\n  open,\n  value,\n  handleOptionsClose,\n  handleDelete,\n  handleAdd,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={value}\n        sx={{\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          '&.Mui-selected': { color: 'white' },\n        }}\n      >\n        <MBNA\n          label=\"Delete\"\n          icon={<DeleteIcon />}\n          handleChange={handleDelete}\n        />\n        <MBNA\n          label=\"Add\"\n          icon={<AddPhotoAlternateIcon />}\n          handleChange={handleAdd}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nImageOptions.propTypes = {\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\n\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport TextControl from 'components/collage/TextControl';\nimport { ColorPicker } from 'components/collage/ColorControl';\nimport MainControls from 'components/collage/MainControls';\nimport EditOptions from 'components/collage/EditOptions';\nimport ImageOptions from 'components/collage/ImageOptions';\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function MobileControls({\n  optionProps,\n  actionProps,\n  dimensionProps,\n  handleClear,\n}) {\n  const {\n    options,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClose,\n    handleColorClick,\n    handleColorChange,\n    handleTextChange,\n    handlePositionChange,\n    displayColorPicker,\n  } = optionProps;\n\n  const { onRefresh, onDelete, clearDelete } = actionProps;\n  const { footerRef, handleImageAddClick } = dimensionProps;\n\n  const [mainOpen, setMainOpen] = useState(true);\n  const [value, setValue] = useState('');\n  const [editOpen, setEditOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const [editControl, setEditControl] = useState(null);\n  const [editOptionsValue, setEditOptionsValue] = useState('');\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageValue, setImageValue] = useState('');\n\n  const handleImageOptionsClose = () => {\n    setImageOpen(false);\n    setImageValue('');\n    setMainOpen(true);\n    clearDelete();\n    setValue('');\n  };\n\n  const handleEditOptionsClose = () => {\n    setEditOpen(false);\n    setEditControl(null);\n    setEditOptionsValue('');\n    setMainOpen(true);\n    setValue('');\n  };\n\n  const handleEditOptionsClick = (e, nV) => {\n    console.log('handle edit options click');\n    setEditOptionsValue(nV);\n    if (nV === 'padding') {\n      setEditControl(\n        <PaddingControl\n          padding={options.padding}\n          handlePaddingChange={handlePaddingChange}\n        />\n      );\n    } else if (nV === 'border radius') {\n      setEditControl(\n        <RadiusControl\n          radius={options.borderRadius}\n          handleRadiusChange={handleRadiusChange}\n        />\n      );\n    } else if (nV === 'color') {\n      handleColorClick();\n      setEditControl(\n        <ColorPicker\n          open={displayColorPicker}\n          color={options.color}\n          handleChange={handleColorChange}\n          handleClose={() => {\n            setEditControl(null);\n            handleColorClose();\n          }}\n        />\n      );\n    } else if (nV === 'text') {\n      console.log(nV);\n      setEditControl(\n        <TextControl\n          text={options.text}\n          handleTextChange={handleTextChange}\n          topText={options.topText}\n          handlePositionChange={handlePositionChange}\n        />\n      );\n    } else {\n      setEditControl(<Typography color=\"secondary\">{nV}</Typography>);\n    }\n  };\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'padding') {\n      setEditControl(\n        <PaddingControl\n          padding={options.padding}\n          handlePaddingChange={handlePaddingChange}\n        />\n      );\n    }\n  }, [options.padding, editOpen]);\n  // }, [options.padding, editOpen, editOptionsValue]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'border radius') {\n      setEditControl(\n        <RadiusControl\n          radius={options.borderRadius}\n          handleRadiusChange={handleRadiusChange}\n        />\n      );\n    }\n  }, [options.borderRadius, editOpen]);\n  // }, [options.borderRadius, editOpen, editOptionsValue]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'color') {\n      setEditControl(\n        <ColorPicker\n          open={displayColorPicker}\n          color={options.color}\n          handleChange={handleColorChange}\n          handleClose={handleColorClose}\n        />\n      );\n    }\n  }, [options.color, editOpen, displayColorPicker]);\n  // }, [options.color, editOpen, editOptionsValue, displayColorPicker]);\n\n  useEffect(() => {\n    console.log('text control useEffect');\n    if (editOpen && editOptionsValue === 'text') {\n      setEditControl(\n        <TextControl\n          text={options.text}\n          handleTextChange={handleTextChange}\n          topText={options.topText}\n          handlePositionChange={handlePositionChange}\n        />\n      );\n    }\n  }, [options.text, editOpen, options.topText]);\n  // }, [options.text, editOpen, editOptionsValue, options.topText]);\n\n  const handleImageClose = () => {\n    setImageValue('');\n    setImageOpen(false);\n    setMainOpen(true);\n  };\n\n  const handleChange = (event, newValue) => {\n    clearDelete();\n    handleImageClose();\n    handleEditOptionsClose();\n    setValue(newValue);\n    if (newValue === 'rearrange') {\n      onRefresh();\n    } else if (newValue === 'photo') {\n      setMainOpen(false);\n      setImageOpen(true);\n    } else if (newValue === 'edit') {\n      setMainOpen(false);\n      setEditOpen(true);\n    } else if (newValue === 'clear') {\n      setClearOpen(true);\n      //  handleClear();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  const handleImageAdd = () => {\n    clearDelete();\n    handleImageAddClick();\n  };\n\n  const handleClearSubmit = () => {\n    handleClear();\n    setClearOpen(false);\n    setValue('');\n  };\n\n  const handleClearCancel = () => {\n    setClearOpen(false);\n    setValue('');\n  };\n\n  console.log('rerendering', editControl);\n  return (\n    <Paper\n      ref={footerRef}\n      sx={{\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        mt: 1,\n        backgroundColor: 'black',\n        borderRadius: 0,\n      }}\n      elevation={4}\n    >\n      <ClearCollageDialog\n        open={clearOpen}\n        onSubmit={handleClearSubmit}\n        onCancel={handleClearCancel}\n      />\n      {editControl ? (\n        <Box\n          sx={{\n            backgroundColor: alpha('#fff', 0.15),\n            p: 1,\n          }}\n        >\n          {editControl}\n        </Box>\n      ) : null}\n      <ImageOptions\n        open={imageOpen}\n        value={imageValue}\n        handleDelete={onDelete}\n        handleAdd={handleImageAdd}\n        handleOptionsClose={handleImageOptionsClose}\n      />\n      <EditOptions\n        color={options.color}\n        editOptionsValue={editOptionsValue}\n        open={editOpen}\n        handleOptionsClose={handleEditOptionsClose}\n        handleEditOptionsClick={handleEditOptionsClick}\n      />\n      {mainOpen ? (\n        <MainControls value={value} handleChange={handleChange} />\n      ) : null}\n    </Paper>\n  );\n}\n\nMobileControls.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n  }).isRequired,\n  actionProps: PropTypes.shape({\n    onRefresh: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    clearDelete: PropTypes.func.isRequired,\n  }).isRequired,\n  handleClear: PropTypes.func.isRequired,\n  dimensionProps: PropTypes.shape({\n    handleImageAddClick: PropTypes.func.isRequired,\n    footerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport db from 'db';\nimport { useEffect, useState } from 'react';\nimport dbutils from 'components/collage/dbutils';\nimport useBase from 'hooks/collage/base';\nimport { useNavigate } from 'react-router-dom';\n\nimport Authenticate from 'hocs/require-authentication';\nimport Collage from 'components/collage/Collage';\nimport DownloadDialog from 'components/collage/DownloadDialog';\nimport SaveDialog from 'components/collage/SaveDialog';\nimport SaveStatusDialog from 'components/collage/SaveStatusDialog';\nimport Header from 'components/collage/Header';\nimport Loading from 'components/Loading';\nimport View from 'components/collage/View';\n\nimport DesktopActions from 'components/collage/DesktopActions';\nimport DesktopControls from 'components/collage/DesktopControls';\nimport DesktopImageOptions from 'components/collage/DesktopImageOptions';\nimport EditControl from 'components/collage/EditControl';\nimport MobileActions from 'components/collage/MobileActions';\nimport MobileControls from 'components/collage/MobileControls';\n\nexport default function BaseCollage({ getCollage, clearCollage, saveType }) {\n  console.log('base collage', saveType);\n  const navigate = useNavigate();\n  const [details, setDetails] = useState({});\n  const [status, setStatus] = useState('fetching');\n\n  const [\n    getDetails,\n    collageName,\n    ,\n    collageID,\n    constants,\n    dimensionProps,\n    optionProps,\n    actionProps,\n    imageProps,\n    treeProps,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n  ] = useBase(details);\n\n  useEffect(async () => {\n    if (Object.keys(details).length === 0) {\n      setStatus('fetching');\n      const collageDetails =\n        saveType === 'new'\n          ? await getCollage()\n          : await getCollage(\n              imageProps.setImageCount,\n              imageProps.setNewImageCount,\n              imageProps.handleImageData\n            );\n      setStatus('fetch end');\n      console.log('setting collage details', collageDetails);\n      setDetails(collageDetails);\n      if (saveType === 'new') {\n        clearCollage();\n      }\n    }\n  }, []);\n\n  console.log(\n    'base collage',\n    details,\n    imageProps.imgCount,\n    imageProps.loaded,\n    imageProps.images,\n    imageProps.newImagesLoaded,\n    collageName,\n    collageID\n  );\n\n  useEffect(() => {\n    let st = status;\n    // if (st === 'fetching') return;\n    if (\n      imageProps.imgCount === 0 &&\n      Object.keys(details).length === 0 &&\n      st === 'fetch end'\n    ) {\n      st = 'empty';\n    }\n    if (\n      imageProps.images.length > 0 &&\n      imageProps.images.length === imageProps.imgCount\n    ) {\n      st = 'preparing';\n    }\n    if (imageProps.images.length < imageProps.imgCount) {\n      st = 'loading';\n    }\n    if (imageProps.loaded >= imageProps.imgCount && imageProps.imgCount > 0) {\n      st = 'ready';\n    }\n    setStatus(st);\n    console.log(\n      'status calculation',\n      imageProps.loaded,\n      imageProps.imgCount,\n      imageProps.images.length,\n      st,\n      details\n    );\n  }, [imageProps]);\n\n  const clearAll = () => {\n    setDetails({});\n    handleClear();\n    clearCollage();\n    setStatus('fetch end');\n    if (saveType === 'existing') {\n      setTimeout(() => navigate('/collages'), 3000);\n    }\n  };\n\n  const handleSave = async (name) => {\n    console.log('in handle save', getDetails(name), imageProps.images);\n\n    actionProps.onSaveClick();\n    const res =\n      saveType === 'new' ? await newCollage(name) : await saveCollage(name);\n    console.log('save results', res, collageID);\n    if (res) {\n      setTimeout(() => {\n        if (saveType === 'new') clearAll();\n        actionProps.setSaveStart(false);\n        navigate('/collages');\n      }, 3000);\n    }\n  };\n\n  const downloadDialog = (\n    <DownloadDialog\n      open={actionProps.open}\n      onClick={actionProps.onDownloadClick}\n      onClose={actionProps.onDownloadClose}\n      sizes={constants.paperSizes}\n    />\n  );\n\n  const saveDialog = (\n    <Authenticate>\n      <SaveDialog\n        open={actionProps.saveOpen}\n        onClick={handleSave}\n        onClose={actionProps.onSaveClose}\n      />\n    </Authenticate>\n  );\n\n  const saveStatusDialog = (\n    <Authenticate>\n      <SaveStatusDialog open={actionProps.saveStart} status={saveStatus} />\n    </Authenticate>\n  );\n\n  const collage = (\n    <Collage\n      dimensionProps={dimensionProps}\n      imageProps={imageProps}\n      actionProps={actionProps}\n      collageCallback={collageCallback}\n      handleRemoveImage={handleRemoveImage}\n      options={optionProps.options}\n      tree={treeProps.tree}\n    />\n  );\n\n  const mobileControls = (\n    <MobileControls\n      optionProps={optionProps}\n      actionProps={actionProps}\n      dimensionProps={dimensionProps}\n      handleClear={clearAll}\n    />\n  );\n\n  const header = (\n    <Header headerRef={dimensionProps.headerRef} name={collageName} />\n  );\n\n  const desktopPhotosComp = (\n    <DesktopImageOptions\n      onDelete={actionProps.onDelete}\n      onAdd={dimensionProps.handleImageAddClick}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n  const desktopControls = (\n    <DesktopControls\n      onRefresh={actionProps.onRefresh}\n      photosComp={desktopPhotosComp}\n      editComp={<EditControl optionProps={optionProps} />}\n      handleClear={clearAll}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n\n  const isMobile = window.innerWidth < window.innerHeight;\n  const controls = isMobile ? mobileControls : desktopControls;\n\n  const onSave = async () => {\n    if (saveType === 'new') {\n      console.time('saving locally');\n      await db.collageDB.details.clear();\n      await db.collageDB.images.clear();\n      console.timeEnd('saving locally');\n      console.time('saving locally state');\n      const respdets = await dbutils.save(\n        [getDetails(collageName, {})],\n        'details'\n      );\n      const respImgs = await dbutils.save(imageProps.images, 'images');\n      console.log('save responses', respdets, respImgs);\n      console.timeEnd('saving locally state');\n    }\n    actionProps.handleSave();\n  };\n\n  const actionsComp = isMobile ? (\n    <MobileActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={onSave}\n    />\n  ) : (\n    <DesktopActions onDownload={actionProps.handleDownload} onSave={onSave} />\n  );\n\n  return (\n    <>\n      <View\n        open={actionProps.open}\n        saveOpen={actionProps.saveOpen}\n        saveStatusOpen={actionProps.saveStart}\n        dimensionProps={dimensionProps}\n        imageProps={imageProps}\n        header={header}\n        actions={actionsComp}\n        downloadDialog={downloadDialog}\n        saveDialog={saveDialog}\n        saveStatusDialog={saveStatusDialog}\n        collage={collage}\n        controls={controls}\n        status={status}\n        saveType={saveType}\n      />\n      <input\n        ref={dimensionProps.addImageRef}\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={imageProps.handleLoad}\n      />\n      {actionProps.generate ? <Loading title=\"Creating collage ...\" /> : null}\n    </>\n  );\n  // return 'base';\n}\n\nBaseCollage.propTypes = {\n  getCollage: PropTypes.func.isRequired,\n  clearCollage: PropTypes.func.isRequired,\n  saveType: PropTypes.string.isRequired,\n};\n","const parseCookie = (str) =>\n  Object.fromEntries(str.split(';').map((cookie) => cookie.split('=', 2)));\n\nfunction getUserInfo() {\n  const parsedCookies = parseCookie(document.cookie);\n  if ('userInfo' in parsedCookies) {\n    return JSON.parse(atob(parsedCookies.userInfo));\n  }\n  return '';\n}\n\nfunction handleMaxPhotos(containerWidth) {\n  if (containerWidth < 450) return { maxPhotos: 2 };\n  if (containerWidth < 800) return { maxPhotos: 3 };\n  return { maxPhotos: 4 };\n}\n\nfunction handleColumns(containerWidth) {\n  if (containerWidth < 450) return 2;\n  if (containerWidth < 800) return 3;\n  return 4;\n}\n\nfunction handleArrangement(images, callback) {\n  let twidth = 0;\n  let theight = 0;\n  images.forEach(({ height, width }) => {\n    if (height > width) theight += 1;\n    else twidth += 1;\n  });\n  if (twidth > theight) {\n    callback('rows');\n  } else {\n    callback('columns');\n  }\n}\n\nasync function isFieldValid(key, value, setFieldError, schema) {\n  let hasError = false;\n  const testField = await schema\n    .validate({ [key]: value }, { abortEarly: false })\n    .catch((error) => error);\n  setFieldError('');\n  if (testField.inner) {\n    testField.inner.forEach((error) => setFieldError(error.message));\n    hasError = true;\n  }\n  return !hasError;\n}\n\nexport default {\n  parseCookie,\n  getUserInfo,\n  handleMaxPhotos,\n  handleColumns,\n  handleArrangement,\n  isFieldValid,\n};\n"],"names":["url","body","params","method","fetch","then","response","resp","console","log","newCollage","collageID","collageDetails","collage_id","helpers","process","JSON","stringify","error","saveCollage","upload","listCollages","nextToken","next_token","getThumbnail","collageId","getCollage","deleteCollage","get","path","newUrl","options","credentials","headers","Headers","URLSearchParams","toString","ok","status","document","cookie","json","post","apiUrl","deleteMethod","OptionsButton","children","onClick","name","Button","id","variant","component","sx","color","borderRadius","backgroundColor","padding","defaultProps","AddPhotos","handleChange","type","hidden","multiple","accept","onChange","fontSize","Typography","fontWeight","LoginButton","authURL","next","href","target","style","textDecoration","borderColor","alpha","getData","tableName","db","toArray","rows","length","clearData","clear","getCollageDetails","details","images","data","map","dt","put","getCollageData","clearCollageData","save","getClosest","arr","index1","index2","downscaleImage","image","newWidth","newHeight","fileType","canvas","createElement","width","height","getContext","drawImage","toDataURL","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","getCut","Math","round","random","findClosest","n","start","end","mid","findImgPair","i","j","minMatchingCost","abs","getAspectRatio","cut","ar1","ar2","handleImageLoad","event","handleImageCount","handleNewImageCount","handleImageData","files","cnt","Array","from","Image","e","naturalWidth","naturalHeight","src","imageDetail","title","Date","now","aspectRatio","resizeImages","originalImages","maxWidth","handleImages","addImagesToDB","tempImages","forEach","origImage","tempImage","push","imgs","ind","findIndex","elem","slice","wrapText","text","x","y","lineHeight","textCanvas","ctx","font","textAlign","tempX","tempY","words","split","line","testLine","lineArray","testWidth","measureText","letterSpacing","convertToRGBA","value","r","g","b","a","getCollageDimension","maxW","maxH","origAR","ProfileAvatar","picture","email","initials","toUpperCase","referrerPolicy","alt","ProfileIcon","open","handleClick","avatar","display","alignItems","marginRight","size","undefined","ml","ProfileMenu","handleClose","anchorEl","profileIdentifier","onClose","PaperProps","elevation","filter","mt","mr","content","position","top","right","bgcolor","transform","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","underline","Profile","React","setAnchorEl","Boolean","userInfo","commonUtils","userAvatar","currentTarget","ProfileLink","item","paddingTop","collageDB","Dexie","version","stores","AuthDialog","onLogin","fullWidth","dividers","justifyContent","Authenticate","nextPath","useState","setOpen","location","useLocation","isLoggedIn","to","replace","pathname","search","window","Node","this","left","obj","fromObject","getScore","output","concat","copyNode","copy","newImages","replaceImages","removeImageData","imageData","find","addImageData","delImg","handleRemoveImage","yOffset","xOffset","handleCollageImageLoad","newX","newY","Box","onLoad","Tooltip","IconButton","Delete","DOMDisplay","RenderImage","tempCanvas","tempCtx","scaleFactor","floor","log2","radius","clipwidth","clipheight","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","canvasElement","CanvasDisplay","newImg","ResizeImage","ImageStyling","clearRect","tar","imageCount","targetAspectRatioArr","closestIndex","restImages","targetAspectRatio","leftIndex","rightIndex","index","includes","first","second","generate","th","adjustments","adjust","parentWidth","parentHeight","parentX","parentY","parentCut","nodeType","addSize","TextDisplay","textArray","chunk","paddingX","fontFamily","BinaryTree","root","tempTree","canvasWidth","canvasHeight","topText","lA","textHeight","fillStyle","fillRect","textBaseline","textPart","fillText","TextCanvasDraw","score","min","trys","bestAdjust","bestAspectRatio","tolerableDifference","ajstCnt","diff","copyTree","findBestAdjustTree","tolerance","imageWidth","imageHeight","sortedImages","sort","collageArray","imgTree","generateCollageTree","aspR","bAR","toFixed","maxScore","maxElem","element","generateScore","useBase","initialValue","setDetails","collageName","setCollageName","constants","resizeImageWidth","paperSizes","A4","A3","uploadedImages","setUploadedImages","dimensions","headerRef","useRef","actionsRef","footerRef","addImageRef","setHeight","setImageHeight","setImageWidth","setWidth","maxHeight","setMaxHeight","setMaxWidth","setTextHeight","setDimensions","otherHeight","current","offsetHeight","innerWidth","innerHeight","w","h","useEffect","addEventListener","removeEventListener","handleImageAddClick","click","useDimensions","optionsInitValue","setOptions","displayColorPicker","setDisplayColorPicker","handlePaddingChange","opts","handleRadiusChange","handleColorClick","dcp","handleColorClose","handleColorChange","clr","rgb","handlePositionChange","handleTextChange","useOptions","actions","saveOpen","setSaveOpen","saveStart","setSaveStart","refresh","setRefresh","setGenerate","removeImage","setRemoveImage","paperWidth","paperHeight","printOptions","setPrintOptions","clearDelete","handleDownload","handleGenerateCallback","onDelete","ri","onDownloadClick","onDownloadClose","onRefresh","onSaveClose","onSaveClick","handleSave","useActions","newImgCount","setNewImageCount","newImagesLoaded","setNewImagesLoaded","imgCount","setImageCount","loaded","setLoaded","setImages","handleLoad","remove","removeIndex","newImagesArr","imageArr","img","useImages","treeState","loadingCallback","tree","setTree","newTree","Object","keys","reAdjust","imagesArr","treeUtils","bestAspectRatioTree","addOptions","useTree","thumbnail","setThumbnail","finalizing","saveStatus","setSaveStatus","updateStatus","key","st","imagesText","updateImagesStatus","handleClear","allSettled","clearPromises","generateThumbnail","ar","thumbnailCanvas","thumbnailTree","thumbnailDetails","uploadCollageDetails","dets","created_at","last_updated_at","collageapi","uploadCollageImages","imageURLS","imagePromises","thumbnailKey","thumbnailPromise","toBlob","blob","Img","uploadPromises","uploadStatus","tH","getDetails","imgTitle","Collage","dimensionProps","imageProps","actionProps","collageCallback","collage","setCollage","isEmpty","t","createCollage","collageElem","imgPrintWidth","imgPrintHeight","canvasTree","setTimeout","pW","pH","link","download","URL","createObjectURL","revokeObjectURL","DownloadDialog","sizes","setValue","Dialog","DialogTitle","DialogContent","DialogContentText","pr","FormControl","InputLabel","Select","labelId","defaultValue","label","MenuItem","DialogActions","disabled","SaveDialog","setName","nameError","TextField","mb","InputProps","helperText","StatusIndicator","CircularProgress","Pending","CheckCircleOutline","Close","Status","pending","done","running","failed","Stack","direction","OverAllStatus","counter","spacing","p","SaveStatusDialog","overAllStatus","setCounter","timerId","clearTimeout","statusArr","values","val","Header","Paper","ref","postion","Link","ArrowBack","EmptyCollage","loadComponent","backgroundImage","collageBack","backgroundSize","objectFit","backgroundRepeat","View","saveStatusOpen","header","downloadDialog","saveDialog","saveStatusDialog","controls","saveType","Loading","DBNA","icon","BottomNavigationAction","showLabel","py","outline","DesktopDrawer","anchor","Drawer","ControlsDivider","Divider","my","DesktopActions","onDownload","onSave","newValue","List","Save","Download","Print","ClearCollageDialog","onSubmit","onCancel","noWrap","DesktopControls","photosComp","editComp","imageOptionsOpen","setImageOptionsOpen","editOptionsOpen","setEditOptionsOpen","clearOpen","setClearOpen","closeAll","handleClearClose","AutoAwesomeMosaic","Photo","Edit","Refresh","DesktopImageOptions","onAdd","AddPhotoAlternate","PaddingControl","mixBlendMode","Slider","valueLabelDisplay","step","max","RadiusControl","ColorControl","background","boxShadow","cursor","ColorPicker","bottom","border","TextControl","collageTextError","FormGroup","row","FormControlLabel","disableTypography","control","Checkbox","checked","EditControl","optionProps","MBNA","toLowerCase","MobileActions","BottomNavigation","showLabels","MainControls","EditOptions","editOptionsValue","handleOptionsClose","handleEditOptionsClick","borderTop","Padding","CropFree","Square","fill","Title","ImageOptions","handleDelete","handleAdd","MobileControls","mainOpen","setMainOpen","editOpen","setEditOpen","editControl","setEditControl","setEditOptionsValue","imageOpen","setImageOpen","imageValue","setImageValue","handleEditOptionsClose","nV","BaseCollage","clearCollage","navigate","useNavigate","setStatus","treeProps","clearAll","res","mobileControls","desktopPhotosComp","desktopControls","isMobile","time","timeEnd","dbutils","respdets","respImgs","actionsComp","parseCookie","str","fromEntries","setFieldError","schema","hasError","validate","abortEarly","catch","testField","inner","message","getUserInfo","parsedCookies","parse","atob","handleMaxPhotos","containerWidth","maxPhotos","handleColumns","handleArrangement","callback","twidth","theight","isFieldValid"],"sourceRoot":""}