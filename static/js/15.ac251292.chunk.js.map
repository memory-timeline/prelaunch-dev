{"version":3,"file":"static/js/15.ac251292.chunk.js","mappings":"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","sources":["pages/LoadMore.jsx","pages/SkeletonGrid.jsx","pages/Thumbnail.jsx","pages/ThumbnailCard.jsx","pages/ItemLoading.jsx","pages/ItemGrid.jsx","pages/CreateItem.jsx","pages/memory/Own.jsx","components/NoMemories.jsx","pages/memory/Shared.jsx","components/ActionButton.jsx","components/OwnerInfo.jsx","components/ReviewCard.jsx","components/ReviewItem.jsx","pages/memory/Review.jsx","pages/memory/Memories.jsx","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\nimport ThumbnailCard from 'pages/ThumbnailCard';\n\nexport default function LoadMore({ handleMoreClick }) {\n  return (\n    <Grid item key=\"creatememory\" lg={3} md={4} sm={6} xs={12} sx={{ p: 1 }}>\n      <ThumbnailCard handleClick={handleMoreClick}>\n        <Typography\n          variant=\"h5\"\n          sx={{\n            p: 2,\n            color: 'secondary.main',\n            bgcolor: 'primary.main',\n            borderRadius: '30px',\n            borderColor: 'secondary.main',\n            position: 'absolute',\n            bottom: '50%',\n            left: '50%',\n            transform: 'translate(-50%, +50%)',\n            textAlign: 'center',\n          }}\n        >\n          Load More\n        </Typography>\n      </ThumbnailCard>\n    </Grid>\n  );\n}\n\nLoadMore.propTypes = {\n  handleMoreClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\n\nexport default function SkeletonGrid({ children }) {\n  return (\n    <Grid\n      container\n      sx={{ bgcolor: 'button.main', py: 1 }}\n      justifyContent=\"left\"\n      alignItems=\"flex-start\"\n    >\n      {children}\n    </Grid>\n  );\n}\n\nSkeletonGrid.defaultProps = {\n  children: '',\n};\n\nSkeletonGrid.propTypes = {\n  children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Typography from '@mui/material/Typography';\nimport Chip from '@mui/material/Chip';\nimport ThumbnailCard from './ThumbnailCard';\n\nfunction ThumbnailImage({ imageSrc, imageSrcSet, title, handleImageLoad }) {\n  return (\n    <CardMedia\n      component=\"img\"\n      src={imageSrc}\n      srcSet={imageSrcSet}\n      alt={title}\n      sx={{\n        textAlign: 'center',\n        objectFit: 'cover',\n        height: {\n          lg: 350,\n          md: 300,\n          xs: 250,\n        },\n      }}\n      onLoad={handleImageLoad}\n    />\n  );\n}\n\nfunction ThumbnailDetails({ title, date, avatar, shared }) {\n  return (\n    <CardContent>\n      <CardHeader\n        disableTypography\n        avatar={avatar}\n        title={\n          <Typography\n            noWrap\n            sx={{\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              width: { xs: 'calc(75%)', sm: 'calc(100%)' },\n              fontWeight: 600,\n            }}\n          >\n            {title}\n            {shared !== '' ? (\n              <>\n                {' '}\n                <Chip\n                  label={shared}\n                  size=\"small\"\n                  variant=\"filled\"\n                  color={shared === 'Shared' ? 'success' : 'default'}\n                  sx={{ height: 'auto' }}\n                />\n              </>\n            ) : null}\n          </Typography>\n        }\n        subheader={<Typography sx={{ color: 'muted.main' }}>{date}</Typography>}\n        sx={{\n          padding: 0,\n          color: 'faded.black',\n        }}\n      />\n    </CardContent>\n  );\n}\n\nexport default function Thumbnail({\n  title,\n  date,\n  avatar,\n  shared,\n  thumbnailImage,\n  thumbnailImageSrcSet,\n  handleClick,\n  handleImageLoad,\n}) {\n  return (\n    <ThumbnailCard handleClick={handleClick}>\n      <ThumbnailImage\n        imageSrc={thumbnailImage}\n        imageSrcSet={thumbnailImageSrcSet}\n        title={title}\n        handleImageLoad={handleImageLoad}\n      />\n      <ThumbnailDetails title={title} date={date} avatar={avatar} shared={shared} />\n    </ThumbnailCard>\n  );\n}\n\nThumbnailDetails.defaultProps = {\n  title: 'Memory Thumbnail Image',\n  date: '',\n  avatar: '',\n  shared: '',\n};\n\nThumbnailDetails.propTypes = {\n  title: PropTypes.string,\n  date: PropTypes.string,\n  avatar: PropTypes.node,\n  shared: PropTypes.string,\n};\n\nThumbnailImage.defaultProps = {\n  title: 'Memory Thumbnail Image',\n  imageSrc: '',\n  imageSrcSet: '',\n  handleImageLoad: () => {},\n};\n\nThumbnailImage.propTypes = {\n  title: PropTypes.string,\n  imageSrc: PropTypes.string,\n  imageSrcSet: PropTypes.string,\n  handleImageLoad: PropTypes.func,\n};\n\nThumbnail.defaultProps = {\n  thumbnailImageSrcSet: '',\n  handleImageLoad: () => {},\n  avatar: '',\n  shared: '',\n};\n\nThumbnail.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  date: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  avatar: PropTypes.node,\n  shared: PropTypes.string,\n  thumbnailImage: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  thumbnailImageSrcSet: PropTypes.string,\n  handleImageLoad: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardActionArea from '@mui/material/CardActionArea';\n\nexport default function ThumbnailCard({ handleClick, children }) {\n  return (\n    <CardActionArea onClick={handleClick}>\n      <Card\n        elevation={2}\n        sx={{\n          bgcolor: '#fff',\n          borderRadius: 5,\n          color: 'black',\n          position: 'relative',\n          height: {\n            lg: 430,\n            md: 380,\n            xs: 330,\n          },\n          '&:hover': {\n            border: 3,\n            borderColor: 'secondary.main',\n            elevation: 0,\n          },\n        }}\n      >\n        {children}\n      </Card>\n    </CardActionArea>\n  );\n}\n\nThumbnailCard.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Grid from '@mui/material/Grid';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport Thumbnail from 'pages/Thumbnail';\nimport imageLoading from 'static/images/image-loading.png';\n\nexport default function ItemLoading({ memory }) {\n  return (\n    <Grid item key={memory} lg={3} md={4} sm={6} xs={12} sx={{ p: 1 }}>\n      <Thumbnail\n        title={<Skeleton type=\"rectangular\" sx={{ width: '60%' }} />}\n        date={<Skeleton type=\"rectangular\" sx={{ width: '50%' }} />}\n        thumbnailImage={imageLoading}\n        handleClick={() => {}}\n      />\n    </Grid>\n  );\n}\n\nItemLoading.propTypes = {\n  memory: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport { ProfileAvatar } from 'components/profile';\nimport Thumbnail from 'pages/Thumbnail';\n\nimport LoadMore from 'pages/LoadMore';\n\nexport default function ItemGrid({\n  items,\n  handleMoreClick,\n  nextToken,\n  handleImageLoad,\n  createComponent,\n  handleClick,\n}) {\n  const getThumbnailSrcSet = (thumbnailImage) => {\n    const srcSetList = thumbnailImage.images\n      ? thumbnailImage.images.map(({ src, width }) => `${src} ${width}w`)\n      : [];\n    return srcSetList.join(',');\n  };\n\n  return (\n    <Grid\n      container\n      sx={{ bgcolor: 'button.main', py: 1 }}\n      justifyContent=\"left\"\n      alignItems=\"flex-start\"\n    >\n      {createComponent}\n      {items.map((item) => (\n        <Grid item key={item.title} lg={3} md={4} sm={6} xs={12} sx={{ p: 1 }}>\n          <Thumbnail\n            title={item.title}\n            date={item.date}\n            avatar={\n              item.owner ? (\n                <ProfileAvatar\n                  name={item.owner.name}\n                  picture={item.owner.picture}\n                  email={item.owner.email}\n                />\n              ) : null\n            }\n            shared={item.shared}\n            thumbnailImage={item.photo.src}\n            thumbnailImageSrcSet={getThumbnailSrcSet(item.photo)}\n            handleClick={() => handleClick(item)}\n            handleImageLoad={handleImageLoad}\n          />\n        </Grid>\n      ))}\n      {nextToken && <LoadMore handleMoreClick={handleMoreClick} />}\n    </Grid>\n  );\n}\n\nItemGrid.defaultProps = {\n  items: [],\n  createComponent: '',\n};\n\nItemGrid.propTypes = {\n  createComponent: PropTypes.node,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      photo: PropTypes.arrayOf(\n        PropTypes.shape({\n          src: PropTypes.string,\n          title: PropTypes.string,\n        })\n      ),\n    })\n  ),\n  nextToken: PropTypes.string.isRequired,\n  handleMoreClick: PropTypes.func.isRequired,\n  handleImageLoad: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport AddOutlinedIcon from '@mui/icons-material/AddOutlined';\n\nimport MemoryThumbnailCard from 'pages/ThumbnailCard';\n\nexport default function CreateMemoryItem({ message, handleClick }) {\n  const belowmd = useMediaQuery((theme) => theme.breakpoints.down('md'));\n\n  return (\n    <Grid item key=\"create\" lg={3} md={4} sm={6} xs={12} sx={{ p: 1 }}>\n      <MemoryThumbnailCard handleClick={handleClick}>\n        <Typography\n          variant={belowmd ? 'body1' : 'h5'}\n          color=\"button.main\"\n          sx={{\n            p: 1,\n            color: 'secondary.main',\n            bgcolor: 'primary.main',\n            borderRadius: '0px 10px 10px 0px',\n            borderColor: 'secondary.main',\n            position: 'absolute',\n            bottom: 15,\n            left: 0,\n          }}\n        >\n          {message}\n        </Typography>\n        <AddOutlinedIcon\n          sx={{\n            position: 'absolute',\n            border: 3,\n            borderRadius: '50%',\n            fontSize: '7.5rem',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            color: 'muted.main',\n          }}\n        />\n      </MemoryThumbnailCard>\n    </Grid>\n  );\n}\n\nCreateMemoryItem.propTypes = {\n  message: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport ItemLoading from 'pages/ItemLoading';\nimport SkeletonGrid from 'pages/SkeletonGrid';\nimport ItemGrid from 'pages/ItemGrid';\nimport memoryapi from 'api/memory';\nimport CreateItem from 'pages/CreateItem';\n\nasync function getMemories(\n  handleMemoryCallback,\n  handleTokenCallback,\n  handleThumbnailCallback,\n  nextToken = ''\n) {\n  try {\n    const resp = await memoryapi.getMemories(nextToken);\n    if (resp) {\n      if (resp.memories) {\n        handleThumbnailCallback(resp.memories);\n        const thumbnails = await Promise.all(memoryapi.getThumbnails(resp.memories));\n        handleMemoryCallback(thumbnails);\n        handleTokenCallback(resp.next_continuation_token || '');\n      }\n    }\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nexport default function OwnMemories() {\n  const [nextToken, setNextToken] = useState('');\n  const [memoryIDs, setMemoryIDs] = useState([]);\n  const [memories, setMemories] = useState([]);\n  const [count, setCount] = useState(0);\n  const [grid, setGrid] = useState(null);\n  const navigate = useNavigate();\n  const handleCreateClick = () => navigate('/memory/create');\n\n  const handleClick = (memDetails) => {\n    navigate(`/memory/${memDetails.memory_id}`, { state: memDetails });\n  };\n\n  const picLoaded = () => setCount((cnt) => cnt + 1);\n  const handleTokenChange = (newToken) => setNextToken(newToken);\n  const addMemories = (details) => setMemories((arr) => arr.concat(details));\n  const addMemoryIDs = (ids) => setMemoryIDs((arr) => arr.concat(ids));\n  const createComp = <CreateItem message=\"Create a memory\" handleClick={handleCreateClick} />;\n\n  const handleMoreClick = () =>\n    getMemories(addMemories, handleTokenChange, addMemoryIDs, nextToken);\n\n  const sortedMemories = memories.sort((a, b) => (a.memory_id > b.memory_id ? 1 : -1));\n\n  useEffect(() => getMemories(addMemories, handleTokenChange, addMemoryIDs, nextToken), []);\n\n  function GetThumbnailGrid() {\n    const thumbnailGrid = (\n      <ItemGrid\n        createComponent={createComp}\n        handleClick={handleClick}\n        handleImageLoad={picLoaded}\n        handleMoreClick={handleMoreClick}\n        items={sortedMemories}\n        nextToken={nextToken}\n      />\n    );\n    setGrid(thumbnailGrid);\n  }\n\n  useEffect(() => GetThumbnailGrid(), [memories, nextToken]);\n\n  return memories.length === memoryIDs.length && count >= memoryIDs.length ? (\n    grid\n  ) : (\n    <>\n      <SkeletonGrid>\n        {createComp}\n        {memoryIDs.map((memory) => (\n          <ItemLoading memory={memory} />\n        ))}\n      </SkeletonGrid>\n\n      <Box component=\"div\" sx={{ display: 'none' }}>\n        {grid}\n      </Box>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { ReactComponent as Logo } from 'static/images/icons/logo.svg';\n\nexport default function NoMemories({ message }) {\n  const navigate = useNavigate();\n  const handleClick = () => navigate('/memory/create');\n\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{\n        width: '95%',\n        maxWidth: '500px',\n        position: 'fixed',\n        top: '50%',\n        right: '50%',\n        transform: 'translate(50%, -50%)',\n        border: '2px solid gray',\n        height: '60%',\n        borderRadius: '10px',\n      }}\n    >\n      <Logo fill=\"gray\" width=\"64px\" height=\"64px\" />\n      <Typography color=\"gray\" sx={{ fontSize: '1.3rem' }}>\n        {message}\n      </Typography>\n      <Typography color=\"gray\" sx={{ pb: 8, fontSize: '1.3rem' }}>\n        Check again later.\n      </Typography>\n      <Typography color=\"primary\">In the mean time, you can</Typography>\n      <Button variant=\"contained\" onClick={handleClick}>\n        Create a Memory\n      </Button>\n    </Stack>\n  );\n}\n\nNoMemories.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport ItemLoading from 'pages/ItemLoading';\nimport SkeletonGrid from 'pages/SkeletonGrid';\nimport NoMemories from 'components/NoMemories';\nimport memoryapi from 'api/memory';\nimport ItemGrid from 'pages/ItemGrid';\n\nasync function getAcceptedMemories(\n  handleMemoryCallback,\n  handleTokenCallback,\n  handleThumbnailCallback,\n  nextToken = ''\n) {\n  try {\n    const resp = await memoryapi.getAcceptedMemories(nextToken);\n    if (resp) {\n      if (resp.memories) {\n        handleThumbnailCallback(resp.memories);\n        const thumbnails = await Promise.all(memoryapi.getAcceptedThumbnails(resp.memories));\n        handleMemoryCallback(thumbnails);\n        handleTokenCallback(resp.next_continuation_token || '');\n      }\n    }\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nexport default function SharedMemories() {\n  const [nextToken, setNextToken] = useState('');\n  const [memoryIDs, setMemoryIDs] = useState([]);\n  const [memories, setMemories] = useState([]);\n  const [count, setCount] = useState(0);\n  const [grid, setGrid] = useState(null);\n  const navigate = useNavigate();\n\n  const handleClick = (memDetails) => {\n    navigate(`/memory/shared/${memDetails.memory_id}`, { state: memDetails });\n  };\n\n  const picLoaded = () => setCount((cnt) => cnt + 1);\n  const handleTokenChange = (newToken) => setNextToken(newToken);\n\n  const addMemories = (details) => {\n    details.map((detail) => {\n      const memDetails = detail.thumbnail;\n      memDetails.owner = detail.owner_details;\n      setMemories((arr) => arr.concat([memDetails]));\n      return 0;\n    });\n  };\n\n  const addMemoryIDs = (ids) => setMemoryIDs((arr) => arr.concat(ids));\n\n  const sortedMemories = memories.sort((a, b) => (a.memory_id > b.memory_id ? 1 : -1));\n\n  const handleMoreClick = () =>\n    getAcceptedMemories(addMemories, handleTokenChange, addMemoryIDs, nextToken);\n\n  useEffect(() => getAcceptedMemories(addMemories, handleTokenChange, addMemoryIDs, nextToken), []);\n\n  function GetThumbnailGrid() {\n    if (memories.length > 0) {\n      const thumbnailGrid = (\n        <ItemGrid\n          handleClick={handleClick}\n          handleImageLoad={picLoaded}\n          handleMoreClick={handleMoreClick}\n          items={sortedMemories}\n          nextToken={nextToken}\n        />\n      );\n      setGrid(thumbnailGrid);\n    } else {\n      setGrid(<NoMemories message=\"No shared memories right now.\" />);\n    }\n  }\n\n  useEffect(() => GetThumbnailGrid(), [memories, nextToken]);\n\n  return memories.length === memoryIDs.length && count >= memoryIDs.length ? (\n    grid\n  ) : (\n    <>\n      <SkeletonGrid>\n        {memoryIDs.map((memory) => (\n          <ItemLoading memory={memory} />\n        ))}\n      </SkeletonGrid>\n\n      <Box component=\"div\" sx={{ display: 'none' }}>\n        {grid}\n      </Box>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nexport default function ActionButton({ label, handleClick, color, disabled }) {\n  return (\n    <Button\n      variant=\"contained\"\n      color={color}\n      sx={{ m: 1 }}\n      onClick={handleClick}\n      disabled={disabled}\n    >\n      <Typography variant=\"h6\">{label}</Typography>\n    </Button>\n  );\n}\n\nActionButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  color: PropTypes.string.isRequired,\n  disabled: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\nimport { ProfileAvatar } from './profile';\n\nexport default function OwnerInfo({ name, email, picture }) {\n  return (\n    <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" sx={{ width: '100%' }}>\n      <ProfileAvatar name={name} email={email} picture={picture} />\n      <Typography variant=\"h6\" sx={{ px: 1 }}>\n        {name}\n      </Typography>\n    </Stack>\n  );\n}\n\nOwnerInfo.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardActionArea from '@mui/material/CardActionArea';\n\nexport default function ReviewCard({ handleClick, children }) {\n  return (\n    <CardActionArea onClick={handleClick} sx={{ display: 'flex' }}>\n      <Card\n        elevation={0}\n        sx={{\n          bgcolor: '#fff',\n          borderRadius: 5,\n          position: 'relative',\n          maxWidth: '700px',\n          width: '95%',\n        }}\n      >\n        {children}\n      </Card>\n    </CardActionArea>\n  );\n}\n\nReviewCard.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Typography from '@mui/material/Typography';\nimport ReviewCard from './ReviewCard';\n\nfunction ReviewImage({ imageSrc, imageSrcSet, title, handleImageLoad }) {\n  return (\n    <CardMedia\n      component=\"img\"\n      src={imageSrc}\n      srcSet={imageSrcSet}\n      alt={title}\n      sx={{\n        borderColor: 'muted.main',\n        borderRadius: 4,\n        textAlign: 'center',\n        objectFit: 'cover',\n        height: {\n          lg: 400,\n          sm: 350,\n          xs: 350,\n        },\n      }}\n      onLoad={handleImageLoad}\n    />\n  );\n}\n\nfunction ReviewDetails({ title, date }) {\n  return (\n    <CardContent>\n      <CardHeader\n        disableTypography\n        title={\n          <Typography\n            noWrap\n            sx={{\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              width: { xs: 'calc(75%)', sm: 'calc(100%)' },\n              fontWeight: 600,\n            }}\n          >\n            {title}\n          </Typography>\n        }\n        subheader={<Typography sx={{ color: 'muted.main' }}>{date}</Typography>}\n        sx={{\n          padding: 0,\n          color: 'faded.black',\n        }}\n      />\n    </CardContent>\n  );\n}\n\nexport default function ReviewItem({\n  title,\n  date,\n  thumbnailImage,\n  thumbnailImageSrcSet,\n  handleClick,\n  handleImageLoad,\n}) {\n  return (\n    <ReviewCard handleClick={handleClick}>\n      <ReviewImage\n        imageSrc={thumbnailImage}\n        imageSrcSet={thumbnailImageSrcSet}\n        title={title}\n        handleImageLoad={handleImageLoad}\n      />\n      <ReviewDetails title={title} date={date} />\n    </ReviewCard>\n  );\n}\n\nReviewDetails.defaultProps = {\n  title: '',\n  date: '',\n};\n\nReviewDetails.propTypes = {\n  title: PropTypes.string,\n  date: PropTypes.string,\n};\n\nReviewImage.defaultProps = {\n  title: 'Review Image',\n  imageSrc: '',\n  imageSrcSet: '',\n  handleImageLoad: () => {},\n};\n\nReviewImage.propTypes = {\n  title: PropTypes.string,\n  imageSrc: PropTypes.string,\n  imageSrcSet: PropTypes.string,\n  handleImageLoad: PropTypes.func,\n};\n\nReviewItem.defaultProps = {\n  title: '',\n  date: '',\n  thumbnailImageSrcSet: '',\n  handleImageLoad: () => {},\n};\n\nReviewItem.propTypes = {\n  title: PropTypes.string,\n  date: PropTypes.string,\n  thumbnailImage: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  thumbnailImageSrcSet: PropTypes.string,\n  handleImageLoad: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport ActionButton from 'components/ActionButton';\nimport OwnerInfo from 'components/OwnerInfo';\nimport SimpleSnackbar from 'components/simple_snackbar';\nimport Skeleton from '@mui/material/Skeleton';\nimport imageLoading from 'static/images/image-loading.png';\nimport commonUtils from 'utils';\nimport NoMemories from 'components/NoMemories';\nimport ReviewItem from 'components/ReviewItem';\n\nimport memoryapi from 'api/memory';\n\nconst getThumbnailSrcSet = (thumbnailImage) => {\n  const srcSetList = thumbnailImage.images\n    ? thumbnailImage.images.map(({ src, width }) => `${src} ${width}w`)\n    : [];\n  return srcSetList.join(',');\n};\n\nasync function getReviewMemory(\n  handleThumbnailCallback,\n  handleMemoryCallback,\n  handleCountCallback,\n  memoryID = ''\n) {\n  try {\n    const resp = await memoryapi.getPendingMemories(memoryID);\n    if (resp) {\n      handleCountCallback(resp.count);\n      if (resp.memory) {\n        handleMemoryCallback(resp.memory);\n        const thumbnail = await memoryapi.getPendingThumbnails(resp.memory);\n        handleThumbnailCallback(thumbnail);\n      }\n    }\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nasync function acceptMemory(memoryID, handleAcceptCallback) {\n  try {\n    const userInfo = commonUtils.getUserInfo();\n    const resp = await memoryapi.acceptShare(memoryID, userInfo.email);\n    handleAcceptCallback(resp);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nasync function rejectMemory(memoryID, handleRejectCallback) {\n  try {\n    const userInfo = commonUtils.getUserInfo();\n    const resp = await memoryapi.rejectShare(memoryID, userInfo.email);\n    handleRejectCallback(resp);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nexport default function ReviewMemories({ memoryID }) {\n  const [count, setCount] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [, setMemID] = useState(null);\n  const [pendingMemory, setPendingMemory] = useState(null);\n  const [grid, setGrid] = useState(null);\n\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  const [accepting, setAccepting] = useState(false);\n  const [rejecting, setRejecting] = useState(false);\n  const [message, setMessage] = useState(null);\n\n  const startAccepting = () => {\n    setMessage('Accepting memory. Please wait...');\n    setAccepting(true);\n  };\n\n  const startRejecting = () => {\n    setMessage('Rejecting memory. Please wait...');\n    setRejecting(true);\n  };\n\n  const endRunning = () => {\n    setMessage(null);\n    setAccepting(false);\n    setRejecting(false);\n  };\n\n  const handleSnackMessage = (msg, error) => {\n    setSnack(true);\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const handleMemoryRemove = () => {\n    setPendingMemory(null);\n    setGrid(null);\n    getReviewMemory(setPendingMemory, setMemID, setCount, memoryID);\n  };\n\n  useEffect(() => getReviewMemory(setPendingMemory, setMemID, setCount, memoryID), []);\n\n  const handleAcceptActionResults = (resp) => {\n    if (resp.ok) {\n      handleSnackMessage('Memory share accepted', false);\n      setLoaded(false);\n      handleMemoryRemove();\n    } else {\n      handleSnackMessage('Error while accepting memory share', true);\n    }\n  };\n\n  const handleRejectActionResults = (resp) => {\n    if (resp.ok) {\n      handleSnackMessage('Memory share rejected', false);\n      setLoaded(false);\n      handleMemoryRemove();\n    } else {\n      handleSnackMessage('Error while rejecting memory share', true);\n    }\n  };\n\n  const handleAccept = () => {\n    startAccepting();\n    acceptMemory(pendingMemory.thumbnail.memory_id, handleAcceptActionResults);\n    endRunning();\n  };\n\n  const handleReject = () => {\n    startRejecting();\n    rejectMemory(pendingMemory.thumbnail.memory_id, handleRejectActionResults);\n    endRunning();\n  };\n\n  const handleImageLoad = () => setLoaded(true);\n\n  if (count === 0 && grid === null) {\n    setGrid(<NoMemories message=\"Nothing to review right now.\" />);\n  }\n\n  function ReviewCarousel() {\n    if (pendingMemory !== null) {\n      const rc = (\n        <Box\n          sx={{\n            display: 'flex',\n            width: '100%',\n            backgroundColor: 'transparent',\n            backgroundSize: 'cover',\n            backgroundImage: 'linear-gradient(white, #0e516a)',\n            justifyContent: 'center',\n          }}\n        >\n          <Stack direction=\"column\" alignItems=\"center\" sx={{ width: '100%', my: 3 }}>\n            <OwnerInfo\n              name={pendingMemory.owner_details.name || ''}\n              email={pendingMemory.owner_details.email || 'P'}\n              picture={pendingMemory.owner_details.picture || ''}\n            />\n            <Typography sx={{ mb: 2 }}>has shared a memory with you</Typography>\n            <Stack\n              key={pendingMemory.thumbnail.memory_id}\n              direction=\"column\"\n              spacing={1}\n              alignItems=\"center\"\n            >\n              <ReviewItem\n                title={pendingMemory.thumbnail.title}\n                date={pendingMemory.thumbnail.date}\n                thumbnailImage={pendingMemory.thumbnail.photo.src}\n                thumbnailImageSrcSet={getThumbnailSrcSet(pendingMemory.thumbnail.photo)}\n                handleImageLoad={handleImageLoad}\n                handleClick={() => {}}\n              />\n            </Stack>\n            <Stack direction=\"row\" sx={{ m: 1 }}>\n              <ActionButton\n                label=\"Accept\"\n                color=\"primary\"\n                handleClick={handleAccept}\n                disabled={accepting || rejecting}\n              />\n              <ActionButton\n                label=\"Reject\"\n                color=\"error\"\n                handleClick={handleReject}\n                disabled={accepting || rejecting}\n              />\n            </Stack>\n          </Stack>\n        </Box>\n      );\n      setGrid(rc);\n    }\n  }\n\n  useEffect(() => ReviewCarousel(), [pendingMemory, memoryID, accepting, rejecting]);\n\n  return (pendingMemory !== null && loaded) || count === 0 ? (\n    <>\n      {accepting === true || rejecting === true ? (\n        <Typography variant=\"h6\" sx={{ p: 2, color: 'white' }}>\n          {message}\n        </Typography>\n      ) : null}\n      {grid}\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n        error={snackError}\n      />\n    </>\n  ) : (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          width: '100%',\n          backgroundColor: 'transparent',\n          backgroundSize: 'cover',\n          backgroundImage: 'linear-gradient(white, #0e516a)',\n          justifyContent: 'center',\n        }}\n      >\n        <Stack direction=\"column\" alignItems=\"center\" sx={{ width: '100%', my: 3 }}>\n          <OwnerInfo\n            name={<Skeleton type=\"rectangular\" sx={{ width: '35%' }} />}\n            email=\"P\"\n            picture=\"\"\n          />\n          <Typography sx={{ mb: 2 }}>has shared a memory with you</Typography>\n          <Stack key=\"loading\" direction=\"column\" spacing={1} alignItems=\"center\">\n            <ReviewItem\n              title=\"\"\n              date=\"\"\n              thumbnailImage={imageLoading}\n              thumbnailImageSrcSet=\"\"\n              handleImageLoad={() => {}}\n              handleClick={() => {}}\n            />\n          </Stack>\n          <Stack direction=\"row\" sx={{ m: 1 }}>\n            <ActionButton label=\"Accept\" color=\"primary\" handleClick={() => {}} disabled />\n            <ActionButton label=\"Reject\" color=\"error\" handleClick={() => {}} disabled />\n          </Stack>\n        </Stack>\n      </Box>\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n        error={snackError}\n      />\n      <Box component=\"div\" sx={{ display: 'none' }}>\n        {grid}\n      </Box>\n    </>\n  );\n}\n\nReviewMemories.defaultProps = {\n  memoryID: '',\n};\n\nReviewMemories.propTypes = {\n  memoryID: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport Authenticate from 'hocs/require-authentication';\nimport { useState, useEffect } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport Stack from '@mui/material/Stack';\n\nimport BasePage from '../base_page';\nimport OwnMemories from './Own';\nimport SharedMemories from './Shared';\nimport ReviewMemories from './Review';\n\nfunction MemoryModes({ mode, handleChange }) {\n  return (\n    <Stack direction=\"row\" justifyContent=\"center\" sx={{ py: 1, backgroundColor: 'button.main' }}>\n      <ToggleButtonGroup color=\"primary\" value={mode} exclusive aria-label=\"Memory Modes\">\n        <ToggleButton value=\"own\" sx={{ borderRadius: '30px' }} onClick={handleChange}>\n          My Memories\n        </ToggleButton>\n        <ToggleButton value=\"shared\" onClick={handleChange}>\n          Shared With Me\n        </ToggleButton>\n        <ToggleButton value=\"review\" sx={{ borderRadius: '30px' }} onClick={handleChange}>\n          Review\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Stack>\n  );\n}\n\nfunction MemoryModeContent({ mode, memoryID }) {\n  if (mode === 'own') {\n    return <OwnMemories />;\n  }\n\n  if (mode === 'shared') {\n    return <SharedMemories />;\n  }\n\n  if (mode === 'review') {\n    return <ReviewMemories memoryID={memoryID} />;\n  }\n}\n\nexport default function Memories({ initMode }) {\n  const params = useParams();\n  const { memoryMode } = params;\n  const [searchParams] = useSearchParams();\n  const [mode, setMode] = useState(initMode);\n\n  useEffect(() => {\n    if (memoryMode) {\n      setMode(memoryMode);\n    } else {\n      setMode(initMode);\n    }\n  }, [memoryMode, initMode]);\n\n  const handleChange = (event, newMode) => {\n    setMode(newMode);\n  };\n\n  return (\n    <BasePage create>\n      <Authenticate>\n        <Stack direction=\"column\">\n          <MemoryModes mode={mode} handleChange={handleChange} />\n          <MemoryModeContent mode={mode} memoryID={searchParams.get('memoryID')} />\n        </Stack>\n      </Authenticate>\n    </BasePage>\n  );\n}\n\nMemories.propTypes = {\n  initMode: PropTypes.string.isRequired,\n};\n\nMemoryModes.propTypes = {\n  mode: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nMemoryModeContent.defaultProps = {\n  memoryID: '',\n};\n\nMemoryModeContent.propTypes = {\n  mode: PropTypes.string.isRequired,\n  memoryID: PropTypes.string,\n};\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;"],"names":["LoadMore","handleMoreClick","item","lg","md","sm","xs","sx","p","handleClick","variant","color","bgcolor","borderRadius","borderColor","position","bottom","left","transform","textAlign","SkeletonGrid","children","container","py","justifyContent","alignItems","defaultProps","ThumbnailImage","imageSrc","imageSrcSet","title","handleImageLoad","component","src","srcSet","alt","objectFit","height","onLoad","ThumbnailDetails","date","avatar","shared","disableTypography","noWrap","overflow","textOverflow","width","fontWeight","label","size","subheader","padding","Thumbnail","thumbnailImage","thumbnailImageSrcSet","ThumbnailCard","onClick","elevation","border","ItemLoading","memory","Grid","Skeleton","type","imageLoading","ItemGrid","items","nextToken","createComponent","map","owner","name","picture","email","photo","images","join","CreateMemoryItem","message","belowmd","useMediaQuery","theme","breakpoints","down","Typography","AddOutlined","fontSize","top","getMemories","handleMemoryCallback","handleTokenCallback","handleThumbnailCallback","memoryapi","resp","memories","Promise","all","thumbnails","next_continuation_token","console","log","OwnMemories","useState","setNextToken","memoryIDs","setMemoryIDs","setMemories","count","setCount","grid","setGrid","navigate","useNavigate","memDetails","memory_id","state","picLoaded","cnt","handleTokenChange","newToken","addMemories","details","arr","concat","addMemoryIDs","ids","createComp","sortedMemories","sort","a","b","useEffect","length","Box","display","NoMemories","Stack","direction","maxWidth","right","fill","pb","Button","getAcceptedMemories","SharedMemories","detail","thumbnail","owner_details","ActionButton","disabled","m","OwnerInfo","px","ReviewCard","CardActionArea","Card","ReviewImage","CardMedia","ReviewDetails","CardContent","CardHeader","ReviewItem","getReviewMemory","handleCountCallback","memoryID","handleAcceptCallback","userInfo","commonUtils","handleRejectCallback","ReviewMemories","loaded","setLoaded","setMemID","pendingMemory","setPendingMemory","snack","setSnack","snackMessage","setSnackMessage","snackError","setSnackError","accepting","setAccepting","rejecting","setRejecting","setMessage","endRunning","handleSnackMessage","msg","error","handleSnackBarClose","handleMemoryRemove","handleAcceptActionResults","ok","handleRejectActionResults","handleAccept","acceptMemory","handleReject","rejectMemory","rc","backgroundColor","backgroundSize","backgroundImage","my","mb","spacing","ReviewCarousel","snackBarOpen","onClose","MemoryModes","mode","handleChange","ToggleButtonGroup","value","exclusive","ToggleButton","MemoryModeContent","Memories","initMode","memoryMode","useParams","useSearchParams","searchParams","setMode","create","event","newMode","get","getSkeletonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","styled","overridesResolver","props","styles","ownerState","root","animation","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","getUnit","shape","radiusValue","toUnitless","_extends","vars","palette","bg","alpha","text","primary","marginTop","marginBottom","transformOrigin","Math","round","content","visibility","css","action","hover","React","inProps","ref","useThemeProps","className","style","other","_objectWithoutPropertiesLoose","Boolean","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx"],"sourceRoot":""}