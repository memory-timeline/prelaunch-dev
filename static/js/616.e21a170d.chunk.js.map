{"version":3,"file":"static/js/616.e21a170d.chunk.js","mappings":"iJA2BqB,aAUpB,OAVoB,0BAArB,WAAsBA,EAAKC,GAAI,8EAEW,OAFX,SAErBC,EAAS,CAAED,KAAAA,EAAME,OAAQ,OAAQ,EAAD,OACnBC,MAAMJ,EAAKE,GAAQG,MAAK,SAACC,GAAQ,OAAKA,CAAQ,IAAE,KAAD,EAAxD,OAAJC,EAAI,yBACHA,GAAI,OAGQ,OAHR,yBAGXC,QAAQC,IAAI,EAAD,IAAQ,kFAGtB,sBAkED,KACEC,WAtGF,SAAoBC,EAAWC,GAC7B,IACE,IACMV,EAAS,CAAEW,WAAYF,GAE7B,OAAOG,EAAAA,EAAAA,KADSC,oCAFH,mBAGsBb,EAAQc,KAAKC,UAAUL,GAK5D,CAJE,MAAOM,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EA4FEC,YA1FF,SAAqBR,EAAWC,GAC9B,IACE,IACMV,EAAS,CAAEW,WAAYF,GAE7B,OAAOG,EAAAA,EAAAA,KADSC,oCAFH,oBAGsBb,EAAQc,KAAKC,UAAUL,GAK5D,CAJE,MAAOM,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EAgFEE,OAhFD,SACqB,EAAD,mCAgFnBC,aApEF,SAAsBC,GACpB,IACE,IACMpB,EAAS,CAAEqB,WAAYD,GAE7B,OAAOR,EAAAA,EAAAA,IADSC,oCAFH,oBAGqBb,EAKpC,CAJE,MAAOgB,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EA0DEM,aAxDF,SAAsBC,GACpB,IACE,IACMvB,EAAS,CAAEW,WAAYY,GAE7B,OAAOX,EAAAA,EAAAA,IADSC,oCAFH,yBAGqBb,EAKpC,CAJE,MAAOgB,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EA8CEQ,WA5CF,SAAoBD,GAClB,IACE,IACMvB,EAAS,CAAEW,WAAYY,GAE7B,OAAOX,EAAAA,EAAAA,IADSC,oCAFH,mBAGqBb,EAKpC,CAJE,MAAOgB,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EAkCES,cAhCF,SAAuBF,GACrB,IACE,IACMvB,EAAS,CAAEW,WAAYY,GAE7B,OAAOX,EAAAA,EAAAA,aADSC,oCAFH,sBAG8Bb,EAK7C,CAJE,MAAOgB,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EAsBEU,oBApBF,SAA6BH,GAC3B,IACE,IACMvB,EAAS,CAAEW,WAAYY,GAE7B,OAAOX,EAAAA,EAAAA,IADSC,oCAFH,6BAGqBb,EAKpC,CAJE,MAAOgB,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,E,kDCtGMW,EAAG,yCAAG,WAAO7B,EAAK8B,GAAI,8FAO6B,OAP3B5B,EAAM,+BAAG,CAAC,EAClC6B,EAAM,kBAAc/B,GAAG,OAAG8B,GACxBE,EAAU,CACd7B,OAAQ,MACR8B,YAAa,UACbC,QAAS,IAAIC,QAAQ,CAAE,eAAgB,sBAEzCJ,GAAM,WAAQ,IAAIK,gBAAgBlC,GAAQmC,YAAa,SACpCjC,MAAM2B,EAAQC,GAAS,KAAD,EAA/B,IAAJzB,EAAI,QACA+B,GAAG,CAAD,mBACU,MAAhB/B,EAAKgC,OAAc,iBACyD,OAA9EC,SAASC,OAAS,4DAA4D,kBACvE,CAAEF,OAAQ,oBAAmB,WAElB,MAAhBhC,EAAKgC,OAAc,0CACd,CAAEA,OAAQ,cAAa,iCAI3BhC,EAAKmC,QAAM,4CACnB,gBApBQ,wCAsBHC,EAAI,yCAAG,WAAO3C,EAAK8B,EAAM5B,EAAQD,GAAI,8EAQvC,OAPE2C,EAAM,kBAAc5C,GAAG,OAAG8B,GAC9Bc,GAAM,WAAQ,IAAIR,gBAAgBlC,GAAQmC,YACpCL,EAAU,CACd7B,OAAQ,OACR8B,YAAa,UACbC,QAAS,IAAIC,QAAQ,CAAE,eAAgB,qBACvClC,KAAAA,GACD,kBACMG,MAAMwC,EAAQZ,GAAS3B,MAAK,SAACC,GAElC,OADAE,QAAQC,IAAI,gBAAiBH,GACxBA,EAASgC,GAGPhC,EAASoC,OAFP,CAAEH,OAAQ,QAGrB,KAAE,2CACH,gBAhBS,4CAkBJM,EAAY,yCAAG,WAAO7C,EAAK8B,EAAM5B,GAAM,8EAOzC,OANE0C,EAAM,kBAAc5C,GAAG,OAAG8B,GAC9Bc,GAAM,WAAQ,IAAIR,gBAAgBlC,GAAQmC,YACpCL,EAAU,CACd7B,OAAQ,SACR8B,YAAa,UACbC,QAAS,IAAIC,QAAQ,CAAE,eAAgB,sBACxC,kBACM/B,MAAMwC,EAAQZ,GAAS3B,MAAK,SAACC,GAClC,OAAKA,EAASgC,GAGPhC,EAASoC,OAFP,CAAEH,OAAQ,QAGrB,KAAE,2CACH,gBAdiB,0CAelB,KAAiBV,IAAAA,EAAKc,KAAAA,EAAME,aAAAA,E,6FCnDb,SAASC,EAAc,GAA8B,IAA5BC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KACzD,OACE,SAACC,EAAA,EAAM,CACLC,GAAIF,EACJG,QAAQ,YACRC,UAAU,QACVL,QAASA,EACTM,GAAI,CACFC,MAAO,aACPC,aAAc,GACdC,gBAAiB,cACjBC,QAAS,UACT,UAAW,CACTH,MAAO,aACPE,gBAAiB,gBAEnB,SAEDV,GAGP,CAEAD,EAAca,aAAe,CAC3BX,QAAS,WAAO,G,eCvBH,SAASY,EAAU,GAAmB,IAAjBC,EAAY,EAAZA,aAClC,OACE,UAACf,EAAa,CAACG,KAAK,MAAK,WACvB,kBAAOa,KAAK,OAAOC,QAAM,EAACC,UAAQ,EAACC,OAAO,UAAUC,SAAUL,KAC9D,SAAC,IAAY,CAACP,GAAI,CAAEa,SAAU,WAC9B,SAACC,EAAA,EAAU,CAACd,GAAI,CAAEe,WAAY,QAAS,SAAC,iBAG9C,C,wNCqGA,GACEC,mBAAoB,WACpBC,mBAAoB,KACpBC,UAAW,GACXC,iBAAkB,KAClBN,SAAU,GACVO,WAAY,GACZC,YAAa,IACbC,gBAAiB,IACjBC,cAAe,GACfC,sBAAuB,GACvBC,UAAW,EACXC,UAAW,GACXC,aAAc,EACdC,WA3HiB,CACjBC,GAAI,CACFC,SAAS,EACTC,MAAO,KACPC,OAAQ,KACRC,KAAM,aACNC,MAAM,SAACC,EAAA,EAAe,CAACnC,GAAI,CAAEoC,GAAI,EAAGC,KAAM,WAC1CC,cAAe,CAAC,KAAM,OAExBC,GAAI,CACFT,SAAS,EACTC,MAAO,KACPC,OAAQ,KACRC,KAAM,aACNC,MAAM,SAACC,EAAA,EAAe,CAACnC,GAAI,CAAEoC,GAAI,EAAGC,KAAM,YAE5CG,YAAa,CACXV,SAAS,EACTE,OAAQ,KACRD,MAAO,KACPE,KAAM,eACNC,MACE,SAACC,EAAA,EAAe,CACdnC,GAAI,CACFoC,GAAI,EACJK,UAAW,gBACXJ,KAAM,WAIZC,cAAe,CAAC,cAAe,gBAEjCI,YAAa,CACXZ,SAAS,EACTE,OAAQ,KACRD,MAAO,KACPE,KAAM,eACNC,MAAM,SAACC,EAAA,EAAe,CAACnC,GAAI,CAAEoC,GAAI,EAAGK,UAAW,gBAAiBJ,KAAM,YAExEM,eAAgB,CACdb,SAAS,EACTE,OAAQ,IACRD,MAAO,IACPE,KAAM,wBACNC,MAAM,SAACU,EAAA,EAAY,CAAC5C,GAAI,CAAEqC,KAAM,UAAWD,GAAI,MAEjDS,cAAe,CACbf,SAAS,EACTE,OAAQ,IACRD,MAAO,KACPE,KAAM,uBACNC,MAAM,SAACU,EAAA,EAAY,CAAC5C,GAAI,CAAEqC,KAAM,UAAWD,GAAI,MAEjDU,OAAQ,CACNhB,SAAS,EACTE,OAAQ,KACRD,MAAO,KACPE,KAAM,OACNC,MAAM,SAACU,EAAA,EAAY,CAAC5C,GAAI,CAAEqC,KAAM,UAAWD,GAAI,MAEjDW,eAAgB,CACdjB,SAAS,EACTE,OAAQ,KACRD,MAAO,KACPE,KAAM,SACNC,MACE,SAACc,EAAA,EAAY,CACXhD,GAAI,CACFG,gBAAiB,UACjBkC,KAAM,QACND,GAAI,MAKZa,WAAY,CACVnB,SAAS,EACTE,OAAQ,KACRD,MAAO,KACPE,KAAM,QACNC,MACE,SAACgB,EAAA,EAAa,CACZlD,GAAI,CACFqC,KAAM,QACNc,WACE,sFACFf,GAAI,MAKZgB,gBAAiB,CACftB,SAAS,EACTE,OAAQ,KACRD,MAAO,KACPE,KAAM,OACNC,MACE,SAACgB,EAAA,EAAa,CACZlD,GAAI,CACFqC,KAAM,QACNc,WACE,sFACFf,GAAI,Q,UCxGd,SAASiB,EAAkBC,EAAOC,EAAWC,EAAYC,EAAUC,GACjE,IAAMC,EAAazE,SAAS0E,cAAc,UAC1CD,EAAW5B,MAAQwB,EACnBI,EAAW3B,OAASwB,EACpB,IAGIK,EACAC,EAJEC,EAAMJ,EAAWK,WAAW,MAC5BC,EAAcV,EAAYC,EAC3BzB,EAAkBwB,EAAXvB,EAAsBwB,EAG5BU,EAAcC,KAAKC,MAAMD,KAAKE,KAAKd,EAAYE,IACrD,GAAoB,IAAhBS,EACFH,EAAIO,UAAUhB,EAAO,EAAG,EAAGvB,EAAOC,EAAQ,EAAG,EAAGyB,EAAUC,OACrD,CACL,IAAK,IAAIa,EAAI,EAAGA,EAAIL,EAAaK,GAAK,EAEpCT,GADAD,EAAW9B,GAAS,GACGkC,EACb,IAANM,EACFR,EAAIO,UAAUhB,EAAO,EAAG,EAAGvB,EAAOC,EAAQ,EAAG,EAAG6B,EAAUC,GAE1DC,EAAIO,UAAUX,EAAY,EAAG,EAAG5B,EAAOC,EAAQ,EAAG,EAAG6B,EAAUC,GAEjE/B,EAAQ8B,EACR7B,EAAS8B,EAGXC,EAAIO,UAAUX,EAAY,EAAG,EAAG5B,EAAOC,EAAQ,EAAG,EAAGyB,EAAUC,EACjE,CAEA,IAAMc,EAAUtF,SAAS0E,cAAc,UAKvC,OAJAY,EAAQzC,MAAQ0B,EAChBe,EAAQxC,OAAS0B,EACFc,EAAQR,WAAW,MAC3BM,UAAUX,EAAY,EAAG,EAAGF,EAAUC,EAAW,EAAG,EAAGD,EAAUC,GACjEc,CACT,CA8BA,SAASC,EAAWC,EAAKC,EAAQC,EAAQC,GACvC,OAAIA,EAASH,EAAIC,IAAWD,EAAIE,GAAUC,EAAeD,EAClDD,CACT,CAsEC,SAEcG,EAAc,EAAD,uDAU3B,OAV2B,0BAA5B,WAA6BxB,EAAOC,EAAWC,EAAYuB,EAAUC,EAASC,GAAQ,sFAMM,OALpFC,EAAkBH,EAAWC,EAC5BvB,EACLF,EAAYY,KAAKgB,KAAKD,GADPxB,EAEfF,EAAaW,KAAKgB,KAAKD,GAEnBE,EAAgB/B,EAAkBC,EAAOC,EAAWC,EAAYC,EAAUC,GAAW,EAAD,OAC9D,IAAI2B,SAAQ,SAACC,GAAO,OAAKF,EAAcG,OAAOD,EAASL,EAAS,IAAE,KAAD,EACrC,OADlDO,EAAa,OACbC,EAAeC,IAAIC,gBAAgBH,GAAc,kBAChD,CAACA,EAAeC,EAAchC,EAAUC,IAAU,4CAC1D,+BAEckC,EAAY,EAAD,mDAmCzB,OAnCyB,0BAA1B,WAA2BC,EAAGvC,EAAOwC,EAAMC,GAAe,sGAetD,GAfsD,EACXF,EAAEhB,OAAvCmB,EAAY,EAAZA,aAAcC,EAAa,EAAbA,cAAeC,EAAG,EAAHA,IAC/BC,EAAK,UAAMC,KAAKC,MAAK,YAAIP,EAAKnG,MAC9BsE,EAAc+B,EAAeC,EAC7BK,EAAOC,EAAAA,EAAAA,QAAcT,GACvBU,EAAc,CAChBL,MAAAA,EACAD,IAAAA,EACAD,cAAAA,EACAD,aAAAA,EACA/B,YAAAA,EACAwC,kBAAmBxC,EACnBzD,KAAMsF,EAAKtF,KACXsF,KAAAA,EACAQ,KAAMC,EAAAA,EAAAA,QAAcT,MAElBQ,EAAOI,EAAAA,cAAsB,iCACsB5B,EACnDxB,EACA0C,EACAC,EACAK,EACAI,EAAAA,aACAZ,EAAKtF,MACL,KAAD,0BAPMmG,EAAO,KAAEC,EAAM,KAAE/C,EAAQ,KAAEC,EAAS,KAQ3C0C,GAAW,kBACNA,GAAW,IACdN,IAAKU,EACLX,cAAenC,EACfkC,aAAcnC,EACdiC,KAAMa,EACNL,KAAMC,EAAAA,EAAAA,QAAcI,KACpB,QAEJZ,EAAgBS,GAAa,6CAC9B,sBAE6B,aAY7B,OAZ6B,0BAA9B,WAA+BK,EAAOC,EAAkBC,EAAqBC,GAAe,4EACtFH,EAAMhC,OAAOoC,QACfH,GAAiB,SAACI,GAAG,OAAKA,EAAML,EAAMhC,OAAOoC,MAAME,MAAM,IACzDJ,EAAoBF,EAAMhC,OAAOoC,MAAME,SACjCF,EAAQG,MAAMC,KAAKR,EAAMhC,OAAOoC,QAChCK,IAAG,yCAAC,WAAOxB,GAAI,6EACbxC,EAAQ,IAAIiE,OACZC,OAAS,SAAC3B,GAAC,OAAKD,EAAYC,EAAGvC,EAAOwC,EAAMkB,EAAiB,EACnE1D,EAAM4C,IAAMR,IAAIC,gBAAgBG,GAAM,2CACvC,mDAJQ,IAKTmB,EAAMK,KAAI,SAACxB,GAAI,OAAKJ,IAAI+B,gBAAgB3B,EAAK,KAC9C,2CACF,wBAED,SAAS4B,EAAoBC,EAAMC,EAAMC,GACvC,IAAMC,EAASH,EAAOC,EACtB,OAAIE,EAASD,EAAU,CAACF,EAAMA,EAAOE,GACjCC,EAASD,EAAU,CAACD,EAAOC,EAAGD,GAC3B,CAACD,EAAMC,EAChB,CAEA,SAASG,EAAS9F,EAAM+F,EAAGC,EAAGC,EAAUrH,EAAUO,GAGhD,GAAoB,IAAhBa,EAAKkF,OAAc,MAAO,GAC9B,IACMgB,EAAajJ,SAAS0E,cAAc,UAC1CuE,EAAWpG,MAAQmG,EAAW,GAC9BC,EAAWnG,OAAS,IACpB,IAAM+B,EAAMoE,EAAWnE,WAAW,MAClCD,EAAIqE,KAAI,UAAMvH,EAAQ,YACtBkD,EAAIsE,UAAY,SAShB,IARA,IAAMC,EAAQN,EACVO,EAAQN,EACNO,EAAQvG,EAAKwG,MAAM,KACrBC,EAAO,GACPC,EAAW,GACTC,EAAY,GAGTC,EAAI,EAAGA,EAAIL,EAAMrB,OAAQ0B,GAAK,EAAG,CAExCF,GAAQ,UAAOH,EAAMK,GAAE,KACP9E,EAAI+E,YAAYH,GACN5G,MAEVoG,EAAWpG,OAAS8G,EAAI,GAEtCD,EAAUG,KAAK,CAACL,EAAMJ,EAAOC,IAE7BA,GAASnH,EAETsH,EAAI,UAAMF,EAAMK,GAAE,KAClBF,EAAQ,UAAMH,EAAMK,GAAE,MAGtBH,GAAI,UAAOF,EAAMK,GAAE,KAIjBA,IAAML,EAAMrB,OAAS,GACvByB,EAAUG,KAAK,CAACL,EAAMJ,EAAOC,GAEjC,CAEA,OAAOK,CACT,CAEA,SAASI,EAAc/G,EAAM+F,EAAGC,EAAGC,EAAUrH,EAAUO,EAAY8C,GACjE,GAAoB,IAAhBjC,EAAKkF,OACP,OAAO,EAET,IAAQ9F,EAAgBqF,EAAAA,YASxB,OARkBqB,EAChB9F,EACA+F,EACAC,EACAC,EACArH,EAAWqD,EACX9C,EAAa8C,GAEGiD,OAAS/F,EAAa,EAAIC,GAAe6C,CAC7D,CAiCA,OACE+E,OAjNF,WAEE,MADe,CAAC,IAAK,KACP9E,KAAK+E,MAAM/E,KAAKgF,UAChC,EA+MEC,YA5OF,SAAqB1E,EAAKG,GACxB,IAAMgE,EAAInE,EAAIyC,OAEd,GAAItC,GAAUH,EAAI,GAAI,OAAO,EAC7B,GAAIG,GAAUH,EAAImE,EAAI,GAAI,OAAOA,EAAI,EAKrC,IAHA,IAAIQ,EAAQ,EACRC,EAAMT,EACNU,EAAM,EACHF,EAAQC,GAAK,CAGlB,GAAI5E,EAFJ6E,GAAOF,EAAQC,GAAO,KAELzE,EAAQ,OAAO0E,EAEhC,GAAI1E,EAASH,EAAI6E,GAAM,CACrB,GAAIA,EAAM,GAAK1E,EAASH,EAAI6E,EAAM,GAAI,OAAO9E,EAAWC,EAAK6E,EAAM,EAAGA,EAAK1E,GAC3EyE,EAAMC,CACR,KAAO,CACL,GAAIA,EAAMV,EAAI,GAAKhE,EAASH,EAAI6E,EAAM,GAAI,OAAO9E,EAAWC,EAAK6E,EAAKA,EAAM,EAAG1E,GAC/EwE,EAAQE,EAAM,CAChB,CACF,CAEA,OAAOA,CACT,EAqNEC,YA9MF,SAAqB9E,EAAKG,GAMxB,IALA,IAAIwE,EAAQ,EACRC,EAAM5E,EAAIyC,OAAS,EACnB5C,EAAI8E,EACJI,EAAIH,EACJI,EAAkBvF,KAAKwF,IAAIjF,EAAI2E,GAAS3E,EAAI4E,GAAOzE,GAChDwE,GAASC,GACd,GAAI5E,EAAI2E,GAAS3E,EAAI4E,GAAOzE,EACtBV,KAAKwF,IAAIjF,EAAI2E,GAAS3E,EAAI4E,GAAOzE,GAAU6E,IAE7CA,EAAkBvF,KAAKwF,IAAIjF,EAAI2E,GAAS3E,EAAI4E,GAAOzE,GACnDN,EAAI8E,EACJI,EAAIH,GAENA,GAAO,MACF,MAAI5E,EAAI2E,GAAS3E,EAAI4E,IAAQzE,GAO7B,CAELN,EAAI8E,EACJI,EAAIH,EACJ,KACF,CAXMnF,KAAKwF,IAAIjF,EAAI2E,GAAS3E,EAAI4E,GAAOzE,GAAU6E,IAC7CA,EAAkBvF,KAAKwF,IAAIjF,EAAI2E,GAAS3E,EAAI4E,GAAOzE,GACnDN,EAAI8E,EACJI,EAAIH,GAEND,GAAS,CAMX,CAGF,OADqBlF,KAAK+E,MAAM/E,KAAKgF,UACZ,CAAC5E,EAAGkF,GACtB,CAACA,EAAGlF,EACb,EA+KEqF,eA7KF,SAAwBC,EAAKC,EAAKC,GAChC,MAAY,MAARF,EAAoBC,EAAMC,EACtBD,EAAMC,GAAQD,EAAMC,EAC9B,EA2KEC,gBA1HD,SAE8B,EAAD,uCAyH5BjC,SAAAA,EACAkC,cAtBoB,SAACC,GAAK,qBAAaA,EAAMC,EAAC,aAAKD,EAAME,EAAC,aAAKF,EAAMG,EAAC,aAAKH,EAAMrC,EAAC,MAuBlFH,oBAAAA,EACA4C,eApRF,SACEvG,EACAwG,EACAC,EACAtG,EACAuG,EACAC,EACAC,GAEA,IAAQ9J,EAA0B6F,EAAAA,SAAhBrF,EAAgBqF,EAAAA,YAClC3C,EAAIqE,KAAI,UAAMlE,EAAcrD,EAAQ,YACpCkD,EAAIsE,UAAY,SAChBtE,EAAI6G,aAAe,MACnB7G,EAAI8G,UAAY,YAChB9G,EAAI+G,SAAS,EAAGN,EAAUC,EAAaD,EAAWG,GAClD5G,EAAI8G,UAAY,QAEhB,IAC6B,EAD7B,UACoBN,GAAS,IAA7B,2BAA+B,CAAC,IAArBQ,EAAK,QACd,UAAwBA,EAAK,GAAtBC,EAAQ,KAAI/C,EAAC,KACpBlE,EAAIkH,SACFD,EACAE,SAAST,EAAc,EAAG,IAC1BS,SAASjD,EAAIuC,EAAW,IAAMtG,EAAc7C,EAAcqJ,EAAc,IAE5E,CAAC,+BACH,EA2PE1B,cAAAA,EACAmC,mBA1CF,SACEC,EACAC,EACApJ,EACA+F,EACAC,EACApH,EACAO,EACA8C,EACAD,GAIA,OAAOyD,EAAoB0D,EAAYC,EADpBrC,EAAc/G,EAAM+F,EAAGC,EAAGmD,EAAYvK,EAAUO,EAAY8C,GACdD,EACnE,EA6BEqH,mBAzBF,SAA4BC,EAAeC,EAAgBC,GACzD,IAAMC,EAAKH,EAAgBC,EACrBG,EAAmBF,EAAiBnE,KAAI,SAACsE,GAC7C,IAAMC,EAAgBN,EAAgBK,EAAG1B,MAAMlE,aAAgB4F,EAAG1B,MAAMnI,MAClE+J,EAAgBD,EAAeH,EAGrC,MAAO,CADOH,EAAgBM,EAAeL,EAAiBM,EAC/C,CAACD,EAAcC,GAChC,IAEA,OADAH,EAAiBI,MAAK,SAAClE,EAAGwC,GAAC,OAAKA,EAAE,GAAKxC,EAAE,EAAE,IACpC8D,EAAiB,GAAG,EAC7B,G,wGC3Se,SAASK,EAAYzB,EAAWC,EAAUG,EAAY3I,GACnE,IAAQnB,EAAsC6F,EAAAA,SAA5BtF,EAA4BsF,EAAAA,WAAhBrF,EAAgBqF,EAAAA,YAE9C,OADAxJ,QAAQC,IAAI,eAAgBoN,EAAWC,EAAUnJ,EAAcW,IAE7D,iCACE,SAACiK,EAAA,EAAK,CACJjM,GAAI,CACFgC,OAAQ2I,EACRxK,iBAAiB+L,EAAAA,EAAAA,IAAM,UAAW,IAClC1B,SAAU,WACV2B,IAAK3B,EACLzI,MAAO,UAKTwI,EAAUjD,KAAI,SAACyD,GAAK,OAClB,SAACjK,EAAA,EAAU,CAETd,GAAI,CACF+B,MAAO,OACPyI,SAAU,WACV2B,IAAK3B,EAAWO,EAAM,GAAK1J,EAAcW,EACzCoK,SAAU,EACVnM,MAAO,cACPoI,UAAW,SACXgE,WAAY,QACZxL,SAAS,GAAD,OAAKA,EAAQ,MACrBO,WAAW,GAAD,OAAKA,EAAU,MACzBkL,cAAe,UACf,SAEDvB,EAAM,IAdFA,EAAM,GAeA,MAKvB,C,+CCpCqBwB,EAAI,WACvB,WAAYrC,IAAQ,eAClBsC,KAAKtC,MAAQA,EACbsC,KAAKC,KAAO,KACZD,KAAKE,MAAQ,IACf,CA2ZC,OA3ZA,kCAED,SAAWC,GACT,OAAW,MAAPA,GACFH,KAAKtC,MAAQyC,EAAIzC,MACD,MAAZyC,EAAIF,OACND,KAAKC,KAAO,IAAIF,EAAKI,EAAIF,KAAKvC,OAC9BsC,KAAKC,KAAKG,WAAWD,EAAIF,OAEV,MAAbE,EAAID,QACNF,KAAKE,MAAQ,IAAIH,EAAKI,EAAID,MAAMxC,OAChCsC,KAAKE,MAAME,WAAWD,EAAID,QAErBF,MAEF,IACT,GAAC,sBAED,WACE,MAAI,QAASA,KAAKtC,MACV,GAAN,eAAWsC,KAAKC,KAAKI,aAAU,OAAKL,KAAKE,MAAMG,aAG1C,CAACL,KAAKtC,MAAMnI,MAAQyK,KAAKtC,MAAMlI,OACxC,GAAC,qBAED,WACE,IAAI8K,EAAS,GACb,EAAoCN,KAAKtC,MAAjCL,EAAG,EAAHA,IAAK1D,EAAK,EAALA,MAAOlC,EAAW,EAAXA,YACpB,OAAa,OAATuI,KAAsB,MACtB,QAASA,KAAKtC,OAAO4C,EAAO/D,KAAK,CAACc,EAAK5F,IACvC,UAAWuI,KAAKtC,OAAO4C,EAAO/D,KAAK,CAAC5C,EAAOlC,IAC7B,OAAduI,KAAKC,OAAeK,EAASA,EAAOC,OAAOP,KAAKC,KAAK3K,YACtC,OAAf0K,KAAKE,QAAgBI,EAASA,EAAOC,OAAOP,KAAKE,MAAM5K,YACpDgL,EACT,GAAC,kBAED,WACE,GAAa,OAATN,KAAe,OAAO,KAC1B,IAAMQ,EAAW,IAAIT,GAAK,UAAKC,KAAKtC,QAGpC,OAFiB,MAAbsC,KAAKC,OAAcO,EAASP,KAAOD,KAAKC,KAAKQ,QAC/B,MAAdT,KAAKE,QAAeM,EAASN,MAAQF,KAAKE,MAAMO,QAC7CD,CACT,GAAC,2BAED,SAAcE,GAAY,IAAD,OACvB,GAAa,OAATV,KAAe,CACjB,GAAI,UAAWA,KAAKtC,MAAO,CACzB,IAAMiD,EAAYD,EAAUC,WAAU,SAACC,GAAI,OAAKA,EAAKjH,QAAU,EAAK+D,MAAM/D,KAAK,IACzEkH,EAAYH,EAAUC,GAC5BX,KAAKtC,MAAMhE,IAAMmH,EAAUnH,GAC7B,CACiB,MAAbsG,KAAKC,MAAcD,KAAKC,KAAKa,cAAcJ,GAC7B,MAAdV,KAAKE,OAAeF,KAAKE,MAAMY,cAAcJ,EACnD,CACF,GAAC,6BAED,WACE,GAAa,OAATV,KAAe,CACjB,GAAI,UAAWA,KAAKtC,MAAO,CACzB,MAAyBsC,KAAKtC,MAAdqD,GAAL,EAAHrH,KAAY,aACpBsG,KAAKtC,MAAQqD,CACf,CACiB,MAAbf,KAAKC,MAAcD,KAAKC,KAAKe,kBACf,MAAdhB,KAAKE,OAAeF,KAAKE,MAAMc,iBACrC,CACF,GAAC,0BAED,SAAaC,GAAY,IAAD,OACtB,GAAa,OAATjB,KAAe,CACjB,GAAI,UAAWA,KAAKtC,MAAO,CACzB,IAAM5G,EAAQmK,EAAUC,MAAK,SAACN,GAAI,OAAKA,EAAKjH,QAAU,EAAK+D,MAAM/D,KAAK,IACtEqG,KAAKtC,MAAMhE,IAAM5C,EAAM4C,GACzB,CACiB,MAAbsG,KAAKC,MAAcD,KAAKC,KAAKkB,aAAaF,GAC5B,MAAdjB,KAAKE,OAAeF,KAAKE,MAAMiB,aAAaF,EAClD,CACF,GAAC,yBAED,SACErN,EACAF,EACA0N,EACAC,EACAC,EACAC,EACAC,GAEA,MAAoCxB,KAAKtC,MAAjCnI,EAAK,EAALA,MAAOoE,EAAK,EAALA,MAAOD,EAAG,EAAHA,IAEhB+H,EAFsB,EAADjG,EAEV+F,EACXG,EAHyB,EAADjG,EAGb6F,EACjB,OACE,iCACE,SAACK,EAAA,EAAG,CAEFpO,UAAU,MACVoG,MAAOA,EACPiI,IAAKjI,EACLpE,MAAOA,EAAQ,EAAI3B,EACnBiO,OAAQL,EACR9H,IAAKA,EACLlG,GAAI,CACFwK,SAAU,WACVpK,QAAQ,GAAD,OAAKA,EAAO,MACnBF,aAAa,GAAD,OAAKA,EAAY,MAC7BuM,KAAMD,KAAKtC,MAAMlC,EAAI+F,EACrB5B,IAAKK,KAAKtC,MAAMjC,EAAI6F,IAZjB3H,IAeK,IAAXyH,GACC,SAACU,EAAA,EAAO,CAACnI,MAAM,eAAc,UAC3B,SAACoI,EAAA,EAAU,CACTjI,KAAK,SACLtG,GAAI,CACFC,OAAOiM,EAAAA,EAAAA,IAAM,OAAQ,IACrBsC,SAAStC,EAAAA,EAAAA,IAAM,OAAQ,IACvB1B,SAAU,WACV2B,IAAK+B,EAAO9N,EACZqM,KAAMwB,EAAOlM,EACb3B,QAAQ,GAAD,OAAKA,EAAO,MACnBF,aAAc,cACduC,UAAW,uBAEb/C,QAAS,kBAAMmO,EAAkB1H,EAAM,EAAC,UAExC,SAACsI,EAAA,EAAU,CAACnI,KAAK,eAGnB,OAGV,GAAC,wBAED,SACElG,EACAF,EACA0N,EACAC,EACAC,EACAC,EACAC,GAEA,IAAQnE,EAAQ2C,KAAKtC,MAAbL,IACR,OAAa,OAAT2C,KAAsB,KACtB3C,GAEA,gCACgB,MAAb2C,KAAKC,KACFD,KAAKC,KAAKiC,WACRtO,EACAF,EACA0N,EACAC,EACAC,EACAC,EACAC,GAEF,KACW,MAAdxB,KAAKE,MACFF,KAAKE,MAAMgC,WACTtO,EACAF,EACA0N,EACAC,EACAC,EACAC,EACAC,GAEF,QAIN,UAAWxB,KAAKtC,MACXsC,KAAKmC,YACVvO,EACAF,EACA0N,EACAC,EACAC,EACAC,EACAC,GAEG,IACT,GAAC,yBAED,SAAY1K,GACV,IAAMK,EAAazE,SAAS0E,cAAc,UAC1CD,EAAW5B,MAAQyK,KAAKtC,MAAMlE,aAC9BrC,EAAW3B,OAASwK,KAAKtC,MAAMjE,cAC/B,IAGIpC,EACAC,EAJE8K,EAAUjL,EAAWK,WAAW,MAClCjC,EAAQyK,KAAKtC,MAAMlE,aACnBhE,EAASwK,KAAKtC,MAAMjE,cAGlB/B,EAAcC,KAAKC,MAAMD,KAAKE,KAAKmI,KAAKtC,MAAMlE,aAAewG,KAAKtC,MAAMnI,QAC9E,GAAoB,IAAhBmC,EACF0K,EAAQtK,UAAUhB,EAAO,EAAG,EAAGvB,EAAOC,EAAQ,EAAG,EAAGwK,KAAKtC,MAAMnI,MAAOyK,KAAKtC,MAAMlI,YAC5E,CACL,IAAK,IAAIuC,EAAI,EAAGA,EAAIL,EAAaK,GAAK,EAEpCT,GADAD,EAAW9B,GAAS,GACGyK,KAAKtC,MAAMjG,YACxB,IAANM,EAEFqK,EAAQtK,UAAUhB,EAAO,EAAG,EAAGvB,EAAOC,EAAQ,EAAG,EAAG6B,EAAUC,GAE9D8K,EAAQtK,UAAUX,EAAY,EAAG,EAAG5B,EAAOC,EAAQ,EAAG,EAAG6B,EAAUC,GAErE/B,EAAQ8B,EACR7B,EAAS8B,EAGX8K,EAAQtK,UAAUX,EAAY,EAAG,EAAG5B,EAAOC,EAAQ,EAAG,EAAGwK,KAAKtC,MAAMnI,MAAOyK,KAAKtC,MAAMlI,OACxF,CACA,OAAO2B,CACT,GAAC,0BAED,SAAaI,EAAKJ,EAAYvD,EAASyO,EAAQf,EAASC,GACtD,IAAM/F,EAAIwE,KAAKtC,MAAMlC,EAAI5H,EAAU2N,EAC7B9F,EAAIuE,KAAKtC,MAAMjC,EAAI7H,EAAU0N,EAC7BgB,EAAYtC,KAAKtC,MAAMnI,MAAQ,EAAI3B,EACnC2O,EAAaD,EAAYtC,KAAKtC,MAAMjG,YAE1CF,EAAIiL,OACJjL,EAAIkL,YACJlL,EAAImL,OAAOlH,EAAI6G,EAAQ5G,GACvBlE,EAAIoL,OAAOnH,EAAI8G,EAAYD,EAAQ5G,GACnClE,EAAIqL,iBAAiBpH,EAAI8G,EAAW7G,EAAGD,EAAI8G,EAAW7G,EAAI4G,GAC1D9K,EAAIoL,OAAOnH,EAAI8G,EAAW7G,EAAI8G,EAAaF,GAC3C9K,EAAIqL,iBAAiBpH,EAAI8G,EAAW7G,EAAI8G,EAAY/G,EAAI8G,EAAYD,EAAQ5G,EAAI8G,GAChFhL,EAAIoL,OAAOnH,EAAI6G,EAAQ5G,EAAI8G,GAC3BhL,EAAIqL,iBAAiBpH,EAAGC,EAAI8G,EAAY/G,EAAGC,EAAI8G,EAAaF,GAC5D9K,EAAIoL,OAAOnH,EAAGC,EAAI4G,GAClB9K,EAAIqL,iBAAiBpH,EAAGC,EAAGD,EAAI6G,EAAQ5G,GACvClE,EAAIsL,YACJtL,EAAIuL,OAEJvL,EAAIO,UACFX,EACA,EACA,EACA6I,KAAKtC,MAAMnI,MACXyK,KAAKtC,MAAMlI,OACXgG,EACAC,EACA6G,EACAC,GAEFhL,EAAIwL,SACN,GAAC,2BAED,SAAcC,EAAepP,EAASyO,EAAQf,EAASC,GAAU,IAAD,OAM9D,GALI,QAASvB,KAAKtC,QAChBsC,KAAKC,KAAKgD,cAAcD,EAAepP,EAASyO,EAAQf,EAASC,GACjEvB,KAAKE,MAAM+C,cAAcD,EAAepP,EAASyO,EAAQf,EAASC,IAGhE,UAAWvB,KAAKtC,MAAO,CACzB,IAAMnG,EAAMyL,EAAcxL,WAAW,MAC/B0L,EAAS,IAAInI,MACnBmI,EAAOlI,OAAS,WACd,IAAM7D,EAAa,EAAKgM,YAAYD,GAC9Bd,EAAUjL,EAAWK,WAAW,MACtC,EAAK4L,aAAa7L,EAAKJ,EAAYvD,EAASyO,EAAQf,EAASC,GAC7Da,EAAQiB,UAAU,EAAG,EAAGlM,EAAW5B,MAAO4B,EAAW3B,OACvD,EACA0N,EAAOxJ,IAAMsG,KAAKtC,MAAMhE,GAC1B,CACF,GAAC,sBAED,SAAS4J,EAAQC,EAAKC,GACpB,IAAMC,EAAuBH,EAAOxI,KAAI,SAAChE,GAAK,OAAKA,EAAM0C,aAAe1C,EAAM2C,aAAa,IAC3F,GAAI+J,EAAa,EAAG,MAAO,GAC3B,GAAmB,IAAfA,EAAkB,CACpB,IAAME,EAAe1S,EAAQ4L,YAAY6G,EAAsBF,GAI/D,OAHAvD,KAAKtC,MAAQ4F,EAAOI,GACpB1D,KAAKC,KAAO,KACZD,KAAKE,MAAQ,KACP,GAAN,eAAWoD,EAAOK,MAAM,EAAGD,KAAa,OAAKJ,EAAOK,MAAMD,EAAe,IAC3E,CAEA,IAcIE,EACA3J,EAfEoD,EAAMrM,EAAQyL,SAEpB,GADAuD,KAAKtC,MAAQ,CAAEL,IAAAA,EAAKpD,kBAAmBsJ,GACpB,IAAfC,EAAkB,CACpB,MAAgCxS,EAAQgM,YAAYyG,EAAsBF,GAAI,eAAvEM,EAAS,KAAEC,EAAU,KAQ5B,OAPA9D,KAAKtC,MAAMjG,YAAczG,EAAQoM,eAC/B4C,KAAKtC,MAAML,IACXiG,EAAOO,GAAWpM,YAClB6L,EAAOQ,GAAYrM,aAErBuI,KAAKC,KAAO,IAAIF,EAAKuD,EAAOO,IAC5B7D,KAAKE,MAAQ,IAAIH,EAAKuD,EAAOQ,IACtBR,EAAOS,QAAO,SAACC,EAAMC,GAAK,OAAM,CAACJ,EAAWC,GAAYI,SAASD,EAAM,GAChF,CAIAjE,KAAKC,KAAO,IAAIF,EAAK,CAAE1C,IAAKrM,EAAQyL,WAEpCuD,KAAKE,MAAQ,IAAIH,EAAK,CAAE1C,IAA6B,MAAxB2C,KAAKC,KAAKvC,MAAML,IAAc,IAAM,MAEjEpD,EAAoBsJ,EAAM,EACd,MAARlG,IACFpD,EAA0B,EAANsJ,GAGtB,IACA,EADqB5L,KAAK+E,MAAM/E,KAAKgF,UACE,CAAC,OAAQ,SAAW,CAAC,QAAS,QAAO,eAArEwH,EAAK,KAAEC,EAAM,KAcpB,OAbAR,EAAa5D,KAAKmE,GAAOE,SACvBf,EACArJ,EACAuJ,EAAa7L,KAAKC,MAAM4L,EAAa,IAEvCI,EAAa5D,KAAKoE,GAAQC,SAAST,EAAY3J,EAAmBtC,KAAKC,MAAM4L,EAAa,IAE1FxD,KAAKtC,MAAMjG,YAAczG,EAAQoM,eAC/B4C,KAAKtC,MAAML,IACX2C,KAAKC,KAAKvC,MAAMjG,YAChBuI,KAAKE,MAAMxC,MAAMjG,aAGZmM,CACT,GAAC,oBAED,SAAOU,GACL,IAAIC,EAAc,EAClB,OAAa,OAATvE,MAEc,OAAdA,KAAKC,MAAgC,OAAfD,KAAKE,QACzBF,KAAKtC,MAAMjG,YAAcuI,KAAKtC,MAAMzD,kBAAoBqK,IAC1DtE,KAAKtC,MAAML,IAAM,IACjBkH,GAAe,GAEbvE,KAAKtC,MAAMjG,YAAcuI,KAAKtC,MAAMzD,kBAAoBqK,IAC1DtE,KAAKtC,MAAML,IAAM,IACjBkH,GAAe,GAGM,MAAnBvE,KAAKtC,MAAML,KACb2C,KAAKC,KAAKvC,MAAMzD,kBAAoB+F,KAAKtC,MAAMzD,kBAAoB,EACnE+F,KAAKE,MAAMxC,MAAMzD,kBAAoB+F,KAAKtC,MAAMzD,kBAAoB,IAEpE+F,KAAKC,KAAKvC,MAAMzD,kBAAmD,EAA/B+F,KAAKtC,MAAMzD,kBAC/C+F,KAAKE,MAAMxC,MAAMzD,kBAAmD,EAA/B+F,KAAKtC,MAAMzD,mBAElDsK,GAAevE,KAAKC,KAAKuE,OAAOF,GAAMtE,KAAKE,MAAMsE,OAAOF,GACxDtE,KAAKtC,MAAMjG,YAAczG,EAAQoM,eAC/B4C,KAAKtC,MAAML,IACX2C,KAAKC,KAAKvC,MAAMjG,YAChBuI,KAAKE,MAAMxC,MAAMjG,cAvBK8M,CA4B5B,GAAC,qBAED,SAAQE,EAAaC,EAAcC,EAASC,EAASC,EAAWC,GAC5C,MAAdD,GACF7E,KAAKtC,MAAMlI,OAASkP,EACpB1E,KAAKtC,MAAMnI,MAAQyK,KAAKtC,MAAMlI,OAASwK,KAAKtC,MAAMjG,cAElDuI,KAAKtC,MAAMnI,MAAQkP,EACnBzE,KAAKtC,MAAMlI,OAASwK,KAAKtC,MAAMnI,MAAQyK,KAAKtC,MAAMjG,aAGnC,SAAbqN,GACF9E,KAAKtC,MAAMlC,EAAImJ,EACf3E,KAAKtC,MAAMjC,EAAImJ,GACQ,MAAdC,GACT7E,KAAKtC,MAAMjC,EAAImJ,EAAUF,EAAe1E,KAAKtC,MAAMlI,OACnDwK,KAAKtC,MAAMlC,EAAImJ,IAEf3E,KAAKtC,MAAMlC,EAAImJ,EAAUF,EAAczE,KAAKtC,MAAMnI,MAClDyK,KAAKtC,MAAMjC,EAAImJ,GAGC,OAAd5E,KAAKC,MACPD,KAAKC,KAAK8E,QACR/E,KAAKtC,MAAMnI,MACXyK,KAAKtC,MAAMlI,OACXwK,KAAKtC,MAAMlC,EACXwE,KAAKtC,MAAMjC,EACXuE,KAAKtC,MAAML,IACX,QAGe,OAAf2C,KAAKE,OACPF,KAAKE,MAAM6E,QACT/E,KAAKtC,MAAMnI,MACXyK,KAAKtC,MAAMlI,OACXwK,KAAKtC,MAAMlC,EACXwE,KAAKtC,MAAMjC,EACXuE,KAAKtC,MAAML,IACX,QAGN,GAAC,6BAED,WACE,GAAI,QAAS2C,KAAKtC,MAAO,CACvB,MAAkBsC,KAAKC,KAAK+E,kBAAiB,eAAtCC,EAAE,KAAEC,EAAG,KACd,EAAkBlF,KAAKE,MAAM8E,kBAAiB,eAAvCG,EAAE,KAAEC,EAAG,KACd,MAAO,CAACH,GAAME,EAAID,EAAI3E,OAAO6E,GAC/B,CACA,GAAI,UAAWpF,KAAKtC,MAAO,CACzB,IAAM2H,EACJrF,KAAKtC,MAAMnI,OAASyK,KAAKtC,MAAMlE,cAC/BwG,KAAKtC,MAAMlI,QAAUwK,KAAKtC,MAAMjE,cAClC,OAAO4L,EAAQ,CAACA,EAAO,IAAM,CAACA,EAAO,EAAC,UAAKrF,OAC7C,CACA,OAAO,CACT,KAAC,EAhasB,GCDJsF,EAAU,WAC7B,WAAY5H,GACV,IADkB,oBACA6H,IAAdvF,KAAKwF,KAEP,OADAxF,KAAKwF,KAAO,IAAIzF,EAAKrC,GACdsC,IAEX,CAoKC,OApKA,kCAED,SAAW9N,GACT8N,KAAKwF,KAAKtT,SAAO,UAAQA,EAC3B,GAAC,qBAED,WACE,OAAkB,OAAd8N,KAAKwF,KACAxF,KAAKwF,KAAKlQ,UAEZ,IACT,GAAC,2BAED,SAAcoL,GACM,OAAdV,KAAKwF,MAAexF,KAAKwF,KAAK1E,cAAcJ,EAClD,GAAC,wBAED,SAAWP,GAET,OADgB,MAAZA,EAAIqF,MAAcxF,KAAKwF,KAAKpF,WAAWD,EAAIqF,MACxCxF,IACT,GAAC,6BAED,WACE,IAAMyF,EAAWzF,KAAKS,OAItB,OAHkB,OAAdT,KAAKwF,MACPC,EAASD,KAAKxE,kBAETyE,CACT,GAAC,0BAED,SAAaxE,GACO,OAAdjB,KAAKwF,MAAexF,KAAKwF,KAAKrE,aAAaF,EACjD,GAAC,wBAED,SAAWhD,EAAaC,EAAckD,EAAQC,EAAmBG,GAC/D,IAAQnN,EAAsC6F,EAAAA,SAA5BtF,EAA4BsF,EAAAA,WAAhBrF,EAAgBqF,EAAAA,YAC9C,EAA0B8F,KAAKwF,KAAK9H,MAA5BnI,EAAK,EAALA,MAAOC,EAAM,EAANA,OACf,EAAwDwK,KAAKwF,KAAKtT,QAA1DuD,EAAI,EAAJA,KAAMiQ,EAAO,EAAPA,QAAS9R,EAAO,EAAPA,QAASF,EAAY,EAAZA,aAAcD,EAAK,EAALA,MACxCkS,EAAK3U,EAAQuK,SAAS9F,EAAM,EAAG,EAAGwI,EAAa5J,EAAUO,GACzDuJ,EAAa1I,EAAKkF,OAASgL,EAAGhL,OAAS/F,EAAa,EAAIC,EAAcW,EAAS,EACjF8L,GAAWpD,EAAeC,EAAa3I,GAAU,EAC/C+L,GAAWtD,EAAc1I,GAAS,EACpCyI,EAAWE,EAAeC,EAM9B,OALIuH,GAAWjQ,EAAKkF,OAAS,IAC3B2G,GAAWnD,EACXH,EAAW,GAGK,OAAdgC,KAAKwF,MAEL,SAAC7D,EAAA,EAAG,CAACnO,GAAI,CAAEG,gBAAiB,SAAU,UACpC,UAACgO,EAAA,EAAG,CACFpM,MAAO0I,EACPzI,OAAQ0I,EACR1K,GAAI,CACFwK,SAAU,WACVrK,gBAAiB3C,EAAQyM,cAAchK,IACvC,UAEDuM,KAAKwF,KAAKtD,WACTtO,EACAF,EACA0N,EACAC,EACAC,EACAC,EACAC,GAED/L,EAAKkF,OAAS6E,EAAYmG,EAAI3H,EAAUG,EAAY3I,GAAU,UAKhE,IACT,GAAC,2BAED,SAAcyI,EAAaC,EAAc8E,EAAetL,GACtD,IAAQrD,EAAsC6F,EAAAA,SAA5BtF,EAA4BsF,EAAAA,WAAhBrF,EAAgBqF,EAAAA,YAC9C,GAAkB,OAAd8F,KAAKwF,KAAe,CACtB,MAAwDxF,KAAKwF,KAAKtT,QAA1DuD,EAAI,EAAJA,KAAMiQ,EAAO,EAAPA,QAAS9R,EAAO,EAAPA,QAASF,EAAY,EAAZA,aAAcD,EAAK,EAALA,MAC9C,EAA0BuM,KAAKwF,KAAK9H,MAA5BnI,EAAK,EAALA,MAAOC,EAAM,EAANA,OACTmQ,EAAK3U,EAAQuK,SACjB9F,EACA,EACA,EACAwI,EACA5J,EAAWqD,EACX9C,EAAa8C,GAETyG,EAAa1I,EAAKkF,OACpBgL,EAAGhL,OAAS/F,EAAa8C,EAAc,EAAI7C,EAAcqJ,EACzD,EACAoD,GAAWpD,EAAeC,EAAa3I,GAAU,EAC/C+L,GAAWtD,EAAc1I,GAAS,EACpCyI,EAAWE,EAAeC,EAC1BuH,GAAWjQ,EAAKkF,OAAS,IAC3B2G,GAAWnD,EACXH,EAAW,GAEb,IAAMzG,EAAMyL,EAAcxL,WAAW,MACrCD,EAAI8G,UAAY,QAChB9G,EAAI+G,SAAS,EAAG,EAAG0E,EAAczN,MAAOyN,EAAcxN,QACtD+B,EAAI8G,UAAYrN,EAAQyM,cAAchK,GACtC8D,EAAI+G,SAAS,EAAG,EAAG0E,EAAczN,MAAOyN,EAAcxN,QACtDwK,KAAKwF,KAAKvC,cACRD,EACApP,EAAU8D,EACVhE,EAAegE,EACf4J,EACAC,GAEFvQ,EAAQ8M,eAAevG,EAAKoO,EAAI3H,EAAUtG,EAAauG,EAAaC,EAAcC,EACpF,CACF,GAAC,2BAED,WACE,IAAMyH,EAAQ5F,KAAKwF,KAAKnF,WACxB,OAAO1I,KAAKkO,IAAG,MAARlO,MAAI,OAAQiO,GACrB,GAAC,iCAED,SAAoBtC,EAAQC,GAC1BvD,KAAKwF,KAAKnB,SAASf,EAAQC,EAAKD,EAAO3I,OACzC,GAAC,oBAED,SAAO2J,GAML,IALA,IAAIwB,EAAO,EACPC,EAAa/F,KAAKS,OAClBuF,EAAkBhG,KAAKwF,KAAK9H,MAAMjG,YAChCwO,EAAsBjG,KAAKwF,KAAK9H,MAAMzD,mBAAqB,EAAIqK,GACjE4B,EAAU,IACPJ,EAAO,KAAOI,EAAU,GAAG,CAChCA,EAAUlG,KAAKwF,KAAKhB,OAAOF,GAC3BwB,GAAQ,EACR,IAAMK,EAAOnG,KAAKwF,KAAK9H,MAAMjG,YAAcuI,KAAKwF,KAAK9H,MAAMzD,kBAK3D,GAJItC,KAAKwF,IAAIgJ,GAAQxO,KAAKwF,IAAI6I,EAAkBhG,KAAKwF,KAAK9H,MAAMzD,qBAC9D+L,EAAkBhG,KAAKwF,KAAK9H,MAAMjG,YAClCsO,EAAa/F,KAAKS,QAEf0F,EAAO,GAAKA,EAAOF,GAAiC,IAATE,EAAY,KAC9D,CAEA,MAAO,CAACH,EAAiBD,EAC3B,GAAC,kBAED,WACE,IAAMK,EAAW,IAAId,EAAW,CAAC,GAGjC,OAFAc,EAASZ,KAAOxF,KAAKwF,KAAK/E,OAC1B2F,EAASZ,KAAKtT,SAAO,UAAQ8N,KAAKwF,KAAKtT,SAChCkU,CACT,GAAC,qBAED,SAAQnI,EAAaC,EAAczG,GACjC,MAAqBzG,EAAQkK,oBAAoB+C,EAAaC,EAAczG,GAAY,eAAjF0D,EAAI,KAAEC,EAAI,KACjB4E,KAAKwF,KAAK9H,MAAMnI,MAAQ4F,EACxB6E,KAAKwF,KAAK9H,MAAMlI,OAAS4F,EACzB4E,KAAKwF,KAAK9H,MAAMlC,EAAI,EACpBwE,KAAKwF,KAAK9H,MAAMjC,EAAI,EACpB,MAAqCuE,KAAKwF,KAAK9H,MAAvCnI,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAQgG,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAG4B,EAAG,EAAHA,IACN,OAAnB2C,KAAKwF,KAAKvF,MAAeD,KAAKwF,KAAKvF,KAAK8E,QAAQxP,EAAOC,EAAQgG,EAAGC,EAAG4B,EAAK,QACtD,OAApB2C,KAAKwF,KAAKtF,OAAgBF,KAAKwF,KAAKtF,MAAM6E,QAAQxP,EAAOC,EAAQgG,EAAGC,EAAG4B,EAAK,QAClF,GAAC,6BAED,WACE,OAAO2C,KAAKwF,KAAKR,iBACnB,KAAC,EA1K4B,GC6B/B,OAAiBqB,mBAhCjB,SAA4B/C,EAAQ5O,EAAW4R,EAAYC,GAGzD,IAFA,IAAMC,EAAelD,EAAO/D,MAAK,SAAClE,EAAGwC,GAAC,OAAMxC,EAAE5D,aAAeoG,EAAEpG,YAAc,GAAK,CAAC,IAC7EgP,EAAe,GACZ1O,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAAG,CAC/B,IAAM2O,EAAU,IAAIpB,EAAW,CAAEjI,IAAKrM,EAAQyL,WAC9CiK,EAAQC,oBAAoBH,EAAcF,EAAaC,GAEvDE,EAAalK,KAAKmK,EAAQlC,OAAO,EAAI9P,GACvC,CAEA+R,EAAalH,MAAK,SAAClE,EAAGwC,GACpB,IAAM+I,EAAON,EAAaC,EAG1B,OAFc5O,KAAKwF,IAAI9B,EAAE,GAAKuL,GAChBjP,KAAKwF,IAAIU,EAAE,GAAK+I,EAEhC,IAEA,IAAMC,EAAMJ,EAAa1C,QAAO,SAACnD,GAAI,OAAKA,EAAK,GAAGkG,QAAQ,KAAOL,EAAa,GAAG,GAAGK,QAAQ,EAAE,IAC9FpW,QAAQC,IAAI,WAAYkW,GACxB,IAAIE,EAAW,EACXC,EAAU,CAAC,EASf,OARAH,EAAII,SAAQ,SAACC,GACXA,EAAQ,GAAGnC,QAAgBuB,EAAaC,EAArB,IAAmC,IAAMD,EAAaC,GACzE,IAAMX,EAAQsB,EAAQ,GAAGC,gBACrBvB,EAAQmB,IACVA,EAAWnB,EACXoB,EAAUE,EAEd,IACOF,CACT,G,eCIA,OAAiBI,oBAtBjB,SAA6BC,EAAiBC,EAAWC,EAAgBjE,EAAQzS,GAC/E,IAAM2W,EAAgBC,OAAOC,KAAKJ,GAAWxM,IAAG,yCAAC,WAAOkJ,GAAI,gFAEf,GAArC2D,EAAY,oBAAgB9W,EAAS,QACvCmT,IAAS2D,EAAY,yCAChBN,EAAgBtO,OAAM,yCAAC,WAAO6O,GAAI,+FACvCC,EAAAA,EAAAA,OAAkBP,EAAUK,GAAeC,IAAK,8FADrB,KAE5B,OAKkD,OAD/C1X,EAAMoX,EAAUtD,GAChB8D,EAAMxE,EAAOpC,MAAK,SAAC6G,GAAG,OAAKA,EAAIpO,QAAUqK,CAAI,IAAC,kBAC7C6D,EAAAA,EAAAA,OAAkB3X,EAAK4X,EAAIxO,MAAM/I,MAAK,SAACE,GAE5C,OADA8W,IACO9W,CACT,KAAE,2CACH,mDAhB+C,IAkBhD,OAAO+W,CACT,EAEsCQ,eAnCtC,SAAwBC,GAEtB,IADA,IAAIxV,EACKsF,EAAI,EAAGA,EAAIkQ,EAAetN,OAAQ5C,GAAK,EAAG,CACjD,GAAiC,cAA7BkQ,EAAelQ,GAAGtF,SAAyD,IAA/BwV,EAAelQ,GAAG2F,MAAMlL,GAEjE,CACLC,GAAS,EACT,KACF,CAJEA,GAAS,CAKb,CACA,OAAOA,CACT,GCDe,SAASyV,EAAQC,GAC9B,IACE3T,EAQE0F,EAAAA,mBAPFzF,EAOEyF,EAAAA,mBANF9E,EAME8E,EAAAA,WALFxF,EAKEwF,EAAAA,UAJFpF,EAIEoF,EAAAA,gBAHF7F,EAGE6F,EAAAA,SAFFtF,EAEEsF,EAAAA,WADFrF,EACEqF,EAAAA,YAEJ,GAA8BkO,EAAAA,EAAAA,UAASD,GAAa,eAA7CE,EAAO,KAAEC,EAAU,KAC1B,GAAsCF,EAAAA,EAAAA,UAAS5T,GAAmB,eAA3D+T,EAAW,KAAEC,EAAc,KAClC,GAAsCJ,EAAAA,EAAAA,UAAS3T,GAAmB,eAA3DgU,EAAW,KAAEC,EAAc,KAClC,GAA4CN,EAAAA,EAAAA,UAAS,GAAE,eAAhDO,EAAc,KAAEC,EAAiB,KAClCC,EC1BO,WACb,IAAMC,GAAYC,EAAAA,EAAAA,UACZC,GAAaD,EAAAA,EAAAA,UACbE,GAAYF,EAAAA,EAAAA,UACZG,GAAiBH,EAAAA,EAAAA,UACjBI,GAAcJ,EAAAA,EAAAA,UAEpB,GAA4BX,EAAAA,EAAAA,UAAS,GAAE,eAAhC5S,EAAM,KAAE4T,EAAS,KACxB,GAAsChB,EAAAA,EAAAA,UAAS,GAAE,eAA1C7B,EAAW,KAAE8C,EAAc,KAClC,GAAoCjB,EAAAA,EAAAA,UAAS,GAAE,eAAxC9B,EAAU,KAAEgD,EAAa,KAChC,GAA0BlB,EAAAA,EAAAA,UAAS,GAAE,eAA9B7S,EAAK,KAAEgU,EAAQ,KACtB,GAAkCnB,EAAAA,EAAAA,UAAS,GAAE,eAAtCoB,EAAS,KAAEC,EAAY,KAC9B,GAAgCrB,EAAAA,EAAAA,UAAS,GAAE,eAApC1M,EAAQ,KAAEgO,EAAW,KAC5B,GAAoCtB,EAAAA,EAAAA,UAAS,GAAE,eAAxCjK,EAAU,KAAEwL,EAAa,KAE1BC,EAAgB,WACpB,IAAMC,EAAWC,OAAOC,WAAaD,OAAOE,YACtCC,EAAenB,EAAUoB,QAAUpB,EAAUoB,QAAQC,aAAe,EACpEC,EAAoBlB,EAAegB,QAAUhB,EAAegB,QAAQC,aAAe,EAEzF,GADAzZ,QAAQC,IAAI,iCAAkCyZ,IAC7B,IAAbP,EAAmB,CACrB,IAEMQ,EAAcJ,GAFEjB,EAAWkB,QAAUlB,EAAWkB,QAAQC,aAAe,IACxDlB,EAAUiB,QAAUjB,EAAUiB,QAAQC,aAAe,GACRC,EAClEV,EAAY/R,KAAKkO,IAAIiE,OAAOC,WAAYD,OAAOQ,OAAOC,aACtDd,EAAa9R,KAAKkO,IAAIiE,OAAOE,YAAaF,OAAOQ,OAAOE,aAAeH,EAAc,GACvF,KAAO,CACL,IAAMI,EAAezB,EAAWkB,QAAUlB,EAAWkB,QAAQQ,YAAc,EACrEC,EAAc1B,EAAUiB,QAAUjB,EAAUiB,QAAQQ,YAAc,EACxEhB,EAAYI,OAAOC,YAAcY,EAAcF,GAAgB,IAC/DhB,EAAaK,OAAOE,YAAcC,EAAeG,EACnD,CACF,EAkBA,OAZAQ,EAAAA,EAAAA,YAAU,WACRhB,GACF,GAAG,CAACd,EAAUoB,QAASlB,EAAWkB,QAASjB,EAAUiB,WAErDU,EAAAA,EAAAA,YAAU,WAKR,OAJAhB,IAEAE,OAAOe,iBAAiB,SAAUjB,GAE3B,kBAAME,OAAOgB,oBAAoB,SAAUlB,EAAe,CACnE,GAAG,IAEI,CACLT,YAAAA,EACAH,WAAAA,EACAF,UAAAA,EACAG,UAAAA,EACAC,eAAAA,EACA3T,MAAAA,EACAC,OAAAA,EACA+Q,YAAAA,EACAD,WAAAA,EACAgD,cAAAA,EACAD,eAAAA,EACAG,UAAAA,EACA9N,SAAAA,EACAqP,oBA9B0B,WACtB5B,EAAYe,SAASf,EAAYe,QAAQc,OAC/C,EA6BE7M,WAAAA,EACAwL,cAAAA,EACAJ,SAAAA,EACAH,UAAAA,EAEJ,CD5CqB6B,GACb/Y,EE3BO,WACb,IAAMgZ,EAAmB,CACvBtX,QAAS,EACTF,aAAc,EACdD,MAAO,CACLkK,EAAG,IACHC,EAAG,IACHC,EAAG,IACHxC,EAAG,GAEL5F,KAAM,GACNiQ,SAAS,GAGX,GAA8B0C,EAAAA,EAAAA,UAAS8C,GAAiB,eAAjDhZ,EAAO,KAAEiZ,EAAU,KAC1B,GAAoD/C,EAAAA,EAAAA,WAAS,GAAM,eAA5DgD,EAAkB,KAAEC,EAAqB,KAChD,GAAsCjD,EAAAA,EAAAA,UAAS,MAAK,eAA7CkD,EAAW,KAAEC,EAAc,KAClC,GAAgDnD,EAAAA,EAAAA,UAAS,IAAG,eAArDoD,EAAgB,KAAEC,EAAmB,KAatCC,EAAmB,SAACrS,GACxB,IAAQhB,EAAWgB,EAAXhB,OACR8S,GAAW,SAACQ,GAAI,yBAAWA,GAAI,IAAElW,KAAM4C,EAAOqF,OAAK,GACrD,EAQA,MAAO,CACLxL,QAAAA,EACAiZ,WAAAA,EACAS,MAzBY,WAAH,OAAST,EAAWD,EAAkB,EA0B/CW,oBAzB0B,SAACxS,GAAC,OAAK8R,GAAW,SAACQ,GAAI,yBAAWA,GAAI,IAAE/X,QAASyF,EAAEhB,OAAOqF,OAAK,GAAK,EA0B9FoO,mBAzByB,SAACzS,GAC1B8R,GAAW,SAACQ,GAAI,yBAAWA,GAAI,IAAEjY,aAAc2F,EAAEhB,OAAOqF,OAAK,GAC/D,EAwBEqO,iBAtBuB,WAAH,OAASV,GAAsB,SAACW,GAAG,OAAMA,CAAG,GAAE,EAuBlEC,iBAtBuB,WAAH,OAASZ,GAAsB,EAAO,EAuB1Da,kBAtBwB,SAACC,GAAG,OAAKhB,GAAW,SAACQ,GAAI,yBAAWA,GAAI,IAAElY,MAAO0Y,EAAIC,KAAG,GAAK,EAuBrFC,qBAtB2B,SAAC3O,GAAK,OAAKyN,GAAW,SAACQ,GAAI,yBAAWA,GAAI,IAAEjG,QAAShI,GAAK,GAAK,EAuB1FgO,iBAAAA,EACAN,mBAAAA,EACAE,YAAAA,EACAC,eAAAA,EACAC,iBAAAA,EACAC,oBAAAA,EACAa,iBAtBuB,SAACjT,GACxBqS,EAAiBrS,GACjBkS,EAAe,MACfE,EAAoB,KACtB,EAoBF,CFhCkBc,GACVC,EG5BO,WACb,OAAwBpE,EAAAA,EAAAA,WAAS,GAAM,eAAhCqE,EAAI,KAAEC,EAAO,KACpB,GAAgCtE,EAAAA,EAAAA,WAAS,GAAM,eAAxCuE,EAAQ,KAAEC,EAAW,KAC5B,GAAkCxE,EAAAA,EAAAA,WAAS,GAAM,eAA1CyE,EAAS,KAAEC,EAAY,KAC9B,GAA8B1E,EAAAA,EAAAA,WAAS,GAAM,eAAtC2E,EAAO,KAAEC,EAAU,KAC1B,GAAgC5E,EAAAA,EAAAA,WAAS,GAAM,eAAxC/D,EAAQ,KAAE4I,EAAW,KAC5B,GAAsC7E,EAAAA,EAAAA,WAAS,GAAM,eAA9C8E,EAAW,KAAEC,EAAc,KAClC,GAAwC/E,EAAAA,EAAAA,UAAS,CAC/CxJ,WAAY,EACZC,YAAa,IACb,eAHKuO,EAAY,KAAEC,EAAe,KA8BpC,MAAO,CACLC,YAnBkB,WAAH,OAASH,GAAe,EAAO,EAoB9C9I,SAAAA,EACAkJ,eA3BqB,WAAH,OAASb,GAAQ,EAAM,EA4BzCc,uBAT6B,WAC7BP,GAAY,GACZI,EAAgB,CAAEzO,WAAY,EAAGC,YAAa,GAChD,EAOE4O,SAtBe,WAAH,OAASN,GAAe,SAACO,GAAE,OAAMA,CAAE,GAAE,EAuBjDC,gBArBsB,SAACC,EAAGC,GAC1BR,EAAgB,CAAEzO,WAAYgP,EAAG/O,YAAagP,IAC9CZ,GAAY,GACZP,GAAQ,EACV,EAkBEoB,gBA3BsB,WAAH,OAASpB,GAAQ,EAAO,EA4B3CqB,UAjCgB,WAAH,OAASf,GAAW,EAAM,EAkCvCP,KAAAA,EACAW,aAAAA,EACAL,QAAAA,EACAE,YAAAA,EACAP,QAAAA,EACAW,gBAAAA,EACAL,WAAAA,EACAE,YAAAA,EACAC,eAAAA,EACAR,SAAAA,EACAC,YAAAA,EACAoB,YAvCkB,WAAH,OAASpB,GAAY,EAAO,EAwC3CqB,YA9BkB,WAClBnB,GAAa,GACbF,GAAY,EACd,EA4BEsB,WA7CiB,WACjBtB,GAAY,EACd,EA4CEC,UAAAA,EACAC,aAAAA,EAEJ,CHnCkBqB,GACV7K,EI1BO,SAAmB6E,GAChCzX,QAAQC,IAAI,aAAcwX,GAC1B,OAAwCC,EAAAA,EAAAA,UAAS,GAAE,eAA5CgG,EAAW,KAAEC,EAAgB,KACpC,GAA8CjG,EAAAA,EAAAA,UAAS,GAAE,eAAlDkG,EAAe,KAAEC,EAAkB,KAC1C,GAAkCnG,EAAAA,EAAAA,UAAS,GAAE,eAAtCoG,EAAQ,KAAEC,EAAa,KAC9B,GAA4BrG,EAAAA,EAAAA,UAAS,GAAE,eAAhCsG,EAAM,KAAEC,EAAS,KACxB,GAA4BvG,EAAAA,EAAAA,UAAS,IAAG,eAAjC9E,EAAM,KAAEsL,EAAS,KACxB,GAAoDxG,EAAAA,EAAAA,UAAS,IAAG,eAAzDyG,EAAkB,KAAEC,EAAqB,KAChD,GAAoD1G,EAAAA,EAAAA,UAAS,IAAG,eAAzD2G,EAAkB,KAAEC,EAAqB,MAEhDpE,EAAAA,EAAAA,YAAU,WACRla,QAAQC,IAAI,kBACR,WAAYwX,IACdyG,EAAUzG,EAAa7E,QACN,IAAbkL,GAAgBC,EAActG,EAAa7E,OAAO3I,QAE1D,GAAG,CAACwN,IAEJ,IAuBM3N,EAAe,yCAAG,WAAOR,GAAW,sEACxC4U,GAAU,SAAC1W,GAAG,OAAKA,EAAIqI,OAAO,CAACvG,GAAa,IAC5CuU,GAAmB,SAAC7T,GAAG,OAAKA,EAAM,CAAC,IAAE,2CACtC,gBAHoB,sCAKfJ,EAAmB,SAAC2U,GACxB,GAAoB,IAAhBA,EAEF,OADAD,EAAsB,KACf,EAET,GAAIC,EAAc,EAAG,CACnB,GAAIA,EAAc/U,EAAAA,UAKhB,OAJA8U,EAAsB,mCAAD,OACgB9U,EAAAA,UAAmB,gCAExD4U,EAAsB,KACf,EAET,GAAIG,EAAc/U,EAAAA,UAKhB,OAJA4U,EAAsB,2DAAD,OACwC5U,EAAAA,YAE7D8U,EAAsB,KACf,EAET,GAAIC,GAAe/U,EAAAA,WAAuB+U,GAAe/U,EAAAA,UAGvD,OAFA4U,EAAsB,IACtBE,EAAsB,KACf,CAEX,CACA,OAAO,CACT,EA+BA,MAAO,CACLpD,MAhBY,WACZgD,EAAU,IACVH,EAAc,GACdE,EAAU,GACVJ,EAAmB,EACrB,EAYE/T,gBAAAA,EACA0U,WAhCiB,SAAC7U,GAClB,IAAM4U,EAAc5U,EAAMhC,OAAOoC,MAAME,OAAS6T,EAChD9d,QAAQC,IAAI0J,EAAMhC,OAAOoC,OACzB,IACqC,EADrC,UACmBJ,EAAMhC,OAAOoC,OAAK,IAArC,2BAAuC,CAAC,IAA7BnB,EAAI,QACb5I,QAAQC,IAAI,cAAe2I,EAAKnG,KAAM4G,EAAAA,EAAAA,QAAcT,GACtD,CAAC,gCAEa,IADAgB,EAAiB2U,IAE7Bje,EAAQwM,gBAAgBnD,EAAOoU,EAAeJ,EAAkB7T,GAElE9J,QAAQC,IAAI,oBAAqB0J,EAAMhC,OAAOoC,MAAME,OAAS6T,EAAUA,EACzE,EAqBElL,OAAAA,EACAkL,SAAAA,EACAE,OAAAA,EACAJ,gBAAAA,EACAF,YAAAA,EACAe,OAjBa,SAACxV,GACd,IAAMyV,EAAc9L,EAAO3C,WAAU,SAACC,GAAI,OAAKA,EAAKjH,QAAUA,CAAK,IAC7D0V,EAAY,kBAAO/L,EAAOK,MAAM,EAAGyL,KAAY,OAAK9L,EAAOK,MAAMyL,EAAc,KAGrF,OAFAR,EAAUS,GACVZ,GAAc,SAAC/T,GAAG,OAAKA,EAAM,CAAC,IACvB2U,CACT,EAYEZ,cAAAA,EACAG,UAAAA,EACAD,UAAAA,EACAN,iBAAAA,EACAE,mBAAAA,EACAe,aArGmB,SAACC,GAEpB,OADgB,OAAOA,GACLzU,KAAI,SAACiN,GACUA,EAAvBzO,KAAuByO,EAAjBrO,IAAd,IAAsBqH,GAAI,OAAKgH,EAAG,GAElC,OADArX,QAAQC,IAAI,iBAAkBoX,EAAKhH,GAC5BA,CACT,GACF,EA+FEC,gBA7FsB,SAACuO,GAEvB,OADgB,OAAOA,GACLzU,KAAI,SAACiN,GACUA,EAAvBzO,KAAuByO,EAAjBrO,IAAd,IAAsBqH,GAAI,OAAKgH,EAAG,GAElC,OADArX,QAAQC,IAAI,iBAAkBoX,EAAKhH,GAC5BA,CACT,GACF,EAuFEyO,uBArF6B,WAC7B9e,QAAQC,IAAI,4BACZ4d,GAAmB,SAAC7T,GAAG,OAAKA,EAAM,CAAC,GACrC,EAmFEqU,mBAAAA,EACAC,sBAAAA,EACAH,mBAAAA,EACAC,sBAAAA,EACAxU,iBAAAA,EAEJ,CJtGiBmV,CAAUpH,GACnBqH,EK5BO,SAAiBvH,GAA2C,IAA7BwH,EAAe,uDAAG,WAAO,EACrE,GAAwBvH,EAAAA,EAAAA,UAAS,IAAI9C,EAAW,CAAC,IAAG,eAA7CsK,EAAI,KAAEC,EAAO,MAEpBjF,EAAAA,EAAAA,YAAU,WACRla,QAAQC,IAAI,sBACZ,IAAMmf,EAAU,IAAIxK,EAAW,CAAC,GAC5B,YAAa6C,GAAgBV,OAAOC,KAAKS,EAAaE,SAAS1N,OAAS,IAC1EjK,QAAQC,IAAI,wBAAyBwX,GACrC2H,EAAQ1P,WAAW+H,EAAaE,QAAQuH,MACpC,YAAazH,EAAaE,QAAQuH,KAAKpK,MACzCmK,GAAgB,SAAChE,GAAI,yBAChBA,GACAxD,EAAaE,QAAQuH,KAAKpK,KAAKtT,QAAO,IAG7CxB,QAAQC,IAAI,gBACZkf,EAAQC,GAEZ,GAAG,CAAC3H,IAEJ,IAAMyD,EAAQ,WAAH,OAASiE,EAAQ,CAAC,EAAG,EAE1BE,EAAW,SAACC,EAAWtb,EAAW4R,EAAYC,EAAarU,GAC/D,MAAgC+d,EAAU5J,mBACxC2J,EACAtb,EACA4R,EACAC,GAJO2J,GAKR,YAL2B,GAM5BA,EAAoBC,WAAWje,GAC/B2d,EAAQK,EACV,EAGA,OADAxf,QAAQC,IAAI,WAAYif,GACjB,CAAEA,KAAAA,EAAMC,QAAAA,EAASjE,MAAAA,EAAOmE,SAAAA,EACjC,CLPoBK,CAAQ/H,EAASnW,EAAQiZ,YAC3C,GAAkC/C,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAvCiI,EAAS,KAAEC,EAAY,KAiB9B,GAAoClI,EAAAA,EAAAA,WAfd,WAAH,MAAU,CAC3BC,QAAS,CACP5S,KAAM,iBACNhD,OAAQ,WAEV6Q,OAAQ,CACN7N,KAAK,kBAAD,OAAoBkT,EAAc,cAAMrF,EAAOA,OAAO3I,OAAM,KAChElI,OAAQ,WAEV8d,WAAY,CACV9a,KAAM,qBACNhD,OAAQ,WAEX,IAE0D,eAApD+d,GAAU,KAAEC,GAAa,KAE1B5f,GACJ,YAAasX,GAAgB,eAAgBA,EAAaE,QACtDF,EAAaE,QAAQtX,WACrB6I,KAAKC,MAILuD,GAAiB,WAAH,OAAShI,EAAWqT,GAAalT,MAAQH,EAAWqT,GAAajT,MAAO,EAGtF+R,GAAiB,WAAH,OAASqB,GAAkB,SAAClO,GAAG,OAAKA,EAAM,CAAC,GAAE,EAE3DgW,GAAe,SAACC,EAAKle,GACzB,IAAMiL,GAAK,kBAAQ8S,GAAWG,IAAI,IAAEle,OAAAA,IACpCge,IAAc,SAACG,GAAE,yBAAWA,GAAE,cAAGD,EAAMjT,GAAK,GAC9C,EA4BMmT,GAAoB,WACxB,IAAM3R,EAAKwQ,EAAUE,KAAKpK,KAAK9H,MAAMjG,YAC/BqZ,EAAiBhc,EAAkBoK,EACnCmI,EAAkB3U,SAAS0E,cAAc,UACzC2Z,EAAgBrB,EAAUE,KAAKnP,OACrCsQ,EAAcvL,KAAKtT,QAAQuD,KAAO,GAClCsb,EAAchM,QAAQ+L,EAAgBhc,EAAiBoK,GACvDmI,EAAgB9R,MAAQub,EACxBzJ,EAAgB7R,OAASV,EACzBic,EAAc9N,cACZ6N,EACAhc,EACAuS,EACAyJ,EAAiBjI,EAAWtT,OAI9B,IAAMyb,EAAmB,CACvBrX,MAAM,aAAD,OAAe9I,GAAS,QAC7B6I,IAAK,GACLD,cAAe3E,EACf0E,aAAcsX,EACdrZ,YAAayH,EACblL,KAAM,aAGR,OADAsc,EAAaU,GACN,CAACA,EAAkB3J,EAC5B,EAEM4J,GAAa,SAAC9d,EAAM6d,GAExB,OADAxI,EAAerV,GACR,CACLpC,WAAYF,GAAU0B,WACtBY,KAAAA,EACA+d,aAAczI,EACd0I,WAAY,2BACZC,gBAAiB,2BACjB9N,OAAQA,EAAOgM,aAAahM,EAAOA,QACnCsM,KAAMF,EAAUE,KAAK5O,kBACrBqP,UAAWW,EAEf,EAEMK,GAAa,yCAAG,WAAOle,EAAMme,GAAO,wFAIL,OAJK,EACHT,KAAmB,eAAjDU,EAAS,KAAElK,EAAe,KAGjCqJ,GAAa,UAAW,WAAW,SACTY,EAAQzgB,GAAWogB,GAAW9d,EAAMoe,IAAY,KAAD,EAAxD,KACb,WADEC,EAAW,UACqC,UAAvBA,EAAY/e,OAAkB,gBACzB,OAAlCie,GAAa,UAAW,UAAU,mBAC3B,GAAK,OAMoB,OAHlCA,GAAa,UAAW,QAGxBA,GAAa,SAAU,WAAW,UACL7X,QAAQ4Y,WACnCC,EAAWtK,oBACTC,EACAmK,EACAjK,GACAjE,EAAOA,OACPzS,KAEF,KAAD,GAM8D,OAdzDoX,EAAc,OASpByI,GAAa,SAAU,QAGvBA,GAAa,aAAc,WACrBrL,EAAQqM,EAAW1J,eAAeC,GACxCyI,GAAa,cAAwB,IAAVrL,EAAiB,OAAS,UAAU,kBACxDA,GAAK,4CACb,gBA/BkB,wCAiCbzU,GAAU,yCAAG,WAAOuC,GAAI,+FAAKke,GAAcle,EAAM0U,EAAAA,EAAAA,aAAsB,2DAA7D,sCACVxW,GAAW,yCAAG,WAAO8B,GAAI,+FAAKke,GAAcle,EAAM0U,EAAAA,EAAAA,cAAuB,2DAA9D,sCAEX8J,GAAc,WAAH,OAAgD,IAAvClK,OAAOC,KAAKgI,EAAUE,MAAMjV,MAAa,EAyFnE,OAfAiQ,EAAAA,EAAAA,YAnL2B,WACzB,IAAMgH,EAAU,yBAAqBjJ,EAAc,cAAMrF,EAAOkL,SAAQ,KACpE9Q,GAAK,kBAAQ8S,GAAWlN,QAAM,IAAE7N,KAAMmc,IACtCjJ,IAAmBrF,EAAOkL,UAAYlL,EAAOkL,SAAW,IAC1D9Q,GAAK,kBAAQA,GAAK,IAAEjL,OAAQ,UAE9Bge,IAAc,SAACG,GAAE,yBAAWA,GAAE,IAAEtN,OAAQ5F,GAAK,GAC/C,GA4K8B,CAACiL,EAAgBrF,EAAOkL,YACtD5D,EAAAA,EAAAA,YA1D2B,WAEzB,GADAtC,EAAWH,GACP,YAAaA,EAAc,CAC7B,IAAM0J,EAAQ1J,EAAaE,QACvB,SAAUwJ,GAAStJ,IAAgB/T,GACrCgU,EAAeqJ,EAAM1e,MAEnB,iBAAkB0e,GAASpJ,IAAgBhU,GAC7CiU,EAAeP,EAAaE,QAAQ6I,aAExC,CACF,GA+C8B,CAAC/I,KAE/ByC,EAAAA,EAAAA,YArBwC,WACtC,IAAQrV,EAAgEsT,EAAhEtT,MAAOC,EAAyDqT,EAAzDrT,OAAQmU,EAAiDd,EAAjDc,cAAeL,EAAkCT,EAAlCS,cAAeD,EAAmBR,EAAnBQ,eAC7C5T,EAASvD,EAAQA,QAAjBuD,KACR,IAAKkc,KAAe,CAClB,IAAMG,EAAK9gB,EAAQuK,SAAS9F,EAAM,EAAG,EAAGF,EAAOlB,EAAUO,GACnDmd,EACJtc,EAAKkF,OAAS,EAAImX,EAAGnX,OAAS/F,EAAa,EAAIC,EAAcW,EAAS,EACxE,EAAexE,EAAQkK,oBACrB3F,EACAC,EAASuc,EACTrC,EAAUE,KAAKpK,KAAK9H,MAAMjG,aAC3B,eAJMmW,EAAC,KAAEC,EAAC,KAKXlE,EAAcoI,GACdzI,EAAcsE,GACdvE,EAAewE,EACjB,CACF,GAK2C,CACzChF,EAAWtT,MACXsT,EAAWrT,OACXka,EAAUE,KACV1d,EAAQA,QAAQuD,QAGlBmV,EAAAA,EAAAA,YAlF8B,WAC5B,IAAM1L,EAAK9B,KACX,IACGuU,MACD,gBAAiBjC,EAAUE,KAAKpK,KAAK9H,OACrCgS,EAAUE,KAAKpK,KAAK9H,MAAMjG,cAAgByH,EAC1C,CACA,IAAMuG,EAAWiK,EAAUE,KAAKnP,OAChCgF,EAAS/H,OAAK,kBAAQ+H,EAAS/H,OAAK,IAAEjG,YAAayH,IACnDuG,EAASD,KAAK9H,OAAK,kBAAQ+H,EAASD,KAAK9H,OAAK,IAAEzD,kBAAmBiF,IACnEwQ,EAAUG,QAAQpK,GACdnC,EAAOA,OAAO3I,OAAS,GAAG6R,EAAQQ,YAAW,EACnD,CACF,GAqEiC,CAACvE,KAClCmC,EAAAA,EAAAA,YArC6B,WAC3B,IAAM1L,EAAK9B,KACH1B,EAAwBmN,EAAxBnN,SAAU8N,EAAcX,EAAdW,UAClB,EAAexY,EAAQkK,oBAAoBQ,EAAU8N,EAAWtK,GAAG,eAA5D0O,EAAC,KAAEC,EAAC,KACXhF,EAAWU,SAASqE,GACpB/E,EAAWO,UAAUyE,EACvB,GA+BgC,CAAChF,EAAWnN,SAAUmN,EAAWW,UAAWf,KAE5EmC,EAAAA,EAAAA,YAzDyB,YAEpBtH,EAAO8K,YAAc,GAAK9K,EAAO8K,cAAgB9K,EAAOgL,iBACzD9B,EAAQO,WAERzJ,EAAO+K,iBAAiB,GACxB/K,EAAOiL,mBAAmB,GAC1BmB,EAAUK,SACRzM,EAAOA,OACP5O,EACAmU,EAAWtT,MACXsT,EAAWrT,OAASqT,EAAW1K,WAC/BjM,EAAQA,SAEVsa,EAAQQ,YAAW,GAEvB,GAyC4B,CAAC1J,EAAO8K,YAAa9K,EAAOgL,gBAAiB9B,EAAQO,UAE1E,CACLtE,EACAwI,GACA1I,EACA8H,EACAxf,GACAgY,EACA3W,EACAsa,EACAlJ,EACAoM,EAnMkB,WAClBA,EAAU9D,QACVtI,EAAOsI,QACP1Z,EAAQ0Z,OACV,EAzBwB,WAAO,EA2BL,SAACoG,GACzB,IAAM3C,EAAe/L,EAAO6L,OAAO6C,GACnCtC,EAAUK,SACRV,EACA3a,EACAmU,EAAWvC,WACXuC,EAAWtC,YACXrU,EAAQA,QAEZ,EAwLEtB,GACA4f,GACAnf,GA7N8B,SAAC4gB,GAAE,OAAKvJ,EAAeuJ,EAAI,EAGlC,SAACC,GAAO,OAAK1J,EAAe0J,EAAS,EA8NhE,C,0GM/Qe,SAASC,GAAY,GAAoC,IAAlCC,EAAM,EAANA,OAAQnf,EAAQ,EAARA,SAAUof,EAAW,EAAXA,YACtD,GAAwBjK,EAAAA,EAAAA,WAAS,GAAM,eAAhCqE,EAAI,KAAEC,EAAO,KAEpB,OADA9B,EAAAA,EAAAA,YAAU,kBAAM8B,GAAQ,EAAK,GAAE,IACxB0F,EAAOzX,OAAS,GACrB,UAAC2X,EAAA,EAAM,CAAC7F,KAAMA,EAAM8F,WAAS,aAC3B,SAACC,EAAA,EAAW,CAAChf,GAAI,CAAEqI,UAAW,SAAUpI,MAAO,MAAOc,WAAY,QAAS,SAAC,cAG5E,SAACke,GAAA,EAAa,CACZC,UAAQ,EACRlf,GAAI,CACF8B,QAAS,OACTqd,WAAY,SACZC,eAAgB,iBAChB,UAEF,UAACC,GAAA,EAAiB,CAACrf,GAAI,CAAE8B,QAAS,SAAUwd,GAAI,GAAI,WAClD,SAACxe,EAAA,EAAU,CAACd,GAAI,CAAEe,WAAY,QAAS,SAAC,qCACxC,SAACwe,GAAA,EAAI,CAACvf,GAAI,CAAEwf,GAAI,GAAI,SACjBZ,EAAOtX,KAAI,SAACmY,GAAG,OACd,SAACC,GAAA,GAAQ,CAAC1f,GAAI,CAAE8B,QAAS,YAAa6d,cAAe,QAAS,SAAEF,GAAe,YAKvF,SAACG,EAAA,EAAa,WACZ,SAAChgB,EAAA,EAAM,CACLE,QAAQ,WACRJ,QAAS,WACPmf,IACA3F,GAAQ,EACV,EAAE,SACH,eAMLzZ,CAEJ,CChDe,SAASogB,GAAQ,GAQ5B,IAPFC,EAAc,EAAdA,eACAC,EAAU,EAAVA,WACAC,EAAW,EAAXA,YACAC,EAAe,EAAfA,gBACApS,EAAiB,EAAjBA,kBACAnP,EAAO,EAAPA,QACA0d,EAAI,EAAJA,KAEA,GAA8BxH,EAAAA,EAAAA,UAAS,MAAK,eAArCsL,EAAO,KAAEC,EAAU,KAClBrQ,EAAsBiQ,EAAtBjQ,OAAQqL,EAAc4E,EAAd5E,UACRtK,EAAgEmP,EAAhEnP,SAAUmJ,EAAsDgG,EAAtDhG,uBAAwBJ,EAA8BoG,EAA9BpG,aAAcF,EAAgBsG,EAAhBtG,YAChD1X,EAA2C8d,EAA3C9d,OAAQD,EAAmC+d,EAAnC/d,MAAOgR,EAA4B+M,EAA5B/M,YAAaD,EAAegN,EAAfhN,WAC5BjS,EAAyB6F,EAAAA,SAAftF,EAAesF,EAAAA,WAE3BsH,EAAyB,WAAH,OAASmN,GAAU,SAACjU,GAAG,OAAKA,EAAM,CAAC,GAAE,EAC3DkZ,EAAU,SAACC,GAAC,OAA+B,IAA1BpM,OAAOC,KAAKmM,GAAGlZ,MAAa,EAC7CmZ,EAAgB,WAMpB,GALApjB,QAAQC,IAAI,0BAA2Bif,GACvCA,EAAK7K,QAAQuB,EAAYC,EAAaqJ,EAAKpK,KAAK9H,MAAMjG,aACtD/G,QAAQC,IAAI,sBACZif,EAAKO,WAAWje,GAChBxB,QAAQC,IAAI,wBAAyB2S,EAAO3I,QACxC2I,EAAO3I,OAAS,EAAG,CACrBiV,EAAKzO,aAAamC,GAClB5S,QAAQC,IAAI,4BACZ,IAAMojB,EAAcnE,EAAK1N,WACvB3M,EACAC,EACA0X,EACA7L,EACAG,GAEF9Q,QAAQC,IAAI,6BACZgjB,EAAWI,GACXN,EAAgB7D,EAClB,CACF,GAEAhF,EAAAA,EAAAA,YAAU,WACHgJ,EAAQhE,IAA2B,MAAlBA,EAAKpK,KAAKvF,OAC9BvP,QAAQC,IAAI,8BACZmjB,IAEJ,GAAG,KAEHlJ,EAAAA,EAAAA,YAAU,WACHgJ,EAAQhE,IAA2B,MAAlBA,EAAKpK,KAAKvF,KAI9B0T,EAAW,OAHXjjB,QAAQC,IAAI,gCACZmjB,IAIJ,GAAG,CAAClE,EAAM1d,EAASoU,EAAYC,EAAa2G,EAAa5J,IAEzD,IAyBMqD,EAAsB,SAACqN,EAAIC,GAC/B,IAAMC,EAdc,WACpB,IAAMA,EAAatE,EAAKnP,OAExB,OADAyT,EAAWpT,cAAcwC,GAClB4Q,CACT,CAUqBC,GACbjV,EAAK0Q,EAAKpK,KAAK9H,MAAMjG,YACrBC,EAAcsc,EAAKze,EACzB,EAAuBvE,EAAQ2N,mBAC7BqV,EACAC,EACA/hB,EAAQuD,KACR,EACA,EACApB,EACAO,EACA8C,EACAkY,EAAKpK,KAAK9H,MAAMjG,aACjB,eAVM2c,EAAK,KAAEC,EAAK,KAYnB,OADAH,EAAWnP,QAAQqP,EAAOC,EAAOnV,GAC1BgV,CACT,EAEMI,EAAkB,SAACC,EAAOP,EAAIC,GAClC,IAAMvc,EAAcsc,EAAKze,EACnByN,EA5BU,SAACgR,EAAIC,GACrB,IAAMjR,EAAgBtQ,SAAS0E,cAAc,UAG7C,OAFA4L,EAAczN,MAAQye,EACtBhR,EAAcxN,OAASye,EAChBjR,CACT,CAuBwBwR,CAAUR,EAAIC,GACpCM,EAAMtR,cAAc+Q,EAAIC,EAAIjR,EAAetL,GAE3C+c,YAAW,kBAjDoBC,EAiDiBV,EAjDbW,EAiDiBV,OAAnBjR,EAhD1BjK,QAAO,SAAC6O,GACb,IAAMgN,EAAOliB,SAAS0E,cAAc,KACpCwd,EAAKC,SAAQ,kBAAcH,EAAG5N,QAAQ,GAAE,YAAI6N,EAAG7N,QAAQ,GAAE,YAAIlN,KAAKC,MAAK,QACvE+a,EAAKE,KAAO5b,IAAIC,gBAAgByO,GAChCgN,EAAK5J,QACL9R,IAAI+B,gBAAgB2Z,EAAKE,MACzBF,EAAKE,KAAO,KACZtH,GACF,GAAG,cATmB,IAASkH,EAAIC,CAiDoB,GAAE,OAC3D,EAsBA,OApBA/J,EAAAA,EAAAA,YAAU,WACR,IAAiB,IAAbvG,EAAmB,CACrB,IAAoB2P,EAAwB5G,EAApCxO,WAA6BqV,EAAO7G,EAApBvO,YAClBqV,EAAavN,EAAoBqN,EAAIC,GAC3C,EAA2BC,EAAWlP,kBAAiB,eAAhDK,EAAK,KAAE0P,EAAS,KACvB,GAAI1P,EACFiP,EAAgBJ,EAAYF,EAAIC,OAC3B,CACL,MAAuBjjB,EAAQ8N,mBAAmBkV,EAAIC,EAAIc,GAAU,eAA7DC,EAAK,KAAEC,EAAK,KACbC,EAAgBvO,EAAoBqO,EAAOC,GACjD,EAAiCC,EAAclQ,kBAAiB,eAAzDmQ,EAAQ,KAAEC,EAAY,KACzBD,EACFb,EAAgBY,EAAeF,EAAOC,GAEtCvkB,QAAQC,IAAI,6BAA8BykB,EAE9C,CACF,CACF,GAAG,CAAC/Q,IAEGqP,CACT,C,oDCvHe,SAAS2B,GAAe,GAAiD,IAA/C5I,EAAI,EAAJA,KAAMvZ,EAAO,EAAPA,QAASoiB,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAO9M,EAAW,EAAXA,YACtE,GAA0BL,EAAAA,EAAAA,UAAS,IAAG,eAA/B1K,EAAK,KAAE8X,EAAQ,KAYtB,OADA9kB,QAAQC,IAAI,iBAAkB+M,IAE5B,UAAC4U,EAAA,EAAM,CAAC7F,KAAMA,EAAM8F,WAAS,aAC3B,SAACC,EAAA,EAAW,CAAChf,GAAI,CAAEqI,UAAW,UAAW,SAAC,sBAC1C,UAAC4W,GAAA,EAAa,CACZC,UAAQ,EACRlf,GAAI,CACF8B,QAAS,OACTqd,WAAY,SACZC,eAAgB,iBAChB,WAEF,SAACC,GAAA,EAAiB,CAACrf,GAAI,CAAE8B,QAAS,SAAUwd,GAAI,GAAI,SAAC,yBACrD,UAAC2C,GAAA,EAAW,CAAClD,WAAS,EAAC/e,GAAI,CAAEkI,SAAU,OAAQ,WAC7C,SAACga,GAAA,EAAU,CAACriB,GAAG,2BAA0B,SAAC,mBAC1C,SAACsiB,GAAA,EAAM,CACLC,QAAQ,2BACRviB,GAAG,qBACHwiB,aAAa,KACbnY,MAAOA,EACPoY,MAAM,gBACN1hB,SAAU,SAACiG,GAAK,OAAKmb,EAASnb,EAAMhC,OAAOqF,MAAM,EACjDqY,WAAY,CACVviB,GAAI,CACFe,WAAY,OACZd,MAAO,OACPkf,WAAY,MACZrd,QAAS,SAEX,SAED,kBAAmBigB,EAAM9M,GACxB8M,EAAM9M,GAAa3S,cAAcgF,KAAI,SAACkb,GAAE,OACtC,UAACC,GAAA,EAAQ,CAAsBvY,MAAOsY,EAAG,UACtCT,EAAMS,GAAItgB,KACV6f,EAAMS,GAAIvgB,OAFE8f,EAAMS,GAAIvgB,KAGd,KAGb,UAACwgB,GAAA,EAAQ,CAA+BvY,MAAO+K,EAAY,UACxD8M,EAAM9M,GAAa/S,KACnB6f,EAAM9M,GAAahT,OAFP8f,EAAM9M,GAAahT,eAQ1C,UAAC2d,EAAA,EAAa,YACZ,SAAChgB,EAAA,EAAM,CAACE,QAAQ,WAAW4iB,SAA2B,IAAjBxY,EAAM/C,OAAczH,QA1DxC,WACrBxC,QAAQC,IAAI4kB,EAAM7X,GAAOnI,MAAOggB,EAAM7X,GAAOlI,OAAQtC,GACrDA,EAAQqiB,EAAM7X,GAAOnI,MAAOggB,EAAM7X,GAAOlI,QACzCggB,EAAS,GACX,EAsDuF,SAAC,cAGlF,SAACpiB,EAAA,EAAM,CAACE,QAAQ,OAAOJ,QAvDT,WAClBsiB,EAAS,IACTF,GACF,EAoDkD,SAAC,gBAMrD,C,gBCxEe,SAASa,GAAW,GAA0C,IAAxC5N,EAAW,EAAXA,YAAakE,EAAI,EAAJA,KAAMvZ,EAAO,EAAPA,QAASoiB,EAAO,EAAPA,QAC/D,GAAwBlN,EAAAA,EAAAA,UAASG,GAAY,eAAtCpV,EAAI,KAAEijB,EAAO,KACpB,GAAoBhO,EAAAA,EAAAA,UAAS,IAAtBiO,GAAyB,YAAhB,GAehB,OACE,UAAC/D,EAAA,EAAM,CAAC7F,KAAMA,EAAM8F,WAAS,aAC3B,SAACC,EAAA,EAAW,CAAChf,GAAI,CAAEqI,UAAW,UAAW,SAAC,kBAC1C,SAAC4W,GAAA,EAAa,CACZC,UAAQ,EACRlf,GAAI,CACF8B,QAAS,OACTqd,WAAY,SACZC,eAAgB,iBAChB,UAEF,SAAC0D,GAAA,EAAS,CACRhjB,QAAQ,WACRwiB,MAAM,mBACND,aAAc1iB,EACdiB,SAzBiB,SAACiF,GACxB,IAAQhB,EAAWgB,EAAXhB,OACR+d,EAAQ/d,EAAOqF,MACjB,EAuBQ5D,KAAK,QACLtG,GAAI,CAAE+B,MAAO,OAAQghB,GAAI,GACzBC,WAAY,CAAEhjB,GAAI,CAAEG,iBAAiB+L,EAAAA,EAAAA,IAAM,OAAQ,MACnD+W,WAAYJ,EACZjlB,QAASilB,OAGb,UAACjD,EAAA,EAAa,YACZ,SAAChgB,EAAA,EAAM,CAACE,QAAQ,WAAW4iB,SAA0B,IAAhB/iB,EAAKwH,OAAczH,QAtC3C,WACjBA,EAAQC,EACV,EAoCkF,SAAC,UAG7E,SAACC,EAAA,EAAM,CAACE,QAAQ,OAAOJ,QAhCT,WAClBkjB,EAAQ,IACRd,GACF,EA6BkD,SAAC,gBAMrD,C,mDC/CA,SAASoB,KACP,OACE,SAACC,GAAA,EAAS,CACRljB,MAAM,QACNqG,KAAK,WACLtG,GAAI,CAAEojB,OAAQ,gBAAiBljB,aAAc,QAGnD,CAEA,SAASmjB,GAAgB,GAAa,IAAXpkB,EAAM,EAANA,OACzB,MAAe,YAAXA,GACK,SAACqkB,GAAA,EAAgB,CAACrjB,MAAM,OAAOqG,KAAK,SAE9B,YAAXrH,GACK,SAACskB,GAAA,EAAW,CAACtjB,MAAM,WAAWqG,KAAK,aAE7B,SAAXrH,GACK,SAACukB,GAAA,EAAsB,CAACvjB,MAAM,UAAUqG,KAAK,aAEvC,WAAXrH,GACK,SAACikB,GAAU,SADpB,CAGF,CAMA,SAASO,GAAO,GAAmB,IAAjBxhB,EAAI,EAAJA,KAAMhD,EAAM,EAANA,OAChBgB,EAAQ,CACZyjB,SAASxX,EAAAA,EAAAA,IAAM,OAAQ,KACvByX,KAAM,QACNC,QAAS,QACTC,OAAQ,OAGV,OACE,UAAC5X,EAAA,EAAK,CAAC6X,UAAU,MAAM1E,eAAe,gBAAe,WACnD,SAACte,EAAA,EAAU,CAACd,GAAI,CAAEe,WAAY,OAAQF,SAAU,OAAQZ,MAAOA,EAAMhB,IAAU,SAC5EgD,KAEH,SAACohB,GAAe,CAACpkB,OAAQA,MAG/B,CAOA,SAAS8kB,GAAc,GAAsB,IAApB9kB,EAAM,EAANA,OAAQ+kB,EAAO,EAAPA,QAC/B,MAAe,WAAX/kB,GAEA,UAACgN,EAAA,EAAK,CACJ6X,UAAU,MACVG,QAAS,EACT7E,eAAe,SACfD,WAAW,SACXnf,GAAI,CAAE+B,MAAO,OAAQmiB,EAAG,GAAI,WAE5B,SAAChB,GAAU,KACX,SAACpiB,EAAA,EAAU,UAAC,+BAKH,YAAX7B,GAAmC,YAAXA,EAA6B,KAE1C,YAAXA,GAEA,UAACgN,EAAA,EAAK,CACJ6X,UAAU,MACVG,QAAS,EACT7E,eAAe,SACfD,WAAW,SACXnf,GAAI,CAAE+B,MAAO,OAAQmiB,EAAG,GAAI,WAE5B,SAACV,GAAA,EAAsB,CAACvjB,MAAM,UAAUD,GAAI,CAAEa,SAAU,WACxD,UAACC,EAAA,EAAU,WAAC,0DAC8CkjB,EAAQ,oBAMjE,IACT,CAOe,SAASG,GAAiB,GAAmB,IAAjBlL,EAAI,EAAJA,KAAMha,EAAM,EAANA,OAC3CmlB,EAAgB,UACpB,GAA8BxP,EAAAA,EAAAA,WAAU,GAAE,eAAnCoP,EAAO,KAAEK,EAAU,MAC1BjN,EAAAA,EAAAA,YAAU,WACR,IAAIkN,EAIJ,OAHIN,EAAU,GAAuB,YAAlBI,IACjBE,EAAUrD,YAAW,kBAAMoD,EAAWL,EAAU,EAAE,GAAE,MAE/C,kBAAMO,aAAaD,EAAS,CACrC,GAAG,CAACN,EAASI,IAEb,IAAMI,EAAYvQ,OAAOwQ,OAAOxlB,GAAQqI,KAAI,SAACod,GAAG,OAAKA,EAAIzlB,MAAM,IAa/D,OAZIulB,EAAU9T,SAAS,UACrB0T,EAAgB,SACPI,EAAU9T,SAAS,WAC5B0T,EAAgB,UACNI,EAAU9T,SAAS,aAC7BxT,QAAQC,IAAI,kBAAmB6mB,EAAS/kB,IACvB,IAAb+kB,GACFK,EAAW,GAEbD,EAAgB,YAIhB,UAACtF,EAAA,EAAM,CAAC7F,KAAMA,EAAM8F,WAAS,aAC3B,SAACC,EAAA,EAAW,CAAChf,GAAI,CAAEqI,UAAW,UAAW,SAAC,kBAC1C,SAAC4W,GAAA,EAAa,CAACC,UAAQ,YACrB,SAACjT,EAAA,EAAK,CAAC6X,UAAU,SAAS1E,eAAe,SAAS6E,QAAS,EAAE,SAC1DhQ,OAAOwQ,OAAOxlB,GAAQqI,KAAI,SAAC8V,GAAE,OAC5B,SAACqG,GAAM,CAAexhB,KAAMmb,EAAGnb,KAAMhD,OAAQme,EAAGne,QAAnCme,EAAGnb,KAA0C,SAIhE,SAAC8hB,GAAa,CAAC9kB,OAAQmlB,EAAeJ,QAASA,MAGrD,C,wFChIA,SAASW,GAAkB,GAAqD,IAAnDhlB,EAAI,EAAJA,KAAMY,EAAY,EAAZA,aAAcsiB,EAAS,EAATA,UAAW+B,EAAe,EAAfA,gBAC1D,GAAgChQ,EAAAA,EAAAA,WAAS,GAAM,eAAxCiQ,EAAQ,KAAEC,EAAW,KAEtBC,EAAaC,GAAAA,GACT,CACNrlB,KAAMqlB,GAAAA,KAEHC,IAAIve,EAAAA,cAAwB,yBAAD,OAA2BA,EAAAA,kBAE1Dwe,WAEGC,EAAO,yCAAG,yGACU5e,EAAAA,EAAAA,aAAmB,OAAQ5G,EAAMilB,EAAiBG,GAAY,KAAD,EAAtE,OAATK,EAAS,yBACRA,GAAS,2CACjB,kBAHY,mCAOPC,EAAU,yCAAG,WAAOxf,GAAC,yEACF,KAAnBA,EAAEhB,OAAOqF,MAAY,gBACvB3J,EAAa,YAAY,uBAEI,OAA7BA,EAAasF,EAAEhB,OAAOqF,OAAO,SACTib,IAAU,KAAD,EAAlB,IACG,IADH,OACQ,mDAIrBL,GAAY,GAAO,4CACpB,gBAXe,sCAqBhB,OAFA1N,EAAAA,EAAAA,YAAU,kBAAM+N,GAAS,GAAE,CAACxlB,KAER,IAAbklB,GACL,SAAC/B,GAAA,EAAS,CACR7iB,MAAM,UACNH,QAAQ,SACRwiB,MAAM,mBACND,aAAc1iB,EACd2lB,WAAS,EACThf,KAAK,QACL1F,SA/BqB,SAACiF,GAAC,OAAKtF,EAAasF,EAAEhB,OAAOqF,MAAO,EAgCzDqb,OAAQF,EACRG,UAlBkB,SAAC3f,GACH,KAAdA,EAAE4f,UAAiC,IAAf5f,EAAE6f,UACxBL,EAAWxf,EAEf,EAeI8f,gBAAiB,CACf1lB,MAAO,YACP2lB,SAAS,GAEX5C,WAAY,CACVhjB,GAAI,CACFC,MAAO,UAGXgjB,YACE,SAACniB,EAAA,EAAU,CACThB,QAAQ,OACRE,GAAI,CACFe,WAAY,OACZd,MAAO,kBACP,SAED4iB,IAGLjlB,QAASilB,EACT7iB,GAAI,CACFwK,SAAU,WACViC,KAAM,MACNhK,UAAW,qBACXojB,OAAQ,WAIZ,SAAC/kB,EAAA,EAAU,CACThB,QAAQ,KACRJ,QA/EgB,WAAH,OAASolB,GAAY,EAAM,EAgFxC9kB,GAAI,CACFC,MAAO,OACPuK,SAAU,WACViC,KAAM,MACNhK,UAAW,sBACX,SAED9C,GAGP,CASe,SAASmmB,GAAO,GAAoE,IAAlExQ,EAAS,EAATA,UAAW3V,EAAI,EAAJA,KAAMomB,EAAgB,EAAhBA,iBAAkBlD,EAAS,EAATA,UAAW+B,EAAe,EAAfA,gBACvEoB,GAAUC,EAAAA,GAAAA,IAAc,SAACC,GAAK,OAAKA,EAAMC,YAAYC,KAAK,KAAK,IACrE,OACE,UAACC,GAAA,EAAK,CACJC,IAAKhR,EACLtV,GAAI,CACF8B,QAAS,OACTqd,WAAY,SACZC,eAAgB,gBAChB8E,EAAG,EACH/jB,gBAAiB,eACjBD,aAAc,GAEhBqmB,UAAW,EAAE,WAEb,SAACpY,EAAA,EAAG,CAACnO,GAAI,CAAEwmB,QAAS,WAAY/Z,KAAM,OAAQ,UAC5C,UAACR,EAAA,EAAK,CAAC6X,UAAU,MAAM3E,WAAW,SAAS8E,QAAS,EAAE,WACpD,SAACwC,GAAA,EAAI,CAACnF,KAAK,YAAYrhB,MAAM,QAAQymB,UAAU,OAAM,UACnD,SAACvY,EAAA,EAAG,CAACnO,GAAI,CAAE8B,QAAS,OAAQqd,WAAY,UAAW,UACjD,SAACwH,GAAA,EAAa,CAAC9lB,SAAS,eAG3BmlB,GACC,SAAC,MAAS,CAACjkB,MAAM,OAAOC,OAAO,UAE/B,SAAC,MAAQ,CAACD,MAAM,OAAOC,OAAO,eAIpC,SAAC2iB,GAAiB,CAChBhlB,KAAMA,EACNY,aAAcwlB,EACdlD,UAAWA,EACX+B,gBAAiBA,KAEnB,SAAC,KAAW,MAGlB,C,2BCvJe,SAASgC,GAAa,GAAmC,IAAjC7kB,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAQ6kB,EAAa,EAAbA,cAEpD,OADA3pB,QAAQC,IAAI4E,EAAOC,IAEjB,SAACmM,EAAA,EAAG,CACFnO,GAAI,CACF8mB,gBAAgB,OAAD,OAASC,GAAW,KACnCC,eAAgBjlB,EAChBklB,UAAW,OACXllB,MAAAA,EACAC,OAAAA,EACAF,QAAS,OACTsd,eAAgB,SAChBD,WAAY,UACZ,SAED0H,GAGP,C,gBCde,SAASK,GAAK,GAezB,IAdFjO,EAAI,EAAJA,KACAE,EAAQ,EAARA,SACAgO,EAAc,EAAdA,eACAloB,EAAM,EAANA,OACA6gB,EAAc,EAAdA,eACAC,EAAU,EAAVA,WACAqH,EAAM,EAANA,OACApO,EAAO,EAAPA,QACAqO,EAAc,EAAdA,eACAC,EAAU,EAAVA,WACAC,EAAgB,EAAhBA,iBACArH,EAAO,EAAPA,QACAsH,EAAQ,EAARA,SACAC,EAAe,EAAfA,gBAEQ1lB,EAAuD+d,EAAvD/d,MAAOC,EAAgD8d,EAAhD9d,OAAQkG,EAAwC4X,EAAxC5X,SAAU8N,EAA8B8J,EAA9B9J,UAAWN,EAAmBoK,EAAnBpK,eAC5CxY,QAAQC,IAAI6Y,EAAW9N,GACvB,IAMIwf,EANEC,EAAajS,EAAegB,QAAUhB,EAAegB,QAAQC,aAAe,EAC9EiR,GAAe,EACX9X,EAAiCiQ,EAAjCjQ,OAAQkL,EAAyB+E,EAAzB/E,SAAUU,EAAeqE,EAAfrE,WACtB5L,EAAO3I,OAAS,IAClBygB,GAAe,GAGF,aAAX3oB,IACFyoB,GACE,SAACd,GAAY,CACX7kB,MAAOA,EACPC,OAAQA,EACR6kB,eAAe,SAACgB,GAAA,EAAO,CAAC1hB,MAAM,2BAKrB,cAAXlH,IACFyoB,GACE,gCACGxH,GACD,SAAC2H,GAAA,EAAO,CAAC1hB,MAAM,6BAKN,YAAXlH,IACFyoB,GACE,SAACd,GAAY,CACX7kB,MAAOA,EACPC,OAAQA,EACR6kB,eACE,iCACE,SAACgB,GAAA,EAAO,CAAC1hB,MAAK,mBAAc4Z,EAAWjF,gBAAe,cAAME,EAAQ,iBACnEkF,QAOI,UAAXjhB,IACFyoB,GACE,SAACd,GAAY,CACX7kB,MAAOA,EACPC,OAAQA,EACR6kB,cACE9kB,GACE,UAACkK,EAAA,EAAK,CAAC6X,UAAU,SAASG,QAAS,EAAE,WACnC,SAAC3jB,GAAA,EAAS,CAACC,aAAcmb,KACzB,UAAC5a,EAAA,EAAU,CACTd,GAAI,CACFG,gBAAiB,cACjB+jB,EAAG,EACHjkB,MAAO,eACPc,WAAY,OACZF,SAAU,SACVwH,UAAW,UACX,UACH,eACc3B,EAAAA,UAAoB,MAAIA,EAAAA,UAAoB,cAE3D,UAAC5F,EAAA,EAAU,CACTd,GAAI,CACFG,gBAAiB,cACjB+jB,EAAG,EACHjkB,MAAO,eACPc,WAAY,OACZF,SAAU,UACV,UACH,0BACyB,IAAI,IAAE6F,EAAAA,aAAuB,4BAIzD,sBAOK,UAAXzH,IACFyoB,EAAUxH,GAEZ,IAAM4H,GAAW3jB,KAAKkO,IAAIiE,OAAOC,WAAYD,OAAOQ,OAAOC,YAAc7O,GAAY,EAGrF,OAFAhL,QAAQC,IAAI,oBAAqBmZ,OAAOC,WAAY,WAAYrO,EAAU,UAAW4f,IAGnF,UAAC3Z,EAAA,EAAG,CACFpO,UAAU,MACVC,GAAI,CACFwK,SAAU,YACV,UAED4c,EACAQ,EAAe5O,EAAU,KACzBC,EAAOoO,EAAiB,KACxBlO,EAAWmO,EAAa,KACxBH,EAAiBI,EAAmB,MACrC,UAACtb,EAAA,EAAK,CACJ6X,UAAU,SACV/hB,MAAOmG,EACPlG,OAAQgU,EAAY2R,EACpB3nB,GAAI,CACFwK,SAAU,WACViC,KAAMqb,EACN3I,WAAY,SACZC,eAAgB,SAChBjf,gBAAiB,QACjB,UAEDsnB,EACAC,KAEFE,EAAeJ,EAAW,OAGjC,C,oDC7Ie,SAASO,GAAK,GAAgC,IAA9BzF,EAAK,EAALA,MAAOpgB,EAAI,EAAJA,KAAM3B,EAAY,EAAZA,aAC1C,OACE,SAACynB,GAAA,EAAsB,CACrBC,WAAS,EACT3F,MAAOA,EACPpgB,KAAMA,EACNlC,GAAI,CACFkoB,GAAI,EACJnnB,WAAY,OACZd,MAAO,OACPkoB,QAAS,OACT,UAAW,CACTloB,MAAO,QACPkoB,QAAS,SAGbzoB,QAASa,GAGf,CACAwnB,GAAK1nB,aAAe,CAClBE,aAAc,WAAO,G,eCrBR,SAAS6nB,GAAc,GAAiC,IAA/BC,EAAM,EAANA,OAAQ5oB,EAAQ,EAARA,SAAU6oB,EAAQ,EAARA,SACxD,OACE,SAACC,GAAA,GAAM,CACLF,OAAQA,EACRvoB,QAAQ,YACR0oB,WAAY,CACVlC,IAAKgC,EACLtoB,GAAI,CACFgC,OAAQ,cACRmK,IAAK,MACLhM,gBAAiB,cACjBF,MAAO,OACPc,WAAY,OACZb,aAAyB,SAAXmoB,EAAoB,gBAAkB,gBACpD5lB,UAAW,qBACX2gB,OAAQ,IAEV,SAED3jB,GAGP,CAEA2oB,GAAc/nB,aAAe,CAC3BioB,SAAU,WAAO,G,gBC3BJ,SAASG,KACtB,OAAO,SAACC,GAAA,EAAO,CAAC1oB,GAAI,CAAEG,gBAAiB,OAAQwoB,GAAI,GAAK7oB,QAAQ,UAClE,CCQe,SAAS8oB,GAAe,GAAqC,IAAnCpT,EAAU,EAAVA,WAAYqT,EAAU,EAAVA,WAAYC,EAAM,EAANA,OACzDvoB,EAAe,SAACwoB,GACH,aAAbA,GACFF,IAEe,SAAbE,EACFD,IAEA5rB,QAAQC,IAAI,qBAAsB4rB,EAAU,sBAEhD,EAEA,OACE,SAACX,GAAa,CAACC,OAAO,QAAQC,SAAU9S,EAAW,UACjD,UAAC+J,GAAA,EAAI,CAACvf,GAAI,CAAEG,gBAAiB,SAAU,WACrC,SAAC4nB,GAAI,CAACzF,MAAM,OAAOpgB,MAAM,SAAC8mB,GAAA,EAAQ,IAAKzoB,aAAc,kBAAMA,EAAa,OAAO,KAC/E,SAACkoB,GAAe,KAChB,SAACV,GAAI,CACHzF,MAAM,WACNpgB,MAAM,SAAC+mB,GAAA,EAAY,IACnB1oB,aAAc,kBAAMA,EAAa,WAAW,KAE9C,SAACkoB,GAAe,KAChB,SAACV,GAAI,CACHzF,OACE,iCACE,SAACxhB,EAAA,EAAU,CAACd,GAAI,CAAEa,SAAU,UAAWE,WAAY,QAAS,SAAC,WAC7D,SAACD,EAAA,EAAU,CAACd,GAAI,CAAEa,SAAU,UAAWE,WAAY,QAAS,SAAC,gBAGjEmB,MAAM,SAACgnB,GAAA,EAAS,IAChB3oB,aAAc,kBAAMA,EAAa,QAAQ,QAKnD,C,oDCtCe,SAAS4oB,GAAmB,GAAyC,IAAvClQ,EAAI,EAAJA,KAAMmQ,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SACrE,OACE,UAACxK,EAAA,EAAM,CAAC7F,KAAMA,EAAK,WACjB,UAAC+F,EAAA,EAAW,CACVhf,GAAI,CACFqI,UAAW,SACXtH,WAAY,OACZd,OAAOiM,EAAAA,EAAAA,IAAM,OAAQ,KACrB,UAEY,QAAbod,EAAqB,QAAU,SAAS,eAE3C,UAACrK,GAAA,EAAa,CAACC,UAAQ,aACrB,UAACG,GAAA,EAAiB,CAACrf,GAAI,CAAEe,WAAY,OAAQd,MAAO,OAAQspB,GAAI,GAAI,UAAC,kBACtC,QAAbD,EAAqB,QAAU,SAAS,qBAE1D,SAACxoB,EAAA,EAAU,CAAChB,QAAQ,YAAYE,GAAI,CAAEC,MAAO,MAAOc,WAAY,QAAUyoB,QAAM,WAAC,WAGjF,SAAC1oB,EAAA,EAAU,CAACd,GAAI,CAAEa,SAAU,SAAUZ,MAAO,OAAQc,WAAY,QAAS,SAAC,sCAI7E,UAAC6e,EAAA,EAAa,YACZ,SAAChgB,EAAA,EAAM,CAACF,QAAS0pB,EAAUppB,GAAI,CAAEC,MAAO,OAAQ,SAChC,QAAbqpB,EAAqB,QAAU,YAElC,SAAC1pB,EAAA,EAAM,CAACE,QAAQ,WAAWJ,QAAS2pB,EAAS,SAAC,gBAMtD,CC3Be,SAASI,GAAgB,GAQpC,IAPFnB,EAAQ,EAARA,SACA/N,EAAS,EAATA,UACAmP,EAAU,EAAVA,WACAC,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACA9P,EAAW,EAAXA,YACAwP,EAAQ,EAARA,SAEA,GAAgD1U,EAAAA,EAAAA,WAAS,GAAM,eAAxDiV,EAAgB,KAAEC,EAAmB,KAC5C,GAA8ClV,EAAAA,EAAAA,WAAS,GAAM,eAAtDmV,EAAe,KAAEC,EAAkB,KAC1C,GAAkCpV,EAAAA,EAAAA,WAAS,GAAM,eAA1CqV,EAAS,KAAEC,EAAY,KACxBC,GAAU5U,EAAAA,EAAAA,QAAO,MAEjB6U,EAAW,WACftQ,IACAgQ,GAAoB,GACpBE,GAAmB,GACnBE,GAAa,EACf,GAEA9S,EAAAA,EAAAA,YAAU,WACR,SAASiT,EAAmBxjB,GACtBsjB,EAAQzT,UAAYyT,EAAQzT,QAAQ4T,SAASzjB,EAAMhC,SACrDulB,GAEJ,CAGA,OADAlrB,SAASmY,iBAAiB,YAAagT,GAChC,WAELnrB,SAASoY,oBAAoB,YAAa+S,EAC5C,CACF,GAAG,CAACF,IAEJ,IAqCMI,EAAmB,WAAH,OAASL,GAAa,EAAO,EAQnD,OAFAhtB,QAAQC,IAAI,aAAc8sB,GAC1B/sB,QAAQC,IAAI,+BAEV,SAACirB,GAAa,CAACC,OAAO,OAAM,UAC1B,UAACpc,EAAA,EAAK,CAAC6X,UAAU,MAAMG,QAAS,EAAG9E,WAAW,SAASmH,IAAKgC,EAAS,WACnE,UAAC/I,GAAA,EAAI,CACHvf,GAAI,CACFG,gBAAiB,QACjBD,aAAc,iBACd,WAEF,SAAC6nB,GAAI,CAACzF,MAAM,YAAYpgB,MAAM,SAACsoB,GAAA,EAAqB,IAAKjqB,aAhCzC,WACtB6pB,IACA7P,GACF,KA8BQ,SAACkO,GAAe,KAChB,SAACV,GAAI,CAACzF,MAAM,SAASpgB,MAAM,SAACuoB,GAAA,EAAS,IAAKlqB,aAxDxB,WACxB,IAAMmqB,EAAMb,EACZC,GAAoB,SAACa,GAAE,OAAMA,CAAE,KACnB,IAARD,GAAcN,GASpB,KA6CQ,SAAC3B,GAAe,KAChB,SAACV,GAAI,CAACzF,MAAM,OAAOpgB,MAAM,SAAC0oB,GAAA,EAAQ,IAAKrqB,aA5CvB,WAClBwpB,EACFC,GAAmB,IAEnBI,IACAJ,GAAmB,GAEvB,KAsCQ,SAACvB,GAAe,KAChB,SAACV,GAAI,CACHzF,MAAoB,QAAbgH,EAAqB,QAAU,SACtCpnB,KAAmB,QAAbonB,GAAqB,SAACuB,GAAA,EAAW,KAAM,SAACpc,EAAA,EAAU,IACxDlO,aApCe,WACvBrD,QAAQC,IAAI,aAAc8sB,GACtBA,EACFC,GAAa,IAEbE,IACAF,GAAa,GAEjB,OA+BOL,EAAmBH,EAAa,KAChCK,GAAkB,gBAAKzD,IAAK6D,EAAQ,SAAER,IAAkB,MACzD,SAACR,GAAkB,CACjBlQ,KAAMgR,EACNb,SAhCkB,WACxBmB,IACAX,GACF,EA8BQP,SAAUkB,EACVjB,SAAUA,QAKpB,C,gBCxHe,SAASwB,GAAoB,GAAmC,IAAjC7Q,EAAQ,EAARA,SAAU8Q,EAAK,EAALA,MAAOjR,EAAW,EAAXA,YAM7D,OACE,UAACyF,GAAA,EAAI,CACHvf,GAAI,CACFG,gBAAiB,QACjBD,aAAc,sBACd8B,OAAQ,eACR,WAEF,SAAC+lB,GAAI,CAACzF,MAAM,MAAMpgB,MAAM,SAAC8oB,GAAA,EAAqB,IAAKzqB,aAbrC,WAChBuZ,IACAiR,GACF,KAWI,SAACtC,GAAe,KAChB,SAACV,GAAI,CAACzF,MAAM,SAASpgB,MAAM,SAACuM,EAAA,EAAU,IAAKlO,aAAc0Z,MAG/D,CCxBe,SAASgR,GAAY,GAA+D,IAA7DC,EAAc,EAAdA,eAAgBC,EAAa,EAAbA,cAAeC,EAAY,EAAZA,aAAcC,EAAW,EAAXA,YACjF,OACE,UAACpf,EAAA,EAAK,CACJ6X,UAAU,SACVG,QAAS,EACTjkB,GAAI,CACFkkB,EAAG,EACH/jB,gBAAiB,QACjBD,aAAc,sBACdorB,UAAW,uCACX,UAEDJ,EACAC,EACAC,EACAC,IAGP,C,gBClBe,SAASE,GAAK,GAAgC,IAA9BjJ,EAAK,EAALA,MAAOpgB,EAAI,EAAJA,KAAM3B,EAAY,EAAZA,aAC1C,OACE,SAACynB,GAAA,EAAsB,CACrBC,WAAS,EACT3F,MAAOA,EACPpY,MAAOoY,EAAMkJ,cACbtpB,KAAMA,EACNlC,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASkoB,QAAS,SAE/CzoB,QAASa,GAGf,CCVe,SAASkrB,GAAc,GAAqC,IAAnCjW,EAAU,EAAVA,WAAYqT,EAAU,EAAVA,WAAYC,EAAM,EAANA,OAC9D,OACE,UAAC4C,GAAA,EAAgB,CACfpF,IAAK9Q,EACLmW,YAAU,EACV3rB,GAAI,CAAEkoB,GAAI,EAAGnnB,WAAY,OAAQZ,iBAAiB+L,EAAAA,EAAAA,IAAM,OAAQ,KAAO,WAEvE,SAACqf,GAAI,CAACjJ,MAAM,OAAOpgB,MAAM,SAAC8mB,GAAA,EAAQ,IAAKzoB,aAAcuoB,KACrD,SAACyC,GAAI,CAACjJ,MAAM,WAAWpgB,MAAM,SAAC+mB,GAAA,EAAY,IAAK1oB,aAAcsoB,KAC7D,SAAC0C,GAAI,CAACjJ,MAAM,QAAQpgB,MAAM,SAACgnB,GAAA,EAAS,IAAK3oB,aAAc,WAAO,MAGpE,CCVe,SAASqrB,GAAa,GAAoC,IAAlC1hB,EAAK,EAALA,MAAO3J,EAAY,EAAZA,aAAc+oB,EAAQ,EAARA,SAC1D,OACE,UAACoC,GAAA,EAAgB,CACfC,YAAU,EACVzhB,MAAOA,EACPtJ,SAAUL,EACVP,GAAI,CACFe,WAAY,OACZZ,iBAAiB+L,EAAAA,EAAAA,IAAM,OAAQ,IAC/B,iBAAkB,CAAEjM,MAAO,UAC3B,WAEF,SAAC+nB,GAAA,EAAsB,CACrB1F,MAAM,YACNpY,MAAM,YACNhI,MAAM,SAACsoB,GAAA,EAAqB,IAC5BxqB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASkoB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrB1F,MAAM,SACNpY,MAAM,QACNhI,MAAM,SAACuoB,GAAA,EAAS,IAChBzqB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASkoB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrB1F,MAAM,OACNpY,MAAM,OACNhI,MAAM,SAAC0oB,GAAA,EAAQ,IACf5qB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASkoB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrB1F,MAAoB,QAAbgH,EAAqB,QAAU,SACtCpf,MAAM,QACNhI,KAAmB,QAAbonB,GAAqB,SAACuB,GAAA,EAAW,KAAM,SAACpc,EAAA,EAAU,IACxDzO,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASkoB,QAAS,aAKvD,C,mDCpDe,SAAS0D,GAAY,GAMhC,IALF5rB,EAAK,EAALA,MACA+X,EAAgB,EAAhBA,iBACAiB,EAAI,EAAJA,KACA6S,EAAkB,EAAlBA,mBACAC,EAAsB,EAAtBA,uBAEA,OAAO9S,GACL,UAAC9K,EAAA,EAAG,CAACnO,GAAI,CAAEwK,SAAU,YAAa,WAChC,UAACkhB,GAAA,EAAgB,CACfC,YAAU,EACVzhB,MAAO8N,EACPpX,SAAUmrB,EACV/rB,GAAI,CACF8B,QAAS,OACTf,WAAY,OACZZ,iBAAiB+L,EAAAA,EAAAA,IAAM,OAAQ,IAC/B8f,UAAW,iBACXxhB,SAAU,WACV2U,WAAY,UACZ,WAEF,SAAC6I,GAAA,EAAsB,CACrB1F,OACE,SAACxhB,EAAA,EAAU,CAACD,SAAS,UAAUE,WAAW,OAAM,SAAC,YAInDmJ,MAAM,UACNhI,MAAM,SAAC+pB,GAAA,EAAW,IAClBjsB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASkoB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrB1F,OACE,SAACxhB,EAAA,EAAU,CAACD,SAAS,UAAUE,WAAW,OAAM,SAAC,WAInDmJ,MAAM,gBACNhI,MAAM,SAACgqB,GAAA,EAAY,IACnBlsB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASkoB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrB1F,OACE,SAACxhB,EAAA,EAAU,CAACD,SAAS,UAAUE,WAAW,OAAM,SAAC,UAInDmJ,MAAM,QACNhI,MACE,SAACiqB,GAAA,EAAU,CACTnsB,GAAI,CACFqC,KAAK,QAAD,OAAUpC,EAAMkK,EAAC,aAAKlK,EAAMmK,EAAC,aAAKnK,EAAMoK,EAAC,aAAKpK,EAAM4H,EAAC,KACzD3H,aAAc,SAIpBF,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASkoB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrB1F,MAAM,OACNpY,MAAM,OACNhI,MAAM,SAACkqB,GAAA,EAAS,IAChBpsB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASkoB,QAAS,eAInD,SAAChF,GAAA,EAAS,CACRtiB,SAAS,OACTb,GAAI,CACFwK,SAAU,WACV2B,IAAK,EACLO,MAAO,EACPrK,KAAM,QACNlC,gBAAiB,OACjBD,aAAc,MACdE,QAAS,OAEXV,QAASosB,OAGX,IACN,CCpGe,SAASO,GAAa,GAA+D,IAA7DpT,EAAI,EAAJA,KAAM/O,EAAK,EAALA,MAAO4hB,EAAkB,EAAlBA,mBAAoBQ,EAAY,EAAZA,aAAcC,EAAS,EAATA,UACpF,OAAOtT,GACL,UAAC9K,EAAA,EAAG,CAACnO,GAAI,CAAEwK,SAAU,YAAa,WAChC,UAACkhB,GAAA,EAAgB,CACfC,YAAU,EACVzhB,MAAOA,EACPlK,GAAI,CACFe,WAAY,OACZZ,iBAAiB+L,EAAAA,EAAAA,IAAM,OAAQ,IAC/B8f,UAAW,iBACX,iBAAkB,CAAE/rB,MAAO,UAC3B,WAEF,SAACsrB,GAAI,CAACjJ,MAAM,SAASpgB,MAAM,SAACuM,EAAA,EAAU,IAAKlO,aAAc+rB,KACzD,SAACf,GAAI,CAACjJ,MAAM,MAAMpgB,MAAM,SAAC8oB,GAAA,EAAqB,IAAKzqB,aAAcgsB,QAEnE,SAACpJ,GAAA,EAAS,CACRtiB,SAAS,OACTb,GAAI,CACFwK,SAAU,WACV2B,IAAK,EACLO,MAAO,EACPrK,KAAM,QACNlC,gBAAiB,OACjBD,aAAc,MACdE,QAAS,OAEXV,QAASosB,OAGX,IACN,CC7Be,SAASU,GAAe,GAcnC,IAbFC,EAAW,EAAXA,YACAzM,EAAW,EAAXA,YACAF,EAAc,EAAdA,eACA8J,EAAW,EAAXA,YACAN,EAAQ,EAARA,SACA4B,EAAc,EAAdA,eACAC,EAAa,EAAbA,cACAC,EAAY,EAAZA,aACAC,EAAW,EAAXA,YACAvT,EAAW,EAAXA,YACA4U,EAAiB,EAAjBA,kBACA1U,EAAgB,EAAhBA,iBACA2U,EAAsB,EAAtBA,uBAEQjuB,EAAkD+tB,EAAlD/tB,QAAS6Z,EAAyCkU,EAAzClU,iBAAkBX,EAAuB6U,EAAvB7U,mBAC3B2C,EAAqCyF,EAArCzF,UAAWN,EAA0B+F,EAA1B/F,SAAUH,EAAgBkG,EAAhBlG,YACrBrE,EAAmCqK,EAAnCrK,UAAW8B,EAAwBuI,EAAxBvI,oBAEnB,GAAgC3C,EAAAA,EAAAA,WAAS,GAAK,eAAvCgY,EAAQ,KAAEC,EAAW,KAC5B,GAA0BjY,EAAAA,EAAAA,UAAS,IAAG,eAA/B1K,EAAK,KAAE8X,EAAQ,KACtB,GAAgCpN,EAAAA,EAAAA,WAAS,GAAM,eAAxCkY,EAAQ,KAAEC,EAAW,KAC5B,GAAkCnY,EAAAA,EAAAA,WAAS,GAAM,eAA1CqV,EAAS,KAAEC,EAAY,KAC9B,GAAkCtV,EAAAA,EAAAA,WAAS,GAAM,eAA1CoY,EAAS,KAAEC,EAAY,KAC9B,GAAoCrY,EAAAA,EAAAA,UAAS,IAAG,eAAzCsY,EAAU,KAAEC,EAAa,KAC1BhD,GAAU5U,EAAAA,EAAAA,QAAO,OAEvB6B,EAAAA,EAAAA,YAAU,WACR,SAASiT,EAAmBxjB,GACtBsjB,EAAQzT,UAAYyT,EAAQzT,QAAQ4T,SAASzjB,EAAMhC,SACrD6nB,EAAkB,KAEtB,CAGA,OADAxtB,SAASmY,iBAAiB,YAAagT,GAChC,WAELnrB,SAASoY,oBAAoB,YAAa+S,EAC5C,CACF,GAAG,CAACF,IAEJ,IAQMiD,EAAyB,WAC7BL,GAAY,GACZL,EAAkB,MAClBC,EAAuB,IACvBE,GAAY,GACZ7K,EAAS,GACX,GAiBA5K,EAAAA,EAAAA,YAAU,WACJ0V,GAAiC,YAArB9U,GACd0U,EAAkBxB,EAEtB,GAAG,CAACxsB,EAAQ0B,QAAS0sB,KAErB1V,EAAAA,EAAAA,YAAU,WACJ0V,GAAiC,kBAArB9U,GACd0U,EAAkBvB,EAEtB,GAAG,CAACzsB,EAAQwB,aAAc4sB,KAE1B1V,EAAAA,EAAAA,YAAU,WACJ0V,GAAiC,UAArB9U,GAAkCJ,GAChD8U,EAAkBtB,EAEtB,GAAG,CAAC1sB,EAAQuB,MAAO6sB,EAAUlV,KAE7BR,EAAAA,EAAAA,YAAU,WACRla,QAAQC,IAAI,0BACR2vB,GAAiC,SAArB9U,GACd0U,EAAkBrB,EAEtB,GAAG,CAAC3sB,EAAQuD,KAAM6qB,EAAUpuB,EAAQwT,UA6CpC,OADAhV,QAAQC,IAAI,cAAe2a,IAEzB,UAACuO,GAAA,EAAK,CACJC,IAAK7Q,EACLzV,GAAI,CACFwK,SAAU,QACV2B,IAAKhI,KAAKkO,IAAIiE,OAAOE,YAAaF,OAAOQ,OAAOE,aAKhD7W,gBAAiB,QACjBD,aAAc,EACd6B,MAAOoC,KAAKkO,IAAIiE,OAAOC,WAAYD,OAAOQ,OAAOC,YACjDtU,UAAW,uBAEb8jB,UAAW,EAAE,WAEb,SAAC4C,GAAkB,CACjBlQ,KAAMgR,EACNb,SA/BoB,WACxBQ,IACAM,GAAa,GACblI,EAAS,GACX,EA4BMqH,SA1BoB,WACxBa,GAAa,GACblI,EAAS,GACX,EAwBMsH,SAAUA,IAEK,OAAhBxR,GACC,SAAC3J,EAAA,EAAG,CACFmY,IAAK6D,EACLnqB,GAAI,CACFG,iBAAiB+L,EAAAA,EAAAA,IAAM,OAAQ,KAC/BgY,EAAG,GACH,SAEDpM,IAED,MACJ,SAACuU,GAAY,CACXpT,KAAM+T,EACN9iB,MAAOgjB,EACPZ,aAAcrS,EACdsS,UAvDiB,WACrBzS,IACAvC,GACF,EAqDMuU,mBA1I0B,WAC9BmB,GAAa,GACbE,EAAc,IACdN,GAAY,GACZ/S,IACAkI,EAAS,GACX,KAsII,SAAC6J,GAAW,CACV5rB,MAAOvB,EAAQuB,MACf+X,iBAAkBA,EAClBiB,KAAM6T,EACNhB,mBAAoBsB,EACpBrB,uBAjIyB,SAAClmB,EAAGwnB,GACjCnwB,QAAQC,IAAI,6BACZwvB,EAAuBU,GACZ,YAAPA,EACFX,EAAkBxB,GACF,kBAAPmC,EACTX,EAAkBvB,GACF,UAAPkC,EACT9U,IACgB,SAAP8U,IACTnwB,QAAQC,IAAIkwB,GACZX,EAAkBrB,GAEtB,IAsHKuB,GACC,SAAChB,GAAY,CAAC1hB,MAAOA,EAAO3J,aAtFb,SAACsG,EAAOkiB,GAC3BjP,IANAqT,EAAc,IACdF,GAAa,GACbJ,GAAY,GAMZO,IACApL,EAAS+G,GACQ,cAAbA,EACFxO,IACsB,UAAbwO,GACT8D,GAAY,GACZI,GAAa,IACS,SAAblE,GACT8D,GAAY,GACZE,GAAY,IACU,UAAbhE,EACTmB,GAAa,GAEbhtB,QAAQC,IAAI,qBAAsB4rB,EAAU,sBAEhD,EAoE8DO,SAAUA,IAChE,OAGV,CCnMe,SAASgE,GAAY,GAAgC,IAA9B9sB,EAAI,EAAJA,KAAMD,EAAY,EAAZA,aAAcwhB,EAAK,EAALA,MACxD,OACE,UAAC9V,EAAA,EAAK,CAAC6X,UAAU,MAAM3E,WAAW,SAASC,eAAe,SAAQ,WAChE,UAACte,EAAA,EAAU,CACTd,GAAI,CACFC,MAAO,aACPY,SAAU,UACVE,WAAY,QACZ,UACH,QACO,QAER,SAACkhB,GAAA,EAAW,CACVniB,QAAQ,WACRwG,KAAK,QACLinB,OAAO,OACPC,aAAW,EACXxtB,GAAI,CAAEmf,WAAY,UAAW,UAE7B,SAACgD,GAAA,EAAM,CACLtiB,GAAG,8BACHqK,MAAO1J,EACPI,SAAUL,EACV+hB,MAAM,cACNmL,kBAAgB,EAChBlL,WAAY,CACVviB,GAAI,CACFkkB,EAAG,EACHnjB,WAAY,OACZF,SAAU,UACVZ,MAAO,eACPytB,GAAI,EACJC,SAAU,OACVxO,WAAY,MACZrd,QAAS,OACT8rB,UAAW,SAEb,SAED3Z,OAAOC,KAAK6N,GAAOza,KAAI,SAAC6V,GACvB,OAA2B,IAAvB4E,EAAM5E,GAAKrb,SAEX,UAAC2gB,GAAA,EAAQ,CACPoL,SAAO,EAEP3jB,MAAOiT,EACPnd,GAAI,CACFmf,WAAY,SACZK,GAAI,EACJoO,UAAW,OACX/sB,SAAU,UACVE,WAAY,OACZd,MAAO,QACP,UAED8hB,EAAM5E,GAAKjb,KACX6f,EAAM5E,GAAKlb,OAZPkb,GAgBJ,IACT,UAKV,CCvEe,SAAS2Q,GAAkB,GAAY,IAAVC,EAAK,EAALA,MAC1C,OACE,UAAC9hB,EAAA,EAAK,CAAC6X,UAAU,MAAM3E,WAAW,SAASC,eAAe,SAAQ,WAChE,SAACte,EAAA,EAAU,CACTd,GAAI,CACFC,MAAO,aACPY,SAAU,UACVE,WAAY,OACZye,GAAI,GACJ,SACH,aAGD,SAAC1e,EAAA,EAAU,CACTd,GAAI,CACFC,MAAO,eACPY,SAAU,UACVE,WAAY,OACZmjB,EAAG,GACH,SAED6J,MAIT,CCxBe,SAASC,GAAgB,GAOpC,IANFtY,EAAc,EAAdA,eACAT,EAAW,EAAXA,YACAlT,EAAK,EAALA,MACAggB,EAAK,EAALA,MACAkM,EAAgB,EAAhBA,iBACAje,EAAU,EAAVA,WAOA,OACE,UAAC/D,EAAA,EAAK,CACJqa,IAAK5Q,EACLoO,UAAU,MACV3E,WAAW,SACXC,eAAe,eACfpf,GAAI,CACF+B,MAAAA,EACAsG,UAAW,SACXmX,GAAI,GACJ,WAEF,SAAC8N,GAAW,CAAC9sB,KAAMyU,EAAa8M,MAAOA,EAAOxhB,aAjB7B,SAACsG,GACpB,IAAM4X,EAAK5X,EAAMhC,OAAOqF,MACxB+jB,EAAiBxP,EACnB,KAeI,SAACqP,GAAiB,CAACC,MAAO/d,MAGhC,C,gBC5Be,SAASke,GAAe,GAAmC,IAAjC9tB,EAAO,EAAPA,QAASiY,EAAmB,EAAnBA,oBAChD,OACE,UAACpM,EAAA,EAAK,CACJ6X,UAAU,SACV1E,eAAe,SACfD,WAAW,QACXnf,GAAI,CAAEG,gBAAiB,eAAgB,WAEvC,SAACW,EAAA,EAAU,CACTd,GAAI,CACFe,WAAY,OACZd,MAAO,OACPY,SAAU,UACVstB,aAAc,cACd,SACH,aAGD,SAACC,GAAA,GAAM,CACL,aAAW,UACX/L,aAAc,EACdnY,MAAO9J,EACPiuB,kBAAkB,OAClBC,KAAM,GACNjc,IAAK,EACL4S,IAAK,GACLrkB,SAAUyX,EACVrY,GAAI,CAAEC,MAAO,aAIrB,CC/Be,SAASsuB,GAAc,GAAiC,IAA/B1f,EAAM,EAANA,OAAQyJ,EAAkB,EAAlBA,mBAC9C,OACE,UAACrM,EAAA,EAAK,CACJ6X,UAAU,SACV1E,eAAe,SACfD,WAAW,QACXnf,GAAI,CAAEG,gBAAiB,eAAgB,WAEvC,SAACW,EAAA,EAAU,CACTd,GAAI,CACFe,WAAY,OACZd,MAAO,OACPY,SAAU,WACV,SACH,mBAGD,SAACutB,GAAA,GAAM,CACL,aAAW,gBACX/L,aAAc,EACdnY,MAAO2E,EACPwf,kBAAkB,OAClBC,KAAM,EACNjc,IAAK,EACL4S,IAAK,GACLrkB,SAAU0X,EACVtY,GAAI,CAAEC,MAAO,aAIrB,C,wCCvBe,SAASuuB,GAAY,GAQhC,IAPFvsB,EAAI,EAAJA,KACAiW,EAAgB,EAAhBA,iBACAhG,EAAO,EAAPA,QACA2G,EAAoB,EAApBA,qBACAC,EAAgB,EAAhBA,iBACA2V,EAAS,EAATA,UACAC,EAAe,EAAfA,gBAEMC,EAAa3J,GAAAA,GACT,CACN/iB,KAAM+iB,GAAAA,KAEHC,IACCve,EAAAA,sBAAgC,yBAAD,OACNA,EAAAA,0BAG9Bwe,WAEGC,EAAO,yCAAG,yGACU5e,EAAAA,EAAAA,aAAmB,OAAQtE,EAAMysB,EAAiBC,GAAY,KAAD,EAAtE,OAATC,EAAS,yBACRA,GAAS,2CACjB,kBAHY,mCAab,OAFAxX,EAAAA,EAAAA,YAAU,kBAAM+N,GAAS,GAAE,CAACljB,KAG1B,UAACgK,EAAA,EAAK,CACJjM,GAAI,CACFG,gBAAiB,eACjB,WAEF,UAAC8L,EAAA,EAAK,CAAC6X,UAAU,MAAM3E,WAAW,SAASC,eAAe,gBAAgB6E,QAAS,EAAE,WACnF,SAACnjB,EAAA,EAAU,CAACd,GAAI,CAAEe,WAAY,OAAQd,MAAO,OAAQY,SAAU,WAAY,SAAC,kBAG5E,UAACguB,GAAA,EAAS,CAACC,KAAG,aACZ,SAACC,GAAA,EAAgB,CACfC,mBAAiB,EACjBC,SACE,SAACC,GAAA,EAAQ,CACP5oB,KAAK,QACL6oB,SAAqB,IAAZjd,EACTtR,SAAU,kBAAMiY,GAAqB,EAAM,EAC3C7Y,GAAI,CAAEC,MAAO,QAAS,gBAAiB,CAAEA,MAAO,YAGpDqiB,OACE,SAACxhB,EAAA,EAAU,CAACD,SAAS,SAASE,WAAW,OAAM,SAAC,WAIlDf,GAAI,CAAEC,MAAO,OAAQc,WAAY,WAEnC,SAACguB,GAAA,EAAgB,CACfC,mBAAiB,EACjBC,SACE,SAACC,GAAA,EAAQ,CACP5oB,KAAK,QACL6oB,SAAqB,IAAZjd,EACTtR,SAAU,kBAAMiY,GAAqB,EAAK,EAC1C7Y,GAAI,CAAEC,MAAO,OAAQ,gBAAiB,CAAEA,MAAO,YAGnDqiB,OACE,SAACxhB,EAAA,EAAU,CAACD,SAAS,SAASE,WAAW,OAAM,SAAC,QAIlDf,GAAI,CAAEC,MAAO,OAAQc,WAAY,OAAQF,SAAU,mBAIzD,SAACiiB,GAAA,EAAS,CACRhjB,QAAQ,WACRwiB,MAAM,GACND,aAAcpgB,EACdujB,UA3DgB,SAAC3f,GACH,KAAdA,EAAE4f,UAAiC,IAAf5f,EAAE6f,UACxB5M,EAAiBjT,EAErB,EAwDMS,KAAK,QACLtG,GAAI,CAAE+B,MAAO,OAAQghB,GAAI,GACzBniB,SAAUsX,EACV8K,WAAY,CAAEhjB,GAAI,CAAEG,iBAAiB+L,EAAAA,EAAAA,IAAM,OAAQ,MACnD+W,YAAY,SAACniB,EAAA,EAAU,CAACd,GAAI,CAAEa,SAAU,WAAY,SAAE4tB,IACtD7wB,QAAS6wB,MAIjB,C,gBCnGe,SAASW,GAAa,GAMjC,IALFnvB,EAAK,EAALA,MACA2X,EAAkB,EAAlBA,mBACAyX,EAAW,EAAXA,YACAxQ,EAAW,EAAXA,YACAte,EAAY,EAAZA,aAEA,OACE,UAAC0L,EAAA,EAAK,CACJ6X,UAAU,MACV3E,WAAW,SACXC,eAAe,gBACf6E,QAAS,EACTjkB,GAAI,CAAE2oB,GAAI,GAAI,WAEd,SAAC7nB,EAAA,EAAU,CAACd,GAAI,CAAEe,WAAY,OAAQd,MAAO,OAAQY,SAAU,WAAY,SAAC,sBAG5E,SAACsN,EAAA,EAAG,CACFpO,UAAU,MACVC,GAAI,CACFI,QAAS,MACT+C,WAAY,OACZjD,aAAc,MACdorB,UAAW,2BACXxpB,QAAS,eACT+jB,OAAQ,WAEVnmB,QAAS2vB,EAAY,UAErB,SAAClhB,EAAA,EAAG,CACFpO,UAAU,MACVC,GAAI,CACF+B,MAAO,OACPC,OAAQ,OACR9B,aAAc,OACdiD,WAAW,QAAD,OAAUlD,EAAMkK,EAAC,aAAKlK,EAAMmK,EAAC,aAAKnK,EAAMoK,EAAC,aAAKpK,EAAM4H,EAAC,WAIrE,SAACynB,GAAW,CACVrW,KAAMrB,EACN3X,MAAOA,EACP4e,YAAaA,EACbte,aAAcA,MAItB,CAeO,SAAS+uB,GAAY,GAA6C,IAA3CrW,EAAI,EAAJA,KAAMhZ,EAAK,EAALA,MAAO4e,EAAW,EAAXA,YAAate,EAAY,EAAZA,aAEtD,OADArD,QAAQC,IAAI0hB,GACL5F,GACL,+BACE,UAAC9K,EAAA,EAAG,CACFpO,UAAU,MACVC,GAAI,CACFwK,SAAU,WACV+kB,OAAQ,EACRC,OAAQ,IACR,WAEF,SAACjhB,EAAA,EAAU,CACTvO,GAAI,CACFwK,SAAU,WACV2B,IAAK,EACLO,MAAO,EACP6iB,OAAQ,EACRpvB,gBAAiB,cACjB+jB,EAAG,EACHzhB,UAAW,sBACX2gB,OAAQ,mBAEV1jB,QAASmf,EAAY,UAErB,SAACsE,GAAA,EAAS,OAEZ,SAAC,MAAY,CAACljB,MAAOA,EAAOW,SAAUL,SAGxC,IACN,CC5Fe,SAASkvB,GAAa,GAAuC,IAArCxW,EAAI,EAAJA,KAAMyW,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAAU7N,EAAO,EAAPA,QAC9D,OACE,UAAChD,EAAA,EAAM,CAAC7F,KAAMA,EAAK,WACH,IAAb0W,GACC,SAAC3Q,EAAA,EAAW,CAAChf,GAAI,CAAEqI,UAAW,SAAUpI,MAAO,OAAQc,WAAY,QAAS,SAAC,SAG3E,MACJ,SAACke,GAAA,EAAa,CAACC,UAAuB,IAAbyQ,EAAkB,UACzC,UAAC1jB,EAAA,EAAK,CAAC6X,UAAU,MAAM1E,eAAe,gBAAgBD,WAAW,SAAS8E,QAAS,EAAE,WACrE,IAAb0L,GAAoB,SAACrM,GAAA,EAAgB,IAAM,MAC5C,SAACxiB,EAAA,EAAU,CAAChB,QAAQ,KAAI,SAAE4vB,UAGhB,IAAbC,GACC,SAAC/P,EAAA,EAAa,WACZ,SAAChgB,EAAA,EAAM,CAACE,QAAQ,OAAOJ,QAASoiB,EAAQ,SAAC,YAIzC,OAGV,CCJe,SAAS8N,GAAY,GAAyC,IAAvCxxB,EAAU,EAAVA,WAAYyxB,EAAY,EAAZA,aAAcvG,EAAQ,EAARA,SACtD1nB,EAAe8E,EAAAA,WACjBopB,GAAWC,EAAAA,EAAAA,MACjB,GAA8Bnb,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAnCC,EAAO,KAAEC,EAAU,KAC1B,GAA4BF,EAAAA,EAAAA,UAAS,YAAW,eAAzC3V,EAAM,KAAE+wB,EAAS,KACxB,GAAoCpb,EAAAA,EAAAA,WAAS,GAAM,eAA5Cqb,EAAU,KAAEC,EAAa,KAChC,GAA0Ctb,EAAAA,EAAAA,UAAS,IAAG,eAA/Cub,EAAa,KAAEC,EAAgB,KACtC,GAA4Cxb,EAAAA,EAAAA,WAAS,GAAM,eAApDyb,EAAc,KAAEC,EAAiB,KACxC,GAAkC1b,EAAAA,EAAAA,UAAS,IAAG,eAAvCiO,EAAS,KAAE0N,EAAY,KAC9B,GAAkC3b,EAAAA,EAAAA,UAAS,IAAG,eAAvC6Z,EAAS,KAAE+B,EAAY,KAE9BtzB,QAAQC,IAAI,UAAW0X,GAEvB,MAmBIH,EAAQG,GAAQ,gBAlBlBI,EAAW,KAEXF,EAAW,KAGX+K,EAAc,KACd2M,EAAW,KACXzM,EAAW,KACXD,EAAU,KACV0Q,EAAS,KACT7G,EAAW,MACX3J,EAAe,MACfpS,GAAiB,MACjBzQ,GAAU,MACV4f,GAAU,MACVnf,GAAW,MACX6yB,GAAuB,MACvB3K,GAAgB,MAGZ4K,GAAmB,SAACjB,EAASC,GACjB,KAAZD,IACFU,EAAiBV,GACjBY,EAAkBX,GAClBO,GAAc,GAElB,EAEMU,GAAoB,WACc,KAAlC7Q,EAAWxE,qBACbqO,IACA7J,EAAWvE,sBAAsB,KAEG,KAAlCuE,EAAW1E,oBACb0E,EAAWzE,sBAAsB,IAEnCgV,GAAkB,GAClBF,EAAiB,IACjBF,GAAc,EAChB,GAEA9Y,EAAAA,EAAAA,YAAU,kBAAM2I,EAAWjZ,iBAAiBiZ,EAAW/E,SAAS,GAAE,CAAC+E,EAAW/E,YAE9E5D,EAAAA,EAAAA,YAAU,WAC8B,KAAlC2I,EAAWxE,oBACboV,GAAiB5Q,EAAWxE,oBAAoB,GAEZ,KAAlCwE,EAAWxE,oBACboV,GAAiB5Q,EAAW1E,oBAAoB,EAEpD,GAAG,CAAC0E,EAAWxE,mBAAoBwE,EAAW1E,qBAE1C0E,EAAW/E,WAAatU,EAAAA,YAAmD,IAA5BsZ,EAAYtG,cAC7DsG,EAAYrG,gBAAe,GAC3BgX,GAAiB,gBAAD,OAAiBjqB,EAAAA,UAAmB,wBAAuB,IAG7E,IAAMkY,GAAS,CACbiE,EACA4L,EACA1O,EAAW1E,mBACX0E,EAAWxE,oBACXhL,QAAO,SAACsgB,GAAE,MAAY,KAAPA,CAAS,IAGxBnyB,GAcE+tB,EAdF/tB,QACA2Z,GAaEoU,EAbFpU,oBACAC,GAYEmU,EAZFnU,mBACAG,GAWEgU,EAXFhU,iBACAF,GAUEkU,EAVFlU,iBACAG,GASE+T,EATF/T,kBACAR,GAQEuU,EARFvU,iBACAW,GAOE4T,EAPF5T,qBACAjB,GAME6U,EANF7U,mBACAE,GAKE2U,EALF3U,YACAC,GAIE0U,EAJF1U,eACAC,GAGEyU,EAHFzU,iBACAC,GAEEwU,EAFFxU,oBACAa,GACE2T,EADF3T,kBAGF1B,EAAAA,EAAAA,YAAS,uBAAC,4FAC4B,IAAhCnD,OAAOC,KAAKW,GAAS1N,OAAY,mBAClB,aAAbmiB,EAAuB,gCACIlrB,EAC3B2hB,EAAW9E,cACX8E,EAAW/D,wBACX,KAAD,EAHK1e,EAAc,OAIpBwX,EAAWxX,GAAgB,OAE7B0yB,EAAU,aAAa,2CAExB,KAEH5Y,EAAAA,EAAAA,YAAU,WACR,IAAIgG,EAAKne,EACE,aAAPme,GAAkC,QAAbkM,IAAoBlM,EAAK,SACtB,IAAxB2C,EAAW/E,UAAyB,UAAPoC,IAC/BA,EAAK,SAEqB,IAAxB2C,EAAW/E,UAAkD,IAAhC/G,OAAOC,KAAKW,GAAS1N,QAAuB,cAAPiW,IACpEA,EAAK,SAEH2C,EAAWjQ,OAAO3I,OAAS,GAAK4Y,EAAWjQ,OAAO3I,SAAW4Y,EAAW/E,WAC1EoC,EAAK,aAEH2C,EAAW7E,QAAU6E,EAAW/E,UAAY+E,EAAW/E,SAAW,IACpEoC,EAAK,SAGL2C,EAAW/E,UAAYtU,EAAAA,WACvBqZ,EAAWjQ,OAAO3I,OAAS4Y,EAAW/E,WAEtCoC,EAAK,WAE+B,KAAlC2C,EAAWxE,qBACb6B,EAAK,QACLuT,GAAiB5Q,EAAWxE,oBAAoB,IAEZ,KAAlCwE,EAAW1E,qBAEX+B,EAD0B,IAAxB2C,EAAW/E,SACR,QAEA,QAEP2V,GAAiB5Q,EAAW1E,oBAAoB,IAElD2U,EAAU5S,EACZ,GAAG,CAAC2C,IAEJ,IAAM+Q,GAAQ,yCAAG,mFAGD,OAFdH,GAAiB,oBAAoB,GACrC7b,EAAW,CAAC,GACZ8U,IAAc,SACRiG,IAAe,KAAD,EACpBG,EAAU,aACVY,KACiB,aAAbtH,IACFqH,GAAiB,+BAA+B,GAChD1P,YAAW,WACT2P,KACAd,EAAS,YACX,GAAG,MACJ,2CACF,kBAda,mCAgBRpV,GAAU,yCAAG,WAAO/a,GAAI,sEACF,GAA1BqgB,EAAYvF,cACa,QAAb6O,EAAkB,gCAASlsB,GAAWuC,GAAK,0DAAS9B,GAAY8B,GAAM,KAAD,sBAAxE,MAEPshB,YAAW,WACQ,QAAbqI,GAAoBwH,KACxB9Q,EAAY1G,cAAa,GACzBwW,EAAS,YACX,GAAG,KACJ,4CACF,gBAVe,sCAYVzI,IACJ,SAAC1I,GAAW,CAACC,OAAQA,GAAQC,YAAamB,EAAY1F,gBAAgB,UACpE,SAACuH,GAAc,CACb5I,KAAM+G,EAAY/G,KAClBvZ,QAASsgB,EAAY7F,gBACrB2H,QAAS9B,EAAY1F,gBACrByH,MAAOngB,EACPqT,YAAaA,MAKbqS,IACJ,SAAC3I,GAAW,CAACC,OAAQA,GAAQC,YAAamB,EAAYxF,YAAY,UAChE,SAACmI,GAAU,CACT5N,YAAaA,EACbkE,KAAM+G,EAAY7G,SAClBzZ,QAASgb,GACToH,QAAS9B,EAAYxF,gBAKrB+M,IAAmB,SAACpD,GAAgB,CAAClL,KAAM+G,EAAY3G,UAAWpa,OAAQ+d,KAE1EkD,IACJ,SAACL,GAAO,CACNC,eAAgBA,EAChBC,WAAYA,EACZC,YAAaA,EACbC,gBAAiBA,EACjBpS,kBAAmBA,GACnBnP,QAAS+tB,EAAY/tB,QACrB0d,KAAMqU,EAAUrU,OAId8O,IACJ,SAACgD,GAAc,CAAC9tB,QAAS1B,GAAQ0B,QAASiY,oBAAqBA,KAG3D8S,IACJ,SAACoD,GAAa,CAAC1f,OAAQnQ,GAAQwB,aAAcoY,mBAAoBA,KAG7D8S,IACJ,SAACkE,GAAW,CACVrW,KAAMrB,GACN3X,MAAOvB,GAAQuB,MACfM,aAAcmY,GACdmG,YAAa,WACX9G,GAAe,MACfU,IACF,IAIEsY,IACJ,SAAC3B,GAAY,CACXnvB,MAAOvB,GAAQuB,MACf2X,mBAAoBA,GACpBrX,aAAcmY,GACdmG,YAAapG,GACb4W,YAAa9W,KAIX8S,IACJ,SAACmD,GAAW,CACVvsB,KAAMvD,GAAQuD,KACdiW,iBAAkBA,GAClBhG,QAASxT,GAAQwT,QACjB2G,qBAAsBA,GACtBC,iBAAkBA,GAClB2V,UAAWA,EACXC,gBAAiB8B,IAIfQ,IACJ,SAACxE,GAAc,CACbC,YAAaA,EACbzM,YAAaA,EACbF,eAAgBA,EAChB8J,YAAakH,GACbxH,SAAUA,EACV4B,eAAgBA,GAChBC,cAAeA,GACfC,aAAcA,GACdC,YAAaA,GACbvT,YAAaA,GACb4U,kBAAmB3U,GACnBC,iBAAkBA,GAClB2U,uBAAwB1U,KAItBmP,IACJ,SAACtB,GAAM,CACLxQ,UAAWwK,EAAexK,UAC1B3V,KAAMoV,EACNgR,iBAAkBA,GAClBlD,UAAWA,EACX+B,gBAAiB2L,IAIfU,IACJ,SAACnG,GAAmB,CAClB7Q,SAAU+F,EAAY/F,SACtB8Q,MAAOjL,EAAevI,oBACtBuC,YAAakG,EAAYlG,cAIvBoX,IACJ,SAACjG,GAAW,CACVC,eAAgBA,GAChBC,cAAeA,GACfC,aAAc2F,GACd1F,YAAaA,KAIX8F,IACJ,SAAC1H,GAAe,CACdnB,SAAUxI,EAAerK,UACzB8E,UAAWyF,EAAYzF,UACvBmP,WAAYuH,GACZtH,SAAUuH,GACVtH,YAAakH,GACbhX,YAAakG,EAAYlG,YACzBwP,SAAUA,IAIRjT,GAAWC,OAAOC,WAAaD,OAAOE,YACtCgR,GAAWnR,GAAW2a,GAAiBG,GAEvCrI,GAAM,yCAAG,4GAAY9I,EAAYtF,cAAY,6DAAvC,mCAEN0W,GAAc/a,IAClB,SAACoV,GAAa,CACZjW,WAAYsK,EAAetK,WAC3BqT,WAAY7I,EAAYjG,eACxB+O,OAAQA,MAGV,SAACF,GAAc,CACbpT,WAAYsK,EAAetK,WAC3BqT,WAAY7I,EAAYjG,eACxB+O,OAAQA,KAINrB,IACJ,SAACuG,GAAe,CACdtY,eAAgBoK,EAAepK,eAC/BT,YAAaA,EACblT,MAAO+d,EAAe/d,MACtBggB,MAAOngB,EACPqsB,iBAAkByC,GAClB1gB,WAAY+P,EAAW/E,WAI3B,OACE,UAAC7M,EAAA,EAAG,CACFnO,GAAI,CACFG,gBAAiB,OACjB6B,OAAQmC,KAAKkO,IAAIiE,OAAOE,YAAaF,OAAOQ,OAAOE,aACnDqa,SAAU,UACV,WAEF,SAACnK,GAAI,CACHjO,KAAM+G,EAAY/G,KAClBE,SAAU6G,EAAY7G,SACtBgO,eAAgBnH,EAAY3G,UAC5ByG,eAAgBA,EAChBC,WAAYA,EACZqH,OAAQA,GACRpO,QAASoY,GACT/J,eAAgBA,GAChBC,WAAYA,GACZC,iBAAkBA,GAClBrH,QAASA,GACTsH,SAAUA,GACVvoB,OAAQA,EACRqqB,SAAUA,EACV7B,gBAAiBA,MAEnB,kBACEnB,IAAKxG,EAAenK,YACpBnV,KAAK,OACLC,QAAM,EACNC,UAAQ,EACRC,OAAO,UACPC,SAAUmf,EAAWrE,aAEtBsE,EAAYnP,UAAW,SAACgX,GAAA,EAAO,CAAC1hB,MAAM,yBAA4B,MACnE,SAACspB,GAAY,CACXxW,KAAMgX,EACNP,QAASS,EACTR,SAAUU,EACVvO,QAAS8O,OAIjB,CAEAhB,GAAYvvB,aAAe,CACzBjC,WAAY,WAAO,EACnByxB,aAAc,WAAO,E","sources":["api/collage.jsx","api/helpers.js","components/OptionsButton.jsx","components/AddPhotos.jsx","static/config/collage.jsx","components/collage/helpers.js","components/collage/TextDisplay.jsx","components/collage/node.jsx","components/collage/binaryTree.jsx","components/collage/treeUtils.js","components/collage/apiHelpers.js","hooks/collage/base.jsx","hooks/collage/dimensions.jsx","hooks/collage/options.jsx","hooks/collage/actions.jsx","hooks/collage/images.jsx","hooks/collage/tree.jsx","hocs/handle-error.jsx","components/collage/Collage.jsx","components/collage/DownloadDialog.jsx","components/collage/SaveDialog.jsx","components/collage/SaveStatusDialog.jsx","components/collage/Header.jsx","components/collage/EmptyCollage.jsx","components/collage/View.jsx","components/collage/DesktopActionItem.jsx","components/collage/DesktopDrawer.jsx","components/collage/ControlsDivider.jsx","components/collage/DesktopActions.jsx","components/collage/ClearCollageDialog.jsx","components/collage/DesktopControls.jsx","components/collage/DesktopImageOptions.jsx","components/collage/EditControl.jsx","components/collage/MobileActionItem.jsx","components/collage/MobileActions.jsx","components/collage/MainControls.jsx","components/collage/EditOptions.jsx","components/collage/ImageOptions.jsx","components/collage/MobileControls.jsx","components/collage/CollageType.jsx","components/collage/CollageImageCount.jsx","components/collage/CollageMetaInfo.jsx","components/collage/PaddingControl.jsx","components/collage/RadiusControl.jsx","components/collage/TextControl.jsx","components/collage/ColorControl.jsx","components/collage/CommonDialog.jsx","pages/collage/Base.jsx"],"sourcesContent":["import helpers from 'api/helpers';\n\nfunction newCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/new';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction saveCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/save';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\nasync function upload(url, body) {\n  try {\n    const params = { body, method: 'PUT' };\n    const resp = await fetch(url, params).then((response) => response);\n    return resp;\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction listCollages(nextToken) {\n  try {\n    const path = '/api/collage/list';\n    const params = { next_token: nextToken };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getThumbnail(collageId) {\n  try {\n    const path = '/api/collage/thumbnail';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getCollage(collageId) {\n  try {\n    const path = '/api/collage/get';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction deleteCollage(collageId) {\n  try {\n    const path = '/api/collage/delete';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.deleteMethod(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction checkOptimizeStatus(collageId) {\n  try {\n    const path = '/api/collage/resized-count';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\nexport default {\n  newCollage,\n  saveCollage,\n  upload,\n  listCollages,\n  getThumbnail,\n  getCollage,\n  deleteCollage,\n  checkOptimizeStatus,\n};\n","const get = async (url, path, params = {}) => {\n  let newUrl = `https://${url}${path}`;\n  const options = {\n    method: 'GET',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  newUrl += `?${new URLSearchParams(params).toString()}`;\n  const resp = await fetch(newUrl, options);\n  if (!resp.ok) {\n    if (resp.status === 401) {\n      document.cookie = 'userInfo=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return { status: 'unauthenticated' };\n    }\n    if (resp.status === 403) {\n      return { status: 'forbidden' };\n    }\n  }\n\n  return resp.json();\n};\n\nconst post = async (url, path, params, body) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'POST',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body,\n  };\n  return fetch(apiUrl, options).then((response) => {\n    console.log('post response', response);\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\n\nconst deleteMethod = async (url, path, params) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'DELETE',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\nexport default { get, post, deleteMethod };\n","import PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\n\nexport default function OptionsButton({ children, onClick, name }) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: 'muted.main',\n        borderRadius: 15,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: 'muted.main',\n          backgroundColor: 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  //  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport OptionsButton from 'components/OptionsButton';\nimport Typography from '@mui/material/Typography';\n\nexport default function AddPhotos({ handleChange }) {\n  return (\n    <OptionsButton name=\"add\">\n      <input type=\"file\" hidden multiple accept=\"image/*\" onChange={handleChange} />\n      <AddPhotoIcon sx={{ fontSize: '2rem' }} />\n      <Typography sx={{ fontWeight: 'bold' }}>Add Images</Typography>\n    </OptionsButton>\n  );\n}\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import FacebookIcon from '@mui/icons-material/Facebook';\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\nimport InstagramIcon from '@mui/icons-material/Instagram';\nimport DescriptionIcon from '@mui/icons-material/Description';\n\nconst paperSizes = {\n  A4: {\n    display: true,\n    width: 2480,\n    height: 3508,\n    text: 'A4 Potrait',\n    icon: <DescriptionIcon sx={{ mr: 1, fill: 'black' }} />,\n    downloadSizes: ['A4', 'A3'],\n  },\n  A3: {\n    display: false,\n    width: 3508,\n    height: 4961,\n    text: 'A3 Potrait',\n    icon: <DescriptionIcon sx={{ mr: 1, fill: 'black' }} />,\n  },\n  A4LandScape: {\n    display: true,\n    height: 2480,\n    width: 3508,\n    text: 'A4 LandScape',\n    icon: (\n      <DescriptionIcon\n        sx={{\n          mr: 1,\n          transform: 'rotate(90deg)',\n          fill: 'black',\n        }}\n      />\n    ),\n    downloadSizes: ['A4LandScape', 'A3LandScape'],\n  },\n  A3LandScape: {\n    display: false,\n    height: 3508,\n    width: 4961,\n    text: 'A3 LandScape',\n    icon: <DescriptionIcon sx={{ mr: 1, transform: 'rotate(90deg)', fill: 'black' }} />,\n  },\n  FBCoverDesktop: {\n    display: true,\n    height: 740,\n    width: 2000,\n    text: 'Cover Photo (Desktop)',\n    icon: <FacebookIcon sx={{ fill: '#3b5998', mr: 1 }} />,\n  },\n  FBCoverMobile: {\n    display: true,\n    height: 720,\n    width: 1280,\n    text: 'Cover Photo (Mobile)',\n    icon: <FacebookIcon sx={{ fill: '#3b5998', mr: 1 }} />,\n  },\n  FBPost: {\n    display: true,\n    height: 1260,\n    width: 2400,\n    text: 'Post',\n    icon: <FacebookIcon sx={{ fill: '#3b5998', mr: 1 }} />,\n  },\n  WhatsappStatus: {\n    display: true,\n    height: 1920,\n    width: 1080,\n    text: 'Status',\n    icon: (\n      <WhatsAppIcon\n        sx={{\n          backgroundColor: '#25D366',\n          fill: 'white',\n          mr: 1,\n        }}\n      />\n    ),\n  },\n  InstaStory: {\n    display: true,\n    height: 1920,\n    width: 1080,\n    text: 'Story',\n    icon: (\n      <InstagramIcon\n        sx={{\n          fill: 'white',\n          background:\n            'linear-gradient(45deg, #f09433 0%,#e6683c 25%,#dc2743 50%,#cc2366 75%,#bc1888 100%)',\n          mr: 1,\n        }}\n      />\n    ),\n  },\n  InstaPostSquare: {\n    display: true,\n    height: 1080,\n    width: 1080,\n    text: 'Post',\n    icon: (\n      <InstagramIcon\n        sx={{\n          fill: 'white',\n          background:\n            'linear-gradient(45deg, #f09433 0%,#e6683c 25%,#dc2743 50%,#cc2366 75%,#bc1888 100%)',\n          mr: 1,\n        }}\n      />\n    ),\n  },\n};\n\nexport default {\n  defaultCollageName: 'Untitled',\n  defaultCollageType: 'A4',\n  tolerance: 0.1,\n  resizeImageWidth: 1500,\n  fontSize: 20,\n  lineHeight: 25,\n  textPadding: 10 / 500,\n  thumbnailHeight: 500,\n  maxNameLength: 20,\n  maxColllageTextLength: 40,\n  minImages: 2,\n  maxImages: 15,\n  maxImageSize: 8,\n  paperSizes,\n};\n","import constants from 'static/config/collage';\nimport utils from 'utils';\n\nfunction resizeImageSlowly(image, origWidth, origHeight, reqWidth, reqHeight) {\n  const tempCanvas = document.createElement('canvas');\n  tempCanvas.width = origWidth;\n  tempCanvas.height = origHeight;\n  const ctx = tempCanvas.getContext('2d');\n  const aspectRatio = origWidth / origHeight;\n  let [width, height] = [origWidth, origHeight];\n  let newWidth;\n  let newHeight;\n  const scaleFactor = Math.floor(Math.log2(origWidth / reqWidth));\n  if (scaleFactor === 0) {\n    ctx.drawImage(image, 0, 0, width, height, 0, 0, reqWidth, reqHeight);\n  } else {\n    for (let i = 0; i < scaleFactor; i += 1) {\n      newWidth = width >> 1; // eslint-disable-line no-bitwise\n      newHeight = newWidth / aspectRatio; // eslint-disable-line no-bitwise\n      if (i === 0) {\n        ctx.drawImage(image, 0, 0, width, height, 0, 0, newWidth, newHeight);\n      } else {\n        ctx.drawImage(tempCanvas, 0, 0, width, height, 0, 0, newWidth, newHeight);\n      }\n      width = newWidth;\n      height = newHeight;\n    }\n\n    ctx.drawImage(tempCanvas, 0, 0, width, height, 0, 0, reqWidth, reqHeight);\n  }\n\n  const reqCanv = document.createElement('canvas');\n  reqCanv.width = reqWidth;\n  reqCanv.height = reqHeight;\n  const reqctx = reqCanv.getContext('2d');\n  reqctx.drawImage(tempCanvas, 0, 0, reqWidth, reqHeight, 0, 0, reqWidth, reqHeight);\n  return reqCanv;\n}\n\nfunction textCanvasDraw(\n  ctx,\n  textArray,\n  position,\n  scaleFactor,\n  canvasWidth,\n  canvasHeight,\n  textHeight\n) {\n  const { fontSize, textPadding } = constants;\n  ctx.font = `${scaleFactor * fontSize}px Arial`;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'top';\n  ctx.fillStyle = '#1c1c1cb3';\n  ctx.fillRect(0, position, canvasWidth, position + textHeight);\n  ctx.fillStyle = 'white';\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const chunk of textArray) {\n    const [textPart, , y] = chunk;\n    ctx.fillText(\n      textPart,\n      parseInt(canvasWidth / 2, 10),\n      parseInt(y + position + 2.5 * scaleFactor + textPadding * canvasHeight, 10)\n    );\n  }\n}\n\nfunction getClosest(arr, index1, index2, target) {\n  if (target - arr[index1] >= arr[index2] - target) return index2;\n  return index1;\n}\n\nfunction findClosest(arr, target) {\n  const n = arr.length;\n\n  if (target <= arr[0]) return 0;\n  if (target >= arr[n - 1]) return n - 1;\n\n  let start = 0;\n  let end = n;\n  let mid = 0;\n  while (start < end) {\n    mid = (start + end) / 2;\n\n    if (arr[mid] === target) return mid;\n\n    if (target < arr[mid]) {\n      if (mid > 0 && target > arr[mid - 1]) return getClosest(arr, mid - 1, mid, target);\n      end = mid;\n    } else {\n      if (mid < n - 1 && target < arr[mid + 1]) return getClosest(arr, mid, mid + 1, target);\n      start = mid + 1;\n    }\n  }\n\n  return mid;\n}\n\nfunction getCut() {\n  const cutArr = ['v', 'h'];\n  return cutArr[Math.round(Math.random())];\n}\n\nfunction findImgPair(arr, target) {\n  let start = 0;\n  let end = arr.length - 1;\n  let i = start;\n  let j = end;\n  let minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n  while (start <= end) {\n    if (arr[start] + arr[end] > target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        // update fetched pair and matching cost\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      end -= 1;\n    } else if (arr[start] + arr[end] <= target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      start += 1;\n    } else {\n      // best pair (m === 0) found\n      i = start;\n      j = end;\n      break;\n    }\n  }\n  const randomNumber = Math.round(Math.random());\n  if (randomNumber) return [i, j];\n  return [j, i];\n}\n\nfunction getAspectRatio(cut, ar1, ar2) {\n  if (cut === 'v') return ar1 + ar2;\n  return (ar1 * ar2) / (ar1 + ar2);\n}\n\nasync function optimizeImage(image, origWidth, origHeight, origSize, maxSize, fileType) {\n  const downScaleFactor = origSize / maxSize;\n  const [reqWidth, reqHeight] = [\n    origWidth / Math.sqrt(downScaleFactor),\n    origHeight / Math.sqrt(downScaleFactor),\n  ];\n  const resizedCanvas = resizeImageSlowly(image, origWidth, origHeight, reqWidth, reqHeight);\n  const optimizedFile = await new Promise((resolve) => resizedCanvas.toBlob(resolve, fileType));\n  const optimizedSRC = URL.createObjectURL(optimizedFile);\n  return [optimizedFile, optimizedSRC, reqWidth, reqHeight];\n}\n\nasync function imageOnLoad(e, image, file, detailsCallBack) {\n  const { naturalWidth, naturalHeight, src } = e.target;\n  const title = `${Date.now()}-${file.name}`;\n  const aspectRatio = naturalWidth / naturalHeight;\n  const size = utils.getSize(file);\n  let imageDetail = {\n    title,\n    src,\n    naturalHeight,\n    naturalWidth,\n    aspectRatio,\n    targetAspectRatio: aspectRatio,\n    type: file.type,\n    file,\n    size: utils.getSize(file),\n  };\n  if (size > constants.maxImageSize) {\n    const [newFile, newSRC, newWidth, newHeight] = await optimizeImage(\n      image,\n      naturalWidth,\n      naturalHeight,\n      size,\n      constants.maxImageSize,\n      file.type\n    );\n    imageDetail = {\n      ...imageDetail,\n      src: newSRC,\n      naturalHeight: newHeight,\n      naturalWidth: newWidth,\n      file: newFile,\n      size: utils.getSize(newFile),\n    };\n  }\n  detailsCallBack(imageDetail);\n}\n\nasync function handleImageLoad(event, handleImageCount, handleNewImageCount, handleImageData) {\n  if (event.target.files) {\n    handleImageCount((cnt) => cnt + event.target.files.length);\n    handleNewImageCount(event.target.files.length);\n    const files = Array.from(event.target.files);\n    files.map(async (file) => {\n      const image = new Image();\n      image.onload = (e) => imageOnLoad(e, image, file, handleImageData);\n      image.src = URL.createObjectURL(file);\n    });\n    files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n  }\n}\n\nfunction getCollageDimension(maxW, maxH, a) {\n  const origAR = maxW / maxH;\n  if (origAR < a) return [maxW, maxW / a];\n  if (origAR > a) return [maxH * a, maxH];\n  return [maxW, maxH];\n}\n\nfunction wrapText(text, x, y, maxWidth, fontSize, lineHeight) {\n  // First, start by splitting all of our text into words,\n  // but splitting it into an array split by spaces\n  if (text.length === 0) return [];\n  const paddingX = 1; // 8px on both sided\n  const textCanvas = document.createElement('canvas');\n  textCanvas.width = maxWidth - 2 * paddingX * 8;\n  textCanvas.height = 1000;\n  const ctx = textCanvas.getContext('2d');\n  ctx.font = `${fontSize}px Arial`;\n  ctx.textAlign = 'center';\n  const tempX = x;\n  let tempY = y;\n  const words = text.split(' ');\n  let line = ''; // This will store the text of the current line\n  let testLine = ''; // This will store the text when we add a word, to test if it's too long\n  const lineArray = []; // This is an array of lines, which the function will return\n\n  // Lets iterate over each word\n  for (let n = 0; n < words.length; n += 1) {\n    // Create a test line, and measure it..\n    testLine += `${words[n]} `;\n    const metrics = ctx.measureText(testLine);\n    const testWidth = metrics.width;\n    // If the width of this test line is more than the max width\n    if (testWidth > textCanvas.width && n > 0) {\n      // Then the line is finished, push the current line into \"lineArray\"\n      lineArray.push([line, tempX, tempY]);\n      // Increase the line height, so a new line is started\n      tempY += lineHeight;\n      // Update line and test line to use this word as the first word on the next line\n      line = `${words[n]} `;\n      testLine = `${words[n]} `;\n    } else {\n      // If the test line is still less than the max width, then add the word to the current line\n      line += `${words[n]} `;\n    }\n    // If we never reach the full max width, then there is only one line..\n    // so push it into the lineArray so we return something\n    if (n === words.length - 1) {\n      lineArray.push([line, tempX, tempY]);\n    }\n  }\n  // Return the line array\n  return lineArray;\n}\n\nfunction getTextHeight(text, x, y, maxWidth, fontSize, lineHeight, scaleFactor) {\n  if (text.length === 0) {\n    return 0;\n  }\n  const { textPadding } = constants;\n  const lineArray = wrapText(\n    text,\n    x,\n    y,\n    maxWidth,\n    fontSize * scaleFactor,\n    lineHeight * scaleFactor\n  );\n  return (lineArray.length * lineHeight + 2 * textPadding) * scaleFactor;\n}\n\nfunction getImageDimensions(\n  paperWidth,\n  paperHeight,\n  text,\n  x,\n  y,\n  fontSize,\n  lineHeight,\n  scaleFactor,\n  aspectRatio\n) {\n  // prettier-ignore\n  const textHeight = getTextHeight(text, x, y, paperWidth, fontSize, lineHeight, scaleFactor);\n  return getCollageDimension(paperWidth, paperHeight - textHeight, aspectRatio);\n}\n\nconst convertToRGBA = (value) => `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nfunction optimizeDimensions(maxPrintWidth, maxPrintHeight, problematicNodes) {\n  const ar = maxPrintWidth / maxPrintHeight;\n  const optimumTreeSizes = problematicNodes.map((pn) => {\n    const newRootWidth = (maxPrintWidth * pn.value.naturalWidth) / pn.value.width;\n    const newRootHeight = newRootWidth / ar;\n    // node with highest score needs smallest tree. smallest tree will satisfy all constraints\n    const score = maxPrintWidth - newRootWidth + maxPrintHeight - newRootHeight;\n    return [score, [newRootWidth, newRootHeight]];\n  });\n  optimumTreeSizes.sort((a, b) => b[0] - a[0]);\n  return optimumTreeSizes[0][1];\n}\n\nexport default {\n  getCut,\n  findClosest,\n  findImgPair,\n  getAspectRatio,\n  handleImageLoad,\n  wrapText,\n  convertToRGBA,\n  getCollageDimension,\n  textCanvasDraw,\n  getTextHeight,\n  getImageDimensions,\n  optimizeDimensions,\n};\n","import Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { alpha } from '@mui/material/styles';\nimport constants from 'static/config/collage';\n\nexport default function TextDisplay(textArray, position, textHeight, height) {\n  const { fontSize, lineHeight, textPadding } = constants;\n  console.log('text display', textArray, position, textPadding * height);\n  return (\n    <>\n      <Stack\n        sx={{\n          height: textHeight,\n          backgroundColor: alpha('#1c1c1c', 0.7),\n          position: 'absolute',\n          top: position,\n          width: '100%',\n        }}\n      />\n      {\n        // eslint-disable-next-line react/destructuring-assignment\n        textArray.map((chunk) => (\n          <Typography\n            key={chunk[2]}\n            sx={{\n              width: '100%',\n              position: 'absolute',\n              top: position + chunk[2] + textPadding * height,\n              paddingX: 1,\n              color: 'button.main',\n              textAlign: 'center',\n              fontFamily: 'Arial',\n              fontSize: `${fontSize}px`,\n              lineHeight: `${lineHeight}px`,\n              letterSpacing: 'normal',\n            }}\n          >\n            {chunk[0]}\n          </Typography>\n        ))\n      }\n    </>\n  );\n}\n","import Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Tooltip from '@mui/material/Tooltip';\nimport { alpha } from '@mui/material/styles';\nimport helpers from 'components/collage/helpers';\n\nexport default class Node {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n\n  fromObject(obj) {\n    if (obj != null) {\n      this.value = obj.value;\n      if (obj.left != null) {\n        this.left = new Node(obj.left.value);\n        this.left.fromObject(obj.left);\n      }\n      if (obj.right != null) {\n        this.right = new Node(obj.right.value);\n        this.right.fromObject(obj.right);\n      }\n      return this;\n    }\n    return null;\n  }\n\n  getScore() {\n    if ('cut' in this.value) {\n      return [...this.left.getScore(), ...this.right.getScore()];\n    }\n\n    return [this.value.width + this.value.height];\n  }\n\n  display() {\n    let output = [];\n    const { cut, title, aspectRatio } = this.value;\n    if (this === null) return null;\n    if ('cut' in this.value) output.push([cut, aspectRatio]);\n    if ('title' in this.value) output.push([title, aspectRatio]);\n    if (this.left !== null) output = output.concat(this.left.display());\n    if (this.right !== null) output = output.concat(this.right.display());\n    return output;\n  }\n\n  copy() {\n    if (this === null) return null;\n    const copyNode = new Node({ ...this.value });\n    if (this.left != null) copyNode.left = this.left.copy();\n    if (this.right != null) copyNode.right = this.right.copy();\n    return copyNode;\n  }\n\n  replaceImages(newImages) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const findIndex = newImages.findIndex((elem) => elem.title === this.value.title);\n        const origImage = newImages[findIndex];\n        this.value.src = origImage.src;\n      }\n      if (this.left != null) this.left.replaceImages(newImages);\n      if (this.right != null) this.right.replaceImages(newImages);\n    }\n  }\n\n  removeImageData() {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const { src, ...rest } = this.value;\n        this.value = rest;\n      }\n      if (this.left != null) this.left.removeImageData();\n      if (this.right != null) this.right.removeImageData();\n    }\n  }\n\n  addImageData(imageData) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const image = imageData.find((elem) => elem.title === this.value.title);\n        this.value.src = image.src;\n      }\n      if (this.left != null) this.left.addImageData(imageData);\n      if (this.right != null) this.right.addImageData(imageData);\n    }\n  }\n\n  RenderImage(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    const { width, title, src, x, y } = this.value;\n\n    const newX = x + xOffset;\n    const newY = y + yOffset;\n    return (\n      <>\n        <Box\n          key={title}\n          component=\"img\"\n          title={title}\n          alt={title}\n          width={width - 2 * padding}\n          onLoad={handleCollageImageLoad}\n          src={src}\n          sx={{\n            position: 'absolute',\n            padding: `${padding}px`,\n            borderRadius: `${borderRadius}px`,\n            left: this.value.x + xOffset,\n            top: this.value.y + yOffset,\n          }}\n        />\n        {delImg === true ? (\n          <Tooltip title=\"Remove Image\">\n            <IconButton\n              size=\"medium\"\n              sx={{\n                color: alpha('#000', 0.7),\n                bgcolor: alpha('#fff', 0.5),\n                position: 'absolute',\n                top: newY + padding,\n                left: newX + width,\n                padding: `${padding}px`,\n                borderRadius: '0 5px 0 5px',\n                transform: 'translate(-100%, 0)',\n              }}\n              onClick={() => handleRemoveImage(title)}\n            >\n              <DeleteIcon size=\"medium\" />\n            </IconButton>\n          </Tooltip>\n        ) : null}\n      </>\n    );\n  }\n\n  DOMDisplay(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    const { cut } = this.value;\n    if (this === null) return null;\n    if (cut) {\n      return (\n        <>\n          {this.left != null\n            ? this.left.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n          {this.right != null\n            ? this.right.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n        </>\n      );\n    }\n    if ('title' in this.value)\n      return this.RenderImage(\n        padding,\n        borderRadius,\n        delImg,\n        handleRemoveImage,\n        yOffset,\n        xOffset,\n        handleCollageImageLoad\n      );\n    return null;\n  }\n\n  ResizeImage(image) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = this.value.naturalWidth;\n    tempCanvas.height = this.value.naturalHeight;\n    const tempCtx = tempCanvas.getContext('2d');\n    let width = this.value.naturalWidth;\n    let height = this.value.naturalHeight;\n    let newWidth;\n    let newHeight;\n    const scaleFactor = Math.floor(Math.log2(this.value.naturalWidth / this.value.width));\n    if (scaleFactor === 0) {\n      tempCtx.drawImage(image, 0, 0, width, height, 0, 0, this.value.width, this.value.height);\n    } else {\n      for (let i = 0; i < scaleFactor; i += 1) {\n        newWidth = width >> 1; // eslint-disable-line no-bitwise\n        newHeight = newWidth / this.value.aspectRatio; // eslint-disable-line no-bitwise\n        if (i === 0) {\n          // eslint-disable-next-line\n          tempCtx.drawImage(image, 0, 0, width, height, 0, 0, newWidth, newHeight);\n        } else {\n          tempCtx.drawImage(tempCanvas, 0, 0, width, height, 0, 0, newWidth, newHeight);\n        }\n        width = newWidth;\n        height = newHeight;\n      }\n\n      tempCtx.drawImage(tempCanvas, 0, 0, width, height, 0, 0, this.value.width, this.value.height);\n    }\n    return tempCanvas;\n  }\n\n  ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset) {\n    const x = this.value.x + padding + xOffset;\n    const y = this.value.y + padding + yOffset;\n    const clipwidth = this.value.width - 2 * padding;\n    const clipheight = clipwidth / this.value.aspectRatio;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + clipwidth - radius, y);\n    ctx.quadraticCurveTo(x + clipwidth, y, x + clipwidth, y + radius);\n    ctx.lineTo(x + clipwidth, y + clipheight - radius);\n    ctx.quadraticCurveTo(x + clipwidth, y + clipheight, x + clipwidth - radius, y + clipheight);\n    ctx.lineTo(x + radius, y + clipheight);\n    ctx.quadraticCurveTo(x, y + clipheight, x, y + clipheight - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.clip();\n\n    ctx.drawImage(\n      tempCanvas,\n      0,\n      0,\n      this.value.width,\n      this.value.height,\n      x,\n      y,\n      clipwidth,\n      clipheight\n    );\n    ctx.restore();\n  }\n\n  CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset) {\n    if ('cut' in this.value) {\n      this.left.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n      this.right.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n    }\n\n    if ('title' in this.value) {\n      const ctx = canvasElement.getContext('2d');\n      const newImg = new Image();\n      newImg.onload = () => {\n        const tempCanvas = this.ResizeImage(newImg);\n        const tempCtx = tempCanvas.getContext('2d');\n        this.ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset);\n        tempCtx.clearRect(0, 0, tempCanvas.width, tempCanvas.height);\n      };\n      newImg.src = this.value.src;\n    }\n  }\n\n  generate(images, tar, imageCount) {\n    const targetAspectRatioArr = images.map((image) => image.naturalWidth / image.naturalHeight);\n    if (imageCount < 1) return [];\n    if (imageCount === 1) {\n      const closestIndex = helpers.findClosest(targetAspectRatioArr, tar);\n      this.value = images[closestIndex];\n      this.left = null;\n      this.right = null;\n      return [...images.slice(0, closestIndex), ...images.slice(closestIndex + 1)];\n    }\n\n    const cut = helpers.getCut();\n    this.value = { cut, targetAspectRatio: tar };\n    if (imageCount === 2) {\n      const [leftIndex, rightIndex] = helpers.findImgPair(targetAspectRatioArr, tar);\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        images[leftIndex].aspectRatio,\n        images[rightIndex].aspectRatio\n      );\n      this.left = new Node(images[leftIndex]);\n      this.right = new Node(images[rightIndex]);\n      return images.filter((item, index) => ![leftIndex, rightIndex].includes(index));\n    }\n\n    let restImages;\n    let targetAspectRatio;\n    this.left = new Node({ cut: helpers.getCut() });\n    //  this.right = new Node({ cut: helpers.getCut() });\n    this.right = new Node({ cut: this.left.value.cut === 'v' ? 'h' : 'v' });\n\n    targetAspectRatio = tar / 2;\n    if (cut === 'v') {\n      targetAspectRatio = tar * 2;\n    }\n\n    const randomNumber = Math.round(Math.random());\n    const [first, second] = randomNumber ? ['left', 'right'] : ['right', 'left'];\n    restImages = this[first].generate(\n      images,\n      targetAspectRatio,\n      imageCount - Math.floor(imageCount / 2)\n    );\n    restImages = this[second].generate(restImages, targetAspectRatio, Math.floor(imageCount / 2));\n\n    this.value.aspectRatio = helpers.getAspectRatio(\n      this.value.cut,\n      this.left.value.aspectRatio,\n      this.right.value.aspectRatio\n    );\n\n    return restImages;\n  }\n\n  adjust(th) {\n    let adjustments = 0;\n    if (this === null) return adjustments;\n\n    if (this.left !== null && this.right !== null) {\n      if (this.value.aspectRatio > this.value.targetAspectRatio * th) {\n        this.value.cut = 'h';\n        adjustments += 1;\n      }\n      if (this.value.aspectRatio < this.value.targetAspectRatio / th) {\n        this.value.cut = 'v';\n        adjustments += 1;\n      }\n\n      if (this.value.cut === 'v') {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n      } else {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n      }\n      adjustments += this.left.adjust(th) + this.right.adjust(th);\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        this.left.value.aspectRatio,\n        this.right.value.aspectRatio\n      );\n    }\n\n    return adjustments;\n  }\n\n  addSize(parentWidth, parentHeight, parentX, parentY, parentCut, nodeType) {\n    if (parentCut === 'v') {\n      this.value.height = parentHeight;\n      this.value.width = this.value.height * this.value.aspectRatio;\n    } else {\n      this.value.width = parentWidth;\n      this.value.height = this.value.width / this.value.aspectRatio;\n    }\n\n    if (nodeType === 'left') {\n      this.value.x = parentX;\n      this.value.y = parentY;\n    } else if (parentCut === 'h') {\n      this.value.y = parentY + parentHeight - this.value.height;\n      this.value.x = parentX;\n    } else {\n      this.value.x = parentX + parentWidth - this.value.width;\n      this.value.y = parentY;\n    }\n\n    if (this.left !== null) {\n      this.left.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'left'\n      );\n    }\n    if (this.right !== null) {\n      this.right.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'right'\n      );\n    }\n  }\n\n  validateAddSize() {\n    if ('cut' in this.value) {\n      const [lV, lPN] = this.left.validateAddSize();\n      const [rV, rPN] = this.right.validateAddSize();\n      return [lV && rV, lPN.concat(rPN)];\n    }\n    if ('title' in this.value) {\n      const valid =\n        this.value.width <= this.value.naturalWidth &&\n        this.value.height <= this.value.naturalHeight;\n      return valid ? [valid, []] : [valid, [{ ...this }]];\n    }\n    return false;\n  }\n}\n","import Box from '@mui/material/Box';\nimport TextDisplay from 'components/collage/TextDisplay';\nimport constants from 'static/config/collage';\nimport Node from './node';\nimport helpers from './helpers';\n\nexport default class BinaryTree {\n  constructor(value) {\n    if (this.root === undefined) {\n      this.root = new Node(value);\n      return this;\n    }\n  }\n\n  addOptions(options) {\n    this.root.options = { ...options };\n  }\n\n  display() {\n    if (this.root !== null) {\n      return this.root.display();\n    }\n    return null;\n  }\n\n  replaceImages(newImages) {\n    if (this.root !== null) this.root.replaceImages(newImages);\n  }\n\n  fromObject(obj) {\n    if (obj.root != null) this.root.fromObject(obj.root);\n    return this;\n  }\n\n  removeImageData() {\n    const tempTree = this.copy();\n    if (this.root !== null) {\n      tempTree.root.removeImageData();\n    }\n    return tempTree;\n  }\n\n  addImageData(imageData) {\n    if (this.root !== null) this.root.addImageData(imageData);\n  }\n\n  DOMDisplay(canvasWidth, canvasHeight, delImg, handleRemoveImage, handleCollageImageLoad) {\n    const { fontSize, lineHeight, textPadding } = constants;\n    const { width, height } = this.root.value;\n    const { text, topText, padding, borderRadius, color } = this.root.options;\n    const lA = helpers.wrapText(text, 0, 0, canvasWidth, fontSize, lineHeight);\n    const textHeight = text.length ? lA.length * lineHeight + 2 * textPadding * height : 0;\n    let yOffset = (canvasHeight - textHeight - height) / 2;\n    const xOffset = (canvasWidth - width) / 2;\n    let position = canvasHeight - textHeight;\n    if (topText && text.length > 0) {\n      yOffset += textHeight;\n      position = 0;\n    }\n\n    if (this.root !== null) {\n      return (\n        <Box sx={{ backgroundColor: 'white' }}>\n          <Box\n            width={canvasWidth}\n            height={canvasHeight}\n            sx={{\n              position: 'relative',\n              backgroundColor: helpers.convertToRGBA(color),\n            }}\n          >\n            {this.root.DOMDisplay(\n              padding,\n              borderRadius,\n              delImg,\n              handleRemoveImage,\n              yOffset,\n              xOffset,\n              handleCollageImageLoad\n            )}\n            {text.length ? TextDisplay(lA, position, textHeight, height) : null}\n          </Box>\n        </Box>\n      );\n    }\n    return null;\n  }\n\n  CanvasDisplay(canvasWidth, canvasHeight, canvasElement, scaleFactor) {\n    const { fontSize, lineHeight, textPadding } = constants;\n    if (this.root !== null) {\n      const { text, topText, padding, borderRadius, color } = this.root.options;\n      const { width, height } = this.root.value;\n      const lA = helpers.wrapText(\n        text,\n        0,\n        0,\n        canvasWidth,\n        fontSize * scaleFactor,\n        lineHeight * scaleFactor\n      );\n      const textHeight = text.length\n        ? lA.length * lineHeight * scaleFactor + 2 * textPadding * canvasHeight\n        : 0;\n      let yOffset = (canvasHeight - textHeight - height) / 2;\n      const xOffset = (canvasWidth - width) / 2;\n      let position = canvasHeight - textHeight;\n      if (topText && text.length > 0) {\n        yOffset += textHeight;\n        position = 0;\n      }\n      const ctx = canvasElement.getContext('2d');\n      ctx.fillStyle = 'white';\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      ctx.fillStyle = helpers.convertToRGBA(color);\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      this.root.CanvasDisplay(\n        canvasElement,\n        padding * scaleFactor,\n        borderRadius * scaleFactor,\n        yOffset,\n        xOffset\n      );\n      helpers.textCanvasDraw(ctx, lA, position, scaleFactor, canvasWidth, canvasHeight, textHeight);\n    }\n  }\n\n  generateScore() {\n    const score = this.root.getScore();\n    return Math.min(...score);\n  }\n\n  generateCollageTree(images, tar) {\n    this.root.generate(images, tar, images.length);\n  }\n\n  adjust(th) {\n    let trys = 0;\n    let bestAdjust = this.copy();\n    let bestAspectRatio = this.root.value.aspectRatio;\n    const tolerableDifference = this.root.value.targetAspectRatio * (1 - th);\n    let ajstCnt = 1000;\n    while (trys < 100 && ajstCnt > 0) {\n      ajstCnt = this.root.adjust(th);\n      trys += 1;\n      const diff = this.root.value.aspectRatio - this.root.value.targetAspectRatio;\n      if (Math.abs(diff) < Math.abs(bestAspectRatio - this.root.value.targetAspectRatio)) {\n        bestAspectRatio = this.root.value.aspectRatio;\n        bestAdjust = this.copy();\n      }\n      if ((diff > 0 && diff < tolerableDifference) || diff === 0) break;\n    }\n\n    return [bestAspectRatio, bestAdjust];\n  }\n\n  copy() {\n    const copyTree = new BinaryTree({});\n    copyTree.root = this.root.copy();\n    copyTree.root.options = { ...this.root.options };\n    return copyTree;\n  }\n\n  addSize(canvasWidth, canvasHeight, aspectRatio) {\n    const [maxW, maxH] = helpers.getCollageDimension(canvasWidth, canvasHeight, aspectRatio);\n    this.root.value.width = maxW;\n    this.root.value.height = maxH;\n    this.root.value.x = 0;\n    this.root.value.y = 0;\n    const { width, height, x, y, cut } = this.root.value;\n    if (this.root.left !== null) this.root.left.addSize(width, height, x, y, cut, 'left');\n    if (this.root.right !== null) this.root.right.addSize(width, height, x, y, cut, 'right');\n  }\n\n  validateAddSize() {\n    return this.root.validateAddSize();\n  }\n}\n","import BinaryTree from './binaryTree';\nimport helpers from './helpers';\n\nfunction findBestAdjustTree(images, tolerance, imageWidth, imageHeight) {\n  const sortedImages = images.sort((a, b) => (a.aspectRatio <= b.aspectRatio ? 1 : -1));\n  const collageArray = [];\n  for (let i = 0; i < 100; i += 1) {\n    const imgTree = new BinaryTree({ cut: helpers.getCut() });\n    imgTree.generateCollageTree(sortedImages, imageWidth / imageHeight);\n\n    collageArray.push(imgTree.adjust(1 - tolerance));\n  }\n\n  collageArray.sort((a, b) => {\n    const aspR = imageWidth / imageHeight;\n    const diffA = Math.abs(a[0] - aspR);\n    const diffB = Math.abs(b[0] - aspR);\n    return diffA - diffB;\n  });\n\n  const bAR = collageArray.filter((elem) => elem[0].toFixed(1) === collageArray[0][0].toFixed(1));\n  console.log('from bar', bAR);\n  let maxScore = 0;\n  let maxElem = {};\n  bAR.forEach((element) => {\n    element[1].addSize(1000 * (imageWidth / imageHeight), 1000, imageWidth / imageHeight);\n    const score = element[1].generateScore();\n    if (score > maxScore) {\n      maxScore = score;\n      maxElem = element;\n    }\n  });\n  return maxElem;\n}\n\nexport default { findBestAdjustTree };\n","import collageapi from 'api/collage';\n\nfunction verifyPromises(uploadPromises) {\n  let status;\n  for (let i = 0; i < uploadPromises.length; i += 1) {\n    if (uploadPromises[i].status === 'fulfilled' || uploadPromises[i].value.ok === true) {\n      status = true;\n    } else {\n      status = false;\n      break;\n    }\n  }\n  return status;\n}\n\nfunction uploadCollageImages(thumbnailCanvas, imageURLS, uploadCallback, images, collageID) {\n  const imagePromises = Object.keys(imageURLS).map(async (item) => {\n    // Upload thumbnail\n    const thumbnailKey = `thumbnail-${collageID}.jpg`;\n    if (item === thumbnailKey) {\n      return thumbnailCanvas.toBlob(async (blob) =>\n        collageapi.upload(imageURLS[thumbnailKey], blob)\n      );\n    }\n\n    // Upload Images\n    const url = imageURLS[item];\n    const Img = images.find((img) => img.title === item);\n    return collageapi.upload(url, Img.file).then((resp) => {\n      uploadCallback(); // Increase image upload count\n      return resp;\n    });\n  });\n\n  return imagePromises;\n}\n\nexport default { uploadCollageImages, verifyPromises };\n","import { useEffect, useState /* , useLayoutEffect */ } from 'react';\nimport useDimensions from 'hooks/collage/dimensions';\nimport useOptions from 'hooks/collage/options';\nimport useActions from 'hooks/collage/actions';\nimport useImages from 'hooks/collage/images';\nimport useTree from 'hooks/collage/tree';\n\nimport helpers from 'components/collage/helpers';\nimport apiHelpers from 'components/collage/apiHelpers';\nimport collageapi from 'api/collage';\nimport constants from 'static/config/collage';\n\nexport default function useBase(initialValue) {\n  const {\n    defaultCollageName,\n    defaultCollageType,\n    paperSizes,\n    tolerance,\n    thumbnailHeight,\n    fontSize,\n    lineHeight,\n    textPadding,\n  } = constants;\n\n  const [details, setDetails] = useState(initialValue);\n  const [collageName, setCollageName] = useState(defaultCollageName);\n  const [collageType, setCollageType] = useState(defaultCollageType);\n  const [uploadedImages, setUploadedImages] = useState(0);\n  const dimensions = useDimensions();\n  const options = useOptions();\n  const actions = useActions();\n  const images = useImages(details);\n  const treeState = useTree(details, options.setOptions);\n  const [thumbnail, setThumbnail] = useState({});\n\n  const initialStatus = () => ({\n    details: {\n      text: 'Saving Details',\n      status: 'pending',\n    },\n    images: {\n      text: `Saving Images (${uploadedImages} / ${images.images.length})`,\n      status: 'pending',\n    },\n    finalizing: {\n      text: 'Finalizing Collage',\n      status: 'pending',\n    },\n  });\n\n  const [saveStatus, setSaveStatus] = useState(initialStatus);\n\n  const collageID =\n    'details' in initialValue && 'collage_id' in initialValue.details\n      ? initialValue.details.collage_id\n      : Date.now();\n\n  const collageCallback = () => {};\n  const handleCollageTypeChange = (ct) => setCollageType(ct);\n  const getAspectRatio = () => paperSizes[collageType].width / paperSizes[collageType].height;\n\n  const handleNameChange = (newName) => setCollageName(newName);\n  const uploadCallback = () => setUploadedImages((cnt) => cnt + 1);\n\n  const updateStatus = (key, status) => {\n    const value = { ...saveStatus[key], status };\n    setSaveStatus((st) => ({ ...st, [key]: value }));\n  };\n\n  const updateImagesStatus = () => {\n    const imagesText = `Saving Images (${uploadedImages} / ${images.imgCount})`;\n    let value = { ...saveStatus.images, text: imagesText };\n    if (uploadedImages === images.imgCount && images.imgCount > 0) {\n      value = { ...value, status: 'done' };\n    }\n    setSaveStatus((st) => ({ ...st, images: value }));\n  };\n\n  const handleClear = () => {\n    treeState.clear();\n    images.clear();\n    options.clear();\n  };\n\n  const handleRemoveImage = (imgTitle) => {\n    const newImagesArr = images.remove(imgTitle);\n    treeState.reAdjust(\n      newImagesArr,\n      tolerance,\n      dimensions.imageWidth,\n      dimensions.imageHeight,\n      options.options\n    );\n  };\n\n  const generateThumbnail = () => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    const thumbnailWidth = thumbnailHeight * ar;\n    const thumbnailCanvas = document.createElement('canvas');\n    const thumbnailTree = treeState.tree.copy();\n    thumbnailTree.root.options.text = '';\n    thumbnailTree.addSize(thumbnailWidth, thumbnailHeight, ar);\n    thumbnailCanvas.width = thumbnailWidth;\n    thumbnailCanvas.height = thumbnailHeight;\n    thumbnailTree.CanvasDisplay(\n      thumbnailWidth,\n      thumbnailHeight,\n      thumbnailCanvas,\n      thumbnailWidth / dimensions.width\n    );\n\n    // create and update details\n    const thumbnailDetails = {\n      title: `thumbnail-${collageID}.png`,\n      src: '',\n      naturalHeight: thumbnailHeight,\n      naturalWidth: thumbnailWidth,\n      aspectRatio: ar,\n      type: 'image/png',\n    };\n    setThumbnail(thumbnailDetails);\n    return [thumbnailDetails, thumbnailCanvas];\n  };\n\n  const getDetails = (name, thumbnailDetails) => {\n    setCollageName(name);\n    return {\n      collage_id: collageID.toString(),\n      name,\n      collage_type: collageType,\n      created_at: '2021-02-18T21:54:42.123Z',\n      last_updated_at: '2021-02-18T21:54:45.123Z',\n      images: images.getImageData(images.images),\n      tree: treeState.tree.removeImageData(),\n      thumbnail: thumbnailDetails,\n    };\n  };\n\n  const updateCollage = async (name, getURLS) => {\n    const [thumbDets, thumbnailCanvas] = generateThumbnail();\n\n    // Upload collage details\n    updateStatus('details', 'running');\n    const getURLSResp = await getURLS(collageID, getDetails(name, thumbDets));\n    if ('status' in getURLSResp && getURLSResp.status === 'error') {\n      updateStatus('details', 'failed');\n      return false;\n    }\n\n    updateStatus('details', 'done');\n\n    // Image Upload start\n    updateStatus('images', 'running');\n    const uploadPromises = await Promise.allSettled(\n      apiHelpers.uploadCollageImages(\n        thumbnailCanvas,\n        getURLSResp,\n        uploadCallback,\n        images.images,\n        collageID\n      )\n    );\n    updateStatus('images', 'done');\n\n    // Verify upload promises\n    updateStatus('finalizing', 'running');\n    const valid = apiHelpers.verifyPromises(uploadPromises);\n    updateStatus('finalizing', valid === true ? 'done' : 'failed');\n    return valid;\n  };\n\n  const newCollage = async (name) => updateCollage(name, collageapi.newCollage);\n  const saveCollage = async (name) => updateCollage(name, collageapi.saveCollage);\n\n  const isEmptyTree = () => Object.keys(treeState.tree).length === 0;\n\n  const updateTreeAspectRatio = () => {\n    const ar = getAspectRatio();\n    if (\n      !isEmptyTree() &&\n      'aspectRatio' in treeState.tree.root.value &&\n      treeState.tree.root.value.aspectRatio !== ar\n    ) {\n      const tempTree = treeState.tree.copy();\n      tempTree.value = { ...tempTree.value, aspectRatio: ar };\n      tempTree.root.value = { ...tempTree.root.value, targetAspectRatio: ar };\n      treeState.setTree(tempTree);\n      if (images.images.length > 1) actions.setRefresh(true);\n    }\n  };\n\n  const handleInitialValue = () => {\n    setDetails(initialValue);\n    if ('details' in initialValue) {\n      const iDets = initialValue.details;\n      if ('name' in iDets && collageName === defaultCollageName) {\n        setCollageName(iDets.name);\n      }\n      if ('collage_type' in iDets && collageType === defaultCollageType) {\n        setCollageType(initialValue.details.collage_type);\n      }\n    }\n  };\n\n  const rearrangeCollage = () => {\n    if (\n      (images.newImgCount > 0 && images.newImgCount === images.newImagesLoaded) ||\n      actions.refresh\n    ) {\n      images.setNewImageCount(0);\n      images.setNewImagesLoaded(0);\n      treeState.reAdjust(\n        images.images,\n        tolerance,\n        dimensions.width,\n        dimensions.height - dimensions.textHeight,\n        options.options\n      );\n      actions.setRefresh(false);\n    }\n  };\n\n  const setCollageDimensions = () => {\n    const ar = getAspectRatio();\n    const { maxWidth, maxHeight } = dimensions;\n    const [w, h] = helpers.getCollageDimension(maxWidth, maxHeight, ar);\n    dimensions.setWidth(w);\n    dimensions.setHeight(h);\n  };\n\n  const updateCollageWithTextDimensions = () => {\n    const { width, height, setTextHeight, setImageWidth, setImageHeight } = dimensions;\n    const { text } = options.options;\n    if (!isEmptyTree()) {\n      const tH = helpers.wrapText(text, 0, 0, width, fontSize, lineHeight);\n      const totalTextHeight =\n        text.length > 0 ? tH.length * lineHeight + 2 * textPadding * height : 0;\n      const [w, h] = helpers.getCollageDimension(\n        width,\n        height - totalTextHeight,\n        treeState.tree.root.value.aspectRatio\n      );\n      setTextHeight(totalTextHeight);\n      setImageWidth(w);\n      setImageHeight(h);\n    }\n  };\n\n  useEffect(updateImagesStatus, [uploadedImages, images.imgCount]);\n  useEffect(handleInitialValue, [initialValue]);\n\n  useEffect(updateCollageWithTextDimensions, [\n    dimensions.width,\n    dimensions.height,\n    treeState.tree,\n    options.options.text,\n  ]);\n\n  useEffect(updateTreeAspectRatio, [collageType]);\n  useEffect(setCollageDimensions, [dimensions.maxWidth, dimensions.maxHeight, collageType]);\n\n  useEffect(rearrangeCollage, [images.newImgCount, images.newImagesLoaded, actions.refresh]);\n\n  return [\n    collageType,\n    getDetails,\n    collageName,\n    thumbnail,\n    collageID,\n    dimensions,\n    options,\n    actions,\n    images,\n    treeState,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n    handleCollageTypeChange,\n    handleNameChange,\n  ];\n}\n","import { useRef, useState, useEffect } from 'react';\n\nexport default function useDimensions() {\n  const headerRef = useRef();\n  const actionsRef = useRef();\n  const footerRef = useRef();\n  const collageMetaRef = useRef();\n  const addImageRef = useRef();\n\n  const [height, setHeight] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [imageWidth, setImageWidth] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [maxHeight, setMaxHeight] = useState(0);\n  const [maxWidth, setMaxWidth] = useState(0);\n  const [textHeight, setTextHeight] = useState(0);\n\n  const setDimensions = () => {\n    const isMobile = window.innerWidth < window.innerHeight;\n    const headerHeight = headerRef.current ? headerRef.current.offsetHeight : 0;\n    const collageMetaHeight = collageMetaRef.current ? collageMetaRef.current.offsetHeight : 0;\n    console.log('dimensions collage meta height', collageMetaHeight);\n    if (isMobile === true) {\n      const actionsHeight = actionsRef.current ? actionsRef.current.offsetHeight : 0;\n      const footerHeight = footerRef.current ? footerRef.current.offsetHeight : 0;\n      const otherHeight = headerHeight + actionsHeight + footerHeight + collageMetaHeight;\n      setMaxWidth(Math.min(window.innerWidth, window.screen.availWidth));\n      setMaxHeight(Math.min(window.innerHeight, window.screen.availHeight) - otherHeight - 10);\n    } else {\n      const actionsWidth = actionsRef.current ? actionsRef.current.offsetWidth : 0;\n      const footerWidth = footerRef.current ? footerRef.current.offsetWidth : 0;\n      setMaxWidth(window.innerWidth - (footerWidth + actionsWidth) - 10);\n      setMaxHeight(window.innerHeight - headerHeight - collageMetaHeight);\n    }\n  };\n\n  const handleImageAddClick = () => {\n    if (addImageRef.current) addImageRef.current.click();\n  };\n\n  useEffect(() => {\n    setDimensions();\n  }, [headerRef.current, actionsRef.current, footerRef.current]);\n\n  useEffect(() => {\n    setDimensions();\n\n    window.addEventListener('resize', setDimensions);\n\n    return () => window.removeEventListener('resize', setDimensions);\n  }, []);\n\n  return {\n    addImageRef,\n    actionsRef,\n    headerRef,\n    footerRef,\n    collageMetaRef,\n    width,\n    height,\n    imageHeight,\n    imageWidth,\n    setImageWidth,\n    setImageHeight,\n    maxHeight,\n    maxWidth,\n    handleImageAddClick,\n    textHeight,\n    setTextHeight,\n    setWidth,\n    setHeight,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useOptions() {\n  const optionsInitValue = {\n    padding: 2,\n    borderRadius: 5,\n    color: {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1,\n    },\n    text: '',\n    topText: true,\n  };\n\n  const [options, setOptions] = useState(optionsInitValue);\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n  const [editControl, setEditControl] = useState(null);\n  const [editOptionsValue, setEditOptionsValue] = useState('');\n\n  const clear = () => setOptions(optionsInitValue);\n  const handlePaddingChange = (e) => setOptions((opts) => ({ ...opts, padding: e.target.value }));\n  const handleRadiusChange = (e) => {\n    setOptions((opts) => ({ ...opts, borderRadius: e.target.value }));\n  };\n\n  const handleColorClick = () => setDisplayColorPicker((dcp) => !dcp);\n  const handleColorClose = () => setDisplayColorPicker(false);\n  const handleColorChange = (clr) => setOptions((opts) => ({ ...opts, color: clr.rgb }));\n  const handlePositionChange = (value) => setOptions((opts) => ({ ...opts, topText: value }));\n\n  const handleTextChange = (e) => {\n    const { target } = e;\n    setOptions((opts) => ({ ...opts, text: target.value }));\n  };\n\n  const handleTextSubmit = (e) => {\n    handleTextChange(e);\n    setEditControl(null);\n    setEditOptionsValue(null);\n  };\n\n  return {\n    options,\n    setOptions,\n    clear,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClick,\n    handleColorClose,\n    handleColorChange,\n    handlePositionChange,\n    handleTextChange,\n    displayColorPicker,\n    editControl,\n    setEditControl,\n    editOptionsValue,\n    setEditOptionsValue,\n    handleTextSubmit,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useActions() {\n  const [open, setOpen] = useState(false);\n  const [saveOpen, setSaveOpen] = useState(false);\n  const [saveStart, setSaveStart] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [generate, setGenerate] = useState(false);\n  const [removeImage, setRemoveImage] = useState(false);\n  const [printOptions, setPrintOptions] = useState({\n    paperWidth: 0,\n    paperHeight: 0,\n  });\n\n  const onRefresh = () => setRefresh(true);\n  const handleDownload = () => setOpen(true);\n  const handleSave = () => {\n    setSaveOpen(true);\n  };\n  const onDownloadClose = () => setOpen(false);\n  const onSaveClose = () => setSaveOpen(false);\n  const clearDelete = () => setRemoveImage(false);\n  const onDelete = () => setRemoveImage((ri) => !ri);\n\n  const onDownloadClick = (w, h) => {\n    setPrintOptions({ paperWidth: w, paperHeight: h });\n    setGenerate(true);\n    setOpen(false);\n  };\n\n  const onSaveClick = () => {\n    setSaveStart(true);\n    setSaveOpen(false);\n  };\n  const handleGenerateCallback = () => {\n    setGenerate(false);\n    setPrintOptions({ paperWidth: 0, paperHeight: 0 });\n  };\n\n  return {\n    clearDelete,\n    generate,\n    handleDownload,\n    handleGenerateCallback,\n    onDelete,\n    onDownloadClick,\n    onDownloadClose,\n    onRefresh,\n    open,\n    printOptions,\n    refresh,\n    setGenerate,\n    setOpen,\n    setPrintOptions,\n    setRefresh,\n    removeImage,\n    setRemoveImage,\n    saveOpen,\n    setSaveOpen,\n    onSaveClose,\n    onSaveClick,\n    handleSave,\n    saveStart,\n    setSaveStart,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport helpers from 'components/collage/helpers';\nimport constants from 'static/config/collage';\nimport utils from 'utils';\n\nexport default function useImages(initialValue) {\n  console.log('use images', initialValue);\n  const [newImgCount, setNewImageCount] = useState(0);\n  const [newImagesLoaded, setNewImagesLoaded] = useState(0);\n  const [imgCount, setImageCount] = useState(0);\n  const [loaded, setLoaded] = useState(0);\n  const [images, setImages] = useState([]);\n  const [imageCountMaxError, setImageCountMaxError] = useState('');\n  const [imageCountMinError, setImageCountMinError] = useState('');\n\n  useEffect(() => {\n    console.log('setting images');\n    if ('images' in initialValue) {\n      setImages(initialValue.images);\n      if (imgCount === 0) setImageCount(initialValue.images.length);\n    }\n  }, [initialValue]);\n\n  const getImageData = (imageArr) => {\n    const tempImgArr = [...imageArr];\n    return tempImgArr.map((img) => {\n      const { file, src, ...rest } = img;\n      console.log('get image data', img, rest);\n      return rest;\n    });\n  };\n\n  const removeImageData = (imageArr) => {\n    const tempImgArr = [...imageArr];\n    return tempImgArr.map((img) => {\n      const { file, src, ...rest } = img;\n      console.log('get image data', img, rest);\n      return rest;\n    });\n  };\n\n  const incrementNewImageCount = () => {\n    console.log('incrementing image count');\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleImageData = async (imageDetail) => {\n    setImages((arr) => arr.concat([imageDetail]));\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleImageCount = (totalImages) => {\n    if (totalImages === 0) {\n      setImageCountMinError('');\n      return true;\n    }\n    if (totalImages > 0) {\n      if (totalImages < constants.minImages) {\n        setImageCountMinError(\n          `Image Count Error: Need atleast ${constants.minImages} images to create a collage`\n        );\n        setImageCountMaxError('');\n        return false;\n      }\n      if (totalImages > constants.maxImages) {\n        setImageCountMaxError(\n          `Image Count Error: Maximum images allowed in collage is ${constants.maxImages}`\n        );\n        setImageCountMinError('');\n        return false;\n      }\n      if (totalImages >= constants.minImages && totalImages <= constants.maxImages) {\n        setImageCountMaxError('');\n        setImageCountMinError('');\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const handleLoad = (event) => {\n    const totalImages = event.target.files.length + imgCount;\n    console.log(event.target.files);\n    // eslint-disable-next-line\n    for (const file of event.target.files) {\n      console.log('handle Load', file.name, utils.getSize(file));\n    }\n    const valid = handleImageCount(totalImages);\n    if (valid === true) {\n      helpers.handleImageLoad(event, setImageCount, setNewImageCount, handleImageData);\n    }\n    console.log('total image count', event.target.files.length + imgCount, imgCount);\n  };\n\n  const clear = () => {\n    setImages([]);\n    setImageCount(0);\n    setLoaded(0);\n    setNewImagesLoaded(0);\n  };\n\n  const remove = (title) => {\n    const removeIndex = images.findIndex((elem) => elem.title === title);\n    const newImagesArr = [...images.slice(0, removeIndex), ...images.slice(removeIndex + 1)];\n    setImages(newImagesArr);\n    setImageCount((cnt) => cnt - 1);\n    return newImagesArr;\n  };\n\n  return {\n    clear,\n    handleImageData,\n    handleLoad,\n    images,\n    imgCount,\n    loaded,\n    newImagesLoaded,\n    newImgCount,\n    remove,\n    setImageCount,\n    setImages,\n    setLoaded,\n    setNewImageCount,\n    setNewImagesLoaded,\n    getImageData,\n    removeImageData,\n    incrementNewImageCount,\n    imageCountMinError,\n    setImageCountMinError,\n    imageCountMaxError,\n    setImageCountMaxError,\n    handleImageCount,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport treeUtils from 'components/collage/treeUtils';\nimport BinaryTree from 'components/collage/binaryTree';\n\nexport default function useTree(initialValue, loadingCallback = () => {}) {\n  const [tree, setTree] = useState(new BinaryTree({}));\n\n  useEffect(() => {\n    console.log('use Tree useEffect');\n    const newTree = new BinaryTree({});\n    if ('details' in initialValue && Object.keys(initialValue.details).length > 0) {\n      console.log('initial value in tree', initialValue);\n      newTree.fromObject(initialValue.details.tree);\n      if ('options' in initialValue.details.tree.root) {\n        loadingCallback((opts) => ({\n          ...opts,\n          ...initialValue.details.tree.root.options,\n        }));\n      }\n      console.log('setting tree');\n      setTree(newTree);\n    }\n  }, [initialValue]);\n\n  const clear = () => setTree({});\n\n  const reAdjust = (imagesArr, tolerance, imageWidth, imageHeight, options) => {\n    const [, bestAspectRatioTree] = treeUtils.findBestAdjustTree(\n      imagesArr,\n      tolerance,\n      imageWidth,\n      imageHeight\n    );\n    bestAspectRatioTree.addOptions(options);\n    setTree(bestAspectRatioTree);\n  };\n\n  console.log('use Tree', tree);\n  return { tree, setTree, clear, reAdjust };\n}\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Typography from '@mui/material/Typography';\n\nexport default function HandleError({ errors, children, handleClose }) {\n  const [open, setOpen] = useState(false);\n  useEffect(() => setOpen(true), []);\n  return errors.length > 0 ? (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center', color: 'red', fontWeight: 'bold' }}>\n        Error(s)\n      </DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <DialogContentText sx={{ display: 'inline', pr: 1 }}>\n          <Typography sx={{ fontWeight: 'bold' }}>Please fix the following errors</Typography>\n          <List sx={{ px: 2 }}>\n            {errors.map((err) => (\n              <ListItem sx={{ display: 'list-item', listStyleType: 'disc' }}>{err}</ListItem>\n            ))}\n          </List>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          onClick={() => {\n            handleClose();\n            setOpen(false);\n          }}\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  ) : (\n    children\n  );\n}\n\nHandleError.propTypes = {\n  errors: PropTypes.arrayOf(PropTypes.string).isRequired,\n  children: PropTypes.node.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport constants from 'static/config/collage';\nimport helpers from './helpers';\n\nexport default function Collage({\n  dimensionProps,\n  imageProps,\n  actionProps,\n  collageCallback,\n  handleRemoveImage,\n  options,\n  tree,\n}) {\n  const [collage, setCollage] = useState(null);\n  const { images, setLoaded } = imageProps;\n  const { generate, handleGenerateCallback, printOptions, removeImage } = actionProps;\n  const { height, width, imageHeight, imageWidth } = dimensionProps;\n  const { fontSize, lineHeight } = constants;\n\n  const handleCollageImageLoad = () => setLoaded((cnt) => cnt + 1);\n  const isEmpty = (t) => Object.keys(t).length === 0;\n  const createCollage = () => {\n    console.log('started collage loading', tree);\n    tree.addSize(imageWidth, imageHeight, tree.root.value.aspectRatio);\n    console.log('collage added size');\n    tree.addOptions(options);\n    console.log('collage added options', images.length);\n    if (images.length > 0) {\n      tree.addImageData(images);\n      console.log('collage added image data');\n      const collageElem = tree.DOMDisplay(\n        width,\n        height,\n        removeImage,\n        handleRemoveImage,\n        handleCollageImageLoad\n      );\n      console.log('collage added dom display');\n      setCollage(collageElem);\n      collageCallback(tree);\n    }\n  };\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      console.log('collage, tree is not empty');\n      createCollage();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      console.log('collage, tree is not empty 1');\n      createCollage();\n    } else {\n      setCollage(null);\n    }\n  }, [tree, options, imageWidth, imageHeight, removeImage, images]);\n\n  const downloadCollage = (canvas, pW, pH) => {\n    canvas.toBlob((blob) => {\n      const link = document.createElement('a');\n      link.download = `collage-${pW.toFixed(2)}X${pH.toFixed(2)}-${Date.now()}.jpg`;\n      link.href = URL.createObjectURL(blob);\n      link.click();\n      URL.revokeObjectURL(link.href);\n      link.href = null;\n      handleGenerateCallback();\n    }, 'image/jpeg');\n  };\n\n  const getCanvasTree = () => {\n    const canvasTree = tree.copy();\n    canvasTree.replaceImages(images);\n    return canvasTree;\n  };\n\n  const getCanvas = (pw, ph) => {\n    const canvasElement = document.createElement('canvas');\n    canvasElement.width = pw;\n    canvasElement.height = ph;\n    return canvasElement;\n  };\n\n  const generateCollageTree = (pw, ph) => {\n    const canvasTree = getCanvasTree();\n    const ar = tree.root.value.aspectRatio;\n    const scaleFactor = pw / width;\n    const [imgPW, imgPH] = helpers.getImageDimensions(\n      pw,\n      ph,\n      options.text,\n      0,\n      0,\n      fontSize,\n      lineHeight,\n      scaleFactor,\n      tree.root.value.aspectRatio\n    );\n    canvasTree.addSize(imgPW, imgPH, ar);\n    return canvasTree;\n  };\n\n  const generateCollage = (ctree, pw, ph) => {\n    const scaleFactor = pw / width;\n    const canvasElement = getCanvas(pw, ph);\n    ctree.CanvasDisplay(pw, ph, canvasElement, scaleFactor);\n\n    setTimeout(() => downloadCollage(canvasElement, pw, ph), '5000');\n  };\n\n  useEffect(() => {\n    if (generate === true) {\n      const { paperWidth: pw, paperHeight: ph } = printOptions;\n      const canvasTree = generateCollageTree(pw, ph);\n      const [valid, probNodes] = canvasTree.validateAddSize();\n      if (valid) {\n        generateCollage(canvasTree, pw, ph);\n      } else {\n        const [newPW, newPH] = helpers.optimizeDimensions(pw, ph, probNodes);\n        const newCanvasTree = generateCollageTree(newPW, newPH);\n        const [newValid, newProbNodes] = newCanvasTree.validateAddSize();\n        if (newValid) {\n          generateCollage(newCanvasTree, newPW, newPH);\n        } else {\n          console.log('unable to generate collage', newProbNodes);\n        }\n      }\n    }\n  }, [generate]);\n\n  return collage;\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\n\nexport default function DownloadDialog({ open, onClick, onClose, sizes, collageType }) {\n  const [value, setValue] = useState('');\n  const handleDownload = () => {\n    console.log(sizes[value].width, sizes[value].height, onClick);\n    onClick(sizes[value].width, sizes[value].height);\n    setValue('');\n  };\n\n  const handleClose = () => {\n    setValue('');\n    onClose();\n  };\n  console.log('download value', value);\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Download Collage</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <DialogContentText sx={{ display: 'inline', pr: 1 }}>Choose collage size</DialogContentText>\n        <FormControl fullWidth sx={{ maxWidth: '60%' }}>\n          <InputLabel id=\"demo-simple-select-label\">Download Size</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            defaultValue=\"A4\"\n            value={value}\n            label=\"Download Size\"\n            onChange={(event) => setValue(event.target.value)}\n            inputProps={{\n              sx: {\n                fontWeight: 'bold',\n                color: 'gray',\n                alignItems: 'end',\n                display: 'flex',\n              },\n            }}\n          >\n            {'downloadSizes' in sizes[collageType] ? (\n              sizes[collageType].downloadSizes.map((sz) => (\n                <MenuItem key={sizes[sz].text} value={sz}>\n                  {sizes[sz].icon}\n                  {sizes[sz].text}\n                </MenuItem>\n              ))\n            ) : (\n              <MenuItem key={sizes[collageType].text} value={collageType}>\n                {sizes[collageType].icon}\n                {sizes[collageType].text}\n              </MenuItem>\n            )}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" disabled={value.length === 0} onClick={handleDownload}>\n          Download\n        </Button>\n        <Button variant=\"text\" onClick={handleClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nDownloadDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      icon: PropTypes.node.isRequired,\n      downloadSizes: PropTypes.arrayOf(PropTypes.string),\n    })\n  ).isRequired,\n  collageType: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport TextField from '@mui/material/TextField';\n\nexport default function SaveDialog({ collageName, open, onClick, onClose }) {\n  const [name, setName] = useState(collageName);\n  const [nameError] = useState('');\n  const handleSave = () => {\n    onClick(name);\n  };\n\n  const handleNameChange = (e) => {\n    const { target } = e;\n    setName(target.value);\n  };\n\n  const handleClose = () => {\n    setName('');\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <TextField\n          variant=\"outlined\"\n          label=\"Set Collage Name\"\n          defaultValue={name}\n          onChange={handleNameChange}\n          size=\"small\"\n          sx={{ width: '100%', mb: 1 }}\n          InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n          helperText={nameError}\n          error={!!nameError}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" disabled={name.length === 0} onClick={handleSave}>\n          Save\n        </Button>\n        <Button variant=\"text\" onClick={handleClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nSaveDialog.propTypes = {\n  collageName: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport PendingIcon from '@mui/icons-material/Pending';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CloseIcon from '@mui/icons-material/Close';\n\nfunction FailedIcon() {\n  return (\n    <CloseIcon\n      color=\"error\"\n      size=\"0.875rem\"\n      sx={{ border: '2px solid red', borderRadius: '50%' }}\n    />\n  );\n}\n\nfunction StatusIndicator({ status }) {\n  if (status === 'running') {\n    return <CircularProgress color=\"info\" size=\"1rem\" />;\n  }\n  if (status === 'pending') {\n    return <PendingIcon color=\"disabled\" size=\"0.875rem\" />;\n  }\n  if (status === 'done') {\n    return <CheckCircleOutlineIcon color=\"success\" size=\"0.875rem\" />;\n  }\n  if (status === 'failed') {\n    return <FailedIcon />;\n  }\n}\n\nStatusIndicator.propTypes = {\n  status: PropTypes.string.isRequired,\n};\n\nfunction Status({ text, status }) {\n  const color = {\n    pending: alpha('#000', 0.26),\n    done: 'black',\n    running: 'black',\n    failed: 'red',\n  };\n\n  return (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n      <Typography sx={{ fontWeight: 'bold', fontSize: '1rem', color: color[status] }}>\n        {text}\n      </Typography>\n      <StatusIndicator status={status} />\n    </Stack>\n  );\n}\n\nStatus.propTypes = {\n  text: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nfunction OverAllStatus({ status, counter }) {\n  if (status === 'failed') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <FailedIcon />\n        <Typography>Collage creation failed</Typography>\n      </Stack>\n    );\n  }\n\n  if (status === 'running' || status === 'pending') return null;\n\n  if (status === 'success') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <CheckCircleOutlineIcon color=\"success\" sx={{ fontSize: '2rem' }} />\n        <Typography>\n          Collage creation successful. Navigation to collages in {counter} seconds...\n        </Typography>\n      </Stack>\n    );\n  }\n\n  return null;\n}\n\nOverAllStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  counter: PropTypes.number.isRequired,\n};\n\nexport default function SaveStatusDialog({ open, status }) {\n  let overAllStatus = 'pending';\n  const [counter, setCounter] = useState(-1);\n  useEffect(() => {\n    let timerId;\n    if (counter > 0 && overAllStatus === 'success') {\n      timerId = setTimeout(() => setCounter(counter - 1), 1000);\n    }\n    return () => clearTimeout(timerId);\n  }, [counter, overAllStatus]);\n\n  const statusArr = Object.values(status).map((val) => val.status);\n  if (statusArr.includes('failed')) {\n    overAllStatus = 'failed';\n  } else if (statusArr.includes('running')) {\n    overAllStatus = 'running';\n  } else if (!statusArr.includes('pending')) {\n    console.log('setting counter', counter, status);\n    if (counter === -1) {\n      setCounter(3);\n    }\n    overAllStatus = 'success';\n  }\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent dividers>\n        <Stack direction=\"column\" justifyContent=\"center\" spacing={2}>\n          {Object.values(status).map((st) => (\n            <Status key={st.text} text={st.text} status={st.status} />\n          ))}\n        </Stack>\n      </DialogContent>\n      <OverAllStatus status={overAllStatus} counter={counter} />\n    </Dialog>\n  );\n}\n\nSaveStatusDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  status: PropTypes.objectOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      status: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n\nimport * as yup from 'yup';\n// import { alpha } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n// import { alpha } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport { Typography, Box, Link } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ProfileLink from 'components/profile';\nimport { Branding, BrandLogo } from 'components/brand';\nimport constants from 'static/config/collage';\nimport utils from 'utils';\n\nfunction HeaderNameSection({ name, handleChange, nameError, handleNameError }) {\n  const [editable, setEditable] = useState(false);\n  const handleClick = () => setEditable(true);\n  const nameSchema = yup\n    .object({\n      name: yup\n        .string()\n        .max(constants.maxNameLength, `Max allowed length is ${constants.maxNameLength}`),\n    })\n    .required();\n\n  const isValid = async () => {\n    const nameValid = await utils.isFieldValid('name', name, handleNameError, nameSchema);\n    return nameValid;\n  };\n\n  const handleNameChange = (e) => handleChange(e.target.value);\n\n  const handleBlur = async (e) => {\n    if (e.target.value === '') {\n      handleChange('Untitled');\n    } else {\n      handleChange(e.target.value);\n      const valid = await isValid();\n      if (valid === false) {\n        return;\n      }\n    }\n    setEditable(false);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      handleBlur(e);\n    }\n  };\n\n  useEffect(() => isValid(), [name]);\n\n  return editable === true ? (\n    <TextField\n      color=\"primary\"\n      variant=\"filled\"\n      label=\"Set Collage Name\"\n      defaultValue={name}\n      autoFocus\n      size=\"small\"\n      onChange={handleNameChange}\n      onBlur={handleBlur}\n      onKeyDown={handleKeyDown}\n      InputLabelProps={{\n        color: 'secondary',\n        focused: true,\n      }}\n      InputProps={{\n        sx: {\n          color: 'white',\n        },\n      }}\n      helperText={\n        <Typography\n          variant=\"body\"\n          sx={{\n            fontWeight: 'bold',\n            color: 'secondary.main',\n          }}\n        >\n          {nameError}\n        </Typography>\n      }\n      error={!!nameError}\n      sx={{\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n        cursor: 'text',\n      }}\n    />\n  ) : (\n    <Typography\n      variant=\"h5\"\n      onClick={handleClick}\n      sx={{\n        color: 'gray',\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n      }}\n    >\n      {name}\n    </Typography>\n  );\n}\n\nHeaderNameSection.propTypes = {\n  name: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  nameError: PropTypes.string.isRequired,\n  handleNameError: PropTypes.func.isRequired,\n};\n\nexport default function Header({ headerRef, name, handleNameChange, nameError, handleNameError }) {\n  const belowmd = useMediaQuery((theme) => theme.breakpoints.down('md'));\n  return (\n    <Paper\n      ref={headerRef}\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        p: 1,\n        backgroundColor: 'primary.main',\n        borderRadius: 0,\n      }}\n      elevation={0}\n    >\n      <Box sx={{ postion: 'absolute', left: '5px' }}>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n          <Link href=\"/collages\" color=\"white\" underline=\"none\">\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <ArrowBackIcon fontSize=\"medium\" />\n            </Box>\n          </Link>\n          {belowmd ? (\n            <BrandLogo width=\"50px\" height=\"50px\" />\n          ) : (\n            <Branding width=\"50px\" height=\"50px\" />\n          )}\n        </Stack>\n      </Box>\n      <HeaderNameSection\n        name={name}\n        handleChange={handleNameChange}\n        nameError={nameError}\n        handleNameError={handleNameError}\n      />\n      <ProfileLink />\n    </Paper>\n  );\n}\n\nHeader.propTypes = {\n  name: PropTypes.string.isRequired,\n  headerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  handleNameChange: PropTypes.func.isRequired,\n  nameError: PropTypes.string.isRequired,\n  handleNameError: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n// import Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport collageBack from 'static/images/collage_back1.webp';\n\nexport default function EmptyCollage({ width, height, loadComponent }) {\n  console.log(width, height);\n  return (\n    <Box\n      sx={{\n        backgroundImage: `url(${collageBack})`,\n        backgroundSize: width,\n        objectFit: 'fill',\n        width,\n        height,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {loadComponent}\n    </Box>\n  );\n}\n\nEmptyCollage.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  loadComponent: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport constants from 'static/config/collage';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport EmptyCollage from 'components/collage/EmptyCollage';\nimport Loading from 'components/Loading';\nimport AddPhotos from 'components/AddPhotos';\n\nexport default function View({\n  open,\n  saveOpen,\n  saveStatusOpen,\n  status,\n  dimensionProps,\n  imageProps,\n  header,\n  actions,\n  downloadDialog,\n  saveDialog,\n  saveStatusDialog,\n  collage,\n  controls,\n  collageMetaInfo,\n}) {\n  const { width, height, maxWidth, maxHeight, collageMetaRef } = dimensionProps;\n  console.log(maxHeight, maxWidth);\n  const metaHeight = collageMetaRef.current ? collageMetaRef.current.offsetHeight : 0;\n  let showControls = false;\n  const { images, imgCount, handleLoad } = imageProps;\n  if (images.length > 0) {\n    showControls = true;\n  }\n  let content;\n  if (status === 'fetching') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={<Loading title=\"Fetching collage...\" />}\n      />\n    );\n  }\n\n  if (status === 'preparing') {\n    content = (\n      <>\n        {collage}\n        <Loading title=\"Preparing collage...\" />\n      </>\n    );\n  }\n\n  if (status === 'loading') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          <>\n            <Loading title={`Loading (${imageProps.newImagesLoaded} / ${imgCount}) images...`} />\n            {collage}\n          </>\n        }\n      />\n    );\n  }\n\n  if (status === 'empty') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          width ? (\n            <Stack direction=\"column\" spacing={2}>\n              <AddPhotos handleChange={handleLoad} />\n              <Typography\n                sx={{\n                  backgroundColor: 'faded.black',\n                  p: 1,\n                  color: 'form.stepper',\n                  fontWeight: 'bold',\n                  fontSize: '0.7rem',\n                  textAlign: 'center',\n                }}\n              >\n                Tip: Select {constants.minImages} - {constants.maxImages} images\n              </Typography>\n              <Typography\n                sx={{\n                  backgroundColor: 'faded.black',\n                  p: 1,\n                  color: 'form.stepper',\n                  fontWeight: 'bold',\n                  fontSize: '0.7rem',\n                }}\n              >\n                Note: Images with size {'>'} {constants.maxImageSize}MB will be resized\n              </Typography>\n            </Stack>\n          ) : (\n            <div />\n          )\n        }\n      />\n    );\n  }\n\n  if (status === 'ready') {\n    content = collage;\n  }\n  const leftPos = (Math.min(window.innerWidth, window.screen.availWidth) - maxWidth) / 2;\n  console.log('window.innerWidth', window.innerWidth, 'maxWidth', maxWidth, 'leftPos', leftPos);\n\n  return (\n    <Box\n      component=\"div\"\n      sx={{\n        position: 'relative',\n      }}\n    >\n      {header}\n      {showControls ? actions : null}\n      {open ? downloadDialog : null}\n      {saveOpen ? saveDialog : null}\n      {saveStatusOpen ? saveStatusDialog : null}\n      <Stack\n        direction=\"column\"\n        width={maxWidth}\n        height={maxHeight + metaHeight}\n        sx={{\n          position: 'absolute',\n          left: leftPos,\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'gray',\n        }}\n      >\n        {collageMetaInfo}\n        {content}\n      </Stack>\n      {showControls ? controls : null}\n    </Box>\n  );\n}\n\nView.propTypes = {\n  dimensionProps: PropTypes.shape({\n    maxWidth: PropTypes.number.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    imageHeight: PropTypes.number.isRequired,\n    collageMetaRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n\n    headerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n    actionsRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n    footerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n  imageProps: PropTypes.shape({\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        src: PropTypes.string.isRequired,\n        naturalHeight: PropTypes.number.isRequired,\n        naturalWidth: PropTypes.number.isRequired,\n        aspectRatio: PropTypes.number.isRequired,\n        type: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    imgCount: PropTypes.number.isRequired,\n    handleLoad: PropTypes.func.isRequired,\n    loaded: PropTypes.number.isRequired,\n    newImagesLoaded: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  saveOpen: PropTypes.bool.isRequired,\n  saveStatusOpen: PropTypes.bool.isRequired,\n  status: PropTypes.string.isRequired,\n  header: PropTypes.node.isRequired,\n  actions: PropTypes.node.isRequired,\n  collage: PropTypes.node.isRequired,\n  controls: PropTypes.node.isRequired,\n  downloadDialog: PropTypes.node.isRequired,\n  saveDialog: PropTypes.node.isRequired,\n  saveStatusDialog: PropTypes.node.isRequired,\n  collageMetaInfo: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      icon={icon}\n      sx={{\n        py: 1,\n        fontWeight: 'bold',\n        color: 'gray',\n        outline: 'none',\n        '&:focus': {\n          color: 'white',\n          outline: 'none',\n        },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\nDBNA.defaultProps = {\n  handleChange: () => {},\n};\n\nDBNA.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Drawer from '@mui/material/Drawer';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopDrawer({ anchor, children, innerRef }) {\n  return (\n    <Drawer\n      anchor={anchor}\n      variant=\"permanent\"\n      PaperProps={{\n        ref: innerRef,\n        sx: {\n          height: 'fit-content',\n          top: '50%',\n          backgroundColor: 'transparent',\n          color: 'gray',\n          fontWeight: 'bold',\n          borderRadius: anchor === 'left' ? '0 10px 10px 0' : '10px 0 0 10px',\n          transform: 'translate(0, -50%)',\n          border: 0,\n        },\n      }}\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nDesktopDrawer.defaultProps = {\n  innerRef: () => {},\n};\n\nDesktopDrawer.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n  anchor: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Divider from '@mui/material/Divider';\n\nexport default function ControlsDivider() {\n  return <Divider sx={{ backgroundColor: 'gray', my: 1 }} variant=\"middle\" />;\n}\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport List from '@mui/material/List';\n// import { alpha } from '@mui/material/styles';\n\nimport DBNA from 'components/collage/DesktopActionItem';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport ControlsDivider from 'components/collage/ControlsDivider';\n\nexport default function DesktopActions({ actionsRef, onDownload, onSave }) {\n  const handleChange = (newValue) => {\n    if (newValue === 'download') {\n      onDownload();\n    }\n    if (newValue === 'save') {\n      onSave();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  return (\n    <DesktopDrawer anchor=\"right\" innerRef={actionsRef}>\n      <List sx={{ backgroundColor: 'black' }}>\n        <DBNA label=\"Save\" icon={<SaveIcon />} handleChange={() => handleChange('save')} />\n        <ControlsDivider />\n        <DBNA\n          label=\"Download\"\n          icon={<DownloadIcon />}\n          handleChange={() => handleChange('download')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label={\n            <>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>Order</Typography>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>Print(s)</Typography>\n            </>\n          }\n          icon={<PrintIcon />}\n          handleChange={() => handleChange('print')}\n        />\n      </List>\n    </DesktopDrawer>\n  );\n}\n\nDesktopActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\n\nexport default function ClearCollageDialog({ open, onSubmit, onCancel, saveType }) {\n  return (\n    <Dialog open={open}>\n      <DialogTitle\n        sx={{\n          textAlign: 'center',\n          fontWeight: 'bold',\n          color: alpha('#000', 0.8),\n        }}\n      >\n        {saveType === 'new' ? 'Clear' : 'Delete'} Collage\n      </DialogTitle>\n      <DialogContent dividers>\n        <DialogContentText sx={{ fontWeight: 'bold', color: 'gray', pb: 1 }}>\n          Do you want to {saveType === 'new' ? 'clear' : 'delete'} this collage?\n        </DialogContentText>\n        <Typography variant=\"subtitle2\" sx={{ color: 'red', fontWeight: 'bold' }} noWrap>\n          Note:\n        </Typography>\n        <Typography sx={{ fontSize: '0.8rem', color: 'gray', fontWeight: 'bold' }}>\n          This change is not reversible\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onSubmit} sx={{ color: 'red' }}>\n          {saveType === 'new' ? 'Clear' : 'Delete'}\n        </Button>\n        <Button variant=\"outlined\" onClick={onCancel}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nClearCollageDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useRef, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\n// import { alpha } from '@mui/material/styles';\n\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function DesktopControls({\n  innerRef,\n  onRefresh,\n  photosComp,\n  editComp,\n  handleClear,\n  clearDelete,\n  saveType,\n}) {\n  const [imageOptionsOpen, setImageOptionsOpen] = useState(false);\n  const [editOptionsOpen, setEditOptionsOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const editRef = useRef(null);\n\n  const closeAll = () => {\n    clearDelete();\n    setImageOptionsOpen(false);\n    setEditOptionsOpen(false);\n    setClearOpen(false);\n  };\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (editRef.current && !editRef.current.contains(event.target)) {\n        closeAll();\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [editRef]);\n\n  const handlePhotosClick = () => {\n    const ioo = imageOptionsOpen;\n    setImageOptionsOpen((io) => !io);\n    if (ioo === true) closeAll();\n    // closeAll();\n    // if (imageOptionsOpen) {\n    //   setImageOptionsOpen((io) => !io);\n    //   closeAll();\n    // } else {\n    //   closeAll();\n    //   setImageOptionsOpen(true);\n    // }\n  };\n\n  const handleEditClick = () => {\n    if (editOptionsOpen) {\n      setEditOptionsOpen(false);\n    } else {\n      closeAll();\n      setEditOptionsOpen(true);\n    }\n  };\n  const handleRearrange = () => {\n    closeAll();\n    onRefresh();\n  };\n\n  const handleClearClick = () => {\n    console.log('clear open', clearOpen);\n    if (clearOpen) {\n      setClearOpen(false);\n    } else {\n      closeAll();\n      setClearOpen(true);\n    }\n  };\n\n  const handleClearClose = () => setClearOpen(false);\n  const handleClearSubmit = () => {\n    handleClearClose();\n    handleClear();\n  };\n\n  console.log('clear open', clearOpen);\n  console.log('rendering desktop controls');\n  return (\n    <DesktopDrawer anchor=\"left\">\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\" ref={innerRef}>\n        <List\n          sx={{\n            backgroundColor: 'black',\n            borderRadius: '0 10px 10px 0',\n          }}\n        >\n          <DBNA label=\"Rearrange\" icon={<AutoAwesomeMosaicIcon />} handleChange={handleRearrange} />\n          <ControlsDivider />\n          <DBNA label=\"Photos\" icon={<PhotoIcon />} handleChange={handlePhotosClick} />\n          <ControlsDivider />\n          <DBNA label=\"Edit\" icon={<EditIcon />} handleChange={handleEditClick} />\n          <ControlsDivider />\n          <DBNA\n            label={saveType === 'new' ? 'Clear' : 'Delete'}\n            icon={saveType === 'new' ? <RefreshIcon /> : <DeleteIcon />}\n            handleChange={handleClearClick}\n          />\n        </List>\n        {imageOptionsOpen ? photosComp : null}\n        {editOptionsOpen ? <div ref={editRef}>{editComp}</div> : null}\n        <ClearCollageDialog\n          open={clearOpen}\n          onSubmit={handleClearSubmit}\n          onCancel={handleClearClose}\n          saveType={saveType}\n        />\n      </Stack>\n    </DesktopDrawer>\n  );\n}\n\nDesktopControls.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  photosComp: PropTypes.node.isRequired,\n  editComp: PropTypes.node.isRequired,\n  handleClear: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopImageOptions({ onDelete, onAdd, clearDelete }) {\n  const handleAdd = () => {\n    clearDelete();\n    onAdd();\n  };\n\n  return (\n    <List\n      sx={{\n        backgroundColor: 'black',\n        borderRadius: '10px 10px 10px 10px',\n        height: 'fit-content',\n      }}\n    >\n      <DBNA label=\"Add\" icon={<AddPhotoAlternateIcon />} handleChange={handleAdd} />\n      <ControlsDivider />\n      <DBNA label=\"Delete\" icon={<DeleteIcon />} handleChange={onDelete} />\n    </List>\n  );\n}\n\nDesktopImageOptions.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\n\nexport default function EditControl({ paddingControl, radiusControl, colorControl, textControl }) {\n  return (\n    <Stack\n      direction=\"column\"\n      spacing={4}\n      sx={{\n        p: 3,\n        backgroundColor: 'black',\n        borderRadius: '10px 10px 10px 10px',\n        boxShadow: '0 0 10px inset rgba(255, 0, 0, 0.3)',\n      }}\n    >\n      {paddingControl}\n      {radiusControl}\n      {colorControl}\n      {textControl}\n    </Stack>\n  );\n}\n\nEditControl.propTypes = {\n  paddingControl: PropTypes.node.isRequired,\n  radiusControl: PropTypes.node.isRequired,\n  colorControl: PropTypes.node.isRequired,\n  textControl: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n\nexport default function MBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      value={label.toLowerCase()}\n      icon={icon}\n      sx={{\n        fontWeight: 'bold',\n        color: 'gray',\n        '&.Mui-selected': { color: 'white', outline: 'none' },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\n\nMBNA.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function MobileActions({ actionsRef, onDownload, onSave }) {\n  return (\n    <BottomNavigation\n      ref={actionsRef}\n      showLabels\n      sx={{ py: 1, fontWeight: 'bold', backgroundColor: alpha('#000', 0.6) }}\n    >\n      <MBNA label=\"Save\" icon={<SaveIcon />} handleChange={onSave} />\n      <MBNA label=\"Download\" icon={<DownloadIcon />} handleChange={onDownload} />\n      <MBNA label=\"Print\" icon={<PrintIcon />} handleChange={() => {}} />\n    </BottomNavigation>\n  );\n}\n\nMobileActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { alpha } from '@mui/material/styles';\n\nexport default function MainControls({ value, handleChange, saveType }) {\n  return (\n    <BottomNavigation\n      showLabels\n      value={value}\n      onChange={handleChange}\n      sx={{\n        fontWeight: 'bold',\n        backgroundColor: alpha('#fff', 0.2),\n        '&.Mui-selected': { color: 'white' },\n      }}\n    >\n      <BottomNavigationAction\n        label=\"Rearrange\"\n        value=\"rearrange\"\n        icon={<AutoAwesomeMosaicIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Photos\"\n        value=\"photo\"\n        icon={<PhotoIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Edit\"\n        value=\"edit\"\n        icon={<EditIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label={saveType === 'new' ? 'Clear' : 'Delete'}\n        value=\"clear\"\n        icon={saveType === 'new' ? <RefreshIcon /> : <DeleteIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n    </BottomNavigation>\n  );\n}\n\nMainControls.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport Typography from '@mui/material/Typography';\nimport PaddingIcon from '@mui/icons-material/Padding';\nimport CropFreeIcon from '@mui/icons-material/CropFree';\nimport SquareIcon from '@mui/icons-material/Square';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TitleIcon from '@mui/icons-material/Title';\nimport { alpha } from '@mui/material/styles';\n\nexport default function EditOptions({\n  color,\n  editOptionsValue,\n  open,\n  handleOptionsClose,\n  handleEditOptionsClick,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={editOptionsValue}\n        onChange={handleEditOptionsClick}\n        sx={{\n          display: 'flex',\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          position: 'relative',\n          alignItems: 'center',\n        }}\n      >\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Padding\n            </Typography>\n          }\n          value=\"padding\"\n          icon={<PaddingIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Corner\n            </Typography>\n          }\n          value=\"border radius\"\n          icon={<CropFreeIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Color\n            </Typography>\n          }\n          value=\"color\"\n          icon={\n            <SquareIcon\n              sx={{\n                fill: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n                borderRadius: '5px',\n              }}\n            />\n          }\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label=\"Text\"\n          value=\"text\"\n          icon={<TitleIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nEditOptions.propTypes = {\n  editOptionsValue: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleEditOptionsClick: PropTypes.func.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function ImageOptions({ open, value, handleOptionsClose, handleDelete, handleAdd }) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={value}\n        sx={{\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          '&.Mui-selected': { color: 'white' },\n        }}\n      >\n        <MBNA label=\"Delete\" icon={<DeleteIcon />} handleChange={handleDelete} />\n        <MBNA label=\"Add\" icon={<AddPhotoAlternateIcon />} handleChange={handleAdd} />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nImageOptions.propTypes = {\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect, useRef } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport { alpha } from '@mui/material/styles';\n\nimport MainControls from 'components/collage/MainControls';\nimport EditOptions from 'components/collage/EditOptions';\nimport ImageOptions from 'components/collage/ImageOptions';\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function MobileControls({\n  optionProps,\n  actionProps,\n  dimensionProps,\n  handleClear,\n  saveType,\n  paddingControl,\n  radiusControl,\n  colorControl,\n  textControl,\n  editControl,\n  handleEditControl,\n  editOptionsValue,\n  handleEditOptionsValue,\n}) {\n  const { options, handleColorClick, displayColorPicker } = optionProps;\n  const { onRefresh, onDelete, clearDelete } = actionProps;\n  const { footerRef, handleImageAddClick } = dimensionProps;\n\n  const [mainOpen, setMainOpen] = useState(true);\n  const [value, setValue] = useState('');\n  const [editOpen, setEditOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageValue, setImageValue] = useState('');\n  const editRef = useRef(null);\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (editRef.current && !editRef.current.contains(event.target)) {\n        handleEditControl(null);\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [editRef]);\n\n  const handleImageOptionsClose = () => {\n    setImageOpen(false);\n    setImageValue('');\n    setMainOpen(true);\n    clearDelete();\n    setValue('');\n  };\n\n  const handleEditOptionsClose = () => {\n    setEditOpen(false);\n    handleEditControl(null);\n    handleEditOptionsValue('');\n    setMainOpen(true);\n    setValue('');\n  };\n\n  const handleEditOptionsClick = (e, nV) => {\n    console.log('handle edit options click');\n    handleEditOptionsValue(nV);\n    if (nV === 'padding') {\n      handleEditControl(paddingControl);\n    } else if (nV === 'border radius') {\n      handleEditControl(radiusControl);\n    } else if (nV === 'color') {\n      handleColorClick();\n    } else if (nV === 'text') {\n      console.log(nV);\n      handleEditControl(textControl);\n    }\n  };\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'padding') {\n      handleEditControl(paddingControl);\n    }\n  }, [options.padding, editOpen]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'border radius') {\n      handleEditControl(radiusControl);\n    }\n  }, [options.borderRadius, editOpen]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'color' && !!displayColorPicker) {\n      handleEditControl(colorControl);\n    }\n  }, [options.color, editOpen, displayColorPicker]);\n\n  useEffect(() => {\n    console.log('text control useEffect');\n    if (editOpen && editOptionsValue === 'text') {\n      handleEditControl(textControl);\n    }\n  }, [options.text, editOpen, options.topText]);\n\n  const handleImageClose = () => {\n    setImageValue('');\n    setImageOpen(false);\n    setMainOpen(true);\n  };\n\n  const handleChange = (event, newValue) => {\n    clearDelete();\n    handleImageClose();\n    handleEditOptionsClose();\n    setValue(newValue);\n    if (newValue === 'rearrange') {\n      onRefresh();\n    } else if (newValue === 'photo') {\n      setMainOpen(false);\n      setImageOpen(true);\n    } else if (newValue === 'edit') {\n      setMainOpen(false);\n      setEditOpen(true);\n    } else if (newValue === 'clear') {\n      setClearOpen(true);\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  const handleImageAdd = () => {\n    clearDelete();\n    handleImageAddClick();\n  };\n\n  const handleClearSubmit = () => {\n    handleClear();\n    setClearOpen(false);\n    setValue('');\n  };\n\n  const handleClearCancel = () => {\n    setClearOpen(false);\n    setValue('');\n  };\n\n  console.log('rerendering', editControl);\n  return (\n    <Paper\n      ref={footerRef}\n      sx={{\n        position: 'fixed',\n        top: Math.min(window.innerHeight, window.screen.availHeight),\n        // bottom: 0,\n        // left: 0,\n        // right: 0,\n        // mt: 1,\n        backgroundColor: 'black',\n        borderRadius: 0,\n        width: Math.min(window.innerWidth, window.screen.availWidth),\n        transform: 'translate(0, -100%)',\n      }}\n      elevation={4}\n    >\n      <ClearCollageDialog\n        open={clearOpen}\n        onSubmit={handleClearSubmit}\n        onCancel={handleClearCancel}\n        saveType={saveType}\n      />\n      {editControl !== null ? (\n        <Box\n          ref={editRef}\n          sx={{\n            backgroundColor: alpha('#fff', 0.15),\n            p: 1,\n          }}\n        >\n          {editControl}\n        </Box>\n      ) : null}\n      <ImageOptions\n        open={imageOpen}\n        value={imageValue}\n        handleDelete={onDelete}\n        handleAdd={handleImageAdd}\n        handleOptionsClose={handleImageOptionsClose}\n      />\n      <EditOptions\n        color={options.color}\n        editOptionsValue={editOptionsValue}\n        open={editOpen}\n        handleOptionsClose={handleEditOptionsClose}\n        handleEditOptionsClick={handleEditOptionsClick}\n      />\n      {mainOpen ? (\n        <MainControls value={value} handleChange={handleChange} saveType={saveType} />\n      ) : null}\n    </Paper>\n  );\n}\n\nMobileControls.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n  }).isRequired,\n  actionProps: PropTypes.shape({\n    onRefresh: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    clearDelete: PropTypes.func.isRequired,\n  }).isRequired,\n  handleClear: PropTypes.func.isRequired,\n  dimensionProps: PropTypes.shape({\n    handleImageAddClick: PropTypes.func.isRequired,\n    footerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n  paddingControl: PropTypes.node.isRequired,\n  radiusControl: PropTypes.node.isRequired,\n  colorControl: PropTypes.node.isRequired,\n  textControl: PropTypes.node.isRequired,\n  editControl: PropTypes.node.isRequired,\n  handleEditControl: PropTypes.func.isRequired,\n  editOptionsValue: PropTypes.node.isRequired,\n  handleEditOptionsValue: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\n// import ListItemText from '@mui/material/ListItemText';\n// import ListItemIcon from '@mui/material/ListItemIcon';\n\nexport default function CollageType({ type, handleChange, sizes }) {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n      <Typography\n        sx={{\n          color: 'form.input',\n          fontSize: '0.87rem',\n          fontWeight: 'bold',\n        }}\n      >\n        Type:{' '}\n      </Typography>\n      <FormControl\n        variant=\"standard\"\n        size=\"small\"\n        margin=\"none\"\n        hiddenLabel\n        sx={{ alignItems: 'center' }}\n      >\n        <Select\n          id=\"demo-simple-select-standard\"\n          value={type}\n          onChange={handleChange}\n          label=\"CollageType\"\n          disableUnderline\n          inputProps={{\n            sx: {\n              p: 0,\n              fontWeight: 'bold',\n              fontSize: '0.82rem',\n              color: 'primary.main',\n              pl: 1,\n              minWidth: '40px',\n              alignItems: 'end',\n              display: 'flex',\n              minHeight: '30px',\n            },\n          }}\n        >\n          {Object.keys(sizes).map((key) => {\n            if (sizes[key].display === true) {\n              return (\n                <MenuItem\n                  divider\n                  key={key}\n                  value={key}\n                  sx={{\n                    alignItems: 'center',\n                    px: 1,\n                    minHeight: '35px',\n                    fontSize: '0.87rem',\n                    fontWeight: 'bold',\n                    color: 'gray',\n                  }}\n                >\n                  {sizes[key].icon}\n                  {sizes[key].text}\n                </MenuItem>\n              );\n            }\n            return null;\n          })}\n        </Select>\n      </FormControl>\n    </Stack>\n  );\n}\n\nCollageType.propTypes = {\n  type: PropTypes.string.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      icon: PropTypes.node,\n      display: PropTypes.bool.isRequired,\n    })\n  ).isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\n\nexport default function CollageImageCount({ count }) {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n      <Typography\n        sx={{\n          color: 'form.input',\n          fontSize: '0.87rem',\n          fontWeight: 'bold',\n          px: 1,\n        }}\n      >\n        Images:\n      </Typography>\n      <Typography\n        sx={{\n          color: 'primary.main',\n          fontSize: '0.87rem',\n          fontWeight: 'bold',\n          p: 0,\n        }}\n      >\n        {count}\n      </Typography>\n    </Stack>\n  );\n}\n\nCollageImageCount.propTypes = {\n  count: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport CollageType from 'components/collage/CollageType';\nimport CollageImageCount from 'components/collage/CollageImageCount';\n\nexport default function CollageMetaInfo({\n  collageMetaRef,\n  collageType,\n  width,\n  sizes,\n  handleTypeChange,\n  imageCount,\n}) {\n  const handleChange = (event) => {\n    const ct = event.target.value;\n    handleTypeChange(ct);\n  };\n\n  return (\n    <Stack\n      ref={collageMetaRef}\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-around\"\n      sx={{\n        width,\n        textAlign: 'middle',\n        px: 1,\n      }}\n    >\n      <CollageType type={collageType} sizes={sizes} handleChange={handleChange} />\n      <CollageImageCount count={imageCount} />\n    </Stack>\n  );\n}\n\nCollageMetaInfo.propTypes = {\n  collageType: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      icon: PropTypes.node,\n    })\n  ).isRequired,\n  handleTypeChange: PropTypes.func.isRequired,\n  imageCount: PropTypes.number.isRequired,\n  collageMetaRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function PaddingControl({ padding, handlePaddingChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n          mixBlendMode: 'difference',\n        }}\n      >\n        Padding\n      </Typography>\n      <Slider\n        aria-label=\"Padding\"\n        defaultValue={0}\n        value={padding}\n        valueLabelDisplay=\"auto\"\n        step={0.1}\n        min={0}\n        max={10}\n        onChange={handlePaddingChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nPaddingControl.propTypes = {\n  padding: PropTypes.number.isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function RadiusControl({ radius, handleRadiusChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n        }}\n      >\n        Corner Radius\n      </Typography>\n      <Slider\n        aria-label=\"Corner Radius\"\n        defaultValue={0}\n        value={radius}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        min={0}\n        max={40}\n        onChange={handleRadiusChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nRadiusControl.propTypes = {\n  radius: PropTypes.number.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport * as yup from 'yup';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport constants from 'static/config/collage';\nimport utils from 'utils';\n\nexport default function TextControl({\n  text,\n  handleTextChange,\n  topText,\n  handlePositionChange,\n  handleTextSubmit,\n  textError,\n  handleTextError,\n}) {\n  const textSchema = yup\n    .object({\n      text: yup\n        .string()\n        .max(\n          constants.maxColllageTextLength,\n          `Max allowed length is ${constants.maxColllageTextLength}`\n        ),\n    })\n    .required();\n\n  const isValid = async () => {\n    const textValid = await utils.isFieldValid('text', text, handleTextError, textSchema);\n    return textValid;\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      handleTextSubmit(e);\n    }\n  };\n\n  useEffect(() => isValid(), [text]);\n\n  return (\n    <Stack\n      sx={{\n        backgroundColor: 'transparent',\n      }}\n    >\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={2}>\n        <Typography sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}>\n          Collage Text\n        </Typography>\n        <FormGroup row>\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === false}\n                onChange={() => handlePositionChange(false)}\n                sx={{ color: 'white', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Bottom\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold' }}\n          />\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === true}\n                onChange={() => handlePositionChange(true)}\n                sx={{ color: 'gray', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Top\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold', fontSize: '0.8rem' }}\n          />\n        </FormGroup>\n      </Stack>\n      <TextField\n        variant=\"outlined\"\n        label=\"\"\n        defaultValue={text}\n        onKeyDown={handleKeyDown}\n        size=\"small\"\n        sx={{ width: '100%', mb: 1 }}\n        onChange={handleTextChange}\n        InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n        helperText={<Typography sx={{ fontSize: '0.75rem' }}>{textError}</Typography>}\n        error={!!textError}\n      />\n    </Stack>\n  );\n}\n\nTextControl.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  handlePositionChange: PropTypes.func.isRequired,\n  handleTextSubmit: PropTypes.func.isRequired,\n  textError: PropTypes.string.isRequired,\n  handleTextError: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { ChromePicker } from 'react-color';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function ColorControl({\n  color,\n  displayColorPicker,\n  handleClick,\n  handleClose,\n  handleChange,\n}) {\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      spacing={2}\n      sx={{ my: 2 }}\n    >\n      <Typography sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}>\n        Background Color\n      </Typography>\n      <Box\n        component=\"div\"\n        sx={{\n          padding: '2px',\n          background: '#fff',\n          borderRadius: '5px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        }}\n        onClick={handleClick}\n      >\n        <Box\n          component=\"div\"\n          sx={{\n            width: '70px',\n            height: '30px',\n            borderRadius: '18px',\n            background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n          }}\n        />\n      </Box>\n      <ColorPicker\n        open={displayColorPicker}\n        color={color}\n        handleClose={handleClose}\n        handleChange={handleChange}\n      />\n    </Stack>\n  );\n}\n\nColorControl.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport function ColorPicker({ open, color, handleClose, handleChange }) {\n  console.log(handleClose);\n  return open ? (\n    <>\n      <Box\n        component=\"div\"\n        sx={{\n          position: 'absolute',\n          zIndex: 3,\n          bottom: 10,\n        }}\n      >\n        <IconButton\n          sx={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            zIndex: 2,\n            backgroundColor: 'button.main',\n            p: 0,\n            transform: 'translate(0, -110%)',\n            border: '2px solid black',\n          }}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n        <ChromePicker color={color} onChange={handleChange} />\n      </Box>\n    </>\n  ) : null;\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\n\nexport default function CommonDialog({ open, message, progress, onClose }) {\n  return (\n    <Dialog open={open}>\n      {progress !== true ? (\n        <DialogTitle sx={{ textAlign: 'center', color: 'info', fontWeight: 'bold' }}>\n          Info\n        </DialogTitle>\n      ) : null}\n      <DialogContent dividers={progress !== true}>\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={2}>\n          {progress === true ? <CircularProgress /> : null}\n          <Typography variant=\"h6\">{message}</Typography>\n        </Stack>\n      </DialogContent>\n      {progress === false ? (\n        <DialogActions>\n          <Button variant=\"text\" onClick={onClose}>\n            Close\n          </Button>\n        </DialogActions>\n      ) : null}\n    </Dialog>\n  );\n}\n\nCommonDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  message: PropTypes.string.isRequired,\n  progress: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport useBase from 'hooks/collage/base';\nimport { useNavigate } from 'react-router-dom';\nimport constants from 'static/config/collage';\nimport HandleError from 'hocs/handle-error';\nimport Box from '@mui/material/Box';\n\nimport Collage from 'components/collage/Collage';\nimport DownloadDialog from 'components/collage/DownloadDialog';\nimport SaveDialog from 'components/collage/SaveDialog';\nimport SaveStatusDialog from 'components/collage/SaveStatusDialog';\nimport Header from 'components/collage/Header';\nimport Loading from 'components/Loading';\nimport View from 'components/collage/View';\n\nimport DesktopActions from 'components/collage/DesktopActions';\nimport DesktopControls from 'components/collage/DesktopControls';\nimport DesktopImageOptions from 'components/collage/DesktopImageOptions';\nimport EditControl from 'components/collage/EditControl';\nimport MobileActions from 'components/collage/MobileActions';\nimport MobileControls from 'components/collage/MobileControls';\nimport CollageMetaInfo from 'components/collage/CollageMetaInfo';\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport TextControl from 'components/collage/TextControl';\nimport ColorControl, { ColorPicker } from 'components/collage/ColorControl';\nimport CommonDialog from 'components/collage/CommonDialog';\n\nexport default function BaseCollage({ getCollage, clearCollage, saveType }) {\n  const { paperSizes } = constants;\n  const navigate = useNavigate();\n  const [details, setDetails] = useState({});\n  const [status, setStatus] = useState('fetching');\n  const [commonOpen, setCommonOpen] = useState(false);\n  const [commonMessage, setCommonMessage] = useState('');\n  const [commonProgress, setCommonProgress] = useState(false);\n  const [nameError, setNameError] = useState('');\n  const [textError, setTextError] = useState('');\n\n  console.log('details', details);\n\n  const [\n    collageType,\n    ,\n    collageName,\n    ,\n    ,\n    dimensionProps,\n    optionProps,\n    actionProps,\n    imageProps,\n    treeProps,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n    handleCollageTypeChange,\n    handleNameChange,\n  ] = useBase(details);\n\n  const openCommonDialog = (message, progress) => {\n    if (message !== '') {\n      setCommonMessage(message);\n      setCommonProgress(progress);\n      setCommonOpen(true);\n    }\n  };\n\n  const closeCommonDialog = () => {\n    if (imageProps.imageCountMinError !== '') {\n      handleClear();\n      imageProps.setImageCountMinError('');\n    }\n    if (imageProps.imageCountMaxError !== '') {\n      imageProps.setImageCountMaxError('');\n    }\n    setCommonProgress(false);\n    setCommonMessage('');\n    setCommonOpen(false);\n  };\n\n  useEffect(() => imageProps.handleImageCount(imageProps.imgCount), [imageProps.imgCount]);\n\n  useEffect(() => {\n    if (imageProps.imageCountMinError !== '') {\n      openCommonDialog(imageProps.imageCountMinError, false);\n    }\n    if (imageProps.imageCountMinError !== '') {\n      openCommonDialog(imageProps.imageCountMaxError, false);\n    }\n  }, [imageProps.imageCountMinError, imageProps.imageCountMaxError]);\n\n  if (imageProps.imgCount === constants.minImages && actionProps.removeImage === true) {\n    actionProps.setRemoveImage(false);\n    openCommonDialog(`Need atleast ${constants.minImages} images for collage`, false);\n  }\n\n  const errors = [\n    nameError,\n    textError,\n    imageProps.imageCountMaxError,\n    imageProps.imageCountMinError,\n  ].filter((el) => el !== '');\n\n  const {\n    options,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClose,\n    handleColorClick,\n    handleColorChange,\n    handleTextChange,\n    handlePositionChange,\n    displayColorPicker,\n    editControl,\n    setEditControl,\n    editOptionsValue,\n    setEditOptionsValue,\n    handleTextSubmit,\n  } = optionProps;\n\n  useEffect(async () => {\n    if (Object.keys(details).length === 0) {\n      if (saveType === 'existing') {\n        const collageDetails = await getCollage(\n          imageProps.setImageCount,\n          imageProps.incrementNewImageCount\n        );\n        setDetails(collageDetails);\n      }\n      setStatus('fetch end');\n    }\n  }, []);\n\n  useEffect(() => {\n    let st = status;\n    if (st === 'fetching' && saveType === 'new') st = 'empty';\n    if (imageProps.imgCount === 0 && st === 'ready') {\n      st = 'empty';\n    }\n    if (imageProps.imgCount === 0 && Object.keys(details).length === 0 && st === 'fetch end') {\n      st = 'empty';\n    }\n    if (imageProps.images.length > 0 && imageProps.images.length === imageProps.imgCount) {\n      st = 'preparing';\n    }\n    if (imageProps.loaded >= imageProps.imgCount && imageProps.imgCount > 0) {\n      st = 'ready';\n    }\n    if (\n      imageProps.imgCount >= constants.minImages &&\n      imageProps.images.length < imageProps.imgCount\n    ) {\n      st = 'loading';\n    }\n    if (imageProps.imageCountMinError !== '') {\n      st = 'empty';\n      openCommonDialog(imageProps.imageCountMinError, false);\n    }\n    if (imageProps.imageCountMaxError !== '') {\n      if (imageProps.imgCount === 0) {\n        st = 'empty';\n      } else {\n        st = 'ready';\n      }\n      openCommonDialog(imageProps.imageCountMaxError, false);\n    }\n    setStatus(st);\n  }, [imageProps]);\n\n  const clearAll = async () => {\n    openCommonDialog('Deleting Collage', true);\n    setDetails({});\n    handleClear();\n    await clearCollage();\n    setStatus('fetch end');\n    closeCommonDialog();\n    if (saveType === 'existing') {\n      openCommonDialog('Navigating to collages page', true);\n      setTimeout(() => {\n        closeCommonDialog();\n        navigate('/collages');\n      }, 3000);\n    }\n  };\n\n  const handleSave = async (name) => {\n    actionProps.onSaveClick();\n    const res = saveType === 'new' ? await newCollage(name) : await saveCollage(name);\n    if (res) {\n      setTimeout(() => {\n        if (saveType === 'new') clearAll();\n        actionProps.setSaveStart(false);\n        navigate('/collages');\n      }, 3000);\n    }\n  };\n\n  const downloadDialog = (\n    <HandleError errors={errors} handleClose={actionProps.onDownloadClose}>\n      <DownloadDialog\n        open={actionProps.open}\n        onClick={actionProps.onDownloadClick}\n        onClose={actionProps.onDownloadClose}\n        sizes={paperSizes}\n        collageType={collageType}\n      />\n    </HandleError>\n  );\n\n  const saveDialog = (\n    <HandleError errors={errors} handleClose={actionProps.onSaveClose}>\n      <SaveDialog\n        collageName={collageName}\n        open={actionProps.saveOpen}\n        onClick={handleSave}\n        onClose={actionProps.onSaveClose}\n      />\n    </HandleError>\n  );\n\n  const saveStatusDialog = <SaveStatusDialog open={actionProps.saveStart} status={saveStatus} />;\n\n  const collage = (\n    <Collage\n      dimensionProps={dimensionProps}\n      imageProps={imageProps}\n      actionProps={actionProps}\n      collageCallback={collageCallback}\n      handleRemoveImage={handleRemoveImage}\n      options={optionProps.options}\n      tree={treeProps.tree}\n    />\n  );\n\n  const paddingControl = (\n    <PaddingControl padding={options.padding} handlePaddingChange={handlePaddingChange} />\n  );\n\n  const radiusControl = (\n    <RadiusControl radius={options.borderRadius} handleRadiusChange={handleRadiusChange} />\n  );\n\n  const colorControl = (\n    <ColorPicker\n      open={displayColorPicker}\n      color={options.color}\n      handleChange={handleColorChange}\n      handleClose={() => {\n        setEditControl(null);\n        handleColorClose();\n      }}\n    />\n  );\n\n  const desktopColorControl = (\n    <ColorControl\n      color={options.color}\n      displayColorPicker={displayColorPicker}\n      handleChange={handleColorChange}\n      handleClose={handleColorClose}\n      handleClick={handleColorClick}\n    />\n  );\n\n  const textControl = (\n    <TextControl\n      text={options.text}\n      handleTextChange={handleTextChange}\n      topText={options.topText}\n      handlePositionChange={handlePositionChange}\n      handleTextSubmit={handleTextSubmit}\n      textError={textError}\n      handleTextError={setTextError}\n    />\n  );\n\n  const mobileControls = (\n    <MobileControls\n      optionProps={optionProps}\n      actionProps={actionProps}\n      dimensionProps={dimensionProps}\n      handleClear={clearAll}\n      saveType={saveType}\n      paddingControl={paddingControl}\n      radiusControl={radiusControl}\n      colorControl={colorControl}\n      textControl={textControl}\n      editControl={editControl}\n      handleEditControl={setEditControl}\n      editOptionsValue={editOptionsValue}\n      handleEditOptionsValue={setEditOptionsValue}\n    />\n  );\n\n  const header = (\n    <Header\n      headerRef={dimensionProps.headerRef}\n      name={collageName}\n      handleNameChange={handleNameChange}\n      nameError={nameError}\n      handleNameError={setNameError}\n    />\n  );\n\n  const desktopPhotosComp = (\n    <DesktopImageOptions\n      onDelete={actionProps.onDelete}\n      onAdd={dimensionProps.handleImageAddClick}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n\n  const desktopEditComp = (\n    <EditControl\n      paddingControl={paddingControl}\n      radiusControl={radiusControl}\n      colorControl={desktopColorControl}\n      textControl={textControl}\n    />\n  );\n\n  const desktopControls = (\n    <DesktopControls\n      innerRef={dimensionProps.footerRef}\n      onRefresh={actionProps.onRefresh}\n      photosComp={desktopPhotosComp}\n      editComp={desktopEditComp}\n      handleClear={clearAll}\n      clearDelete={actionProps.clearDelete}\n      saveType={saveType}\n    />\n  );\n\n  const isMobile = window.innerWidth < window.innerHeight;\n  const controls = isMobile ? mobileControls : desktopControls;\n\n  const onSave = async () => actionProps.handleSave();\n\n  const actionsComp = isMobile ? (\n    <MobileActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={onSave}\n    />\n  ) : (\n    <DesktopActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={onSave}\n    />\n  );\n\n  const collageMetaInfo = (\n    <CollageMetaInfo\n      collageMetaRef={dimensionProps.collageMetaRef}\n      collageType={collageType}\n      width={dimensionProps.width}\n      sizes={paperSizes}\n      handleTypeChange={handleCollageTypeChange}\n      imageCount={imageProps.imgCount}\n    />\n  );\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'gray',\n        height: Math.min(window.innerHeight, window.screen.availHeight),\n        overflow: 'hidden',\n      }}\n    >\n      <View\n        open={actionProps.open}\n        saveOpen={actionProps.saveOpen}\n        saveStatusOpen={actionProps.saveStart}\n        dimensionProps={dimensionProps}\n        imageProps={imageProps}\n        header={header}\n        actions={actionsComp}\n        downloadDialog={downloadDialog}\n        saveDialog={saveDialog}\n        saveStatusDialog={saveStatusDialog}\n        collage={collage}\n        controls={controls}\n        status={status}\n        saveType={saveType}\n        collageMetaInfo={collageMetaInfo}\n      />\n      <input\n        ref={dimensionProps.addImageRef}\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={imageProps.handleLoad}\n      />\n      {actionProps.generate ? <Loading title=\"Creating collage ...\" /> : null}\n      <CommonDialog\n        open={commonOpen}\n        message={commonMessage}\n        progress={commonProgress}\n        onClose={closeCommonDialog}\n      />\n    </Box>\n  );\n}\n\nBaseCollage.defaultProps = {\n  getCollage: () => {},\n  clearCollage: () => {},\n};\n\nBaseCollage.propTypes = {\n  getCollage: PropTypes.func,\n  clearCollage: PropTypes.func,\n  saveType: PropTypes.string.isRequired,\n};\n"],"names":["url","body","params","method","fetch","then","response","resp","console","log","newCollage","collageID","collageDetails","collage_id","helpers","process","JSON","stringify","error","saveCollage","upload","listCollages","nextToken","next_token","getThumbnail","collageId","getCollage","deleteCollage","checkOptimizeStatus","get","path","newUrl","options","credentials","headers","Headers","URLSearchParams","toString","ok","status","document","cookie","json","post","apiUrl","deleteMethod","OptionsButton","children","onClick","name","Button","id","variant","component","sx","color","borderRadius","backgroundColor","padding","defaultProps","AddPhotos","handleChange","type","hidden","multiple","accept","onChange","fontSize","Typography","fontWeight","defaultCollageName","defaultCollageType","tolerance","resizeImageWidth","lineHeight","textPadding","thumbnailHeight","maxNameLength","maxColllageTextLength","minImages","maxImages","maxImageSize","paperSizes","A4","display","width","height","text","icon","Description","mr","fill","downloadSizes","A3","A4LandScape","transform","A3LandScape","FBCoverDesktop","Facebook","FBCoverMobile","FBPost","WhatsappStatus","WhatsApp","InstaStory","Instagram","background","InstaPostSquare","resizeImageSlowly","image","origWidth","origHeight","reqWidth","reqHeight","tempCanvas","createElement","newWidth","newHeight","ctx","getContext","aspectRatio","scaleFactor","Math","floor","log2","drawImage","i","reqCanv","getClosest","arr","index1","index2","target","optimizeImage","origSize","maxSize","fileType","downScaleFactor","sqrt","resizedCanvas","Promise","resolve","toBlob","optimizedFile","optimizedSRC","URL","createObjectURL","imageOnLoad","e","file","detailsCallBack","naturalWidth","naturalHeight","src","title","Date","now","size","utils","imageDetail","targetAspectRatio","constants","newFile","newSRC","event","handleImageCount","handleNewImageCount","handleImageData","files","cnt","length","Array","from","map","Image","onload","revokeObjectURL","getCollageDimension","maxW","maxH","a","origAR","wrapText","x","y","maxWidth","textCanvas","font","textAlign","tempX","tempY","words","split","line","testLine","lineArray","n","measureText","push","getTextHeight","getCut","round","random","findClosest","start","end","mid","findImgPair","j","minMatchingCost","abs","getAspectRatio","cut","ar1","ar2","handleImageLoad","convertToRGBA","value","r","g","b","textCanvasDraw","textArray","position","canvasWidth","canvasHeight","textHeight","textBaseline","fillStyle","fillRect","chunk","textPart","fillText","parseInt","getImageDimensions","paperWidth","paperHeight","optimizeDimensions","maxPrintWidth","maxPrintHeight","problematicNodes","ar","optimumTreeSizes","pn","newRootWidth","newRootHeight","sort","TextDisplay","Stack","alpha","top","paddingX","fontFamily","letterSpacing","Node","this","left","right","obj","fromObject","getScore","output","concat","copyNode","copy","newImages","findIndex","elem","origImage","replaceImages","rest","removeImageData","imageData","find","addImageData","delImg","handleRemoveImage","yOffset","xOffset","handleCollageImageLoad","newX","newY","Box","alt","onLoad","Tooltip","IconButton","bgcolor","Delete","DOMDisplay","RenderImage","tempCtx","radius","clipwidth","clipheight","save","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","canvasElement","CanvasDisplay","newImg","ResizeImage","ImageStyling","clearRect","images","tar","imageCount","targetAspectRatioArr","closestIndex","slice","restImages","leftIndex","rightIndex","filter","item","index","includes","first","second","generate","th","adjustments","adjust","parentWidth","parentHeight","parentX","parentY","parentCut","nodeType","addSize","validateAddSize","lV","lPN","rV","rPN","valid","BinaryTree","undefined","root","tempTree","topText","lA","score","min","trys","bestAdjust","bestAspectRatio","tolerableDifference","ajstCnt","diff","copyTree","findBestAdjustTree","imageWidth","imageHeight","sortedImages","collageArray","imgTree","generateCollageTree","aspR","bAR","toFixed","maxScore","maxElem","forEach","element","generateScore","uploadCollageImages","thumbnailCanvas","imageURLS","uploadCallback","imagePromises","Object","keys","thumbnailKey","blob","collageapi","Img","img","verifyPromises","uploadPromises","useBase","initialValue","useState","details","setDetails","collageName","setCollageName","collageType","setCollageType","uploadedImages","setUploadedImages","dimensions","headerRef","useRef","actionsRef","footerRef","collageMetaRef","addImageRef","setHeight","setImageHeight","setImageWidth","setWidth","maxHeight","setMaxHeight","setMaxWidth","setTextHeight","setDimensions","isMobile","window","innerWidth","innerHeight","headerHeight","current","offsetHeight","collageMetaHeight","otherHeight","screen","availWidth","availHeight","actionsWidth","offsetWidth","footerWidth","useEffect","addEventListener","removeEventListener","handleImageAddClick","click","useDimensions","optionsInitValue","setOptions","displayColorPicker","setDisplayColorPicker","editControl","setEditControl","editOptionsValue","setEditOptionsValue","handleTextChange","opts","clear","handlePaddingChange","handleRadiusChange","handleColorClick","dcp","handleColorClose","handleColorChange","clr","rgb","handlePositionChange","handleTextSubmit","useOptions","actions","open","setOpen","saveOpen","setSaveOpen","saveStart","setSaveStart","refresh","setRefresh","setGenerate","removeImage","setRemoveImage","printOptions","setPrintOptions","clearDelete","handleDownload","handleGenerateCallback","onDelete","ri","onDownloadClick","w","h","onDownloadClose","onRefresh","onSaveClose","onSaveClick","handleSave","useActions","newImgCount","setNewImageCount","newImagesLoaded","setNewImagesLoaded","imgCount","setImageCount","loaded","setLoaded","setImages","imageCountMaxError","setImageCountMaxError","imageCountMinError","setImageCountMinError","totalImages","handleLoad","remove","removeIndex","newImagesArr","getImageData","imageArr","incrementNewImageCount","useImages","treeState","loadingCallback","tree","setTree","newTree","reAdjust","imagesArr","treeUtils","bestAspectRatioTree","addOptions","useTree","thumbnail","setThumbnail","finalizing","saveStatus","setSaveStatus","updateStatus","key","st","generateThumbnail","thumbnailWidth","thumbnailTree","thumbnailDetails","getDetails","collage_type","created_at","last_updated_at","updateCollage","getURLS","thumbDets","getURLSResp","allSettled","apiHelpers","isEmptyTree","imagesText","iDets","tH","totalTextHeight","imgTitle","ct","newName","HandleError","errors","handleClose","Dialog","fullWidth","DialogTitle","DialogContent","dividers","alignItems","justifyContent","DialogContentText","pr","List","px","err","ListItem","listStyleType","DialogActions","Collage","dimensionProps","imageProps","actionProps","collageCallback","collage","setCollage","isEmpty","t","createCollage","collageElem","pw","ph","canvasTree","getCanvasTree","imgPW","imgPH","generateCollage","ctree","getCanvas","setTimeout","pW","pH","link","download","href","probNodes","newPW","newPH","newCanvasTree","newValid","newProbNodes","DownloadDialog","onClose","sizes","setValue","FormControl","InputLabel","Select","labelId","defaultValue","label","inputProps","sz","MenuItem","disabled","SaveDialog","setName","nameError","TextField","mb","InputProps","helperText","FailedIcon","Close","border","StatusIndicator","CircularProgress","Pending","CheckCircleOutline","Status","pending","done","running","failed","direction","OverAllStatus","counter","spacing","p","SaveStatusDialog","overAllStatus","setCounter","timerId","clearTimeout","statusArr","values","val","HeaderNameSection","handleNameError","editable","setEditable","nameSchema","yup","max","required","isValid","nameValid","handleBlur","autoFocus","onBlur","onKeyDown","keyCode","shiftKey","InputLabelProps","focused","cursor","Header","handleNameChange","belowmd","useMediaQuery","theme","breakpoints","down","Paper","ref","elevation","postion","Link","underline","ArrowBack","EmptyCollage","loadComponent","backgroundImage","collageBack","backgroundSize","objectFit","View","saveStatusOpen","header","downloadDialog","saveDialog","saveStatusDialog","controls","collageMetaInfo","content","metaHeight","showControls","Loading","leftPos","DBNA","BottomNavigationAction","showLabel","py","outline","DesktopDrawer","anchor","innerRef","Drawer","PaperProps","ControlsDivider","Divider","my","DesktopActions","onDownload","onSave","newValue","Save","Download","Print","ClearCollageDialog","onSubmit","onCancel","saveType","pb","noWrap","DesktopControls","photosComp","editComp","handleClear","imageOptionsOpen","setImageOptionsOpen","editOptionsOpen","setEditOptionsOpen","clearOpen","setClearOpen","editRef","closeAll","handleClickOutside","contains","handleClearClose","AutoAwesomeMosaic","Photo","ioo","io","Edit","Refresh","DesktopImageOptions","onAdd","AddPhotoAlternate","EditControl","paddingControl","radiusControl","colorControl","textControl","boxShadow","MBNA","toLowerCase","MobileActions","BottomNavigation","showLabels","MainControls","EditOptions","handleOptionsClose","handleEditOptionsClick","borderTop","Padding","CropFree","Square","Title","ImageOptions","handleDelete","handleAdd","MobileControls","optionProps","handleEditControl","handleEditOptionsValue","mainOpen","setMainOpen","editOpen","setEditOpen","imageOpen","setImageOpen","imageValue","setImageValue","handleEditOptionsClose","nV","CollageType","margin","hiddenLabel","disableUnderline","pl","minWidth","minHeight","divider","CollageImageCount","count","CollageMetaInfo","handleTypeChange","PaddingControl","mixBlendMode","Slider","valueLabelDisplay","step","RadiusControl","TextControl","textError","handleTextError","textSchema","textValid","FormGroup","row","FormControlLabel","disableTypography","control","Checkbox","checked","ColorControl","handleClick","ColorPicker","zIndex","bottom","CommonDialog","message","progress","BaseCollage","clearCollage","navigate","useNavigate","setStatus","commonOpen","setCommonOpen","commonMessage","setCommonMessage","commonProgress","setCommonProgress","setNameError","setTextError","treeProps","handleCollageTypeChange","openCommonDialog","closeCommonDialog","el","clearAll","desktopColorControl","mobileControls","desktopPhotosComp","desktopEditComp","desktopControls","actionsComp","overflow"],"sourceRoot":""}