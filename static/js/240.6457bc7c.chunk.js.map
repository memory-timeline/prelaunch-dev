{"version":3,"file":"static/js/240.6457bc7c.chunk.js","mappings":"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","sources":["api/collage.jsx","api/helpers.js","components/OptionsButton.jsx","components/AddPhotos.jsx","static/config/collage.jsx","components/collage/helpers.js","components/collage/TextDisplay.jsx","components/collage/node.jsx","components/collage/binaryTree.jsx","components/collage/treeUtils.js","hooks/collage/base.jsx","hooks/collage/dimensions.jsx","hooks/collage/options.jsx","hooks/collage/actions.jsx","hooks/collage/images.jsx","hooks/collage/tree.jsx","hocs/handle-error.jsx","components/collage/Collage.jsx","components/collage/DownloadDialog.jsx","components/collage/SaveDialog.jsx","components/collage/SaveStatusDialog.jsx","components/collage/Header.jsx","components/collage/EmptyCollage.jsx","components/collage/View.jsx","components/collage/DesktopActionItem.jsx","components/collage/DesktopDrawer.jsx","components/collage/ControlsDivider.jsx","components/collage/DesktopActions.jsx","components/collage/ClearCollageDialog.jsx","components/collage/DesktopControls.jsx","components/collage/DesktopImageOptions.jsx","components/collage/EditControl.jsx","components/collage/MobileActionItem.jsx","components/collage/MobileActions.jsx","components/collage/MainControls.jsx","components/collage/EditOptions.jsx","components/collage/ImageOptions.jsx","components/collage/MobileControls.jsx","components/collage/CollageType.jsx","components/collage/PaddingControl.jsx","components/collage/RadiusControl.jsx","components/collage/TextControl.jsx","components/collage/ColorControl.jsx","pages/collage/Base.jsx"],"sourcesContent":["import helpers from 'api/helpers';\n\nfunction newCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/new';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction saveCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/save';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\nasync function upload(url, body) {\n  try {\n    const params = { body, method: 'PUT' };\n    const resp = await fetch(url, params).then((response) => response);\n    return resp;\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction listCollages(nextToken) {\n  try {\n    const path = '/api/collage/list';\n    const params = { next_token: nextToken };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getThumbnail(collageId) {\n  try {\n    const path = '/api/collage/thumbnail';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getCollage(collageId) {\n  try {\n    const path = '/api/collage/get';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction deleteCollage(collageId) {\n  try {\n    const path = '/api/collage/delete';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.deleteMethod(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction checkOptimizeStatus(collageId) {\n  try {\n    const path = '/api/collage/resized-count';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\nexport default {\n  newCollage,\n  saveCollage,\n  upload,\n  listCollages,\n  getThumbnail,\n  getCollage,\n  deleteCollage,\n  checkOptimizeStatus,\n};\n","const get = async (url, path, params = {}) => {\n  let newUrl = `https://${url}${path}`;\n  const options = {\n    method: 'GET',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  newUrl += `?${new URLSearchParams(params).toString()}`;\n  const resp = await fetch(newUrl, options);\n  if (!resp.ok) {\n    if (resp.status === 401) {\n      document.cookie =\n        'userInfo=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return { status: 'unauthenticated' };\n    }\n    if (resp.status === 403) {\n      return { status: 'forbidden' };\n    }\n  }\n\n  return resp.json();\n};\n\nconst post = async (url, path, params, body) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'POST',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body,\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\n\nconst deleteMethod = async (url, path, params) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'DELETE',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\nexport default { get, post, deleteMethod };\n","import PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\n\nexport default function OptionsButton({ children, onClick, name }) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: 'muted.main',\n        borderRadius: 15,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: 'muted.main',\n          backgroundColor: 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  //  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport OptionsButton from 'components/OptionsButton';\nimport Typography from '@mui/material/Typography';\n\nexport default function AddPhotos({ handleChange }) {\n  return (\n    <OptionsButton name=\"add\">\n      <input\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={handleChange}\n      />\n      <AddPhotoIcon sx={{ fontSize: '2rem' }} />\n      <Typography sx={{ fontWeight: 'bold' }}>Add Images</Typography>\n    </OptionsButton>\n  );\n}\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import FacebookIcon from '@mui/icons-material/Facebook';\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\nimport InstagramIcon from '@mui/icons-material/Instagram';\n\nexport default {\n  defaultCollageName: 'Untitled',\n  defaultCollageType: 'A4',\n  tolerance: 0.1,\n  resizeImageWidth: 1500,\n  fontSize: 20,\n  lineHeight: 25,\n  textPadding: 20,\n  thumbnailHeight: 500,\n  maxNameLength: 20,\n  maxColllageTextLength: 40,\n  minImages: 2,\n  maxImages: 15,\n  paperSizes: {\n    A4: { width: 2480, height: 3508, text: 'A4 Potrait' },\n    A3: { width: 3508, height: 4961, text: 'A3 Potrait' },\n    A4LandScape: { height: 2480, width: 3508, text: 'A4 LandScape' },\n    A3LandScape: { height: 3508, width: 4961, text: 'A3 LandScape' },\n    FBCoverDesktop: {\n      height: 740,\n      width: 2000,\n      text: 'Cover Picture (Desktop)',\n      icon: <FacebookIcon sx={{ fill: '#3b5998', mr: 1 }} />,\n    },\n    FBCoverMobile: {\n      height: 720,\n      width: 1280,\n      text: 'Cover Picture (Mobile)',\n      icon: <FacebookIcon sx={{ fill: '#3b5998', mr: 1 }} />,\n    },\n    FBPost: {\n      height: 1260,\n      width: 2400,\n      text: 'Post',\n      icon: <FacebookIcon sx={{ fill: '#3b5998', mr: 1 }} />,\n    },\n    WhatsappStatus: {\n      height: 1920,\n      width: 1080,\n      text: 'Whatsapp Status',\n      icon: (\n        <WhatsAppIcon\n          sx={{\n            backgroundColor: '#25D366',\n            fill: 'white',\n            mr: 1,\n          }}\n        />\n      ),\n    },\n    InstaStory: {\n      height: 1920,\n      width: 1080,\n      text: 'Instagram Story',\n      icon: (\n        <InstagramIcon\n          sx={{\n            fill: 'white',\n            background:\n              'linear-gradient(45deg, #f09433 0%,#e6683c 25%,#dc2743 50%,#cc2366 75%,#bc1888 100%)',\n            mr: 1,\n          }}\n        />\n      ),\n    },\n  },\n};\n","import constants from 'static/config/collage';\n\nfunction textCanvasDraw(\n  ctx,\n  textArray,\n  position,\n  scaleFactor,\n  canvasWidth,\n  textHeight\n) {\n  const { fontSize, textPadding } = constants;\n  ctx.font = `${scaleFactor * fontSize}px Arial`;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'top';\n  ctx.fillStyle = '#1c1c1cb3';\n  ctx.fillRect(0, position, canvasWidth, position + textHeight);\n  ctx.fillStyle = 'white';\n\n  console.log('text array', textArray, textHeight);\n  // eslint-disable-next-line no-restricted-syntax\n  for (const chunk of textArray) {\n    const [textPart, , y] = chunk;\n    ctx.fillText(\n      textPart,\n      canvasWidth / 2,\n      y + position + 2.5 + textPadding * scaleFactor\n    );\n  }\n}\n\nfunction getClosest(arr, index1, index2, target) {\n  if (target - arr[index1] >= arr[index2] - target) return index2;\n  return index1;\n}\n\nfunction findClosest(arr, target) {\n  const n = arr.length;\n\n  if (target <= arr[0]) return 0;\n  if (target >= arr[n - 1]) return n - 1;\n\n  let start = 0;\n  let end = n;\n  let mid = 0;\n  while (start < end) {\n    mid = (start + end) / 2;\n\n    if (arr[mid] === target) return mid;\n\n    if (target < arr[mid]) {\n      if (mid > 0 && target > arr[mid - 1])\n        return getClosest(arr, mid - 1, mid, target);\n      end = mid;\n    } else {\n      if (mid < n - 1 && target < arr[mid + 1])\n        return getClosest(arr, mid, mid + 1, target);\n      start = mid + 1;\n    }\n  }\n\n  return mid;\n}\n\nfunction getCut() {\n  const cutArr = ['v', 'h'];\n  return cutArr[Math.round(Math.random())];\n}\n\nfunction findImgPair(arr, target) {\n  let start = 0;\n  let end = arr.length - 1;\n  let i = start;\n  let j = end;\n  let minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n  while (start <= end) {\n    if (arr[start] + arr[end] > target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        // update fetched pair and matching cost\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      end -= 1;\n    } else if (arr[start] + arr[end] <= target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      start += 1;\n    } else {\n      // best pair (m === 0) found\n      i = start;\n      j = end;\n      break;\n    }\n  }\n  const randomNumber = Math.round(Math.random());\n  if (randomNumber) return [i, j];\n  return [j, i];\n}\n\nfunction getAspectRatio(cut, ar1, ar2) {\n  if (cut === 'v') return ar1 + ar2;\n  return (ar1 * ar2) / (ar1 + ar2);\n}\n\nfunction downscaleImage(image, newWidth, newHeight, fileType) {\n  const canvas = document.createElement('canvas');\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, newWidth, newHeight);\n  return canvas.toDataURL(fileType);\n}\n\n// function convertImage(image, newWidth, newHeight) {\n//   const canvas = document.createElement('canvas');\n//   canvas.width = newWidth;\n//   canvas.height = newHeight;\n//   const ctx = canvas.getContext('2d');\n//   ctx.drawImage(image, 0, 0, newWidth, newHeight);\n//   return canvas.toDataURL('image/webp');\n// }\n\nfunction optimizeImage(image, newWidth, newHeight) {\n  console.time('getImages optimize');\n  const canvas = document.createElement('canvas');\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, newWidth, newHeight);\n  const dataURL = canvas.toDataURL('image/webp', 0.3);\n  console.timeEnd('getImages optimize');\n  return dataURL;\n}\n\nfunction resizeImages(originalImages, maxWidth, handleImages, addImagesToDB) {\n  const tempImages = [];\n  originalImages.forEach((origImage) => {\n    const image = new Image();\n    image.onload = () => {\n      const { title, aspectRatio, type } = origImage;\n      const dataurl = downscaleImage(\n        image,\n        maxWidth,\n        maxWidth / aspectRatio,\n        origImage.type\n      );\n      const tempImage = {\n        title,\n        src: dataurl,\n        naturalHeight: maxWidth / aspectRatio,\n        naturalWidth: maxWidth,\n        aspectRatio,\n        type,\n      };\n      tempImages.push(tempImage);\n      handleImages((imgs) => {\n        const ind = imgs.findIndex((elem) => elem.title === origImage.title);\n        return [...imgs.slice(0, ind), tempImage, ...imgs.slice(ind + 1)];\n      });\n      addImagesToDB(tempImage);\n    };\n    image.src = origImage.src;\n  });\n}\n\nfunction convertBase64(file) {\n  console.log('convert base64', file);\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\n\nfunction convertBase64String(file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsD(new Blob(file));\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\n\nasync function handleImageLoad(\n  event,\n  handleImageCount,\n  handleNewImageCount,\n  handleImageData\n) {\n  if (event.target.files) {\n    handleImageCount((cnt) => cnt + event.target.files.length);\n    handleNewImageCount(event.target.files.length);\n    const files = Array.from(event.target.files);\n    files.map(async (file) => {\n      const image = new Image();\n      image.onload = (e) => {\n        const { naturalWidth, naturalHeight, src } = e.target;\n        const title = `${Date.now()}-${file.name}`;\n        console.log('handle image load', title);\n        const aspectRatio = naturalWidth / naturalHeight;\n        const imageDetail = {\n          title,\n          src,\n          naturalHeight,\n          naturalWidth,\n          aspectRatio,\n          type: file.type,\n          file,\n        };\n        handleImageData(imageDetail);\n      };\n      image.src = URL.createObjectURL(file);\n    });\n    files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n  }\n}\n\nfunction getCollageDimension(maxW, maxH, a) {\n  const origAR = maxW / maxH;\n  if (origAR < a) return [maxW, maxW / a];\n  if (origAR > a) return [maxH * a, maxH];\n  return [maxW, maxH];\n}\n\nfunction wrapText(text, x, y, maxWidth, fontSize, lineHeight) {\n  // First, start by splitting all of our text into words,\n  // but splitting it into an array split by spaces\n  if (text.length === 0) return [];\n  const paddingX = 1; // 8px on both sided\n  const textCanvas = document.createElement('canvas');\n  textCanvas.width = maxWidth - 2 * paddingX * 8;\n  textCanvas.height = 1000;\n  const ctx = textCanvas.getContext('2d');\n  ctx.font = `${fontSize}px Arial`;\n  ctx.textAlign = 'center';\n  const tempX = x;\n  let tempY = y;\n  const words = text.split(' ');\n  let line = ''; // This will store the text of the current line\n  let testLine = ''; // This will store the text when we add a word, to test if it's too long\n  const lineArray = []; // This is an array of lines, which the function will return\n\n  // Lets iterate over each word\n  for (let n = 0; n < words.length; n += 1) {\n    // Create a test line, and measure it..\n    testLine += `${words[n]} `;\n    const metrics = ctx.measureText(testLine);\n    const testWidth = metrics.width;\n    console.log(\n      'wrap text ',\n      line,\n      testLine,\n      testWidth,\n      textCanvas.width,\n      ctx.letterSpacing\n    );\n    // If the width of this test line is more than the max width\n    if (testWidth > textCanvas.width && n > 0) {\n      // Then the line is finished, push the current line into \"lineArray\"\n      lineArray.push([line, tempX, tempY]);\n      // Increase the line height, so a new line is started\n      tempY += lineHeight;\n      // Update line and test line to use this word as the first word on the next line\n      line = `${words[n]} `;\n      testLine = `${words[n]} `;\n    } else {\n      // If the test line is still less than the max width, then add the word to the current line\n      line += `${words[n]} `;\n    }\n    // If we never reach the full max width, then there is only one line..\n    // so push it into the lineArray so we return something\n    if (n === words.length - 1) {\n      lineArray.push([line, tempX, tempY]);\n    }\n  }\n  // Return the line array\n  return lineArray;\n}\n\nfunction getTextHeight(\n  text,\n  x,\n  y,\n  maxWidth,\n  fontSize,\n  lineHeight,\n  scaleFactor\n) {\n  const { textPadding } = constants;\n  const lineArray = wrapText(\n    text,\n    x,\n    y,\n    maxWidth,\n    fontSize * scaleFactor,\n    lineHeight * scaleFactor\n  );\n  return (lineArray.length * lineHeight + 2 * textPadding) * scaleFactor;\n}\n\nfunction getImageDimensions(\n  paperWidth,\n  paperHeight,\n  text,\n  x,\n  y,\n  fontSize,\n  lineHeight,\n  scaleFactor,\n  aspectRatio\n) {\n  const textHeight = getTextHeight(\n    text,\n    x,\n    y,\n    paperWidth,\n    fontSize,\n    lineHeight,\n    scaleFactor\n  );\n  return getCollageDimension(paperWidth, paperHeight - textHeight, aspectRatio);\n}\n\nconst convertToRGBA = (value) =>\n  `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nfunction optimizeDimensions(maxPrintWidth, maxPrintHeight, problematicNodes) {\n  const ar = maxPrintWidth / maxPrintHeight;\n  const optimumTreeSizes = problematicNodes.map((pn) => {\n    const newRootWidth =\n      (maxPrintWidth * pn.value.naturalWidth) / pn.value.width;\n    const newRootHeight = newRootWidth / ar;\n    // node with highest score needs smalles tree. smallest tree will satisfy all constraints\n    const score = maxPrintWidth - newRootWidth + maxPrintHeight - newRootHeight;\n    return [score, [newRootWidth, newRootHeight]];\n  });\n  optimumTreeSizes.sort((a, b) => b[0] - a[0]);\n  console.log(\n    'optimun tree sizes',\n    optimumTreeSizes,\n    problematicNodes,\n    maxPrintWidth,\n    maxPrintHeight\n  );\n  return optimumTreeSizes[0][1];\n}\n\nexport default {\n  getCut,\n  findClosest,\n  findImgPair,\n  getAspectRatio,\n  handleImageLoad,\n  resizeImages,\n  wrapText,\n  convertToRGBA,\n  getCollageDimension,\n  downscaleImage,\n  convertBase64,\n  convertBase64String,\n  textCanvasDraw,\n  getTextHeight,\n  getImageDimensions,\n  optimizeDimensions,\n  optimizeImage,\n};\n","import Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { alpha } from '@mui/material/styles';\nimport constants from 'static/config/collage';\n\nexport default function TextDisplay(textArray, position, textHeight) {\n  const { fontSize, lineHeight, textPadding } = constants;\n  console.log('text display', textArray, position, textPadding);\n  return (\n    <>\n      <Stack\n        sx={{\n          height: textHeight,\n          backgroundColor: alpha('#1c1c1c', 0.7),\n          position: 'absolute',\n          top: position,\n          width: '100%',\n        }}\n      />\n      {\n        // eslint-disable-next-line react/destructuring-assignment\n        textArray.map((chunk) => (\n          <Typography\n            key={chunk[2]}\n            sx={{\n              width: '100%',\n              position: 'absolute',\n              top: position + chunk[2] + textPadding,\n              paddingX: 1,\n              color: 'button.main',\n              textAlign: 'center',\n              fontFamily: 'Arial',\n              fontSize: `${fontSize}px`,\n              lineHeight: `${lineHeight}px`,\n              letterSpacing: 'normal',\n            }}\n          >\n            {chunk[0]}\n          </Typography>\n        ))\n      }\n    </>\n  );\n}\n","import Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Tooltip from '@mui/material/Tooltip';\nimport { alpha } from '@mui/material/styles';\nimport helpers from 'components/collage/helpers';\n\nexport default class Node {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n\n  fromObject(obj) {\n    if (obj != null) {\n      this.value = obj.value;\n      if (obj.left != null) {\n        this.left = new Node(obj.left.value);\n        this.left.fromObject(obj.left);\n      }\n      if (obj.right != null) {\n        this.right = new Node(obj.right.value);\n        this.right.fromObject(obj.right);\n      }\n      return this;\n    }\n    return null;\n  }\n\n  getScore() {\n    if ('cut' in this.value) {\n      return [...this.left.getScore(), ...this.right.getScore()];\n    }\n\n    return [this.value.width + this.value.height];\n  }\n\n  display() {\n    let output = [];\n    const { cut, title, aspectRatio } = this.value;\n    if (this === null) return null;\n    if ('cut' in this.value) output.push([cut, aspectRatio]);\n    if ('title' in this.value) output.push([title, aspectRatio]);\n    if (this.left !== null) output = output.concat(this.left.display());\n    if (this.right !== null) output = output.concat(this.right.display());\n    return output;\n  }\n\n  copy() {\n    if (this === null) return null;\n    const copyNode = new Node({ ...this.value });\n    if (this.left != null) copyNode.left = this.left.copy();\n    if (this.right != null) copyNode.right = this.right.copy();\n    return copyNode;\n  }\n\n  replaceImages(newImages) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const findIndex = newImages.findIndex(\n          (elem) => elem.title === this.value.title\n        );\n        const origImage = newImages[findIndex];\n        this.value.src = origImage.src;\n      }\n      if (this.left != null) this.left.replaceImages(newImages);\n      if (this.right != null) this.right.replaceImages(newImages);\n    }\n  }\n\n  removeImageData() {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const { src, ...rest } = this.value;\n        this.value = rest;\n      }\n      if (this.left != null) this.left.removeImageData();\n      if (this.right != null) this.right.removeImageData();\n    }\n  }\n\n  addImageData(imageData) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const image = imageData.find((elem) => elem.title === this.value.title);\n        this.value.src = image.src;\n      }\n      if (this.left != null) this.left.addImageData(imageData);\n      if (this.right != null) this.right.addImageData(imageData);\n    }\n  }\n\n  RenderImage(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    const { width, title, src, x, y } = this.value;\n\n    const newX = x + xOffset;\n    const newY = y + yOffset;\n    console.log('rendering image', title);\n    return (\n      <>\n        <Box\n          key={title}\n          component=\"img\"\n          title={title}\n          alt={title}\n          width={width}\n          onLoad={() => {\n            handleCollageImageLoad();\n            console.log('loaded', title);\n          }}\n          src={src}\n          sx={{\n            position: 'absolute',\n            padding: `${padding}px`,\n            borderRadius: `${borderRadius}px`,\n            left: this.value.x + xOffset,\n            top: this.value.y + yOffset,\n          }}\n        />\n        {delImg === true ? (\n          <Tooltip title=\"Remove Image\">\n            <IconButton\n              size=\"medium\"\n              sx={{\n                color: alpha('#000', 0.7),\n                bgcolor: alpha('#fff', 0.5),\n                position: 'absolute',\n                top: newY + padding,\n                left: newX + padding,\n                padding: `${padding}px`,\n                borderRadius: '0 0 5px 0',\n              }}\n              onClick={() => handleRemoveImage(title)}\n            >\n              <DeleteIcon size=\"medium\" />\n            </IconButton>\n          </Tooltip>\n        ) : null}\n      </>\n    );\n  }\n\n  DOMDisplay(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    console.log(\n      'node dom display',\n      padding,\n      borderRadius,\n      delImg,\n      handleRemoveImage,\n      yOffset,\n      xOffset,\n      this.value.title\n    );\n    const { cut } = this.value;\n    if (this === null) return null;\n    if (cut) {\n      console.log(this.right, this.left);\n      return (\n        <>\n          {this.left != null\n            ? this.left.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n          {this.right != null\n            ? this.right.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n        </>\n      );\n    }\n    if ('title' in this.value)\n      return this.RenderImage(\n        padding,\n        borderRadius,\n        delImg,\n        handleRemoveImage,\n        yOffset,\n        xOffset,\n        handleCollageImageLoad\n      );\n    return null;\n  }\n\n  ResizeImage(image) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = this.value.naturalWidth;\n    tempCanvas.height = this.value.naturalHeight;\n    const tempCtx = tempCanvas.getContext('2d');\n    let width = this.value.naturalWidth;\n    let height = this.value.naturalHeight;\n    let newWidth;\n    let newHeight;\n    const scaleFactor = Math.floor(\n      Math.log2(this.value.naturalWidth / this.value.width)\n    );\n    if (scaleFactor === 0) {\n      tempCtx.drawImage(\n        image,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    } else {\n      for (let i = 0; i < scaleFactor; i += 1) {\n        newWidth = width >> 1; // eslint-disable-line no-bitwise\n        newHeight = newWidth / this.value.aspectRatio; // eslint-disable-line no-bitwise\n        if (i === 0) {\n          tempCtx.drawImage(\n            image,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        } else {\n          tempCtx.drawImage(\n            tempCanvas,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        }\n        width = newWidth;\n        height = newHeight;\n      }\n\n      tempCtx.drawImage(\n        tempCanvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    }\n    return tempCanvas;\n  }\n\n  ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset) {\n    const x = this.value.x + padding + xOffset;\n    const y = this.value.y + padding + yOffset;\n    const clipwidth = this.value.width - 2 * padding;\n    const clipheight = clipwidth / this.value.aspectRatio;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + clipwidth - radius, y);\n    ctx.quadraticCurveTo(x + clipwidth, y, x + clipwidth, y + radius);\n    ctx.lineTo(x + clipwidth, y + clipheight - radius);\n    ctx.quadraticCurveTo(\n      x + clipwidth,\n      y + clipheight,\n      x + clipwidth - radius,\n      y + clipheight\n    );\n    ctx.lineTo(x + radius, y + clipheight);\n    ctx.quadraticCurveTo(x, y + clipheight, x, y + clipheight - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.clip();\n\n    ctx.drawImage(\n      tempCanvas,\n      0,\n      0,\n      this.value.width,\n      this.value.height,\n      x,\n      y,\n      clipwidth,\n      clipheight\n    );\n    ctx.restore();\n  }\n\n  CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset) {\n    if ('cut' in this.value) {\n      this.left.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n      this.right.CanvasDisplay(\n        canvasElement,\n        padding,\n        radius,\n        yOffset,\n        xOffset\n      );\n    }\n\n    if ('title' in this.value) {\n      const ctx = canvasElement.getContext('2d');\n      const newImg = new Image();\n      newImg.onload = () => {\n        const tempCanvas = this.ResizeImage(newImg);\n        const tempCtx = tempCanvas.getContext('2d');\n        this.ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset);\n        tempCtx.clearRect(0, 0, tempCanvas.width, tempCanvas.height);\n      };\n      newImg.src = this.value.src;\n    }\n  }\n\n  generate(images, tar, imageCount) {\n    const targetAspectRatioArr = images.map(\n      (image) => image.naturalWidth / image.naturalHeight\n    );\n    if (imageCount < 1) return [];\n    if (imageCount === 1) {\n      const closestIndex = helpers.findClosest(targetAspectRatioArr, tar);\n      this.value = images[closestIndex];\n      this.left = null;\n      this.right = null;\n      return [\n        ...images.slice(0, closestIndex),\n        ...images.slice(closestIndex + 1),\n      ];\n    }\n\n    const cut = helpers.getCut();\n    this.value = { cut, targetAspectRatio: tar };\n    if (imageCount === 2) {\n      const [leftIndex, rightIndex] = helpers.findImgPair(\n        targetAspectRatioArr,\n        tar\n      );\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        images[leftIndex].aspectRatio,\n        images[rightIndex].aspectRatio\n      );\n      this.left = new Node(images[leftIndex]);\n      this.right = new Node(images[rightIndex]);\n      return images.filter(\n        (item, index) => ![leftIndex, rightIndex].includes(index)\n      );\n    }\n\n    let restImages;\n    let targetAspectRatio;\n    this.left = new Node({ cut: helpers.getCut() });\n    //  this.right = new Node({ cut: helpers.getCut() });\n    this.right = new Node({ cut: this.left.value.cut === 'v' ? 'h' : 'v' });\n\n    targetAspectRatio = tar / 2;\n    if (cut === 'v') {\n      targetAspectRatio = tar * 2;\n    }\n\n    const randomNumber = Math.round(Math.random());\n    const [first, second] = randomNumber\n      ? ['left', 'right']\n      : ['right', 'left'];\n    restImages = this[first].generate(\n      images,\n      targetAspectRatio,\n      imageCount - Math.floor(imageCount / 2)\n    );\n    restImages = this[second].generate(\n      restImages,\n      targetAspectRatio,\n      Math.floor(imageCount / 2)\n    );\n\n    this.value.aspectRatio = helpers.getAspectRatio(\n      this.value.cut,\n      this.left.value.aspectRatio,\n      this.right.value.aspectRatio\n    );\n\n    return restImages;\n  }\n\n  adjust(th) {\n    let adjustments = 0;\n    if (this === null) return adjustments;\n\n    if (this.left !== null && this.right !== null) {\n      if (this.value.aspectRatio > this.value.targetAspectRatio * th) {\n        this.value.cut = 'h';\n        adjustments += 1;\n      }\n      if (this.value.aspectRatio < this.value.targetAspectRatio / th) {\n        this.value.cut = 'v';\n        adjustments += 1;\n      }\n\n      if (this.value.cut === 'v') {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n      } else {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n      }\n      adjustments += this.left.adjust(th) + this.right.adjust(th);\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        this.left.value.aspectRatio,\n        this.right.value.aspectRatio\n      );\n    }\n\n    return adjustments;\n  }\n\n  addSize(parentWidth, parentHeight, parentX, parentY, parentCut, nodeType) {\n    if (parentCut === 'v') {\n      this.value.height = parentHeight;\n      this.value.width = this.value.height * this.value.aspectRatio;\n    } else {\n      this.value.width = parentWidth;\n      this.value.height = this.value.width / this.value.aspectRatio;\n    }\n\n    if (nodeType === 'left') {\n      this.value.x = parentX;\n      this.value.y = parentY;\n    } else if (parentCut === 'h') {\n      this.value.y = parentY + parentHeight - this.value.height;\n      this.value.x = parentX;\n    } else {\n      this.value.x = parentX + parentWidth - this.value.width;\n      this.value.y = parentY;\n    }\n\n    if (this.left !== null) {\n      this.left.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'left'\n      );\n    }\n    if (this.right !== null) {\n      this.right.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'right'\n      );\n    }\n  }\n\n  validateAddSize() {\n    if ('cut' in this.value) {\n      const [lV, lPN] = this.left.validateAddSize();\n      const [rV, rPN] = this.right.validateAddSize();\n      return [lV && rV, lPN.concat(rPN)];\n    }\n    if ('title' in this.value) {\n      const valid =\n        this.value.width <= this.value.naturalWidth &&\n        this.value.height <= this.value.naturalHeight;\n      return valid ? [valid, []] : [valid, [{ ...this }]];\n    }\n    return false;\n  }\n}\n","import Box from '@mui/material/Box';\nimport TextDisplay from 'components/collage/TextDisplay';\nimport constants from 'static/config/collage';\nimport Node from './node';\nimport helpers from './helpers';\n\nexport default class BinaryTree {\n  constructor(value) {\n    if (this.root === undefined) {\n      this.root = new Node(value);\n      return this;\n    }\n  }\n\n  addOptions(options) {\n    this.root.options = { ...options };\n  }\n\n  display() {\n    if (this.root !== null) {\n      return this.root.display();\n    }\n    return null;\n  }\n\n  replaceImages(newImages) {\n    if (this.root !== null) this.root.replaceImages(newImages);\n  }\n\n  fromObject(obj) {\n    if (obj.root != null) this.root.fromObject(obj.root);\n    return this;\n  }\n\n  removeImageData() {\n    const tempTree = this.copy();\n    if (this.root !== null) {\n      tempTree.root.removeImageData();\n    }\n    return tempTree;\n  }\n\n  addImageData(imageData) {\n    if (this.root !== null) this.root.addImageData(imageData);\n  }\n\n  DOMDisplay(\n    canvasWidth,\n    canvasHeight,\n    delImg,\n    handleRemoveImage,\n    handleCollageImageLoad\n  ) {\n    const { fontSize, lineHeight, textPadding } = constants;\n    const { width, height } = this.root.value;\n    const { text, topText, padding, borderRadius, color } = this.root.options;\n    const lA = helpers.wrapText(text, 0, 0, canvasWidth, fontSize, lineHeight);\n    const textHeight = text.length\n      ? lA.length * lineHeight + 2 * textPadding\n      : 0;\n    let yOffset = (canvasHeight - textHeight - height) / 2;\n    const xOffset = (canvasWidth - width) / 2;\n    let position = canvasHeight - textHeight;\n    if (topText && text.length > 0) {\n      yOffset += textHeight;\n      position = 0;\n    }\n\n    if (this.root !== null) {\n      return (\n        <Box sx={{ backgroundColor: 'white' }}>\n          <Box\n            width={canvasWidth}\n            height={canvasHeight}\n            sx={{\n              position: 'relative',\n              backgroundColor: helpers.convertToRGBA(color),\n            }}\n          >\n            {this.root.DOMDisplay(\n              padding,\n              borderRadius,\n              delImg,\n              handleRemoveImage,\n              yOffset,\n              xOffset,\n              handleCollageImageLoad\n            )}\n            {text.length ? TextDisplay(lA, position, textHeight) : null}\n          </Box>\n        </Box>\n      );\n    }\n    return null;\n  }\n\n  CanvasDisplay(canvasWidth, canvasHeight, canvasElement, scaleFactor) {\n    const { fontSize, lineHeight, textPadding } = constants;\n    if (this.root !== null) {\n      const { text, topText, padding, borderRadius, color } = this.root.options;\n      const { width, height } = this.root.value;\n      const lA = helpers.wrapText(\n        text,\n        0,\n        0,\n        canvasWidth,\n        fontSize * scaleFactor,\n        lineHeight * scaleFactor\n      );\n      const textHeight = text.length\n        ? (lA.length * lineHeight + 2 * textPadding) * scaleFactor\n        : 0;\n      let yOffset = (canvasHeight - textHeight - height) / 2;\n      const xOffset = (canvasWidth - width) / 2;\n      let position = canvasHeight - textHeight;\n      if (topText && text.length > 0) {\n        yOffset += textHeight;\n        position = 0;\n      }\n      const ctx = canvasElement.getContext('2d');\n      ctx.fillStyle = 'white';\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      ctx.fillStyle = helpers.convertToRGBA(color);\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      console.log('canvas context', ctx);\n      this.root.CanvasDisplay(\n        canvasElement,\n        padding * scaleFactor,\n        borderRadius * scaleFactor,\n        yOffset,\n        xOffset\n      );\n      helpers.textCanvasDraw(\n        ctx,\n        lA,\n        position,\n        scaleFactor,\n        canvasWidth,\n        textHeight\n      );\n    }\n  }\n\n  generateScore() {\n    const score = this.root.getScore();\n    // console.log('from', ...score);\n    return Math.min(...score);\n  }\n\n  generateCollageTree(images, tar) {\n    this.root.generate(images, tar, images.length);\n  }\n\n  adjust(th) {\n    let trys = 0;\n    let bestAdjust = this.copy();\n    let bestAspectRatio = this.root.value.aspectRatio;\n    const tolerableDifference = this.root.value.targetAspectRatio * (1 - th);\n    let ajstCnt = 1000;\n    while (trys < 100 && ajstCnt > 0) {\n      ajstCnt = this.root.adjust(th);\n      trys += 1;\n      const diff =\n        this.root.value.aspectRatio - this.root.value.targetAspectRatio;\n      if (\n        Math.abs(diff) <\n        Math.abs(bestAspectRatio - this.root.value.targetAspectRatio)\n      ) {\n        bestAspectRatio = this.root.value.aspectRatio;\n        bestAdjust = this.copy();\n      }\n      if ((diff > 0 && diff < tolerableDifference) || diff === 0) break;\n    }\n\n    return [bestAspectRatio, bestAdjust];\n  }\n\n  copy() {\n    const copyTree = new BinaryTree({});\n    copyTree.root = this.root.copy();\n    copyTree.root.options = { ...this.root.options };\n    return copyTree;\n  }\n\n  addSize(canvasWidth, canvasHeight, aspectRatio) {\n    const [maxW, maxH] = helpers.getCollageDimension(\n      canvasWidth,\n      canvasHeight,\n      aspectRatio\n    );\n    this.root.value.width = maxW;\n    this.root.value.height = maxH;\n    console.log('add size', this.root.value.width, this.root.value.height);\n    this.root.value.x = 0;\n    this.root.value.y = 0;\n    const { width, height, x, y, cut } = this.root.value;\n    if (this.root.left !== null)\n      this.root.left.addSize(width, height, x, y, cut, 'left');\n    if (this.root.right !== null)\n      this.root.right.addSize(width, height, x, y, cut, 'right');\n  }\n\n  validateAddSize() {\n    return this.root.validateAddSize();\n  }\n}\n","import BinaryTree from './binaryTree';\nimport helpers from './helpers';\n\nfunction findBestAdjustTree(images, tolerance, imageWidth, imageHeight) {\n  const sortedImages = images.sort((a, b) =>\n    a.aspectRatio <= b.aspectRatio ? 1 : -1\n  );\n  const collageArray = [];\n  for (let i = 0; i < 100; i += 1) {\n    const imgTree = new BinaryTree({ cut: helpers.getCut() });\n    imgTree.generateCollageTree(sortedImages, imageWidth / imageHeight);\n\n    collageArray.push(imgTree.adjust(1 - tolerance));\n  }\n\n  collageArray.sort((a, b) => {\n    const aspR = imageWidth / imageHeight;\n    const diffA = Math.abs(a[0] - aspR);\n    const diffB = Math.abs(b[0] - aspR);\n    return diffA - diffB;\n  });\n\n  const bAR = collageArray.filter(\n    (elem) => elem[0].toFixed(1) === collageArray[0][0].toFixed(1)\n  );\n  console.log('from bar', bAR);\n  let maxScore = 0;\n  let maxElem = {};\n  bAR.forEach((element) => {\n    element[1].addSize(\n      1000 * (imageWidth / imageHeight),\n      1000,\n      imageWidth / imageHeight\n    );\n    const score = element[1].generateScore();\n    if (score > maxScore) {\n      maxScore = score;\n      maxElem = element;\n    }\n  });\n  return maxElem;\n}\n\nexport default { findBestAdjustTree };\n","import { useEffect, useState, useLayoutEffect } from 'react';\nimport useDimensions from 'hooks/collage/dimensions';\nimport useOptions from 'hooks/collage/options';\nimport useActions from 'hooks/collage/actions';\nimport useImages from 'hooks/collage/images';\nimport useTree from 'hooks/collage/tree';\n\nimport helpers from 'components/collage/helpers';\nimport collageapi from 'api/collage';\nimport constants from 'static/config/collage';\n\nexport default function useBase(initialValue) {\n  console.log('use base', initialValue);\n  const {\n    defaultCollageName,\n    defaultCollageType,\n    paperSizes,\n    tolerance,\n    thumbnailHeight,\n    fontSize,\n    lineHeight,\n    textPadding,\n  } = constants;\n\n  const [details, setDetails] = useState(initialValue);\n  const [collageName, setCollageName] = useState(defaultCollageName);\n  const [collageType, setCollageType] = useState(defaultCollageType);\n  const [uploadedImages, setUploadedImages] = useState(0);\n  const dimensions = useDimensions();\n  const options = useOptions();\n  const actions = useActions();\n  const images = useImages(details);\n  const treeState = useTree(details, options.setOptions);\n  const [thumbnail, setThumbnail] = useState({});\n\n  const initialStatus = () => ({\n    details: {\n      text: 'Saving Details',\n      status: 'pending',\n    },\n    images: {\n      text: `Saving Images (${uploadedImages} / ${images.images.length})`,\n      status: 'pending',\n    },\n    finalizing: {\n      text: 'Finalizing Collage',\n      status: 'pending',\n    },\n  });\n  const [saveStatus, setSaveStatus] = useState(initialStatus);\n\n  const handleCollageTypeChange = (ct) => setCollageType(ct);\n  const getAspectRatio = () =>\n    paperSizes[collageType].width / paperSizes[collageType].height;\n\n  const handleNameChange = (newName) => setCollageName(newName);\n\n  const collageID =\n    'details' in initialValue && 'collage_id' in initialValue.details\n      ? initialValue.details.collage_id\n      : Date.now();\n\n  useLayoutEffect(() => {\n    setDetails(initialValue);\n    if ('details' in initialValue) {\n      if (\n        'name' in initialValue.details &&\n        collageName === defaultCollageName\n      ) {\n        console.log('setting collage name', initialValue.details.name);\n        setCollageName(initialValue.details.name);\n      }\n      if (\n        'collage_type' in initialValue.details &&\n        collageType === defaultCollageType\n      ) {\n        console.log('setting collage name', initialValue.details.collage_type);\n        setCollageType(initialValue.details.collage_type);\n      }\n    }\n  }, [initialValue]);\n\n  const updateStatus = (key, status) => {\n    const value = { ...saveStatus[key], status };\n    setSaveStatus((st) => ({ ...st, [key]: value }));\n  };\n\n  const updateImagesStatus = () => {\n    const imagesText = `Saving Images (${uploadedImages} / ${images.imgCount})`;\n    let value = { ...saveStatus.images, text: imagesText };\n    if (uploadedImages === images.imgCount && images.imgCount > 0) {\n      value = { ...value, status: 'done' };\n    }\n    setSaveStatus((st) => ({ ...st, images: value }));\n  };\n\n  useEffect(() => {\n    console.log('useeffect 3');\n    updateImagesStatus();\n  }, [uploadedImages, images.imgCount]);\n\n  const handleClear = async () => {\n    const clearPromises = await Promise.allSettled([\n      treeState.clear(),\n      images.clear(),\n      options.clear(),\n    ]);\n\n    for (let i = 0; i < clearPromises.length; i += 1) {\n      if (\n        clearPromises[i].status === 'fulfilled' ||\n        clearPromises[i].value.ok === true\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    console.log('aspect ratio changed', getAspectRatio());\n    const ar = getAspectRatio();\n    console.log('useeffect tree', treeState.tree);\n    if (\n      Object.keys(treeState.tree).length > 0 &&\n      'aspectRatio' in treeState.tree.root.value &&\n      treeState.tree.root.value.aspectRatio !== ar\n    ) {\n      console.log(\n        'useeffect vals',\n        treeState.tree,\n        ar,\n        treeState.tree.root.value.aspectRatio\n      );\n      const newAspectRatioTree = treeState.tree.copy();\n      newAspectRatioTree.value = {\n        ...newAspectRatioTree.value,\n        aspectRatio: ar,\n      };\n      newAspectRatioTree.root.value = {\n        ...newAspectRatioTree.root.value,\n        targetAspectRatio: ar,\n      };\n      treeState.setTree(newAspectRatioTree);\n      if (images.images.length > 1) actions.setRefresh(true);\n    }\n  }, [collageType]);\n\n  useEffect(() => {\n    const ar = getAspectRatio();\n    const { maxWidth, maxHeight } = dimensions;\n    const [w, h] = helpers.getCollageDimension(\n      maxWidth - 10,\n      maxHeight - 30,\n      ar\n    );\n    dimensions.setWidth(w);\n    dimensions.setHeight(h);\n  }, [dimensions.maxWidth, dimensions.maxHeight, collageType]);\n\n  useEffect(() => {\n    console.log('useeffect 2');\n    if (\n      (images.newImgCount > 0 &&\n        images.newImgCount === images.newImagesLoaded) ||\n      actions.refresh\n    ) {\n      images.setNewImageCount(0);\n      images.setNewImagesLoaded(0);\n      treeState.reAdjust(\n        images.images,\n        tolerance,\n        dimensions.width,\n        dimensions.height - dimensions.textHeight,\n        options.options\n      );\n      actions.setRefresh(false);\n    }\n  }, [images.newImgCount, images.newImagesLoaded, actions.refresh]);\n\n  const collageCallback = () => {};\n\n  const handleRemoveImage = (imgTitle) => {\n    const newImagesArr = images.remove(imgTitle);\n    treeState.reAdjust(\n      newImagesArr,\n      tolerance,\n      dimensions.imageWidth,\n      dimensions.imageHeight,\n      options.options\n    );\n  };\n\n  const generateThumbnail = () => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    const thumbnailWidth = thumbnailHeight * ar;\n    const thumbnailCanvas = document.createElement('canvas');\n    const thumbnailTree = treeState.tree.copy();\n    thumbnailTree.root.options.text = '';\n    thumbnailTree.addSize(thumbnailWidth, thumbnailHeight, ar);\n    thumbnailCanvas.width = thumbnailWidth;\n    thumbnailCanvas.height = thumbnailHeight;\n    thumbnailTree.CanvasDisplay(\n      thumbnailWidth,\n      thumbnailHeight,\n      thumbnailCanvas,\n      thumbnailWidth / dimensions.width\n    );\n\n    // create and update details\n    const thumbnailDetails = {\n      title: `thumbnail-${collageID}.png`,\n      src: '',\n      naturalHeight: thumbnailHeight,\n      naturalWidth: thumbnailWidth,\n      aspectRatio: ar,\n      type: 'image/png',\n    };\n    setThumbnail(thumbnailDetails);\n    return [thumbnailDetails, thumbnailCanvas];\n  };\n\n  const uploadCollageDetails = (thumbnailDetails, name) => {\n    const dets = {\n      collage_id: collageID.toString(),\n      name,\n      collage_type: collageType,\n      created_at: '2021-02-18T21:54:42.123Z',\n      last_updated_at: '2021-02-18T21:54:45.123Z',\n      images: images.getImageData(images.images),\n      tree: treeState.tree.removeImageData(),\n      thumbnail: thumbnailDetails,\n    };\n    // TODO [33] Validate collageDetails\n    console.log(dets);\n    return collageapi.newCollage(collageID, dets);\n  };\n\n  const uploadCallback = () => {\n    console.log('Setting uploaded images to ', uploadedImages + 1);\n    setUploadedImages((cnt) => cnt + 1);\n  };\n\n  const uploadCollageImages = (thumbnailCanvas, imageURLS) => {\n    const imagePromises = Object.keys(imageURLS).map(async (item) => {\n      const thumbnailKey = `thumbnail-${collageID}.jpg`;\n      if (item === thumbnailKey) {\n        const thumbnailPromise = thumbnailCanvas.toBlob(async (blob) => {\n          setThumbnail(blob);\n          return collageapi.upload(imageURLS[thumbnailKey], blob);\n        });\n        return thumbnailPromise;\n      }\n\n      const url = imageURLS[item];\n      const Img = images.images.find((img) => img.title === item);\n      const resp = await collageapi.upload(url, Img.file);\n      uploadCallback();\n      console.log('image upload resp', resp);\n      return resp;\n    });\n\n    return imagePromises;\n  };\n\n  const newCollage = async (name) => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    console.log('in generate thumbnail', ar, 500 * ar, 500);\n    const [thumbnailDetails, thumbnailCanvas] = generateThumbnail();\n    updateStatus('details', 'running');\n    const imageURLS = await uploadCollageDetails(thumbnailDetails, name);\n    updateStatus('details', 'done');\n    updateStatus('images', 'running');\n    const imagePromises = uploadCollageImages(thumbnailCanvas, imageURLS);\n    const uploadPromises = await Promise.allSettled(imagePromises);\n    // updateStatus('images', 'done');\n    updateStatus('finalizing', 'running');\n    let uploadStatus;\n    for (let i = 0; i < uploadPromises.length; i += 1) {\n      if (\n        uploadPromises[i].status === 'fulfilled' ||\n        uploadPromises[i].value.ok === true\n      ) {\n        uploadStatus = true;\n        updateStatus('finalizing', 'done');\n      } else {\n        uploadStatus = false;\n        updateStatus('finalizing', 'failed');\n        break;\n      }\n    }\n    return uploadStatus;\n  };\n\n  useEffect(() => {\n    if (\n      options.options.text.length > 0 &&\n      Object.keys(treeState.tree).length > 0\n    ) {\n      const tH = helpers.wrapText(\n        options.options.text,\n        0,\n        0,\n        dimensions.width,\n        fontSize,\n        lineHeight\n      );\n      dimensions.setTextHeight(tH.length * lineHeight + 2 * textPadding);\n      const [w, h] = helpers.getCollageDimension(\n        dimensions.width,\n        dimensions.height - (tH.length * lineHeight + 2 * textPadding),\n        treeState.tree.root.value.aspectRatio\n      );\n\n      dimensions.setImageWidth(w);\n      dimensions.setImageHeight(h);\n    } else {\n      dimensions.setTextHeight(0);\n      options.handlePositionChange(true);\n      dimensions.setImageWidth(dimensions.width);\n      dimensions.setImageHeight(dimensions.height);\n    }\n  }, [\n    dimensions.width,\n    dimensions.height,\n    treeState.tree,\n    options.options.text,\n  ]);\n\n  const getDetails = (name, thumbnailDetails) => {\n    setCollageName(name);\n    return {\n      collage_id: collageID.toString(),\n      name,\n      collage_type: collageType,\n      created_at: '2021-02-18T21:54:42.123Z',\n      last_updated_at: '2021-02-18T21:54:45.123Z',\n      images: images.getImageData(images.images),\n      tree: treeState.tree.removeImageData(),\n      thumbnail: thumbnailDetails,\n    };\n  };\n\n  const saveCollage = async (name) => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    console.log('in generate thumbnail', ar, 500 * ar, 500);\n    const [thumbnailDetails, thumbnailCanvas] = generateThumbnail();\n    updateStatus('details', 'running');\n    const imageURLS = await collageapi.saveCollage(\n      collageID,\n      getDetails(name, thumbnailDetails)\n    );\n    console.log('save collage imageurls', imageURLS);\n    updateStatus('details', 'done');\n    updateStatus('images', 'running');\n    const imagePromises = uploadCollageImages(thumbnailCanvas, imageURLS);\n    const uploadPromises = await Promise.allSettled(imagePromises);\n    // updateStatus('images', 'done');\n    updateStatus('finalizing', 'running');\n    let uploadStatus;\n    for (let i = 0; i < uploadPromises.length; i += 1) {\n      if (\n        uploadPromises[i].status === 'fulfilled' ||\n        uploadPromises[i].value.ok === true\n      ) {\n        uploadStatus = true;\n        updateStatus('finalizing', 'done');\n      } else {\n        uploadStatus = false;\n        updateStatus('finalizing', 'failed');\n        break;\n      }\n    }\n    return uploadStatus;\n  };\n\n  console.log('tree', treeState.tree);\n  return [\n    collageType,\n    getDetails,\n    collageName,\n    thumbnail,\n    collageID,\n    dimensions,\n    options,\n    actions,\n    images,\n    treeState,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n    handleCollageTypeChange,\n    handleNameChange,\n  ];\n}\n","import { useRef, useState, useEffect } from 'react';\n\nexport default function useDimensions() {\n  const headerRef = useRef();\n  const actionsRef = useRef();\n  const footerRef = useRef();\n  const addImageRef = useRef();\n\n  const [height, setHeight] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [imageWidth, setImageWidth] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [maxHeight, setMaxHeight] = useState(0);\n  const [maxWidth, setMaxWidth] = useState(0);\n  const [textHeight, setTextHeight] = useState(0);\n\n  const setDimensions = () => {\n    const isMobile = window.innerWidth < window.innerHeight;\n    const headerHeight = headerRef.current ? headerRef.current.offsetHeight : 0;\n    if (isMobile === true) {\n      const actionsHeight = actionsRef.current\n        ? actionsRef.current.offsetHeight\n        : 0;\n      const footerHeight = footerRef.current\n        ? footerRef.current.offsetHeight\n        : 0;\n      const otherHeight = headerHeight + actionsHeight + footerHeight;\n      setMaxWidth(window.innerWidth);\n      setMaxHeight(window.innerHeight - otherHeight);\n    } else {\n      const actionsWidth = actionsRef.current\n        ? actionsRef.current.offsetWidth\n        : 0;\n      const footerWidth = footerRef.current ? footerRef.current.offsetWidth : 0;\n      setMaxWidth(window.innerWidth - (footerWidth + actionsWidth));\n      setMaxHeight(window.innerHeight - headerHeight);\n    }\n  };\n\n  const handleImageAddClick = () => {\n    if (addImageRef.current) addImageRef.current.click();\n  };\n\n  useEffect(() => {\n    setDimensions();\n  }, [headerRef.current, actionsRef.current, footerRef.current]);\n\n  useEffect(() => {\n    setDimensions();\n\n    window.addEventListener('resize', setDimensions);\n\n    return () => window.removeEventListener('resize', setDimensions);\n  }, []);\n\n  return {\n    addImageRef,\n    actionsRef,\n    headerRef,\n    footerRef,\n    width,\n    height,\n    imageHeight,\n    imageWidth,\n    setImageWidth,\n    setImageHeight,\n    maxHeight,\n    maxWidth,\n    handleImageAddClick,\n    textHeight,\n    setTextHeight,\n    setWidth,\n    setHeight,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useOptions() {\n  const optionsInitValue = {\n    padding: 2,\n    borderRadius: 5,\n    color: {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1,\n    },\n    text: '',\n    topText: true,\n  };\n\n  const [options, setOptions] = useState(optionsInitValue);\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n  const [editControl, setEditControl] = useState(null);\n  const [editOptionsValue, setEditOptionsValue] = useState('');\n\n  const clear = () => setOptions(optionsInitValue);\n  const handlePaddingChange = (e) =>\n    setOptions((opts) => ({ ...opts, padding: e.target.value }));\n  const handleRadiusChange = (e) => {\n    setOptions((opts) => ({ ...opts, borderRadius: e.target.value }));\n  };\n\n  const handleColorClick = () => setDisplayColorPicker((dcp) => !dcp);\n  const handleColorClose = () => setDisplayColorPicker(false);\n  const handleColorChange = (clr) =>\n    setOptions((opts) => ({ ...opts, color: clr.rgb }));\n  const handlePositionChange = (value) =>\n    setOptions((opts) => ({ ...opts, topText: value }));\n\n  const handleTextChange = (e) => {\n    const { target } = e;\n    setOptions((opts) => ({ ...opts, text: target.value }));\n  };\n\n  const handleTextSubmit = (e) => {\n    handleTextChange(e);\n    setEditControl(null);\n    setEditOptionsValue(null);\n  };\n\n  return {\n    options,\n    setOptions,\n    clear,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClick,\n    handleColorClose,\n    handleColorChange,\n    handlePositionChange,\n    handleTextChange,\n    displayColorPicker,\n    editControl,\n    setEditControl,\n    editOptionsValue,\n    setEditOptionsValue,\n    handleTextSubmit,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useActions() {\n  const [open, setOpen] = useState(false);\n  const [saveOpen, setSaveOpen] = useState(false);\n  const [saveStart, setSaveStart] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [generate, setGenerate] = useState(false);\n  const [removeImage, setRemoveImage] = useState(false);\n  const [printOptions, setPrintOptions] = useState({\n    paperWidth: 0,\n    paperHeight: 0,\n  });\n\n  const onRefresh = () => setRefresh(true);\n  const handleDownload = () => setOpen(true);\n  const handleSave = () => {\n    setSaveOpen(true);\n  };\n  const onDownloadClose = () => setOpen(false);\n  const onSaveClose = () => setSaveOpen(false);\n  const clearDelete = () => setRemoveImage(false);\n  const onDelete = () => setRemoveImage((ri) => !ri);\n\n  const onDownloadClick = (w, h) => {\n    setPrintOptions({ paperWidth: w, paperHeight: h });\n    setGenerate(true);\n    setOpen(false);\n  };\n\n  const onSaveClick = () => {\n    setSaveStart(true);\n    setSaveOpen(false);\n  };\n  const handleGenerateCallback = () => {\n    setGenerate(false);\n    setPrintOptions({ paperWidth: 0, paperHeight: 0 });\n  };\n\n  return {\n    clearDelete,\n    generate,\n    handleDownload,\n    handleGenerateCallback,\n    onDelete,\n    onDownloadClick,\n    onDownloadClose,\n    onRefresh,\n    open,\n    printOptions,\n    refresh,\n    setGenerate,\n    setOpen,\n    setPrintOptions,\n    setRefresh,\n    removeImage,\n    setRemoveImage,\n    saveOpen,\n    setSaveOpen,\n    onSaveClose,\n    onSaveClick,\n    handleSave,\n    saveStart,\n    setSaveStart,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport helpers from 'components/collage/helpers';\n\nexport default function useImages(initialValue) {\n  console.log('use images', initialValue);\n  const [newImgCount, setNewImageCount] = useState(0);\n  const [newImagesLoaded, setNewImagesLoaded] = useState(0);\n  const [imgCount, setImageCount] = useState(0);\n  const [loaded, setLoaded] = useState(0);\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    console.log('setting images');\n    if ('images' in initialValue) {\n      setImages(initialValue.images);\n      if (imgCount === 0) setImageCount(initialValue.images.length);\n    }\n  }, [initialValue]);\n\n  const getImageData = (imageArr) => {\n    const tempImgArr = [...imageArr];\n    return tempImgArr.map((img) => {\n      const { file, src, ...rest } = img;\n      console.log('get image data', img, rest);\n      return rest;\n    });\n  };\n\n  const removeImageData = (imageArr) => {\n    const tempImgArr = [...imageArr];\n    return tempImgArr.map((img) => {\n      const { file, src, ...rest } = img;\n      console.log('get image data', img, rest);\n      return rest;\n    });\n  };\n\n  const incrementNewImageCount = () => {\n    console.log('incrementing image count');\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleImageData = async (imageDetail) => {\n    setImages((arr) => arr.concat([imageDetail]));\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleLoad = (event) => {\n    helpers.handleImageLoad(\n      event,\n      setImageCount,\n      setNewImageCount,\n      handleImageData\n    );\n  };\n\n  const clear = () => {\n    setImages([]);\n    setImageCount(0);\n    setLoaded(0);\n    setNewImagesLoaded(0);\n  };\n\n  const remove = (title) => {\n    const removeIndex = images.findIndex((elem) => elem.title === title);\n    const newImagesArr = [\n      ...images.slice(0, removeIndex),\n      ...images.slice(removeIndex + 1),\n    ];\n    setImages(newImagesArr);\n    setImageCount((cnt) => cnt - 1);\n    return newImagesArr;\n  };\n\n  return {\n    clear,\n    handleImageData,\n    handleLoad,\n    images,\n    imgCount,\n    loaded,\n    newImagesLoaded,\n    newImgCount,\n    remove,\n    setImageCount,\n    setImages,\n    setLoaded,\n    setNewImageCount,\n    setNewImagesLoaded,\n    getImageData,\n    removeImageData,\n    incrementNewImageCount,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport treeUtils from 'components/collage/treeUtils';\nimport BinaryTree from 'components/collage/binaryTree';\n\nexport default function useTree(initialValue, loadingCallback = () => {}) {\n  console.log('use Tree', initialValue);\n  const [tree, setTree] = useState(new BinaryTree({}));\n\n  useEffect(() => {\n    console.log('use Tree useEffect');\n    const newTree = new BinaryTree({});\n    if (\n      'details' in initialValue &&\n      Object.keys(initialValue.details).length > 0\n    ) {\n      console.log('initial value in tree', initialValue);\n      newTree.fromObject(initialValue.details.tree);\n      if ('options' in initialValue.details.tree.root) {\n        loadingCallback((opts) => ({\n          ...opts,\n          ...initialValue.details.tree.root.options,\n        }));\n      }\n      console.log('setting tree');\n      setTree(newTree);\n    }\n  }, [initialValue]);\n\n  const clear = () => setTree({});\n\n  const reAdjust = (imagesArr, tolerance, imageWidth, imageHeight, options) => {\n    const [, bestAspectRatioTree] = treeUtils.findBestAdjustTree(\n      imagesArr,\n      tolerance,\n      imageWidth,\n      imageHeight\n    );\n    bestAspectRatioTree.addOptions(options);\n    setTree(bestAspectRatioTree);\n  };\n\n  return { tree, setTree, clear, reAdjust };\n}\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Typography from '@mui/material/Typography';\n\nexport default function HandleError({ errors, children, handleClose }) {\n  const [open, setOpen] = useState(false);\n  useEffect(() => setOpen(true), []);\n  return errors.length > 0 ? (\n    <Dialog open={open} fullWidth>\n      <DialogTitle\n        sx={{ textAlign: 'center', color: 'red', fontWeight: 'bold' }}\n      >\n        Error(s)\n      </DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <DialogContentText sx={{ display: 'inline', pr: 1 }}>\n          <Typography sx={{ fontWeight: 'bold' }}>\n            Please fix the following errors\n          </Typography>\n          <List sx={{ px: 2 }}>\n            {errors.map((err) => (\n              <ListItem sx={{ display: 'list-item', listStyleType: 'disc' }}>\n                {err}\n              </ListItem>\n            ))}\n          </List>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          onClick={() => {\n            handleClose();\n            setOpen(false);\n          }}\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  ) : (\n    children\n  );\n}\n\nHandleError.propTypes = {\n  errors: PropTypes.arrayOf(PropTypes.string).isRequired,\n  children: PropTypes.node.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport constants from 'static/config/collage';\nimport helpers from './helpers';\n\nexport default function Collage({\n  dimensionProps,\n  imageProps,\n  actionProps,\n  collageCallback,\n  handleRemoveImage,\n  options,\n  tree,\n}) {\n  const [collage, setCollage] = useState(null);\n  const { images, setLoaded } = imageProps;\n  const { generate, handleGenerateCallback, printOptions, removeImage } =\n    actionProps;\n  const { height, width, imageHeight, imageWidth } = dimensionProps;\n  const { fontSize, lineHeight } = constants;\n\n  const handleCollageImageLoad = () => setLoaded((cnt) => cnt + 1);\n  const isEmpty = (t) => Object.keys(t).length === 0;\n  const createCollage = () => {\n    console.log('started collage loading', tree);\n    tree.addSize(imageWidth, imageHeight, tree.root.value.aspectRatio);\n    console.log('collage added size');\n    tree.addOptions(options);\n    console.log('collage added options', images.length);\n    if (images.length > 0) {\n      tree.addImageData(images);\n      console.log('collage added image data');\n      const collageElem = tree.DOMDisplay(\n        width,\n        height,\n        removeImage,\n        handleRemoveImage,\n        handleCollageImageLoad\n      );\n      console.log('collage added dom display');\n      setCollage(collageElem);\n      collageCallback(tree);\n    }\n  };\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      console.log('collage, tree is not empty');\n      createCollage();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      console.log('collage, tree is not empty 1');\n      createCollage();\n    } else {\n      setCollage(null);\n    }\n  }, [tree, options, imageWidth, imageHeight, removeImage, images]);\n\n  const downloadCollage = (canvas, pW, pH) => {\n    canvas.toBlob((blob) => {\n      const link = document.createElement('a');\n      link.download = `collage-${pW.toFixed(2)}X${pH.toFixed(\n        2\n      )}-${Date.now()}.jpg`;\n      link.href = URL.createObjectURL(blob);\n      link.click();\n      URL.revokeObjectURL(link.href);\n      link.href = null;\n      handleGenerateCallback();\n    }, 'image/jpeg');\n  };\n\n  const getCanvasTree = () => {\n    const canvasTree = tree.copy();\n    canvasTree.replaceImages(images);\n    return canvasTree;\n  };\n\n  const getCanvas = (pw, ph) => {\n    const canvasElement = document.createElement('canvas');\n    canvasElement.width = pw;\n    canvasElement.height = ph;\n    return canvasElement;\n  };\n\n  const generateCollageTree = (pw, ph) => {\n    const canvasTree = getCanvasTree();\n    const ar = tree.root.value.aspectRatio;\n    const scaleFactor = pw / width;\n    const [imgPW, imgPH] = helpers.getImageDimensions(\n      pw,\n      ph,\n      options.text,\n      0,\n      0,\n      fontSize,\n      lineHeight,\n      scaleFactor,\n      tree.root.value.aspectRatio\n    );\n    canvasTree.addSize(imgPW, imgPH, ar);\n    return canvasTree;\n  };\n\n  const generateCollage = (ctree, pw, ph) => {\n    const scaleFactor = pw / width;\n    const canvasElement = getCanvas(pw, ph);\n    ctree.CanvasDisplay(pw, ph, canvasElement, scaleFactor);\n\n    setTimeout(() => downloadCollage(canvasElement, pw, ph), '5000');\n  };\n\n  useEffect(() => {\n    if (generate === true) {\n      const { paperWidth: pw, paperHeight: ph } = printOptions;\n      const canvasTree = generateCollageTree(pw, ph);\n      const [valid, probNodes] = canvasTree.validateAddSize();\n      if (valid) {\n        generateCollage(canvasTree, pw, ph);\n      } else {\n        const [newPW, newPH] = helpers.optimizeDimensions(pw, ph, probNodes);\n        const newCanvasTree = generateCollageTree(newPW, newPH);\n        const [newValid, newProbNodes] = newCanvasTree.validateAddSize();\n        if (newValid) {\n          generateCollage(newCanvasTree, newPW, newPH);\n        } else {\n          console.log('unable to generate collage', newProbNodes);\n        }\n      }\n    }\n  }, [generate]);\n\n  return collage;\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\n\nexport default function DownloadDialog({ open, onClick, onClose, sizes }) {\n  const [value, setValue] = useState('');\n  const handleDownload = () => {\n    console.log(sizes[value].width, sizes[value].height, onClick);\n    onClick(sizes[value].width, sizes[value].height);\n    setValue('');\n  };\n\n  const handleClose = () => {\n    setValue('');\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Download Collage</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <DialogContentText sx={{ display: 'inline', pr: 1 }}>\n          Choose collage size\n        </DialogContentText>\n        <FormControl fullWidth sx={{ maxWidth: '60%' }}>\n          <InputLabel id=\"demo-simple-select-label\">Download Size</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            defaultValue=\"A4\"\n            value={value}\n            label=\"Download Size\"\n            onChange={(event) => setValue(event.target.value)}\n          >\n            {Object.keys(sizes).map((key) => (\n              <MenuItem key={sizes[key].text} value={key}>\n                {sizes[key].text}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          disabled={value.length === 0}\n          onClick={handleDownload}\n        >\n          Download\n        </Button>\n        <Button variant=\"text\" onClick={handleClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nDownloadDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport TextField from '@mui/material/TextField';\n\nexport default function SaveDialog({ collageName, open, onClick, onClose }) {\n  const [name, setName] = useState(collageName);\n  const [nameError] = useState('');\n  const handleSave = () => {\n    onClick(name);\n  };\n\n  const handleNameChange = (e) => {\n    const { target } = e;\n    setName(target.value);\n  };\n\n  const handleClose = () => {\n    setName('');\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <TextField\n          variant=\"outlined\"\n          label=\"Set Collage Name\"\n          defaultValue={name}\n          onChange={handleNameChange}\n          size=\"small\"\n          sx={{ width: '100%', mb: 1 }}\n          InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n          helperText={nameError}\n          error={!!nameError}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          disabled={name.length === 0}\n          onClick={handleSave}\n        >\n          Save\n        </Button>\n        <Button variant=\"text\" onClick={handleClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nSaveDialog.propTypes = {\n  collageName: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport PendingIcon from '@mui/icons-material/Pending';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CloseIcon from '@mui/icons-material/Close';\n\nfunction StatusIndicator({ status }) {\n  if (status === 'running') {\n    return <CircularProgress color=\"info\" size=\"1rem\" />;\n  }\n  if (status === 'pending') {\n    return <PendingIcon color=\"disabled\" size=\"0.875rem\" />;\n  }\n  if (status === 'done') {\n    return <CheckCircleOutlineIcon color=\"success\" size=\"0.875rem\" />;\n  }\n  if (status === 'failed') {\n    return <CloseIcon color=\"error\" size=\"0.875rem\" />;\n  }\n}\n\nStatusIndicator.propTypes = {\n  status: PropTypes.string.isRequired,\n};\n\nfunction Status({ text, status }) {\n  const color = {\n    pending: alpha('#000', 0.26),\n    done: 'black',\n    running: 'black',\n    failed: 'red',\n  };\n\n  return (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n      <Typography\n        sx={{ fontWeight: 'bold', fontSize: '1rem', color: color[status] }}\n      >\n        {text}\n      </Typography>\n      <StatusIndicator status={status} />\n    </Stack>\n  );\n}\n\nStatus.propTypes = {\n  text: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nfunction OverAllStatus({ status, counter }) {\n  if (status === 'failed') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <CloseIcon color=\"error\" />\n        <Typography>Collage creation failed</Typography>\n      </Stack>\n    );\n  }\n\n  if (status === 'running' || status === 'pending') return null;\n\n  if (status === 'success') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <CheckCircleOutlineIcon color=\"success\" sx={{ fontSize: '2rem' }} />\n        <Typography>\n          Collage creation successful. Navigation to collages in {counter}{' '}\n          seconds...\n        </Typography>\n      </Stack>\n    );\n  }\n\n  return null;\n}\n\nOverAllStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  counter: PropTypes.number.isRequired,\n};\n\nexport default function SaveStatusDialog({ open, status }) {\n  let overAllStatus = 'pending';\n  const [counter, setCounter] = useState(-1);\n  useEffect(() => {\n    let timerId;\n    if (counter > 0 && overAllStatus === 'success') {\n      timerId = setTimeout(() => setCounter(counter - 1), 1000);\n    }\n    return () => clearTimeout(timerId);\n  }, [counter, overAllStatus]);\n\n  const statusArr = Object.values(status).map((val) => val.status);\n  if (statusArr.includes('failed')) {\n    overAllStatus = 'failed';\n  } else if (statusArr.includes('running')) {\n    overAllStatus = 'running';\n  } else if (!statusArr.includes('pending')) {\n    console.log('setting counter', counter, status);\n    if (counter === -1) {\n      setCounter(3);\n    }\n    overAllStatus = 'success';\n  }\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent dividers>\n        <Stack direction=\"column\" justifyContent=\"center\" spacing={2}>\n          {Object.values(status).map((st) => (\n            <Status key={st.text} text={st.text} status={st.status} />\n          ))}\n        </Stack>\n      </DialogContent>\n      <OverAllStatus status={overAllStatus} counter={counter} />\n    </Dialog>\n  );\n}\n\nSaveStatusDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  status: PropTypes.objectOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      status: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n\nimport * as yup from 'yup';\n// import { alpha } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n// import { alpha } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport { Typography, Box, Link } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ProfileLink from 'components/profile';\nimport { Branding, BrandLogo } from 'components/brand';\nimport constants from 'static/config/collage';\nimport utils from 'utils';\n\nfunction HeaderNameSection({ name, handleChange, nameError, handleNameError }) {\n  const [editable, setEditable] = useState(false);\n  const handleClick = () => setEditable(true);\n  const nameSchema = yup\n    .object({\n      name: yup\n        .string()\n        .max(\n          constants.maxNameLength,\n          `Max allowed length is ${constants.maxNameLength}`\n        ),\n    })\n    .required();\n\n  const isValid = async () => {\n    const nameValid = await utils.isFieldValid(\n      'name',\n      name,\n      handleNameError,\n      nameSchema\n    );\n    return nameValid;\n  };\n\n  const handleNameChange = (e) => {\n    console.log('handle name change', e.target.value, e.target.value.length);\n    handleChange(e.target.value);\n  };\n\n  const handleBlur = async (e) => {\n    if (e.target.value === '') {\n      handleChange('Untitled');\n    } else {\n      handleChange(e.target.value);\n      const valid = await isValid();\n      if (valid === false) {\n        return;\n      }\n    }\n    setEditable(false);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      handleBlur(e);\n    }\n  };\n\n  useEffect(() => {\n    console.log('name changed', name);\n    isValid();\n  }, [name]);\n\n  return editable === true ? (\n    <TextField\n      color=\"primary\"\n      variant=\"filled\"\n      label=\"Set Collage Name\"\n      defaultValue={name}\n      autoFocus\n      size=\"small\"\n      onChange={handleNameChange}\n      onBlur={handleBlur}\n      onKeyDown={handleKeyDown}\n      InputLabelProps={{\n        color: 'secondary',\n        focused: true,\n      }}\n      InputProps={{\n        sx: {\n          color: 'white',\n        },\n      }}\n      helperText={\n        <Typography\n          variant=\"body\"\n          sx={{\n            fontWeight: 'bold',\n            color: 'secondary.main',\n          }}\n        >\n          {nameError}\n        </Typography>\n      }\n      error={!!nameError}\n      sx={{\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n        cursor: 'text',\n      }}\n    />\n  ) : (\n    <Typography\n      variant=\"h5\"\n      onClick={handleClick}\n      sx={{\n        color: 'gray',\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n      }}\n    >\n      {name}\n    </Typography>\n  );\n}\n\nHeaderNameSection.propTypes = {\n  name: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  nameError: PropTypes.string.isRequired,\n  handleNameError: PropTypes.func.isRequired,\n};\n\nexport default function Header({\n  headerRef,\n  name,\n  handleNameChange,\n  nameError,\n  handleNameError,\n}) {\n  console.log('in collage header', name);\n  const belowmd = useMediaQuery((theme) => theme.breakpoints.down('md'));\n  return (\n    <Paper\n      ref={headerRef}\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        p: 1,\n        backgroundColor: 'primary.main',\n        borderRadius: 0,\n      }}\n      elevation={0}\n    >\n      <Box sx={{ postion: 'absolute', left: '5px' }}>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n          <Link href=\"/collages\" color=\"white\" underline=\"none\">\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <ArrowBackIcon fontSize=\"medium\" />\n            </Box>\n          </Link>\n          {belowmd ? (\n            <BrandLogo width=\"50px\" height=\"50px\" />\n          ) : (\n            <Branding width=\"50px\" height=\"50px\" />\n          )}\n        </Stack>\n      </Box>\n      <HeaderNameSection\n        name={name}\n        handleChange={handleNameChange}\n        nameError={nameError}\n        handleNameError={handleNameError}\n      />\n      <ProfileLink />\n    </Paper>\n  );\n}\n\nHeader.propTypes = {\n  name: PropTypes.string.isRequired,\n  headerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  handleNameChange: PropTypes.func.isRequired,\n  nameError: PropTypes.string.isRequired,\n  handleNameError: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n// import Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport collageBack from 'static/images/collage_back1.webp';\n\nexport default function EmptyCollage({ width, height, loadComponent }) {\n  console.log(width, height);\n  return (\n    <Box\n      sx={{\n        backgroundImage: `url(${collageBack})`,\n        backgroundSize: width,\n        objectFit: 'fill',\n        width,\n        height,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {loadComponent}\n    </Box>\n  );\n}\n\nEmptyCollage.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  loadComponent: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport EmptyCollage from 'components/collage/EmptyCollage';\nimport Loading from 'components/Loading';\nimport AddPhotos from 'components/AddPhotos';\n\nexport default function View({\n  open,\n  saveOpen,\n  saveStatusOpen,\n  status,\n  dimensionProps,\n  imageProps,\n  header,\n  actions,\n  downloadDialog,\n  saveDialog,\n  saveStatusDialog,\n  collage,\n  controls,\n  collageTypeMenu,\n}) {\n  const { width, height, maxWidth, maxHeight } = dimensionProps;\n  let showControls = false;\n  const { images, imgCount, handleLoad, newImagesLoaded } = imageProps;\n  if (images.length > 0) {\n    showControls = true;\n  }\n  let content;\n  if (status === 'fetching') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={<Loading title=\"Fetching collage...\" />}\n      />\n    );\n  }\n\n  if (status === 'preparing') {\n    content = (\n      <>\n        {collage}\n        <Loading title=\"Preparing collage...\" />\n      </>\n    );\n  }\n\n  if (status === 'loading') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          <Loading\n            // title={`Loading (${images.length} / ${imgCount}) images...`}\n            title={`Loading (${newImagesLoaded} / ${imgCount}) images...`}\n          />\n        }\n      />\n    );\n  }\n\n  if (status === 'empty') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          width ? <AddPhotos handleChange={handleLoad} /> : <div />\n        }\n      />\n    );\n  }\n\n  if (status === 'ready') {\n    content = collage;\n  }\n\n  return (\n    <Box component=\"div\" sx={{ backgroundColor: 'gray' }}>\n      {header}\n      {showControls ? actions : null}\n      {open ? downloadDialog : null}\n      {saveOpen ? saveDialog : null}\n      {saveStatusOpen ? saveStatusDialog : null}\n      <Stack\n        direction=\"column\"\n        width={maxWidth}\n        height={maxHeight}\n        sx={{\n          position: 'absolute',\n          // top: offsetHeight,\n          left: '50%',\n          transform: 'translate(-50%, 0)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'gray',\n          justifySelf: 'center',\n        }}\n      >\n        {collageTypeMenu}\n        {content}\n      </Stack>\n      {showControls ? controls : null}\n    </Box>\n  );\n}\n\nView.propTypes = {\n  dimensionProps: PropTypes.shape({\n    maxWidth: PropTypes.number.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    imageHeight: PropTypes.number.isRequired,\n\n    headerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n    actionsRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n    footerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n  imageProps: PropTypes.shape({\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        src: PropTypes.string.isRequired,\n        naturalHeight: PropTypes.number.isRequired,\n        naturalWidth: PropTypes.number.isRequired,\n        aspectRatio: PropTypes.number.isRequired,\n        type: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    imgCount: PropTypes.number.isRequired,\n    handleLoad: PropTypes.func.isRequired,\n    loaded: PropTypes.number.isRequired,\n    newImagesLoaded: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  saveOpen: PropTypes.bool.isRequired,\n  saveStatusOpen: PropTypes.bool.isRequired,\n  status: PropTypes.string.isRequired,\n  header: PropTypes.node.isRequired,\n  actions: PropTypes.node.isRequired,\n  collage: PropTypes.node.isRequired,\n  controls: PropTypes.node.isRequired,\n  downloadDialog: PropTypes.node.isRequired,\n  saveDialog: PropTypes.node.isRequired,\n  saveStatusDialog: PropTypes.node.isRequired,\n  collageTypeMenu: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      icon={icon}\n      sx={{\n        py: 1,\n        fontWeight: 'bold',\n        color: 'gray',\n        outline: 'none',\n        '&:focus': {\n          color: 'white',\n          outline: 'none',\n        },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\nDBNA.defaultProps = {\n  handleChange: () => {},\n};\n\nDBNA.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Drawer from '@mui/material/Drawer';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopDrawer({ anchor, children, innerRef }) {\n  return (\n    <Drawer\n      anchor={anchor}\n      variant=\"permanent\"\n      PaperProps={{\n        ref: innerRef,\n        sx: {\n          height: 'fit-content',\n          top: '50%',\n          backgroundColor: 'transparent',\n          color: 'gray',\n          fontWeight: 'bold',\n          borderRadius: anchor === 'left' ? '0 10px 10px 0' : '10px 0 0 10px',\n          transform: 'translate(0, -50%)',\n          border: 0,\n        },\n      }}\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nDesktopDrawer.defaultProps = {\n  innerRef: () => {},\n};\n\nDesktopDrawer.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n  anchor: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Divider from '@mui/material/Divider';\n\nexport default function ControlsDivider() {\n  return <Divider sx={{ backgroundColor: 'gray', my: 1 }} variant=\"middle\" />;\n}\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport List from '@mui/material/List';\n// import { alpha } from '@mui/material/styles';\n\nimport DBNA from 'components/collage/DesktopActionItem';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport ControlsDivider from 'components/collage/ControlsDivider';\n\nexport default function DesktopActions({ actionsRef, onDownload, onSave }) {\n  const handleChange = (newValue) => {\n    console.log(newValue);\n    if (newValue === 'download') {\n      onDownload();\n    }\n    if (newValue === 'save') {\n      onSave();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  return (\n    <DesktopDrawer anchor=\"right\" innerRef={actionsRef}>\n      <List sx={{ backgroundColor: 'black' }}>\n        <DBNA\n          label=\"Save\"\n          icon={<SaveIcon />}\n          handleChange={() => handleChange('save')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label=\"Download\"\n          icon={<DownloadIcon />}\n          handleChange={() => handleChange('download')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label={\n            <>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Order\n              </Typography>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Print(s)\n              </Typography>\n            </>\n          }\n          icon={<PrintIcon />}\n          handleChange={() => handleChange('print')}\n        />\n      </List>\n    </DesktopDrawer>\n  );\n}\n\nDesktopActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\n\nexport default function ClearCollageDialog({\n  open,\n  onSubmit,\n  onCancel,\n  saveType,\n}) {\n  return (\n    <Dialog open={open}>\n      <DialogTitle\n        sx={{\n          textAlign: 'center',\n          fontWeight: 'bold',\n          color: alpha('#000', 0.8),\n        }}\n      >\n        {saveType === 'new' ? 'Clear' : 'Delete'} Collage\n      </DialogTitle>\n      <DialogContent dividers>\n        <DialogContentText sx={{ fontWeight: 'bold', color: 'gray', pb: 1 }}>\n          Do you want to {saveType === 'new' ? 'clear' : 'delete'} this collage?\n        </DialogContentText>\n        <Typography\n          variant=\"subtitle2\"\n          sx={{ color: 'red', fontWeight: 'bold' }}\n          noWrap\n        >\n          Note:\n        </Typography>\n        <Typography\n          sx={{ fontSize: '0.8rem', color: 'gray', fontWeight: 'bold' }}\n        >\n          This change is not reversible\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onSubmit} sx={{ color: 'red' }}>\n          {saveType === 'new' ? 'Clear' : 'Delete'}\n        </Button>\n        <Button variant=\"outlined\" onClick={onCancel}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nClearCollageDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useRef, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\n// import { alpha } from '@mui/material/styles';\n\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function DesktopControls({\n  innerRef,\n  onRefresh,\n  photosComp,\n  editComp,\n  handleClear,\n  clearDelete,\n  saveType,\n}) {\n  const [imageOptionsOpen, setImageOptionsOpen] = useState(false);\n  const [editOptionsOpen, setEditOptionsOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const editRef = useRef(null);\n\n  const closeAll = () => {\n    clearDelete();\n    setImageOptionsOpen(false);\n    setEditOptionsOpen(false);\n    setClearOpen(false);\n  };\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (editRef.current && !editRef.current.contains(event.target)) {\n        closeAll();\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [editRef]);\n\n  const handlePhotosClick = () => {\n    const ioo = imageOptionsOpen;\n    setImageOptionsOpen((io) => !io);\n    if (ioo === true) closeAll();\n    // closeAll();\n    // if (imageOptionsOpen) {\n    //   setImageOptionsOpen((io) => !io);\n    //   closeAll();\n    // } else {\n    //   closeAll();\n    //   setImageOptionsOpen(true);\n    // }\n  };\n\n  const handleEditClick = () => {\n    if (editOptionsOpen) {\n      setEditOptionsOpen(false);\n    } else {\n      closeAll();\n      setEditOptionsOpen(true);\n    }\n  };\n  const handleRearrange = () => {\n    closeAll();\n    onRefresh();\n  };\n\n  const handleClearClick = () => {\n    console.log('clear open', clearOpen);\n    if (clearOpen) {\n      setClearOpen(false);\n    } else {\n      closeAll();\n      setClearOpen(true);\n    }\n  };\n\n  const handleClearClose = () => setClearOpen(false);\n  const handleClearSubmit = () => {\n    handleClearClose();\n    handleClear();\n  };\n\n  console.log('clear open', clearOpen);\n  console.log('rendering desktop controls');\n  return (\n    <DesktopDrawer anchor=\"left\">\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\" ref={innerRef}>\n        <List\n          sx={{\n            backgroundColor: 'black',\n            borderRadius: '0 10px 10px 0',\n          }}\n        >\n          <DBNA\n            label=\"Rearrange\"\n            icon={<AutoAwesomeMosaicIcon />}\n            handleChange={handleRearrange}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Photos\"\n            icon={<PhotoIcon />}\n            handleChange={handlePhotosClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Edit\"\n            icon={<EditIcon />}\n            handleChange={handleEditClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label={saveType === 'new' ? 'Clear' : 'Delete'}\n            icon={saveType === 'new' ? <RefreshIcon /> : <DeleteIcon />}\n            handleChange={handleClearClick}\n          />\n        </List>\n        {imageOptionsOpen ? photosComp : null}\n        {editOptionsOpen ? <div ref={editRef}>{editComp}</div> : null}\n        <ClearCollageDialog\n          open={clearOpen}\n          onSubmit={handleClearSubmit}\n          onCancel={handleClearClose}\n          saveType={saveType}\n        />\n      </Stack>\n    </DesktopDrawer>\n  );\n}\n\nDesktopControls.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  photosComp: PropTypes.node.isRequired,\n  editComp: PropTypes.node.isRequired,\n  handleClear: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopImageOptions({ onDelete, onAdd, clearDelete }) {\n  const handleAdd = () => {\n    clearDelete();\n    onAdd();\n  };\n\n  return (\n    <List\n      sx={{\n        backgroundColor: 'black',\n        borderRadius: '10px 10px 10px 10px',\n        height: 'fit-content',\n      }}\n    >\n      <DBNA\n        label=\"Add\"\n        icon={<AddPhotoAlternateIcon />}\n        handleChange={handleAdd}\n      />\n      <ControlsDivider />\n      <DBNA label=\"Delete\" icon={<DeleteIcon />} handleChange={onDelete} />\n    </List>\n  );\n}\n\nDesktopImageOptions.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\n\nexport default function EditControl({\n  paddingControl,\n  radiusControl,\n  colorControl,\n  textControl,\n}) {\n  return (\n    <Stack\n      direction=\"column\"\n      spacing={4}\n      sx={{\n        p: 3,\n        backgroundColor: 'black',\n        borderRadius: '10px 10px 10px 10px',\n        boxShadow: '0 0 10px inset rgba(255, 0, 0, 0.3)',\n      }}\n    >\n      {paddingControl}\n      {radiusControl}\n      {colorControl}\n      {textControl}\n    </Stack>\n  );\n}\n\nEditControl.propTypes = {\n  paddingControl: PropTypes.node.isRequired,\n  radiusControl: PropTypes.node.isRequired,\n  colorControl: PropTypes.node.isRequired,\n  textControl: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n\nexport default function MBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      value={label.toLowerCase()}\n      icon={icon}\n      sx={{\n        fontWeight: 'bold',\n        color: 'gray',\n        '&.Mui-selected': { color: 'white', outline: 'none' },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\n\nMBNA.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function MobileActions({ actionsRef, onDownload, onSave }) {\n  return (\n    <BottomNavigation\n      ref={actionsRef}\n      showLabels\n      sx={{ py: 1, fontWeight: 'bold', backgroundColor: alpha('#000', 0.6) }}\n    >\n      <MBNA label=\"Save\" icon={<SaveIcon />} handleChange={onSave} />\n      <MBNA\n        label=\"Download\"\n        icon={<DownloadIcon />}\n        handleChange={onDownload}\n      />\n      <MBNA label=\"Print\" icon={<PrintIcon />} handleChange={() => {}} />\n    </BottomNavigation>\n  );\n}\n\nMobileActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { alpha } from '@mui/material/styles';\n\nexport default function MainControls({ value, handleChange, saveType }) {\n  return (\n    <BottomNavigation\n      showLabels\n      value={value}\n      onChange={handleChange}\n      sx={{\n        fontWeight: 'bold',\n        backgroundColor: alpha('#fff', 0.2),\n        '&.Mui-selected': { color: 'white' },\n      }}\n    >\n      <BottomNavigationAction\n        label=\"Rearrange\"\n        value=\"rearrange\"\n        icon={<AutoAwesomeMosaicIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Photos\"\n        value=\"photo\"\n        icon={<PhotoIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Edit\"\n        value=\"edit\"\n        icon={<EditIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label={saveType === 'new' ? 'Clear' : 'Delete'}\n        value=\"clear\"\n        icon={saveType === 'new' ? <RefreshIcon /> : <DeleteIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n    </BottomNavigation>\n  );\n}\n\nMainControls.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport Typography from '@mui/material/Typography';\nimport PaddingIcon from '@mui/icons-material/Padding';\nimport CropFreeIcon from '@mui/icons-material/CropFree';\nimport SquareIcon from '@mui/icons-material/Square';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TitleIcon from '@mui/icons-material/Title';\nimport { alpha } from '@mui/material/styles';\n\nexport default function EditOptions({\n  color,\n  editOptionsValue,\n  open,\n  handleOptionsClose,\n  handleEditOptionsClick,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={editOptionsValue}\n        onChange={handleEditOptionsClick}\n        sx={{\n          display: 'flex',\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          position: 'relative',\n          alignItems: 'center',\n        }}\n      >\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Padding\n            </Typography>\n          }\n          value=\"padding\"\n          icon={<PaddingIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Corner\n            </Typography>\n          }\n          value=\"border radius\"\n          icon={<CropFreeIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Color\n            </Typography>\n          }\n          value=\"color\"\n          icon={\n            <SquareIcon\n              sx={{\n                fill: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n                borderRadius: '5px',\n              }}\n            />\n          }\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label=\"Text\"\n          value=\"text\"\n          icon={<TitleIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nEditOptions.propTypes = {\n  editOptionsValue: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleEditOptionsClick: PropTypes.func.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function ImageOptions({\n  open,\n  value,\n  handleOptionsClose,\n  handleDelete,\n  handleAdd,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={value}\n        sx={{\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          '&.Mui-selected': { color: 'white' },\n        }}\n      >\n        <MBNA\n          label=\"Delete\"\n          icon={<DeleteIcon />}\n          handleChange={handleDelete}\n        />\n        <MBNA\n          label=\"Add\"\n          icon={<AddPhotoAlternateIcon />}\n          handleChange={handleAdd}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nImageOptions.propTypes = {\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect, useRef } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport { alpha } from '@mui/material/styles';\n\nimport MainControls from 'components/collage/MainControls';\nimport EditOptions from 'components/collage/EditOptions';\nimport ImageOptions from 'components/collage/ImageOptions';\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function MobileControls({\n  optionProps,\n  actionProps,\n  dimensionProps,\n  handleClear,\n  saveType,\n  paddingControl,\n  radiusControl,\n  colorControl,\n  textControl,\n  editControl,\n  handleEditControl,\n  editOptionsValue,\n  handleEditOptionsValue,\n}) {\n  const { options, handleColorClick, displayColorPicker } = optionProps;\n  const { onRefresh, onDelete, clearDelete } = actionProps;\n  const { footerRef, handleImageAddClick } = dimensionProps;\n\n  const [mainOpen, setMainOpen] = useState(true);\n  const [value, setValue] = useState('');\n  const [editOpen, setEditOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageValue, setImageValue] = useState('');\n  const editRef = useRef(null);\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (editRef.current && !editRef.current.contains(event.target)) {\n        handleEditControl(null);\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [editRef]);\n\n  const handleImageOptionsClose = () => {\n    setImageOpen(false);\n    setImageValue('');\n    setMainOpen(true);\n    clearDelete();\n    setValue('');\n  };\n\n  const handleEditOptionsClose = () => {\n    setEditOpen(false);\n    handleEditControl(null);\n    handleEditOptionsValue('');\n    setMainOpen(true);\n    setValue('');\n  };\n\n  const handleEditOptionsClick = (e, nV) => {\n    console.log('handle edit options click');\n    handleEditOptionsValue(nV);\n    if (nV === 'padding') {\n      handleEditControl(paddingControl);\n    } else if (nV === 'border radius') {\n      handleEditControl(radiusControl);\n    } else if (nV === 'color') {\n      handleColorClick();\n    } else if (nV === 'text') {\n      console.log(nV);\n      handleEditControl(textControl);\n    }\n  };\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'padding') {\n      handleEditControl(paddingControl);\n    }\n  }, [options.padding, editOpen]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'border radius') {\n      handleEditControl(radiusControl);\n    }\n  }, [options.borderRadius, editOpen]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'color' && !!displayColorPicker) {\n      handleEditControl(colorControl);\n    }\n  }, [options.color, editOpen, displayColorPicker]);\n\n  useEffect(() => {\n    console.log('text control useEffect');\n    if (editOpen && editOptionsValue === 'text') {\n      handleEditControl(textControl);\n    }\n  }, [options.text, editOpen, options.topText]);\n\n  const handleImageClose = () => {\n    setImageValue('');\n    setImageOpen(false);\n    setMainOpen(true);\n  };\n\n  const handleChange = (event, newValue) => {\n    clearDelete();\n    handleImageClose();\n    handleEditOptionsClose();\n    setValue(newValue);\n    if (newValue === 'rearrange') {\n      onRefresh();\n    } else if (newValue === 'photo') {\n      setMainOpen(false);\n      setImageOpen(true);\n    } else if (newValue === 'edit') {\n      setMainOpen(false);\n      setEditOpen(true);\n    } else if (newValue === 'clear') {\n      setClearOpen(true);\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  const handleImageAdd = () => {\n    clearDelete();\n    handleImageAddClick();\n  };\n\n  const handleClearSubmit = () => {\n    handleClear();\n    setClearOpen(false);\n    setValue('');\n  };\n\n  const handleClearCancel = () => {\n    setClearOpen(false);\n    setValue('');\n  };\n\n  console.log('rerendering', editControl);\n  return (\n    <Paper\n      ref={footerRef}\n      sx={{\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        mt: 1,\n        backgroundColor: 'black',\n        borderRadius: 0,\n      }}\n      elevation={4}\n    >\n      <ClearCollageDialog\n        open={clearOpen}\n        onSubmit={handleClearSubmit}\n        onCancel={handleClearCancel}\n        saveType={saveType}\n      />\n      {editControl !== null ? (\n        <Box\n          ref={editRef}\n          sx={{\n            backgroundColor: alpha('#fff', 0.15),\n            p: 1,\n          }}\n        >\n          {editControl}\n        </Box>\n      ) : null}\n      <ImageOptions\n        open={imageOpen}\n        value={imageValue}\n        handleDelete={onDelete}\n        handleAdd={handleImageAdd}\n        handleOptionsClose={handleImageOptionsClose}\n      />\n      <EditOptions\n        color={options.color}\n        editOptionsValue={editOptionsValue}\n        open={editOpen}\n        handleOptionsClose={handleEditOptionsClose}\n        handleEditOptionsClick={handleEditOptionsClick}\n      />\n      {mainOpen ? (\n        <MainControls\n          value={value}\n          handleChange={handleChange}\n          saveType={saveType}\n        />\n      ) : null}\n    </Paper>\n  );\n}\n\nMobileControls.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n  }).isRequired,\n  actionProps: PropTypes.shape({\n    onRefresh: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    clearDelete: PropTypes.func.isRequired,\n  }).isRequired,\n  handleClear: PropTypes.func.isRequired,\n  dimensionProps: PropTypes.shape({\n    handleImageAddClick: PropTypes.func.isRequired,\n    footerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n  paddingControl: PropTypes.node.isRequired,\n  radiusControl: PropTypes.node.isRequired,\n  colorControl: PropTypes.node.isRequired,\n  textControl: PropTypes.node.isRequired,\n  editControl: PropTypes.node.isRequired,\n  handleEditControl: PropTypes.func.isRequired,\n  editOptionsValue: PropTypes.node.isRequired,\n  handleEditOptionsValue: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n// import { useState } from 'react';\n// import InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\n\nexport default function CollageTypeMenu({\n  collageType,\n  width,\n  sizes,\n  handleTypeChange,\n}) {\n  const belowsm = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n  // const [collageType, setCollageType] = useState('A4');\n  const handleChange = (event) => {\n    const ct = event.target.value;\n    handleTypeChange(ct);\n    // setCollageType(ct);\n  };\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{\n        width: belowsm ? '100%' : width,\n        textAlign: 'middle',\n      }}\n    >\n      <Typography\n        sx={{\n          color: 'form.input',\n          fontSize: '0.87rem',\n          fontWeight: 'bold',\n        }}\n      >\n        Collage Type:{' '}\n      </Typography>\n      <FormControl\n        variant=\"standard\"\n        size=\"small\"\n        margin=\"none\"\n        hiddenLabel\n        sx={{ mx: 1, alignItems: 'center' }}\n      >\n        <Select\n          id=\"demo-simple-select-standard\"\n          value={collageType}\n          onChange={handleChange}\n          label=\"Age\"\n          disableUnderline\n          inputProps={{\n            sx: {\n              p: 0,\n              fontWeight: 'bold',\n              fontSize: '0.82rem',\n              color: 'primary.main',\n              pl: 1,\n            },\n          }}\n        >\n          {Object.keys(sizes).map((key) => (\n            <MenuItem\n              key={sizes[key].text}\n              value={key}\n              sx={{\n                alignItems: 'center',\n                p: 0,\n                pl: 1,\n                minHeight: '30px',\n              }}\n            >\n              {sizes[key].icon}\n              {sizes[key].text}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Stack>\n  );\n}\n\nCollageTypeMenu.propTypes = {\n  collageType: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      icon: PropTypes.node,\n    })\n  ).isRequired,\n  handleTypeChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function PaddingControl({ padding, handlePaddingChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n          mixBlendMode: 'difference',\n        }}\n      >\n        Padding\n      </Typography>\n      <Slider\n        aria-label=\"Padding\"\n        defaultValue={0}\n        value={padding}\n        valueLabelDisplay=\"auto\"\n        step={0.1}\n        min={0}\n        max={10}\n        onChange={handlePaddingChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nPaddingControl.propTypes = {\n  padding: PropTypes.number.isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function RadiusControl({ radius, handleRadiusChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n        }}\n      >\n        Corner Radius\n      </Typography>\n      <Slider\n        aria-label=\"Corner Radius\"\n        defaultValue={0}\n        value={radius}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        min={0}\n        max={40}\n        onChange={handleRadiusChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nRadiusControl.propTypes = {\n  radius: PropTypes.number.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport * as yup from 'yup';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport constants from 'static/config/collage';\nimport utils from 'utils';\n\nexport default function TextControl({\n  text,\n  handleTextChange,\n  topText,\n  handlePositionChange,\n  handleTextSubmit,\n  textError,\n  handleTextError,\n}) {\n  const textSchema = yup\n    .object({\n      text: yup\n        .string()\n        .max(\n          constants.maxColllageTextLength,\n          `Max allowed length is ${constants.maxColllageTextLength}`\n        ),\n    })\n    .required();\n\n  const isValid = async () => {\n    const textValid = await utils.isFieldValid(\n      'text',\n      text,\n      handleTextError,\n      textSchema\n    );\n    return textValid;\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      handleTextSubmit(e);\n    }\n  };\n\n  useEffect(() => isValid(), [text]);\n\n  return (\n    <Stack\n      sx={{\n        backgroundColor: 'transparent',\n      }}\n    >\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        spacing={2}\n      >\n        <Typography\n          sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n        >\n          Collage Text\n        </Typography>\n        <FormGroup row>\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === false}\n                onChange={() => handlePositionChange(false)}\n                sx={{ color: 'white', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Bottom\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold' }}\n          />\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === true}\n                onChange={() => handlePositionChange(true)}\n                sx={{ color: 'gray', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Top\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold', fontSize: '0.8rem' }}\n          />\n        </FormGroup>\n      </Stack>\n      <TextField\n        variant=\"outlined\"\n        label=\"\"\n        defaultValue={text}\n        onKeyDown={handleKeyDown}\n        size=\"small\"\n        sx={{ width: '100%', mb: 1 }}\n        onChange={handleTextChange}\n        InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n        helperText={\n          <Typography sx={{ fontSize: '0.75rem' }}>{textError}</Typography>\n        }\n        error={!!textError}\n      />\n    </Stack>\n  );\n}\n\nTextControl.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  handlePositionChange: PropTypes.func.isRequired,\n  handleTextSubmit: PropTypes.func.isRequired,\n  textError: PropTypes.string.isRequired,\n  handleTextError: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { ChromePicker } from 'react-color';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function ColorControl({\n  color,\n  displayColorPicker,\n  handleClick,\n  handleClose,\n  handleChange,\n}) {\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      spacing={2}\n      sx={{ my: 2 }}\n    >\n      <Typography\n        sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n      >\n        Background Color\n      </Typography>\n      <Box\n        component=\"div\"\n        sx={{\n          padding: '2px',\n          background: '#fff',\n          borderRadius: '5px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        }}\n        onClick={handleClick}\n      >\n        <Box\n          component=\"div\"\n          sx={{\n            width: '70px',\n            height: '30px',\n            borderRadius: '18px',\n            background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n          }}\n        />\n      </Box>\n      <ColorPicker\n        open={displayColorPicker}\n        color={color}\n        handleClose={handleClose}\n        handleChange={handleChange}\n      />\n    </Stack>\n  );\n}\n\nColorControl.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport function ColorPicker({ open, color, handleClose, handleChange }) {\n  console.log(handleClose);\n  return open ? (\n    <>\n      <Box\n        component=\"div\"\n        sx={{\n          position: 'absolute',\n          zIndex: 3,\n          bottom: 10,\n        }}\n      >\n        <IconButton\n          sx={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            zIndex: 2,\n            backgroundColor: 'button.main',\n            p: 0,\n            transform: 'translate(0, -110%)',\n            border: '2px solid black',\n          }}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n        <ChromePicker color={color} onChange={handleChange} />\n      </Box>\n    </>\n  ) : null;\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport useBase from 'hooks/collage/base';\nimport { useNavigate } from 'react-router-dom';\nimport constants from 'static/config/collage';\nimport HandleError from 'hocs/handle-error';\nimport Dialog from '@mui/material/Dialog';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport DialogContent from '@mui/material/DialogContent';\nimport Box from '@mui/material/Box';\n\nimport Collage from 'components/collage/Collage';\nimport DownloadDialog from 'components/collage/DownloadDialog';\nimport SaveDialog from 'components/collage/SaveDialog';\nimport SaveStatusDialog from 'components/collage/SaveStatusDialog';\nimport Header from 'components/collage/Header';\nimport Loading from 'components/Loading';\nimport View from 'components/collage/View';\n\nimport DesktopActions from 'components/collage/DesktopActions';\nimport DesktopControls from 'components/collage/DesktopControls';\nimport DesktopImageOptions from 'components/collage/DesktopImageOptions';\nimport EditControl from 'components/collage/EditControl';\nimport MobileActions from 'components/collage/MobileActions';\nimport MobileControls from 'components/collage/MobileControls';\nimport CollageTypeMenu from 'components/collage/CollageType';\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport TextControl from 'components/collage/TextControl';\nimport ColorControl, { ColorPicker } from 'components/collage/ColorControl';\n\nexport default function BaseCollage({ getCollage, clearCollage, saveType }) {\n  console.log('base collage', saveType);\n  const { paperSizes } = constants;\n  const navigate = useNavigate();\n  const [details, setDetails] = useState({});\n  const [status, setStatus] = useState('fetching');\n  const [commonOpen, setCommonOpen] = useState(false);\n  const [commonMessage, setCommonMessage] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [textError, setTextError] = useState('');\n  const errors = [nameError, textError].filter((el) => el !== '');\n\n  const openCommonDialog = (message) => {\n    console.log('opening common dialog with message', message);\n    if (message !== '') {\n      setCommonMessage(message);\n      setCommonOpen(true);\n    }\n  };\n\n  const closeCommonDialog = () => {\n    console.log('closing common dialog', commonMessage);\n    setCommonOpen(false);\n    setCommonMessage('');\n  };\n  console.log('details', details);\n\n  const [\n    collageType,\n    getDetails,\n    collageName,\n    ,\n    collageID,\n    dimensionProps,\n    optionProps,\n    actionProps,\n    imageProps,\n    treeProps,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n    handleCollageTypeChange,\n    handleNameChange,\n  ] = useBase(details);\n\n  const {\n    options,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClose,\n    handleColorClick,\n    handleColorChange,\n    handleTextChange,\n    handlePositionChange,\n    displayColorPicker,\n    editControl,\n    setEditControl,\n    editOptionsValue,\n    setEditOptionsValue,\n    handleTextSubmit,\n  } = optionProps;\n\n  useEffect(async () => {\n    if (Object.keys(details).length === 0) {\n      console.log('savetype', saveType, Object.keys(details).length);\n      if (saveType === 'existing') {\n        const collageDetails = await getCollage(\n          imageProps.setImageCount,\n          imageProps.incrementNewImageCount\n        );\n        setDetails(collageDetails);\n      }\n      console.log('status calculation fetch end', imageProps.imgCount);\n      setStatus('fetch end');\n    }\n  }, []);\n\n  console.log(\n    'base collage',\n    details,\n    imageProps.imgCount,\n    imageProps.loaded,\n    imageProps.images,\n    imageProps.newImagesLoaded,\n    collageName,\n    collageID\n  );\n\n  useEffect(() => {\n    let st = status;\n    // if (st === 'fetching') return;\n    console.log(\n      'status calculation vars',\n      saveType,\n      st,\n      imageProps.imgCount,\n      Object.keys(details).length\n    );\n    if (st === 'fetching' && saveType === 'new') st = 'empty';\n    if (imageProps.imgCount === 0 && st === 'ready') {\n      st = 'empty';\n    }\n    if (\n      imageProps.imgCount === 0 &&\n      Object.keys(details).length === 0 &&\n      st === 'fetch end'\n    ) {\n      console.log('status calculation setting emmmpty');\n      st = 'empty';\n    }\n    if (\n      imageProps.images.length > 0 &&\n      imageProps.images.length === imageProps.imgCount\n    ) {\n      st = 'preparing';\n    }\n    if (imageProps.images.length < imageProps.imgCount) {\n      st = 'loading';\n    }\n    if (imageProps.loaded >= imageProps.imgCount && imageProps.imgCount > 0) {\n      st = 'ready';\n    }\n    setStatus(st);\n    console.log(\n      'status calculation',\n      imageProps.loaded,\n      imageProps.imgCount,\n      imageProps.images.length,\n      st,\n      details\n    );\n  }, [imageProps]);\n\n  const clearAll = async () => {\n    openCommonDialog('Deleting Collage');\n    setDetails({});\n    handleClear();\n    await clearCollage();\n    setStatus('fetch end');\n    closeCommonDialog();\n    if (saveType === 'existing') {\n      openCommonDialog('Navigating to collages page');\n      setTimeout(() => {\n        closeCommonDialog();\n        navigate('/collages');\n      }, 3000);\n    }\n  };\n\n  const handleSave = async (name) => {\n    console.log('in handle save', getDetails(name), imageProps.images);\n\n    actionProps.onSaveClick();\n    const res =\n      saveType === 'new' ? await newCollage(name) : await saveCollage(name);\n    console.log('save results', res, collageID);\n    if (res) {\n      setTimeout(() => {\n        if (saveType === 'new') clearAll();\n        actionProps.setSaveStart(false);\n        navigate('/collages');\n      }, 3000);\n    }\n  };\n\n  const downloadDialog = (\n    <HandleError errors={errors} handleClose={actionProps.onDownloadClose}>\n      <DownloadDialog\n        open={actionProps.open}\n        onClick={actionProps.onDownloadClick}\n        onClose={actionProps.onDownloadClose}\n        sizes={paperSizes}\n      />\n    </HandleError>\n  );\n\n  const saveDialog = (\n    <HandleError errors={errors} handleClose={actionProps.onSaveClose}>\n      <SaveDialog\n        collageName={collageName}\n        open={actionProps.saveOpen}\n        onClick={handleSave}\n        onClose={actionProps.onSaveClose}\n      />\n    </HandleError>\n  );\n\n  const saveStatusDialog = (\n    <SaveStatusDialog open={actionProps.saveStart} status={saveStatus} />\n  );\n\n  const collage = (\n    <Collage\n      dimensionProps={dimensionProps}\n      imageProps={imageProps}\n      actionProps={actionProps}\n      collageCallback={collageCallback}\n      handleRemoveImage={handleRemoveImage}\n      options={optionProps.options}\n      tree={treeProps.tree}\n    />\n  );\n\n  const paddingControl = (\n    <PaddingControl\n      padding={options.padding}\n      handlePaddingChange={handlePaddingChange}\n    />\n  );\n\n  const radiusControl = (\n    <RadiusControl\n      radius={options.borderRadius}\n      handleRadiusChange={handleRadiusChange}\n    />\n  );\n\n  const colorControl = (\n    <ColorPicker\n      open={displayColorPicker}\n      color={options.color}\n      handleChange={handleColorChange}\n      handleClose={() => {\n        console.log('handling close color control');\n        setEditControl(null);\n        handleColorClose();\n      }}\n    />\n  );\n\n  const desktopColorControl = (\n    <ColorControl\n      color={options.color}\n      displayColorPicker={displayColorPicker}\n      handleChange={handleColorChange}\n      handleClose={handleColorClose}\n      handleClick={handleColorClick}\n    />\n  );\n\n  const textControl = (\n    <TextControl\n      text={options.text}\n      handleTextChange={handleTextChange}\n      topText={options.topText}\n      handlePositionChange={handlePositionChange}\n      handleTextSubmit={handleTextSubmit}\n      textError={textError}\n      handleTextError={setTextError}\n    />\n  );\n\n  const mobileControls = (\n    <MobileControls\n      optionProps={optionProps}\n      actionProps={actionProps}\n      dimensionProps={dimensionProps}\n      handleClear={clearAll}\n      saveType={saveType}\n      paddingControl={paddingControl}\n      radiusControl={radiusControl}\n      colorControl={colorControl}\n      textControl={textControl}\n      editControl={editControl}\n      handleEditControl={setEditControl}\n      editOptionsValue={editOptionsValue}\n      handleEditOptionsValue={setEditOptionsValue}\n    />\n  );\n\n  const header = (\n    <Header\n      headerRef={dimensionProps.headerRef}\n      name={collageName}\n      handleNameChange={handleNameChange}\n      nameError={nameError}\n      handleNameError={setNameError}\n    />\n  );\n\n  const desktopPhotosComp = (\n    <DesktopImageOptions\n      onDelete={actionProps.onDelete}\n      onAdd={dimensionProps.handleImageAddClick}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n\n  const desktopEditComp = (\n    <EditControl\n      paddingControl={paddingControl}\n      radiusControl={radiusControl}\n      colorControl={desktopColorControl}\n      textControl={textControl}\n    />\n  );\n\n  const desktopControls = (\n    <DesktopControls\n      innerRef={dimensionProps.footerRef}\n      onRefresh={actionProps.onRefresh}\n      photosComp={desktopPhotosComp}\n      editComp={desktopEditComp}\n      handleClear={clearAll}\n      clearDelete={actionProps.clearDelete}\n      saveType={saveType}\n    />\n  );\n\n  const isMobile = window.innerWidth < window.innerHeight;\n  const controls = isMobile ? mobileControls : desktopControls;\n\n  const onSave = async () => actionProps.handleSave();\n\n  const actionsComp = isMobile ? (\n    <MobileActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={onSave}\n    />\n  ) : (\n    <DesktopActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={onSave}\n    />\n  );\n\n  const collageTypeMenu = (\n    <CollageTypeMenu\n      collageType={collageType}\n      width={dimensionProps.width}\n      sizes={paperSizes}\n      handleTypeChange={handleCollageTypeChange}\n    />\n  );\n\n  return (\n    <Box sx={{ backgroundColor: 'gray', height: '100vh' }}>\n      <View\n        open={actionProps.open}\n        saveOpen={actionProps.saveOpen}\n        saveStatusOpen={actionProps.saveStart}\n        dimensionProps={dimensionProps}\n        imageProps={imageProps}\n        header={header}\n        actions={actionsComp}\n        downloadDialog={downloadDialog}\n        saveDialog={saveDialog}\n        saveStatusDialog={saveStatusDialog}\n        collage={collage}\n        controls={controls}\n        status={status}\n        saveType={saveType}\n        collageTypeMenu={collageTypeMenu}\n      />\n      <input\n        ref={dimensionProps.addImageRef}\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={imageProps.handleLoad}\n      />\n      {actionProps.generate ? <Loading title=\"Creating collage ...\" /> : null}\n      <Dialog open={commonOpen}>\n        <DialogContent>\n          <Stack\n            direction=\"row\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <CircularProgress />\n            <Typography variant=\"h6\">{commonMessage}</Typography>\n          </Stack>\n        </DialogContent>\n      </Dialog>\n    </Box>\n  );\n}\n\nBaseCollage.defaultProps = {\n  getCollage: () => {},\n  clearCollage: () => {},\n};\n\nBaseCollage.propTypes = {\n  getCollage: PropTypes.func,\n  clearCollage: PropTypes.func,\n  saveType: PropTypes.string.isRequired,\n};\n"],"names":["url","body","params","method","fetch","then","response","resp","console","log","newCollage","collageID","collageDetails","collage_id","helpers","process","JSON","stringify","error","saveCollage","upload","listCollages","nextToken","next_token","getThumbnail","collageId","getCollage","deleteCollage","checkOptimizeStatus","get","path","newUrl","options","credentials","headers","Headers","URLSearchParams","toString","ok","status","document","cookie","json","post","apiUrl","deleteMethod","OptionsButton","children","onClick","name","Button","id","variant","component","sx","color","borderRadius","backgroundColor","padding","defaultProps","AddPhotos","handleChange","type","hidden","multiple","accept","onChange","fontSize","Typography","fontWeight","defaultCollageName","defaultCollageType","tolerance","resizeImageWidth","lineHeight","textPadding","thumbnailHeight","maxNameLength","maxColllageTextLength","minImages","maxImages","paperSizes","A4","width","height","text","A3","A4LandScape","A3LandScape","FBCoverDesktop","icon","Facebook","fill","mr","FBCoverMobile","FBPost","WhatsappStatus","WhatsApp","InstaStory","Instagram","background","getClosest","arr","index1","index2","target","downscaleImage","image","newWidth","newHeight","fileType","canvas","createElement","getContext","drawImage","toDataURL","event","handleImageCount","handleNewImageCount","handleImageData","files","cnt","length","Array","from","map","file","Image","onload","e","naturalWidth","naturalHeight","src","title","Date","now","imageDetail","aspectRatio","URL","createObjectURL","revokeObjectURL","getCollageDimension","maxW","maxH","a","origAR","wrapText","x","y","maxWidth","textCanvas","ctx","font","textAlign","tempX","tempY","words","split","line","testLine","lineArray","n","testWidth","measureText","letterSpacing","push","getTextHeight","scaleFactor","constants","getCut","Math","round","random","findClosest","start","end","mid","findImgPair","i","j","minMatchingCost","abs","getAspectRatio","cut","ar1","ar2","handleImageLoad","resizeImages","originalImages","handleImages","addImagesToDB","tempImages","forEach","origImage","tempImage","imgs","ind","findIndex","elem","slice","convertToRGBA","value","r","g","b","convertBase64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","result","onerror","convertBase64String","readAsD","Blob","textCanvasDraw","textArray","position","canvasWidth","textHeight","textBaseline","fillStyle","fillRect","chunk","textPart","fillText","getImageDimensions","paperWidth","paperHeight","optimizeDimensions","maxPrintWidth","maxPrintHeight","problematicNodes","ar","optimumTreeSizes","pn","newRootWidth","newRootHeight","sort","optimizeImage","time","dataURL","timeEnd","TextDisplay","Stack","alpha","top","paddingX","fontFamily","Node","this","left","right","obj","fromObject","getScore","output","concat","display","copyNode","copy","newImages","replaceImages","rest","removeImageData","imageData","find","addImageData","delImg","handleRemoveImage","yOffset","xOffset","handleCollageImageLoad","newX","newY","Box","alt","onLoad","Tooltip","IconButton","size","bgcolor","Delete","DOMDisplay","RenderImage","tempCanvas","tempCtx","floor","log2","radius","clipwidth","clipheight","save","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","canvasElement","CanvasDisplay","newImg","ResizeImage","ImageStyling","clearRect","images","tar","imageCount","targetAspectRatioArr","closestIndex","restImages","targetAspectRatio","leftIndex","rightIndex","filter","item","index","includes","first","second","generate","th","adjustments","adjust","parentWidth","parentHeight","parentX","parentY","parentCut","nodeType","addSize","validateAddSize","lV","lPN","rV","rPN","valid","BinaryTree","undefined","root","tempTree","canvasHeight","topText","lA","score","min","trys","bestAdjust","bestAspectRatio","tolerableDifference","ajstCnt","diff","copyTree","findBestAdjustTree","imageWidth","imageHeight","sortedImages","collageArray","imgTree","generateCollageTree","aspR","bAR","toFixed","maxScore","maxElem","element","generateScore","useBase","initialValue","useState","details","setDetails","collageName","setCollageName","collageType","setCollageType","uploadedImages","setUploadedImages","dimensions","headerRef","useRef","actionsRef","footerRef","addImageRef","setHeight","setImageHeight","setImageWidth","setWidth","maxHeight","setMaxHeight","setMaxWidth","setTextHeight","setDimensions","isMobile","window","innerWidth","innerHeight","headerHeight","current","offsetHeight","otherHeight","actionsWidth","offsetWidth","footerWidth","useEffect","addEventListener","removeEventListener","handleImageAddClick","click","useDimensions","optionsInitValue","setOptions","displayColorPicker","setDisplayColorPicker","editControl","setEditControl","editOptionsValue","setEditOptionsValue","handleTextChange","opts","clear","handlePaddingChange","handleRadiusChange","handleColorClick","dcp","handleColorClose","handleColorChange","clr","rgb","handlePositionChange","handleTextSubmit","useOptions","actions","open","setOpen","saveOpen","setSaveOpen","saveStart","setSaveStart","refresh","setRefresh","setGenerate","removeImage","setRemoveImage","printOptions","setPrintOptions","clearDelete","handleDownload","handleGenerateCallback","onDelete","ri","onDownloadClick","w","h","onDownloadClose","onRefresh","onSaveClose","onSaveClick","handleSave","useActions","newImgCount","setNewImageCount","newImagesLoaded","setNewImagesLoaded","imgCount","setImageCount","loaded","setLoaded","setImages","handleLoad","remove","removeIndex","newImagesArr","getImageData","imageArr","img","incrementNewImageCount","useImages","treeState","loadingCallback","tree","setTree","newTree","Object","keys","reAdjust","imagesArr","treeUtils","bestAspectRatioTree","addOptions","useTree","thumbnail","setThumbnail","finalizing","saveStatus","setSaveStatus","useLayoutEffect","collage_type","updateStatus","key","st","imagesText","updateImagesStatus","handleClear","allSettled","clearPromises","newAspectRatioTree","generateThumbnail","thumbnailWidth","thumbnailCanvas","thumbnailTree","thumbnailDetails","uploadCollageDetails","dets","created_at","last_updated_at","collageapi","uploadCollageImages","imageURLS","imagePromises","thumbnailKey","thumbnailPromise","toBlob","blob","Img","uploadPromises","uploadStatus","tH","getDetails","imgTitle","ct","newName","HandleError","errors","handleClose","Dialog","fullWidth","DialogTitle","DialogContent","dividers","alignItems","justifyContent","DialogContentText","pr","List","px","err","ListItem","listStyleType","DialogActions","Collage","dimensionProps","imageProps","actionProps","collageCallback","collage","setCollage","isEmpty","t","createCollage","collageElem","pw","ph","canvasTree","getCanvasTree","imgPW","imgPH","generateCollage","ctree","getCanvas","setTimeout","pW","pH","link","download","href","probNodes","newPW","newPH","newCanvasTree","newValid","newProbNodes","DownloadDialog","onClose","sizes","setValue","FormControl","InputLabel","Select","labelId","defaultValue","label","MenuItem","disabled","SaveDialog","setName","nameError","TextField","mb","InputProps","helperText","StatusIndicator","CircularProgress","Pending","CheckCircleOutline","Close","Status","pending","done","running","failed","direction","OverAllStatus","counter","spacing","p","SaveStatusDialog","overAllStatus","setCounter","timerId","clearTimeout","statusArr","values","val","HeaderNameSection","handleNameError","editable","setEditable","nameSchema","yup","max","required","isValid","utils","nameValid","handleBlur","autoFocus","onBlur","onKeyDown","keyCode","shiftKey","InputLabelProps","focused","transform","cursor","Header","handleNameChange","belowmd","useMediaQuery","theme","breakpoints","down","Paper","ref","elevation","postion","Link","underline","ArrowBack","EmptyCollage","loadComponent","backgroundImage","collageBack","backgroundSize","objectFit","View","content","saveStatusOpen","header","downloadDialog","saveDialog","saveStatusDialog","controls","collageTypeMenu","showControls","Loading","justifySelf","DBNA","BottomNavigationAction","showLabel","py","outline","DesktopDrawer","anchor","innerRef","Drawer","PaperProps","border","ControlsDivider","Divider","my","DesktopActions","onDownload","onSave","newValue","Save","Download","Print","ClearCollageDialog","onSubmit","onCancel","saveType","pb","noWrap","DesktopControls","photosComp","editComp","imageOptionsOpen","setImageOptionsOpen","editOptionsOpen","setEditOptionsOpen","clearOpen","setClearOpen","editRef","closeAll","handleClickOutside","contains","handleClearClose","AutoAwesomeMosaic","Photo","ioo","io","Edit","Refresh","DesktopImageOptions","onAdd","AddPhotoAlternate","EditControl","paddingControl","radiusControl","colorControl","textControl","boxShadow","MBNA","toLowerCase","MobileActions","BottomNavigation","showLabels","MainControls","EditOptions","handleOptionsClose","handleEditOptionsClick","borderTop","Padding","CropFree","Square","Title","ImageOptions","handleDelete","handleAdd","MobileControls","optionProps","handleEditControl","handleEditOptionsValue","mainOpen","setMainOpen","editOpen","setEditOpen","imageOpen","setImageOpen","imageValue","setImageValue","handleEditOptionsClose","bottom","mt","nV","CollageTypeMenu","handleTypeChange","belowsm","margin","hiddenLabel","mx","disableUnderline","inputProps","pl","minHeight","PaddingControl","mixBlendMode","Slider","valueLabelDisplay","step","RadiusControl","TextControl","textError","handleTextError","textSchema","textValid","FormGroup","row","FormControlLabel","disableTypography","control","Checkbox","checked","ColorControl","handleClick","ColorPicker","zIndex","BaseCollage","clearCollage","navigate","useNavigate","setStatus","commonOpen","setCommonOpen","commonMessage","setCommonMessage","setNameError","setTextError","el","openCommonDialog","message","closeCommonDialog","treeProps","handleCollageTypeChange","clearAll","res","desktopColorControl","mobileControls","desktopPhotosComp","desktopEditComp","desktopControls","actionsComp"],"sourceRoot":""}