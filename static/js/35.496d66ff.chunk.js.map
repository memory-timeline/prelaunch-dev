{"version":3,"file":"static/js/35.496d66ff.chunk.js","mappings":"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","sources":["components/AddCaptionButton.jsx","components/ImageOptionsDialog.jsx","components/OptionsButton.jsx","components/RemoveSelectedImageButton.jsx","components/ThumbnailChooser.jsx","hooks/date.jsx","hooks/story.jsx","hooks/title.jsx","components/ActionIcon.jsx","components/confirmation.jsx","pages/memory/Delete.jsx","components/UpdateMemoryIcon.jsx","hooks/email.jsx","components/EmailInput.jsx","components/NewShares.jsx","components/StatusTable.jsx","components/CheckboxCell.jsx","components/PersonalDetailsCell.jsx","components/ExpandStatusIconCell.jsx","components/ShareRow.jsx","components/SelectAllCheckboxCell.jsx","components/TableHeader.jsx","components/ExistingShares.jsx","components/CloseButton.jsx","pages/memory/Share.jsx","pages/memory/Actions.jsx","pages/memory/ContentStructure.jsx","pages/memory/BackButton.jsx","components/RemovePhotoIcon.jsx","components/MemoryImageSlide.jsx","pages/memory/MemoryCarousel.jsx","pages/memory/MemoryDate.jsx","pages/memory/MemoryImages.jsx","pages/memory/MemoryStory.jsx","pages/memory/MemoryTitle.jsx","pages/memory/MemoryContent.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport ShortTextIcon from '@mui/icons-material/ShortText';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport { alpha } from '@mui/material/styles';\n\nexport default function AddCaptionButton({ handleClick, caption }) {\n  return (\n    <IconButton\n      size=\"small\"\n      label=\"T\"\n      sx={{\n        color: alpha('#000', 0.7),\n        bgcolor: alpha('#fff', 0.7),\n        position: 'absolute',\n        top: 5,\n        left: 2,\n        borderRadius: '0 5px 5px 0',\n        py: 0,\n      }}\n      onClick={handleClick}\n    >\n      <ShortTextIcon />\n      {(caption.length > 0) ? <Badge color=\"error\" variant=\"dot\" sx={{ pl: 1 }} /> : null}\n    </IconButton>\n  );\n}\n\nAddCaptionButton.defaultProps = {\n  caption: '',\n};\n\nAddCaptionButton.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  caption: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Box from '@mui/material/Box';\nimport { alpha } from '@mui/material/styles';\nimport * as yup from 'yup';\nimport utils from 'utils';\n\nexport default function ImageOptionsDialog({\n  index, imageCaption, src, open, handleClose, handleSubmit,\n}) {\n  console.log(index);\n  const [caption, setCaption] = useState(imageCaption);\n  const [captionError, setCaptionError] = useState('');\n\n  useEffect(() => setCaption(imageCaption), [imageCaption]);\n\n  const onCaptionChange = (event) => {\n    setCaption(event.target.value);\n  };\n\n  const captionSchema = yup.object({\n    caption: yup.string().max(40, 'Maximum length of image caption is 40'),\n  }).required();\n\n  useEffect(() => {\n    if (caption.length > 0) {\n      utils.isFieldValid('caption', caption, setCaptionError, captionSchema);\n    }\n  }, [caption]);\n\n  const isValid = async () => {\n    const captionValid = await utils.isFieldValid('caption', caption, setCaptionError, captionSchema);\n    return captionValid;\n  };\n\n  const submitForm = async () => {\n    const valid = await isValid();\n    if (valid) {\n      handleSubmit(index, caption);\n      handleClose();\n    }\n  };\n\n  return (\n    <Dialog open={open} sx={{ border: '2px solid white', backgroundColor: alpha('#000', 0.8) }}>\n      <DialogTitle>\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n        Add Image Caption\n      </DialogTitle>\n      <DialogContent dividers>\n        <Box\n          component=\"img\"\n          alt=\"test\"\n          src={src}\n          width=\"100%\"\n          sx={{ pb: 2, borderRadius: 3, height: '50vh' }}\n        />\n        <TextField\n          variant=\"outlined\"\n          label=\"Image Caption\"\n          defaultValue={caption}\n          onChange={onCaptionChange}\n          sx={{ width: '100%' }}\n          helperText={captionError || 'E.g. Birthday Cake Cutting'}\n          error={!!captionError}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" onClick={submitForm}>OK</Button>\n        <Button variant=\"text\" onClick={handleClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nImageOptionsDialog.propTypes = {\n  index: PropTypes.number.isRequired,\n  imageCaption: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\n\nexport default function OptionsButton({\n  children, onClick, name,\n}) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: 'muted.main',\n        borderRadius: 15,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: 'muted.main',\n          backgroundColor: 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  //  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\n//  import CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Tooltip from '@mui/material/Tooltip';\nimport { alpha } from '@mui/material/styles';\n\nexport default function RemoveSelectedImageButton({ index, handleRemoveImage }) {\n  return (\n    <Tooltip title=\"Delete\">\n      <IconButton\n        size=\"medium\"\n        sx={{\n          color: alpha('#000', 0.7),\n          bgcolor: alpha('#fff', 0.7),\n          position: 'absolute',\n          top: 5,\n          right: 2,\n          padding: 0,\n          px: '4px',\n          borderRadius: '5px 0 0 5px',\n        }}\n        onClick={() => handleRemoveImage(index)}\n      >\n        <DeleteIcon size=\"medium\" />\n      </IconButton>\n    </Tooltip>\n  );\n}\n\nRemoveSelectedImageButton.propTypes = {\n  index: PropTypes.number.isRequired,\n  handleRemoveImage: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Radio from '@mui/material/Radio';\nimport { alpha } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\n\nexport default function ThumbnailChooser({ index, thumbnail, handleThumbnailChange }) {\n  return (\n    <FormControlLabel\n      control={<Radio sx={{ padding: 0 }} />}\n      label={(thumbnail === index) ? <Typography sx={{ fontWeight: 600, overflow: 'hidden', fontSize: '0.8rem' }}>Thumbnail</Typography> : ''}\n      checked={thumbnail === index}\n      onChange={() => handleThumbnailChange(index)}\n      sx={{\n        pr: 1,\n        position: 'absolute',\n        bgcolor: alpha('#fff', 0.7),\n        color: alpha('#000', 0.7),\n        borderRadius: '0px 5px 5px 0px',\n        borderColor: 'secondary.main',\n        borderLeft: 0,\n        bottom: 5,\n        left: 2,\n        margin: 0,\n      }}\n    />\n  );\n}\n\nThumbnailChooser.propTypes = {\n  index: PropTypes.number.isRequired,\n  thumbnail: PropTypes.number.isRequired,\n  handleThumbnailChange: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\n\nexport default function useDate(initialDate) {\n  const [date, setDate] = useState(initialDate);\n  const handleDateChange = (e) => {\n    const newDate = new Date(e);\n    if (e) {\n      const formattedDate = newDate.toLocaleDateString('en-in', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric',\n      });\n      setDate(formattedDate);\n    } else {\n      setDate(null);\n    }\n  };\n  return [date, setDate, handleDateChange];\n}\n","import { useState } from 'react';\n\nexport default function useStory(initialState) {\n  const [story, setStory] = useState(initialState);\n  const handleStoryChange = (event) => setStory(event.target.value);\n  return [story, setStory, handleStoryChange];\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useTitle(initialValue) {\n  const [title, setTitle] = useState(initialValue);\n  useEffect(() => setTitle(initialValue), [initialValue]);\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  return [title, setTitle, handleTitleChange];\n}\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\n\nexport default function ActionIcon({ icon, label }) {\n  return (\n    <Box sx={{ alignItems: 'center' }}>\n      <IconButton\n        aria-label=\"delete\"\n        sx={{\n          bgcolor: 'form.input',\n        }}\n      >\n        {icon}\n      </IconButton>\n      {label}\n    </Box>\n  );\n}\n\nActionIcon.propTypes = {\n  icon: PropTypes.node.isRequired,\n  label: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@mui/material/Dialog';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function Confirm({\n  confirm, handleCallback, handleCloseCallback, title, message,\n}) {\n  const [open, setOpen] = useState(confirm);\n  useEffect(() => setOpen(confirm), [confirm]);\n\n  const handleClose = () => {\n    setOpen(false);\n    handleCloseCallback();\n  };\n\n  const handleSubmit = () => {\n    handleClose();\n    handleCallback();\n  };\n\n  return (\n    <Dialog open={open} sx={{ backgroundColor: 'faded.black' }}>\n      <DialogTitle>{title}</DialogTitle>\n      <Box sx={{ p: 2 }}>\n        <Typography sx={{ pb: 2 }}>{message}</Typography>\n        <Stack spacing={2} direction=\"row\">\n          <Button variant=\"contained\" onClick={handleClose}>Cancel</Button>\n          <Button variant=\"outlined\" onClick={handleSubmit}>OK</Button>\n        </Stack>\n      </Box>\n    </Dialog>\n  );\n}\n\nConfirm.propTypes = {\n  confirm: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  handleCallback: PropTypes.func.isRequired,\n  handleCloseCallback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ActionIcon from 'components/ActionIcon';\nimport Confirm from 'components/confirmation';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport api from '../Api';\n\nexport function DeleteMemoryIcon() {\n  return (\n    <ActionIcon icon={<DeleteIcon />} label=\"Delete\" />\n  );\n}\n\nexport function ConfirmDelete({ callback, open, closeCallback }) {\n  const DeleteTitle = 'Delete Memory';\n  const DeleteConfirmMessage = 'Do you want to delete this memory?';\n  return (\n    <Confirm\n      confirm={open}\n      title={DeleteTitle}\n      handleCallback={callback}\n      handleCloseCallback={() => closeCallback()}\n      message={DeleteConfirmMessage}\n    />\n  );\n}\n\nexport default async function deleteMemory(bucket, authURL, memoryID, memoryDeleteCallback) {\n  try {\n    const deleteResults = await api.deleteMemory(bucket, authURL, memoryID);\n    memoryDeleteCallback(deleteResults);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nConfirmDelete.propTypes = {\n  open: PropTypes.bool.isRequired,\n  callback: PropTypes.func.isRequired,\n  closeCallback: PropTypes.func.isRequired,\n};\n","import ActionIcon from 'components/ActionIcon';\nimport EditIcon from '@mui/icons-material/Edit';\n\nexport default function UpdateMemoryIcon() {\n  return (\n    <ActionIcon icon={<EditIcon />} label=\"Edit\" />\n  );\n}\n","import { useState } from 'react';\nimport commonUtils from 'utils';\n\nfunction ownEmail() {\n  const cookieValue = commonUtils.getUserInfo();\n  return cookieValue.email;\n}\n\nexport default function useEmail() {\n  const [items, setItems] = useState([]);\n  const [value, setValue] = useState('');\n  const [error, setError] = useState(null);\n\n  const isInList = (email) => items.includes(email);\n\n  // eslint-disable-next-line\n  const isEmail = (email) => /[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/.test(email);\n\n  const isValid = (email) => {\n    let err = null;\n\n    if (isInList(email)) {\n      err = `${email} has already been added.`;\n    }\n\n    if (!isEmail(email)) {\n      err = `${email} is not a valid email address.`;\n    }\n\n    if (email === ownEmail()) {\n      err = 'Cannot share memory with owner email.';\n    }\n\n    if (err) {\n      setError(err);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleKeyDown = (evt) => {\n    if (['Enter', 'Tab', ','].includes(evt.key)) {\n      evt.preventDefault();\n\n      const val = value.trim();\n\n      if (val && isValid(val)) {\n        setItems([...items, val]);\n        setValue('');\n      }\n    }\n  };\n\n  const handleChange = (evt) => {\n    setValue(evt.target.value.trim());\n    setError(null);\n  };\n\n  const handleDelete = (item) => {\n    setItems((prevItems) => prevItems.filter((i) => i !== item));\n  };\n\n  const handlePaste = (evt) => {\n    evt.preventDefault();\n\n    const paste = evt.clipboardData.getData('text');\n    // eslint-disable-next-line\n    var emails = paste.match(/[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g);\n\n    if (emails) {\n      const toBeAdded = emails.filter((email) => !isInList(email.trim()));\n      setItems([...items, ...toBeAdded]);\n    }\n  };\n\n  return [items, value, error, setItems, handleKeyDown, handleChange, handleDelete, handlePaste];\n}\n","import PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Grid from '@mui/material/Grid';\n\nexport default function EmailInput({\n  items,\n  value,\n  error,\n  handleKeyDown,\n  handleChange,\n  handleDelete,\n  handlePaste,\n}) {\n  return (\n    <Stack direction=\"column\" spacing={2} sx={{ mb: 3 }}>\n      <TextField\n        id=\"outlined-error\"\n        value={value}\n        label=\"Email List\"\n        placeholder=\"Type or paste email addresses and press `Enter`...\"\n        onKeyDown={handleKeyDown}\n        onChange={handleChange}\n        onPaste={handlePaste}\n        helperText={\n          error || 'Type or paste email addresses and press `Enter`...'\n        }\n        error={!!error}\n        sx={{ my: 1 }}\n      />\n      <Grid container spacing={2}>\n        {items.map((item) => (\n          <Chip\n            key={item}\n            label={item}\n            variant=\"outlined\"\n            onDelete={() => handleDelete(item)}\n            sx={{ margin: 0.5 }}\n            size=\"small\"\n          />\n        ))}\n      </Grid>\n    </Stack>\n  );\n}\n\nEmailInput.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  value: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  handleKeyDown: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handlePaste: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport EmailInput from 'components/EmailInput';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nexport default function NewShares({\n  items,\n  value,\n  error,\n  handleKeyDown,\n  handleChange,\n  handleDelete,\n  handlePaste,\n  handleClear,\n  handleSubmit,\n  sharing,\n}) {\n  return (\n    <Box sx={{ p: 2 }}>\n      <EmailInput\n        items={items}\n        value={value}\n        error={error}\n        handleKeyDown={handleKeyDown}\n        handleChange={handleChange}\n        handleDelete={handleDelete}\n        handlePaste={handlePaste}\n      />\n      {\n        sharing === true ? (\n          <Typography color=\"primary\" variant=\"h6\" sx={{ pb: 2 }}>\n            Sharing Memory. Please wait...\n          </Typography>\n        ) : null\n      }\n      <Stack spacing={2} direction=\"row\">\n        <Button variant=\"outlined\" onClick={handleClear}>\n          Clear\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleSubmit}\n          disabled={items.length === 0 || sharing === true}\n        >\n          Share\n        </Button>\n      </Stack>\n    </Box>\n  );\n}\n\nNewShares.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  value: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  handleKeyDown: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handlePaste: PropTypes.func.isRequired,\n  handleClear: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  sharing: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Chip from '@mui/material/Chip';\nimport TableHead from '@mui/material/TableHead';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\n\nexport default function StatusTable({ invitation, accept }) {\n  const colorMap = {\n    pending: 'warning',\n    sent: 'success',\n    failed: 'error',\n    rejected: 'error',\n    accepted: 'success',\n  };\n  return (\n    <Table size=\"small\" aria-label=\"statuses\">\n      <TableHead>\n        <TableRow>\n          <TableCell align=\"left\">Invitation</TableCell>\n          <TableCell align=\"left\">Accepted</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        <TableRow key={new Date()}>\n          <TableCell align=\"left\">\n            <Chip color={colorMap[invitation]} size=\"small\" label={invitation} />\n          </TableCell>\n          <TableCell align=\"left\">\n            <Chip color={colorMap[accept]} size=\"small\" label={accept} />\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  );\n}\n\nStatusTable.propTypes = {\n  invitation: PropTypes.string.isRequired,\n  accept: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport TableCell from '@mui/material/TableCell';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function CheckboxCell({ selected, handleChange }) {\n  const [checked, setChecked] = useState(selected);\n\n  useEffect(() => {\n    setChecked(selected);\n  }, [selected]);\n\n  return (\n    <TableCell padding=\"checkbox\" key=\"checkbox\">\n      <Checkbox color=\"primary\" checked={checked} onChange={handleChange} />\n    </TableCell>\n  );\n}\n\nCheckboxCell.propTypes = {\n  selected: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TableCell from '@mui/material/TableCell';\nimport Chip from '@mui/material/Chip';\nimport Avatar from '@mui/material/Avatar';\n\nexport default function PersonalDetailsCell({ email, picture, name }) {\n  return (\n    <TableCell component=\"th\" scope=\"row\" sx={{ p: 1 }} key=\"personal-details\">\n      <Chip\n        avatar={(\n          <Avatar\n            alt={email}\n            src={picture}\n            sx={{ referrerPolicy: 'no-referrer' }}\n          />\n        )}\n        label={name}\n        sx={{ b: 1, maxWidth: 170 }}\n        color=\"primary\"\n        variant=\"outlined\"\n      />\n    </TableCell>\n  );\n}\n\nPersonalDetailsCell.propTypes = {\n  email: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TableCell from '@mui/material/TableCell';\nimport IconButton from '@mui/material/IconButton';\nimport ExpandCircleDownIcon from '@mui/icons-material/ExpandCircleDown';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\n\nexport default function ExpandStatusIconCell({ open, handleClick }) {\n  return (\n    <TableCell\n      align=\"center\"\n      style={{ paddingBottom: 0, paddingTop: 0 }}\n      colSpan={6}\n      onClick={handleClick}\n      key=\"expand-status\"\n    >\n      <IconButton aria-label=\"expand row\" size=\"small\">\n        {!open ? <ExpandCircleDownIcon /> : <ExpandLessIcon />}\n      </IconButton>\n    </TableCell>\n  );\n}\n\nExpandStatusIconCell.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Collapse from '@mui/material/Collapse';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\n\nimport StatusTable from './StatusTable';\nimport CheckboxCell from './CheckboxCell';\nimport PersonalDetailsCell from './PersonalDetailsCell';\nimport ExpandStatusIconCell from './ExpandStatusIconCell';\n\nexport default function ShareeRow({\n  name,\n  email,\n  picture,\n  invitation,\n  accept,\n  isSelected,\n  onCheckBoxClick,\n}) {\n  const [open, setOpen] = useState(false);\n  const handleClick = () => setOpen(!open);\n\n  return (\n    <>\n      <TableRow\n        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n        key={`${{ email }}details`}\n      >\n        <CheckboxCell selected={isSelected} handleChange={onCheckBoxClick} />\n        <PersonalDetailsCell email={email} picture={picture} name={name} />\n        <ExpandStatusIconCell open={open} handleClick={handleClick} />\n      </TableRow>\n      <TableRow key={`${{ email }}status`}>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography gutterBottom component=\"div\">\n                Email:\n                {' '}\n                {email}\n              </Typography>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Status\n              </Typography>\n              <StatusTable invitation={invitation} accept={accept} />\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\n\nShareeRow.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  invitation: PropTypes.string.isRequired,\n  accept: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onCheckBoxClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TableCell from '@mui/material/TableCell';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function SelectAllCheckboxCell({ numSelected, rowCount, onSelectAllClick }) {\n  return (\n    <TableCell padding=\"checkbox\" key=\"selectAll\">\n      <Checkbox\n        color=\"primary\"\n        indeterminate={numSelected > 0 && numSelected < rowCount}\n        checked={rowCount > 0 && numSelected === rowCount}\n        onChange={onSelectAllClick}\n      />\n    </TableCell>\n  );\n}\n\nSelectAllCheckboxCell.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Button from '@mui/material/Button';\n\nimport SelectAllCheckboxCell from './SelectAllCheckboxCell';\n\nexport default function TableHeader({\n  numSelected, rowCount, onSelectAllClick, handleUnshareClick, unsharing,\n}) {\n  return (\n    <TableHead>\n      <TableRow>\n        <SelectAllCheckboxCell\n          numSelected={numSelected}\n          rowCount={rowCount}\n          onSelectAllClick={onSelectAllClick}\n          key=\"selectAll\"\n        />\n        <TableCell\n          align=\"center\"\n          sx={{ fontWeight: 'bold', fontSize: '1em' }}\n          key=\"message\"\n        >\n          {numSelected === 0 ? 'Shared With' : `${numSelected} selected`}\n        </TableCell>\n        <TableCell align=\"center\" sx={{ fontWeight: 'bold' }} key=\"action\">\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            sx={{ textTransform: 'none' }}\n            disabled={(numSelected === 0) || (unsharing === true)}\n            onClick={handleUnshareClick}\n          >\n            Unshare\n          </Button>\n        </TableCell>\n      </TableRow>\n    </TableHead>\n  );\n}\n\nTableHeader.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  handleUnshareClick: PropTypes.func.isRequired,\n  unsharing: PropTypes.bool.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TablePagination from '@mui/material/TablePagination';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\n\nimport ShareeRow from './ShareRow';\nimport TableHeader from './TableHeader';\n\nexport default function ExistingShares({ shareData, onUnShare, unsharing }) {\n  const rowsPerPage = 5;\n  const [page, setPage] = useState(0);\n  const [numSelected, setNumSelected] = useState(0);\n  const [selected, setSelected] = useState(Array(shareData.length).fill(0));\n\n  useEffect(() => {\n    setSelected(Array(shareData.length).fill(0));\n    setNumSelected(0);\n  }, [shareData]);\n\n  const handleCheckBoxClick = (ind) => {\n    if (selected[ind] === 1) {\n      setNumSelected((prevSelected) => prevSelected - 1);\n    } else {\n      setNumSelected((prevSelected) => prevSelected + 1);\n    }\n\n    setSelected([\n      ...selected.slice(0, ind),\n      1 - selected[ind],\n      ...selected.slice(ind + 1),\n    ]);\n  };\n\n  const handleSelectAllClick = () => {\n    if (selected.length > 0 && numSelected < selected.length) {\n      setSelected(Array(shareData.length).fill(1));\n      setNumSelected(selected.length);\n    } else {\n      setSelected(Array(shareData.length).fill(0));\n      setNumSelected(0);\n    }\n  };\n\n  const handleUnshare = () => {\n    const unshareEmails = [];\n    for (let i = 0; i < selected.length; i += 1) {\n      if (selected[i] === 1) {\n        unshareEmails.push(shareData[i].email);\n      }\n    }\n    onUnShare(unshareEmails);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (shareData.length > 0) ? (\n    <>\n      {\n        unsharing === true ? (\n          <Typography color=\"primary\" variant=\"h6\" sx={{ p: 2 }}>UnSharing Memory. Please wait...</Typography>\n        ) : null\n      }\n      <TableContainer component={Paper}>\n        <Table stickyHeader aria-label=\"memory share table\">\n          <TableHeader\n            numSelected={numSelected}\n            rowCount={shareData.length}\n            onSelectAllClick={handleSelectAllClick}\n            handleUnshareClick={handleUnshare}\n            unsharing={unsharing}\n          />\n          <TableBody>\n            {shareData\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((sharee, index) => (\n                <ShareeRow\n                  key={sharee.email}\n                  email={sharee.email}\n                  name={sharee.name}\n                  picture={sharee.picture}\n                  invitation={sharee.status.invitation}\n                  accept={sharee.status.accept}\n                  isSelected={selected[page * rowsPerPage + index] === 1}\n                  onCheckBoxClick={() => handleCheckBoxClick(page * rowsPerPage + index)}\n                />\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[rowsPerPage]}\n        component=\"div\"\n        count={selected.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n      />\n    </>\n\n  ) : null;\n}\n\nExistingShares.propTypes = {\n  shareData: PropTypes.arrayOf(PropTypes.shape(\n    {\n      email: PropTypes.string.isRequired,\n      status: PropTypes.shape({\n        accept: PropTypes.string.isRequired,\n        invitation: PropTypes.string.isRequired,\n      }).isRequired,\n      name: PropTypes.string,\n      picture: PropTypes.string,\n    },\n  )).isRequired,\n  onUnShare: PropTypes.func.isRequired,\n  unsharing: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function CloseButton({ handleClose }) {\n  return (\n    <IconButton\n      aria-label=\"close\"\n      onClick={handleClose}\n      sx={{\n        position: 'absolute',\n        right: 8,\n        top: 8,\n        color: (theme) => theme.palette.grey[500],\n      }}\n    >\n      <CloseIcon />\n    </IconButton>\n  );\n}\n\nCloseButton.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n};\n","import ActionIcon from 'components/ActionIcon';\nimport ShareIcon from '@mui/icons-material/Share';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@mui/material/Typography';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Divider from '@mui/material/Divider';\nimport useEmail from 'hooks/email';\n\nimport NewShares from 'components/NewShares';\nimport ExistingShares from 'components/ExistingShares';\nimport CloseButton from 'components/CloseButton';\nimport api from '../Api';\n\nexport function ShareMemoryIcon() {\n  return <ActionIcon icon={<ShareIcon />} label=\"Share\" />;\n}\n\nexport function ShareComponent({\n  confirm, memoryShareCallback, memoryUnShareCallback, closeCallback, memoryID,\n}) {\n  const shareTitle = 'Share Memory';\n  const [\n    items,\n    value,\n    error,\n    setItems,\n    handleKeyDown,\n    handleChange,\n    handleDelete,\n    handlePaste,\n  ] = useEmail();\n\n  const [shareData, setShareData] = useState(null);\n  const [sharing, setSharing] = useState(false);\n  const [unsharing, setUnSharing] = useState(false);\n\n  useEffect(async () => {\n    try {\n      const data = await api.getShareData(memoryID);\n      setShareData(data);\n    } catch (err) {\n      /* eslint-disable no-console */\n      console.log(err);\n    }\n  }, []);\n\n  const [open, setOpen] = useState(confirm);\n  useEffect(() => setOpen(confirm), [confirm]);\n\n  const handleClose = () => {\n    setOpen(false);\n    closeCallback();\n  };\n\n  const handleSubmit = async () => {\n    //  callback(items);\n    try {\n      setSharing(true);\n      const shareResults = await api.shareMemory(memoryID, items);\n      memoryShareCallback(shareResults);\n      const resultsJSON = await shareResults.json();\n      setItems([]);\n      setShareData(resultsJSON);\n      setSharing(false);\n    } catch (err) {\n      /* eslint-disable no-console */\n      console.log(err);\n      setSharing(false);\n    }\n  };\n\n  const handleUnshare = async (emails) => {\n    //  callback(items);\n    try {\n      setUnSharing(true);\n      const shareResults = await api.revokeShare(memoryID, emails);\n      console.log(shareResults);\n      memoryUnShareCallback(shareResults);\n      const resultsJSON = await shareResults.json();\n      setShareData(resultsJSON);\n      setUnSharing(false);\n    } catch (err) {\n      /* eslint-disable no-console */\n      console.log(err);\n      setUnSharing(false);\n    }\n  };\n\n  const existingShares = (shareData !== null) ? (\n    <>\n      <Typography sx={{ m: 2, fontSize: '1.2rem' }}>Existing Shares</Typography>\n      <ExistingShares shareData={shareData} onUnShare={handleUnshare} unsharing={unsharing} />\n    </>\n  ) : null;\n\n  return (\n    <Dialog\n      open={open}\n      sx={{\n        '& .MuiPaper-root': { m: 0 },\n        backgroundColor: 'faded.black',\n      }}\n    >\n      <DialogTitle>\n        {shareTitle}\n        <CloseButton handleClose={handleClose} />\n      </DialogTitle>\n      <Divider />\n      <Typography sx={{ m: 2 }}>\n        New Shares (\n        {items.length}\n        {' '}\n        added)\n      </Typography>\n      <NewShares\n        items={items}\n        value={value}\n        error={error}\n        handleKeyDown={handleKeyDown}\n        handleChange={handleChange}\n        handleDelete={handleDelete}\n        handlePaste={handlePaste}\n        handleClear={() => setItems([])}\n        handleSubmit={handleSubmit}\n        sharing={sharing}\n      />\n      <Divider />\n      {existingShares}\n    </Dialog>\n  );\n}\n\nShareComponent.propTypes = {\n  confirm: PropTypes.bool.isRequired,\n  memoryShareCallback: PropTypes.func.isRequired,\n  memoryUnShareCallback: PropTypes.func.isRequired,\n  closeCallback: PropTypes.func.isRequired,\n  memoryID: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Confirm from 'components/confirmation';\nimport UpdateMemoryIcon from 'components/UpdateMemoryIcon';\nimport { ShareComponent, ShareMemoryIcon } from './Share';\nimport { ConfirmDelete, DeleteMemoryIcon } from './Delete';\n\nfunction ConfirmAction({\n  title, message, callback, open, closeCallback,\n}) {\n  const [confirm, setConfirm] = useState(open);\n  useEffect(() => setConfirm(open), [open]);\n\n  return (\n    <Confirm\n      title={title}\n      confirm={confirm}\n      handleCallback={callback}\n      handleCloseCallback={() => {\n        setConfirm(false);\n        closeCallback();\n      }}\n      message={message}\n    />\n  );\n}\n\nexport default function MemoryActions({\n  snackBar, handleDelete, memoryShareCallback, memoryUnShareCallback, handleEditClick, memoryID,\n}) {\n  let actionComponent;\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [action, setAction] = useState(null);\n\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  const closeConfirm = () => setAction(null);\n\n  if (action === 'delete') {\n    actionComponent = (\n      <ConfirmDelete open callback={handleDelete} closeCallback={closeConfirm} />\n    );\n  }\n\n  if (action === 'share') {\n    actionComponent = (\n      <ShareComponent\n        confirm\n        memoryShareCallback={memoryShareCallback}\n        memoryUnShareCallback={memoryUnShareCallback}\n        closeCallback={() => setAction(null)}\n        memoryID={memoryID}\n      />\n    );\n  }\n\n  const handleDeleteClick = () => {\n    setAction('delete');\n    handleClose();\n  };\n\n  const handleShareClick = () => {\n    setAction('share');\n    handleClose();\n  };\n\n  const handleEdit = () => {\n    handleEditClick();\n    handleClose();\n  };\n\n  return (\n    <div>\n      <MoreVertIcon onClick={handleClick} />\n      <Menu\n        id=\"memory-actions\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n        sx={{ borderRadius: '10px' }}\n      >\n        <MenuItem onClick={handleEdit}><UpdateMemoryIcon /></MenuItem>\n        <MenuItem onClick={handleShareClick}><ShareMemoryIcon /></MenuItem>\n        <MenuItem onClick={handleDeleteClick}><DeleteMemoryIcon /></MenuItem>\n      </Menu>\n      {actionComponent}\n      {snackBar}\n    </div>\n  );\n}\n\nMemoryActions.propTypes = {\n  snackBar: PropTypes.node.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  memoryShareCallback: PropTypes.func.isRequired,\n  memoryUnShareCallback: PropTypes.func.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n  memoryID: PropTypes.string.isRequired,\n};\n\nConfirmAction.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  callback: PropTypes.func.isRequired,\n  closeCallback: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Navigate } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport Box from '@mui/material/Box';\n//  import MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Divider from '@mui/material/Divider';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport SimpleSnackbar from 'components/simple_snackbar';\nimport deleteMemory from './Delete';\nimport MemoryActions from './Actions';\n\nexport default function MemoryContentStructure({\n  header, subheader, photoLayout, storyLayout, bucket, memoryID, authURL, handleEditClick, memType,\n}) {\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  const [redir, setRedir] = useState(null);\n  let className;\n  const theme = useTheme();\n  const lgdown = useMediaQuery(theme.breakpoints.down('lg'));\n  if (lgdown) className = '';\n  else className = 'vertical-scroll';\n\n  const handleSnackMessage = (msg, error) => {\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const memoryDeleteCallback = (open) => {\n    if (open.status === 'ok') {\n      handleSnackMessage('Memory deleted successfully', false);\n    } else {\n      handleSnackMessage('Error while deleting memory', true);\n    }\n    setSnack(true);\n    setRedir(true);\n  };\n\n  const memoryShareCallback = (results) => {\n    if (results.ok === true) {\n      handleSnackMessage('Memory shared successfully', false);\n    } else {\n      handleSnackMessage('Error while sharing memory', true);\n    }\n    setSnack(true);\n  };\n\n  const memoryUnShareCallback = (results) => {\n    if (results.ok === true) {\n      handleSnackMessage('Memory unshared successfully', false);\n    } else {\n      handleSnackMessage('Error while unsharing memory', true);\n    }\n    setSnack(true);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const snackBar = (\n    <SimpleSnackbar\n      snackBarOpen={snack}\n      message={snackMessage}\n      onClose={handleSnackBarClose}\n      error={snackError}\n    />\n  );\n\n  const actions = (memType === 'own') ? (\n    <MemoryActions\n      snackBar={snackBar}\n      handleDelete={() => {\n        deleteMemory(bucket, authURL, memoryID, memoryDeleteCallback);\n      }}\n      memoryID={memoryID}\n      memoryShareCallback={memoryShareCallback}\n      memoryUnShareCallback={memoryUnShareCallback}\n      handleEditClick={handleEditClick}\n    />\n  ) : null;\n\n  return (snack === false && redir === true) ? (\n    <Navigate to=\"/memories\" replace />\n  ) : (\n    <Card\n      sx={{\n        boxShadow: 0,\n        bgcolor: 'button.main',\n        p: 1,\n      }}\n    >\n      <CardHeader\n        title={header}\n        subheader={subheader}\n        action={actions}\n      />\n      <Divider />\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-start',\n          flexDirection: {\n            lg: 'row',\n            xs: 'column',\n          },\n          height: {\n            lg: '72vh',\n          },\n          my: 1,\n        }}\n      >\n        <Box\n          sx={{\n            width: {\n              lg: '70%',\n              xs: '100%',\n            },\n            overflowY: 'scroll',\n            borderRadius: 5,\n          }}\n          className={className}\n        >\n          {photoLayout}\n        </Box>\n        <Box\n          sx={{\n            width: { lg: '30%', sx: '100%' },\n            overflowY: 'scroll',\n            mt: {\n              lg: 0,\n              xs: 2,\n            },\n            p: {\n              lg: 1,\n            },\n            px: 1,\n          }}\n          className={className}\n        >\n          {storyLayout}\n        </Box>\n      </Box>\n    </Card>\n  );\n}\n\nMemoryContentStructure.propTypes = {\n  header: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  subheader: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  photoLayout: PropTypes.element.isRequired,\n  storyLayout: PropTypes.element.isRequired,\n  memoryID: PropTypes.string.isRequired,\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n  memType: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport Link from '@mui/material/Link';\nimport Button from '@mui/material/Button';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport Typography from '@mui/material/Typography';\n\nexport default function BackButton({ memType }) {\n  const to = `/memories/${memType}`;\n  if (memType !== 'preview') {\n    return (\n      <Stack\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        sx={{ backgroundColor: 'button.main', paddingX: 2, paddingY: 1 }}\n      >\n        <Link href={to} underline=\"none\">\n          <Button\n            variant=\"contained\"\n            component=\"label\"\n            sx={{\n              color: 'primary.main',\n              backgroundColor: 'button.main',\n              padding: '6px 8px',\n              boxShadow: 0,\n              '&:hover': {\n                backgroundColor: 'button.main',\n              },\n            }}\n          >\n            <ArrowBackIcon size=\"medium\" sx={{ paddingRight: 1 }} />\n            <Typography variant=\"body1\" color=\"muted.main\">Memories</Typography>\n          </Button>\n        </Link>\n      </Stack>\n    );\n  }\n  return null;\n}\n\nBackButton.propTypes = {\n  memType: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { alpha } from '@mui/material/styles';\n\nexport default function RemovePhotoIcon({ size, handleClick }) {\n  return (\n    <IconButton\n      size={size}\n      sx={{\n        color: 'black',\n        bgcolor: alpha('#fff', 0.4),\n        position: 'absolute',\n        top: 10,\n        right: 12,\n      }}\n      onClick={handleClick}\n    >\n      <CloseIcon size={size} />\n    </IconButton>\n  );\n}\n\nRemovePhotoIcon.defaultProps = {\n  size: 'small',\n};\n\nRemovePhotoIcon.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  size: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SwipeableViews from 'react-swipeable-views';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport CardHeader from '@mui/material/CardHeader';\nimport { alpha } from '@mui/material/styles';\nimport { autoPlay, virtualize, bindKeyboard } from 'react-swipeable-views-utils';\n\nconst EnhancedSwipeableViews = bindKeyboard(autoPlay(virtualize(SwipeableViews)));\n\nfunction mod(count, total) {\n  const modulus = count % total;\n  if (modulus < 0) {\n    return modulus + total;\n  }\n  return modulus;\n}\n\nexport default function MemoryImageSlide({\n  ind, images, handleNext, handleStepChange,\n}) {\n  const [activeStep, setActiveStep] = useState(ind);\n  const [loadedImages, setLoadedImages] = useState(0);\n  const [display, setDisplay] = useState(null);\n\n  useEffect(() => {\n    setActiveStep(ind);\n  }, [ind]);\n\n  useEffect(() => {\n    if (loadedImages < images.length) {\n      setDisplay('none');\n    } else {\n      setDisplay('flex');\n    }\n  }, [loadedImages]);\n\n  const handleImageLoad = () => setLoadedImages((prevLoaded) => prevLoaded + 1);\n\n  const slideRenderer = (props) => {\n    /* eslint-disable  react/prop-types */\n    const { index, key } = props;\n    const virtNum = mod(index, images.length);\n    const srcSetList = images[virtNum].images ? (\n      images[virtNum].images.map(({ src, width }) => `${src} ${width}w`)\n    ) : [];\n    const srcSet = srcSetList.join(',');\n    const style = {\n      display: 'block',\n      boxSizing: 'content-box',\n      cursor: 'pointer',\n      objectFit: 'contain',\n      height: '100vh',\n    };\n\n    return (\n      <Button\n        key={key}\n        style={style}\n        sx={{\n          display: 'flex',\n          justifyContents: 'center',\n          width: '100%',\n          bgcolor: '#1c1c1c',\n          padding: 0,\n        }}\n      >\n        {images[virtNum].caption ? (\n          <CardHeader\n            title={images[virtNum].caption}\n            sx={{\n              position: 'absolute',\n              bottom: 40,\n              left: '50%',\n              bgcolor: alpha('#1c1c1c', 0.4),\n              borderRadius: 2,\n              padding: 1,\n              color: 'button.main',\n              transform: 'translate(-50%, 0)',\n            }}\n          >\n            {images[virtNum].caption}\n          </CardHeader>\n        ) : null}\n        <Box\n          component=\"img\"\n          onLoad={handleImageLoad}\n          sx={{\n            display: { display },\n            justifyContents: 'center',\n            width: '100%',\n            bgcolor: '#1c1c1c',\n          }}\n          src={images[virtNum].src}\n          srcSet={srcSet}\n          style={style}\n          alt={images[virtNum].src}\n          key={key}\n        />\n\n      </Button>\n    );\n  };\n\n  return (\n    <EnhancedSwipeableViews\n      index={activeStep}\n      onChangeIndex={handleStepChange}\n      enableMouseEvents\n      animateTransitions\n      interval={10000}\n      onClick={handleNext}\n      style={{ backgroundColor: 'muted.main' }}\n      slideRenderer={slideRenderer}\n    />\n  );\n}\n\nMemoryImageSlide.defaultProps = {\n  ind: 0,\n};\n\nMemoryImageSlide.propTypes = {\n  ind: PropTypes.number,\n  handleNext: PropTypes.func.isRequired,\n  handleStepChange: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport CardHeader from '@mui/material/CardHeader';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport IconButton from '@mui/material/IconButton';\n\nimport RemovePhotoIcon from 'components/RemovePhotoIcon';\nimport MemoryImageSlide from 'components/MemoryImageSlide';\n\nfunction NextPic({ handleClick }) {\n  return (\n    <IconButton\n      edge=\"start\"\n      color=\"primary\"\n      aria-label=\"close\"\n      onClick={handleClick}\n      sx={{\n        position: 'absolute', top: '50%', right: 0, transform: 'translate(0%, -50%)',\n      }}\n    >\n      <KeyboardArrowRight sx={{ color: 'button.main', fontSize: '4.5rem' }} />\n    </IconButton>\n  );\n}\n\nfunction PreviousPic({ handleClick }) {\n  return (\n    <IconButton\n      edge=\"start\"\n      color=\"primary\"\n      aria-label=\"close\"\n      onClick={handleClick}\n      sx={{\n        position: 'absolute', top: '50%', left: 0, transform: 'translate(0%, -50%)',\n      }}\n    >\n      <KeyboardArrowLeft sx={{ color: 'button.main', fontSize: '4.5rem' }} />\n    </IconButton>\n  );\n}\n\nexport default function MemoryCarousel({\n  open, title, date, images, index, handleNext, handleBack, handleClose, handleChange,\n}) {\n  return (\n    <Dialog\n      open={open}\n      fullScreen\n    >\n      <MemoryImageSlide\n        images={images}\n        ind={index}\n        handleNext={handleNext}\n        handleStepChange={handleChange}\n      />\n      <CardHeader\n        title={title}\n        subheader={date}\n        sx={{\n          position: 'absolute',\n          top: 10,\n          left: 10,\n          bgcolor: 'button.main',\n          borderRadius: 3,\n          padding: 1,\n        }}\n      />\n      <PreviousPic handleClick={handleBack} />\n      <NextPic handleClick={handleNext} />\n      <RemovePhotoIcon size=\"large\" handleClick={handleClose} />\n    </Dialog>\n  );\n}\n\nNextPic.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nPreviousPic.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nMemoryCarousel.defaultProps = {\n  index: 0,\n};\n\nMemoryCarousel.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n\nimport useDate from '../../hooks/date';\n\nexport default function MemoryDate({ editable, prevDate, handleDateUpdate }) {\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n  const [date, setDate, handleDateChange] = useDate(prevDate);\n\n  useEffect(() => {\n    setEdit(editable);\n    setDate(prevDate);\n    setStartEdit(false);\n  }, [editable, prevDate]);\n\n  if (!edit && !startEdit) {\n    return <Typography>{date}</Typography>;\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'center' }} spacing={2}>\n        <Typography>{date}</Typography>\n        <EditIcon fontSize=\"medium\" onClick={() => setStartEdit(true)} />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'flex-end', justifyContent: 'flex-start', mt: 3 }} spacing={2}>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <DatePicker\n            label=\"Memory Date\"\n            value={date}\n            onChange={handleDateChange}\n            placeholder=\"dd/MM/yyyy\"\n            inputFormat=\"dd/MM/yyyy\"\n            maxDate={new Date()}\n            renderInput={(props) => (\n              <TextField\n                readOnly\n                required\n          // eslint-disable-next-line react/jsx-props-no-spreading\n                {...props}\n              />\n            )}\n          />\n        </LocalizationProvider>\n        <DoneTwoToneIcon\n          fontSize=\"medium\"\n          onClick={() => {\n            handleDateUpdate(date);\n            setStartEdit(false);\n          }}\n        />\n        <ClearIcon fontSize=\"medium\" onClick={() => { setDate(prevDate); setStartEdit(false); }} />\n      </Stack>\n    );\n  }\n}\n\nMemoryDate.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  prevDate: PropTypes.string.isRequired,\n  handleDateUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport PhotoAlbum from 'react-photo-album';\n//  import Radio from '@mui/material/Radio';\n//  import FormControlLabel from '@mui/material/FormControlLabel';\n//  import DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport Button from '@mui/material/Button';\n//  import IconButton from '@mui/material/IconButton';\n//  import CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\n//  import { alpha } from '@mui/material/styles';\nimport utils from 'utils';\nimport OptionsButton from 'components/OptionsButton';\nimport ThumbnailChooser from 'components/ThumbnailChooser';\nimport AddCaptionButton from 'components/AddCaptionButton';\nimport RemoveSelectedImageButton from 'components/RemoveSelectedImageButton';\nimport ImageOptionsDialog from 'components/ImageOptionsDialog';\n\nfunction AddPhotos({ handleChange, onClick }) {\n  return (\n    <OptionsButton onClick={onClick} name=\"add\">\n      <input type=\"file\" hidden multiple accept=\"image/*\" onChange={handleChange} />\n      <AddPhotoIcon sx={{ fontSize: '2rem' }} />\n      Add Images\n    </OptionsButton>\n  );\n}\n\nfunction MemoryPhotoAlbum({ images, handlePhotoClick, renderPhoto }) {\n  const [arrangement, setArrangement] = useState(null);\n  useEffect(() => utils.handleArrangement(images, setArrangement), [images]);\n\n  return renderPhoto ? (\n    <PhotoAlbum\n      layout={arrangement}\n      photos={images}\n      onClick={handlePhotoClick}\n      spacing={2}\n      renderPhoto={renderPhoto}\n      rowConstraints={utils.handleMaxPhotos}\n      columns={utils.handleColumns}\n    />\n  ) : (\n    <PhotoAlbum\n      layout={arrangement}\n      photos={images}\n      onClick={handlePhotoClick}\n      spacing={2}\n      rowConstraints={utils.handleMaxPhotos}\n      columns={utils.handleColumns}\n    />\n  );\n}\n\nexport default function MemoryImages({\n  editable, images, handlePhotoClick, handleThumbnailUpdate, deleteImage, addImage,\n}) {\n  const [edit, setEdit] = useState(editable);\n  const [thumbnail, setThumbnail] = useState(null);\n  const [editingIndex, setEditingIndex] = useState(null);\n  const [editOpen, setEditOpen] = useState(false);\n  const [caption, setCaption] = useState('');\n\n  useEffect(() => setEdit(editable), [editable]);\n\n  const handleThumbnailChange = (ind) => {\n    setThumbnail(ind);\n    handleThumbnailUpdate(images[ind].title);\n  };\n\n  const handleImageDelete = (ind) => deleteImage(images[ind].title);\n\n  console.log(thumbnail, handleThumbnailChange, handleImageDelete);\n\n  const renderPhotos = ({\n    layout,\n    imageProps: {\n      alt, style, title, ...restImageProps\n    },\n  }) => {\n    console.log(layout.index, title);\n    return (\n      <Button component=\"div\" sx={{ padding: '2px' }}>\n        <img\n          alt={alt}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          style={{ ...style, width: layout.width, padding: 0 }}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...restImageProps}\n        />\n        <RemoveSelectedImageButton index={layout.index} handleRemoveImage={handleImageDelete} />\n        <ThumbnailChooser\n          index={layout.index}\n          thumbnail={thumbnail}\n          handleThumbnailChange={handleThumbnailChange}\n        />\n        <AddCaptionButton\n          handleClick={() => {\n            setEditingIndex(layout.index);\n            setEditOpen(true);\n            setCaption(title);\n          }}\n          caption={title}\n        />\n      </Button>\n    );\n  };\n\n  const OptionsRow = (\n    <Stack direction=\"row\" spacing={2} justifyContent=\"space-between\" alignItems=\"center\">\n      <Typography variant=\"h6\" color=\"muted.main\">\n        Images:\n        {' '}\n        {images.length}\n      </Typography>\n      <AddPhotos handleChange={addImage} onClick={() => {}} />\n    </Stack>\n  );\n\n  return edit ? (\n    <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n      {OptionsRow}\n      <MemoryPhotoAlbum images={images} handlePhotoClick={() => {}} renderPhoto={renderPhotos} />\n      {editingIndex\n        ? (\n          <ImageOptionsDialog\n            imageCaption={caption}\n            index={editingIndex}\n            src={images[editingIndex].src}\n            open={editOpen}\n            handleClose={() => { setEditOpen(null); setEditingIndex(null); setCaption(''); }}\n            handleSubmit={() => {}}\n          />\n        ) : null}\n    </Stack>\n  ) : (\n    <MemoryPhotoAlbum images={images} handlePhotoClick={handlePhotoClick} />\n  );\n}\n\nMemoryImages.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n      title: PropTypes.string,\n    }),\n  ).isRequired,\n  handlePhotoClick: PropTypes.func.isRequired,\n  handleThumbnailUpdate: PropTypes.func.isRequired,\n  deleteImage: PropTypes.func.isRequired,\n  addImage: PropTypes.func.isRequired,\n};\n\nMemoryPhotoAlbum.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  handlePhotoClick: PropTypes.func.isRequired,\n  renderPhoto: PropTypes.func,\n};\n\nMemoryPhotoAlbum.defaultProps = {\n  renderPhoto: null,\n};\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Box from '@mui/material/Box';\nimport useStory from '../../hooks/story';\nimport './memory.css';\n\nexport default function MemoryStory({ editable, prevStory, handleStoryUpdate }) {\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n  const [story, setStory, handleStoryChange] = useStory(prevStory);\n  const storyRef = useRef();\n\n  useEffect(() => {\n    setEdit(editable);\n    setStory(prevStory);\n    setStartEdit(false);\n  }, [editable, prevStory]);\n\n  if (!edit && !startEdit) {\n    return (\n      <Typography style={{ whiteSpace: 'pre-wrap' }}>{story}</Typography>\n    );\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"column\" spacing={2}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'muted.main' }}>Edit Story</Typography>\n          <EditIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              setStartEdit(true);\n            }}\n          />\n        </Stack>\n        <Divider sx={{ width: 1 }} />\n        <Typography style={{ whiteSpace: 'pre-wrap' }}>{story}</Typography>\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"column\" spacing={2}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'muted.main' }}>Editing Story</Typography>\n          <DoneTwoToneIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              handleStoryUpdate(story);\n              setStartEdit(false);\n            }}\n          />\n          <ClearIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              setStory(prevStory);\n              setStartEdit(false);\n            }}\n          />\n        </Stack>\n        <Divider sx={{ width: 1 }} />\n        <Box\n          sx={{\n            p: 2,\n            m: 1,\n            my: 2,\n            border: 1,\n            borderColor: 'primary.main',\n            bgcolor: 'input.background',\n            minHeight: '70vh',\n            borderRadius: 5,\n            width: '90%',\n          }}\n          onClick={() => storyRef.current.focus()}\n        >\n          <TextareaAutosize\n            autoFocus\n            aria-label=\"minimum height\"\n            placeholder=\"Tell your story...\"\n            value={story}\n            onChange={handleStoryChange}\n            style={{\n              width: '100%',\n              minHeight: '184px',\n              maxHeight: '70vh',\n              boxSizing: 'border-box',\n              paddingTop: '5px',\n              border: 0,\n              overflow: 'auto',\n              outline: 'none',\n              resize: 'vertical',\n              borderRadius: 5,\n              '&:focus': {\n                border: 0,\n              },\n            }}\n            ref={storyRef}\n          />\n\n        </Box>\n      </Stack>\n    );\n  }\n}\n\nMemoryStory.propTypes = {\n  prevStory: PropTypes.string.isRequired,\n  editable: PropTypes.bool.isRequired,\n  handleStoryUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport useTitle from '../../hooks/title';\n\nexport default function MemoryTitle({ editable, text, handleTitleUpdate }) {\n  const [title, setTitle, handleTitleChange] = useTitle(text);\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n\n  useEffect(() => {\n    setEdit(editable);\n    setTitle(text);\n    setStartEdit(false);\n  }, [editable]);\n\n  if (!edit && !startEdit) {\n    return <Typography variant=\"h6\">{title}</Typography>;\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'center' }} spacing={2}>\n        <Typography variant=\"h6\">{title}</Typography>\n        <EditIcon fontSize=\"medium\" onClick={() => setStartEdit(true)} />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'flex-end', justifyContent: 'flex-start' }} spacing={2}>\n        <TextField\n          id=\"standard-basic\"\n          size=\"small\"\n          label=\"Title\"\n          onChange={handleTitleChange}\n          variant=\"standard\"\n          defaultValue={title}\n          sx={{ maxWidth: '200px' }}\n        />\n        <DoneTwoToneIcon\n          fontSize=\"medium\"\n          onClick={() => {\n            handleTitleUpdate(title);\n            setStartEdit(false);\n          }}\n        />\n        <ClearIcon fontSize=\"medium\" onClick={() => { setTitle(text); setStartEdit(false); }} />\n      </Stack>\n    );\n  }\n}\n\nMemoryTitle.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  handleTitleUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Dialog from '@mui/material/Dialog';\nimport Divider from '@mui/material/Divider';\nimport DoneIcon from '@mui/icons-material/Done';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\nimport './memory.css';\nimport SimpleSnackbar from 'components/simple_snackbar';\nimport BackButton from './BackButton';\nimport MemoryCarousel from './MemoryCarousel';\nimport MemoryContentStructure from './ContentStructure';\nimport MemoryDate from './MemoryDate';\nimport MemoryImages from './MemoryImages';\nimport MemoryStory from './MemoryStory';\nimport MemoryTitle from './MemoryTitle';\nimport api from '../Api';\n\nexport default function MemoryContent({\n  memType,\n  memTitle,\n  memDate,\n  memStory,\n  memImages,\n  bucket,\n  memoryID,\n  authURL,\n}) {\n  const [open, setOpen] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [title, setTitle] = useState(memTitle);\n  const [date, setDate] = useState(memDate);\n  const [story, setStory] = useState(memStory);\n  const [images, setImages] = useState(memImages);\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n\n  const [newImages, setNewImages] = useState([]);\n  const [newImagesCount, setNewImagesCount] = useState(null);\n  const [errorUploadImages, setErrorUploadImages] = useState([]);\n  const [addImageOpen, setAddImageOpen] = useState(false);\n  const [uploadImageProgress, setUploadImageProgress] = useState(null);\n  const [uploadImageStatus, setUploadImageStatus] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  const [httpError, setHTTPError] = useState(false);\n\n  const maxSteps = images.length;\n\n  useEffect(() => setTitle(memTitle), [memTitle]);\n  useEffect(() => setDate(memDate), [memDate]);\n  useEffect(() => setStory(memStory), [memStory]);\n  useEffect(() => setImages(memImages), [memImages]);\n\n  const handleSnackMessage = (msg, error) => {\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const handleHTTPError = (response, operation, callback) => {\n    if (response.status === 401) {\n      handleSnackMessage('You have been logged out. Please login to continue.', true);\n    } else if (response.status === 403) {\n      handleSnackMessage('You do not have permissions to do this operation.', true);\n    } else {\n      handleSnackMessage(`Unknown error occured in ${operation}`, true);\n    }\n    callback(response.status);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const httpErrorCallback = (status) => {\n    setSnack(true);\n    setHTTPError(status);\n  };\n\n  const handleResponse = (response, message, value, callback) => {\n    if (response.ok) {\n      handleSnackMessage(`${message} successful`, false);\n      setSnack(true);\n      callback(value);\n    } else {\n      handleHTTPError(response, message, httpErrorCallback);\n    }\n  };\n\n  const updateTitle = async (value) => {\n    const resp = await api.updateTitle(memoryID, value);\n    handleResponse(resp, 'title update', value, setTitle);\n  };\n\n  const updateDate = async (value) => {\n    const resp = await api.updateDate(memoryID, value);\n    handleResponse(resp, 'date update', value, setDate);\n  };\n\n  const updateStory = async (value) => {\n    const resp = await api.updateStory(memoryID, value);\n    handleResponse(resp, 'story update', value, setStory);\n  };\n\n  const UpdateThumbnail = async (value) => {\n    const resp = await api.updateThumbnail(memoryID, value);\n    handleResponse(resp, 'thumbnail update', value, () => {});\n  };\n\n  const deleteImage = async (value) => {\n    try {\n      let resp;\n      if (images.length === 1) {\n        handleSnackMessage('Atleast 1 image is needed for memory. Unable to delete', true);\n      } else {\n        resp = await api.removeImage(memoryID, value);\n        handleResponse(\n          resp,\n          'image delete',\n          value,\n          () => setImages(images.filter((item) => item.title !== value)),\n        );\n      }\n      setSnack(true);\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const addImage = async (details) => {\n    try {\n      const resp = await api.addImage(memoryID, details);\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const handleNewImages = async () => {\n    /* eslint-disable  no-await-in-loop, no-restricted-syntax */\n    for (const [index, img] of newImages.entries()) {\n      const [det, file, src] = img;\n      const putURL = await addImage(det).then((response) => {\n        if (response.ok) {\n          return response.text();\n        }\n        handleHTTPError(response, 'add image', httpErrorCallback);\n        return '';\n      });\n      const photo = {\n        key: `memories/${memoryID}/images/${det.name}`,\n        src,\n        alt: det.name,\n        title: det.name,\n        width: det.width,\n        height: det.height,\n        images: [],\n      };\n      const uploadResp = await fetch(putURL, { body: file, method: 'PUT' });\n      if (uploadResp.ok) {\n        setUploadImageProgress(`Images uploaded: ${index + 1} / ${newImagesCount} `);\n        setImages((pics) => pics.concat([photo]));\n      } else {\n        setUploadImageStatus('Error while uploading memory image');\n        setErrorUploadImages((errImgs) => errImgs.concat([det.name]));\n        handleHTTPError(uploadResp, 'deleting image', httpErrorCallback);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    if (newImages.length > 0) {\n      setAddImageOpen(true);\n      setUploadImageProgress('Preparing images for upload....');\n    }\n    if (newImages.length === newImagesCount) {\n      await handleNewImages();\n      if (errorUploadImages.length > 0) {\n        setUploadImageStatus(`Error while uploading ${errorUploadImages.length} images`);\n      } else {\n        setUploadImageStatus(`${newImages.length} image(s) uploaded successfully`);\n      }\n      setErrorUploadImages([]);\n      setNewImagesCount(null);\n      setNewImages([]);\n      setTimeout(() => {\n        setAddImageOpen(false);\n        setUploadImageStatus(null);\n        setUploadImageProgress(null);\n      }, 3000);\n    }\n  }, [newImages]);\n\n  const handleImageAdd = async (event) => {\n    if (event.target.files) {\n      const files = Array.from(event.target.files);\n      setNewImagesCount(files.length);\n      if (images.length + files.length <= 15) {\n        files.forEach((file) => {\n          const image = new Image();\n          image.onload = async (e) => {\n            const height = e.target.naturalHeight;\n            const width = e.target.naturalWidth;\n            const size = file.size / (1024 * 1024);\n            const { name } = file;\n            const resImages = [500, 1000, 1500].map((resHeight) => ({\n              height: resHeight, width: Math.ceil((resHeight * width) / height),\n            }));\n            const creationDate = Date.now();\n            const newName = `${creationDate}-${name}`;\n            const imageDetails = [{\n              name: newName, size, height, width, images: resImages,\n            }, file, e.target.src];\n            setNewImages((pics) => pics.concat([imageDetails]));\n          };\n          image.src = URL.createObjectURL(file);\n        });\n        files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n      } else {\n        handleSnackMessage(`Unable to add ${files.length} images. Maximum images allowed per memory is 15`, true);\n        setSnack(true);\n      }\n    }\n  };\n\n  const handleClose = () => setOpen(false);\n\n  const handleActiveIndexChange = (step) => setActiveIndex(step);\n\n  const handleBack = () => {\n    setActiveIndex(\n      (prevActiveStep) => (prevActiveStep - 1 + maxSteps) % maxSteps,\n    );\n  };\n\n  const handleNext = () => {\n    setActiveIndex((prevActiveStep) => (prevActiveStep + 1) % maxSteps);\n  };\n\n  const handlePhotoClick = (photo, event, index) => {\n    setOpen(true);\n    setActiveIndex(index);\n  };\n\n  const handleEditClick = () => setEdit(true);\n\n  const memoryTitle = (\n    <MemoryTitle\n      editable={edit}\n      text={title}\n      handleTitleUpdate={updateTitle}\n    />\n  );\n\n  const memoryDate = (\n    <MemoryDate editable={edit} prevDate={date} handleDateUpdate={updateDate} />\n  );\n\n  const storyLayout = (\n    <MemoryStory\n      editable={edit}\n      prevStory={story}\n      handleStoryUpdate={updateStory}\n    />\n  );\n\n  const photoLayout = (\n    <MemoryImages\n      editable={edit}\n      images={images}\n      handlePhotoClick={handlePhotoClick}\n      handleThumbnailUpdate={UpdateThumbnail}\n      deleteImage={deleteImage}\n      addImage={handleImageAdd}\n    />\n  );\n\n  const updateDone = (\n    <Button\n      variant=\"contained\"\n      component=\"label\"\n      onClick={() => setEdit(false)}\n      sx={{\n        color: 'primary.main',\n        borderRadius: 5,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n      }}\n    >\n      <DoneIcon size=\"medium\" sx={{ paddingRight: 1 }} />\n      <Typography variant=\"body1\" color=\"muted.main\">Edit</Typography>\n    </Button>\n  );\n\n  if (httpError === 401 && snack === false) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return (\n    <>\n      {edit ? (\n        <Stack\n          direction=\"row\"\n          justifyContent=\"flex-start\"\n          sx={{ backgroundColor: 'button.main', paddingX: 2, paddingY: 1 }}\n        >\n          {updateDone}\n        </Stack>\n      ) : <BackButton memType={memType} /> }\n      <Box\n        component=\"div\"\n        sx={{\n          backgroundColor: 'button.main',\n          margin: edit ? '5px' : 0,\n        }}\n      >\n        <MemoryContentStructure\n          header={memoryTitle}\n          subheader={memoryDate}\n          photoLayout={photoLayout}\n          storyLayout={storyLayout}\n          memoryID={memoryID}\n          bucket={bucket}\n          authURL={authURL}\n          handleEditClick={handleEditClick}\n          memType={memType}\n        />\n      </Box>\n      <MemoryCarousel\n        open={open}\n        title={title}\n        date={date}\n        images={images}\n        index={activeIndex}\n        handleNext={handleNext}\n        handleBack={handleBack}\n        handleClose={handleClose}\n        handleChange={handleActiveIndexChange}\n      />\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n        error={snackError}\n      />\n      <Dialog\n        open={addImageOpen}\n        fullWidth\n        sx={{\n          p: 1,\n        }}\n      >\n        <Card sx={{ maxWidth: 1, p: 1 }}>\n          <CardHeader title=\"Adding Images\" sx={{ textAlign: 'center' }} />\n          <Divider />\n          <CardContent>\n            <Typography variant=\"h6\" sx={{ color: 'muted.main' }}>{uploadImageProgress}</Typography>\n            <Stack justifyContent=\"center\" sx={{ py: 2 }}>\n              <Typography variant=\"h5\">{uploadImageStatus}</Typography>\n            </Stack>\n          </CardContent>\n        </Card>\n      </Dialog>\n\n    </>\n  );\n}\n\nMemoryContent.defaultProps = {\n  memTitle: 'Memory Title',\n  memDate: 'Memory Date',\n  memStory: 'Memory Text',\n};\n\nMemoryContent.propTypes = {\n  memType: PropTypes.string.isRequired,\n  memTitle: PropTypes.string,\n  memDate: PropTypes.string,\n  memStory: PropTypes.string,\n  memoryID: PropTypes.string.isRequired,\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n  memImages: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n};\n"],"names":["AddCaptionButton","handleClick","caption","size","label","sx","color","alpha","bgcolor","position","top","left","borderRadius","py","onClick","length","variant","pl","defaultProps","ImageOptionsDialog","index","imageCaption","src","open","handleClose","handleSubmit","console","log","useState","setCaption","captionError","setCaptionError","useEffect","captionSchema","yup","max","required","utils","isValid","captionValid","submitForm","border","backgroundColor","right","theme","palette","grey","dividers","component","alt","width","pb","height","defaultValue","onChange","event","target","value","helperText","error","OptionsButton","children","name","id","padding","RemoveSelectedImageButton","handleRemoveImage","title","px","ThumbnailChooser","thumbnail","handleThumbnailChange","control","fontWeight","overflow","fontSize","checked","pr","borderColor","borderLeft","bottom","margin","useDate","initialDate","date","setDate","e","newDate","Date","formattedDate","toLocaleDateString","day","month","year","useStory","initialState","story","setStory","useTitle","initialValue","setTitle","ActionIcon","icon","Box","alignItems","IconButton","Confirm","confirm","handleCallback","handleCloseCallback","message","setOpen","Dialog","DialogTitle","p","Typography","Stack","spacing","direction","Button","DeleteMemoryIcon","Delete","ConfirmDelete","callback","closeCallback","bucket","authURL","memoryID","memoryDeleteCallback","api","deleteResults","UpdateMemoryIcon","Edit","useEmail","items","setItems","setValue","setError","isInList","email","includes","err","test","isEmail","commonUtils","evt","key","preventDefault","val","trim","item","prevItems","filter","i","emails","clipboardData","getData","match","toBeAdded","EmailInput","handleKeyDown","handleChange","handleDelete","handlePaste","mb","TextField","placeholder","onKeyDown","onPaste","my","Grid","container","map","Chip","onDelete","NewShares","handleClear","sharing","disabled","StatusTable","invitation","accept","colorMap","pending","sent","failed","rejected","accepted","Table","TableHead","TableRow","TableCell","align","TableBody","CheckboxCell","selected","setChecked","Checkbox","PersonalDetailsCell","picture","scope","avatar","Avatar","referrerPolicy","b","maxWidth","ExpandStatusIconCell","style","paddingBottom","paddingTop","colSpan","ExpandLess","ExpandCircleDown","ShareeRow","isSelected","onCheckBoxClick","Collapse","in","timeout","unmountOnExit","gutterBottom","SelectAllCheckboxCell","numSelected","rowCount","onSelectAllClick","indeterminate","TableHeader","handleUnshareClick","unsharing","textTransform","ExistingShares","shareData","onUnShare","page","setPage","setNumSelected","Array","fill","setSelected","TableContainer","Paper","stickyHeader","unshareEmails","push","slice","sharee","status","ind","prevSelected","TablePagination","rowsPerPageOptions","count","rowsPerPage","onPageChange","newPage","CloseButton","Close","ShareMemoryIcon","Share","ShareComponent","memoryShareCallback","memoryUnShareCallback","setShareData","setSharing","setUnSharing","data","shareResults","json","resultsJSON","handleUnshare","existingShares","m","Divider","MemoryActions","actionComponent","snackBar","handleEditClick","anchorEl","setAnchorEl","action","setAction","Boolean","MoreVert","currentTarget","Menu","onClose","MenuListProps","MenuItem","MemoryContentStructure","className","header","subheader","photoLayout","storyLayout","memType","snack","setSnack","snackMessage","setSnackMessage","snackError","setSnackError","redir","setRedir","useTheme","useMediaQuery","breakpoints","down","handleSnackMessage","msg","snackBarOpen","actions","deleteMemory","results","ok","to","replace","Card","boxShadow","CardHeader","display","justifyContent","flexDirection","lg","xs","overflowY","mt","BackButton","paddingX","paddingY","Link","href","underline","ArrowBack","paddingRight","RemovePhotoIcon","EnhancedSwipeableViews","bindKeyboard","autoPlay","virtualize","SwipeableViews","MemoryImageSlide","images","handleNext","handleStepChange","activeStep","setActiveStep","loadedImages","setLoadedImages","setDisplay","handleImageLoad","prevLoaded","onChangeIndex","enableMouseEvents","animateTransitions","interval","slideRenderer","props","virtNum","total","modulus","mod","srcSet","join","boxSizing","cursor","objectFit","justifyContents","transform","onLoad","NextPic","edge","KeyboardArrowRight","PreviousPic","KeyboardArrowLeft","MemoryCarousel","handleBack","fullScreen","MemoryDate","editable","prevDate","handleDateUpdate","edit","setEdit","startEdit","setStartEdit","handleDateChange","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","inputFormat","maxDate","renderInput","readOnly","DoneTwoTone","Clear","AddPhotos","type","hidden","multiple","MemoryPhotoAlbum","handlePhotoClick","renderPhoto","arrangement","setArrangement","layout","photos","rowConstraints","columns","MemoryImages","handleThumbnailUpdate","deleteImage","addImage","setThumbnail","editingIndex","setEditingIndex","editOpen","setEditOpen","handleImageDelete","OptionsRow","imageProps","restImageProps","MemoryStory","prevStory","handleStoryUpdate","handleStoryChange","storyRef","useRef","whiteSpace","minHeight","current","focus","TextareaAutosize","autoFocus","maxHeight","outline","resize","ref","MemoryTitle","text","handleTitleUpdate","handleTitleChange","MemoryContent","memTitle","memDate","memStory","memImages","activeIndex","setActiveIndex","setImages","newImages","setNewImages","newImagesCount","setNewImagesCount","errorUploadImages","setErrorUploadImages","addImageOpen","setAddImageOpen","uploadImageProgress","setUploadImageProgress","uploadImageStatus","setUploadImageStatus","httpError","setHTTPError","maxSteps","handleHTTPError","response","operation","httpErrorCallback","handleResponse","updateTitle","resp","updateDate","updateStory","UpdateThumbnail","details","handleNewImages","entries","img","det","file","then","putURL","photo","fetch","body","method","uploadResp","pics","concat","errImgs","setTimeout","handleImageAdd","files","from","forEach","image","Image","onload","naturalHeight","naturalWidth","resImages","resHeight","Math","ceil","creationDate","now","newName","imageDetails","URL","createObjectURL","revokeObjectURL","memoryTitle","memoryDate","updateDone","Done","prevActiveStep","step","fullWidth","textAlign","CardContent"],"sourceRoot":""}