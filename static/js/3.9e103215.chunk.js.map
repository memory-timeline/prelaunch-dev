{"version":3,"file":"static/js/3.9e103215.chunk.js","mappings":"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","sources":["components/RemovePhotoIcon.jsx","components/simple_snackbar.jsx","hooks/date.jsx","hooks/story.jsx","hooks/title.jsx","components/ActionIcon.jsx","components/confirmation.jsx","pages/memory/Delete.jsx","components/UpdateMemoryIcon.jsx","hooks/email.jsx","components/EmailInput.jsx","components/NewShares.jsx","components/StatusTable.jsx","components/CheckboxCell.jsx","components/PersonalDetailsCell.jsx","components/ExpandStatusIconCell.jsx","components/ShareRow.jsx","components/SelectAllCheckboxCell.jsx","components/TableHeader.jsx","components/ExistingShares.jsx","components/CloseButton.jsx","pages/memory/Share.jsx","pages/memory/Actions.jsx","pages/memory/ContentStructure.jsx","components/MemoryImageSlide.jsx","pages/memory/MemoryCarousel.jsx","pages/memory/MemoryTitle.jsx","pages/memory/MemoryDate.jsx","pages/memory/MemoryStory.jsx","pages/memory/MemoryImages.jsx","pages/memory/MemoryContent.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { alpha } from '@mui/material/styles';\n\nexport default function RemovePhotoIcon({ size, handleClick }) {\n  return (\n    <IconButton\n      size={size}\n      sx={{\n        color: 'black',\n        bgcolor: alpha('#fff', 0.4),\n        position: 'absolute',\n        top: 10,\n        right: 12,\n      }}\n      onClick={handleClick}\n    >\n      <CloseIcon size={size} />\n    </IconButton>\n  );\n}\n\nRemovePhotoIcon.defaultProps = {\n  size: 'small',\n};\n\nRemovePhotoIcon.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  size: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Stack from '@mui/material/Stack';\nimport DoneIcon from '@mui/icons-material/Done';\nimport Typography from '@mui/material/Typography';\n\nfunction SnackText({ message, error }) {\n  if (error === true) {\n    return (\n      <Stack direction=\"row\" spacing={2} justifyContents=\"space-between\" alignItems=\"center\">\n        <CloseIcon fontSize=\"small\" color=\"error\" />\n        <Typography>{message}</Typography>\n      </Stack>\n    );\n  }\n  return (\n    <Stack direction=\"row\" spacing={2} justifyContents=\"space-between\" alignItems=\"center\">\n      <DoneIcon fontSize=\"small\" color=\"success\" />\n      <Typography>{message}</Typography>\n    </Stack>\n  );\n}\n\nexport default function SimpleSnackbar({\n  snackBarOpen, message, onClose, error,\n}) {\n  const [open, setOpen] = useState(snackBarOpen);\n  const [snackMessage, setSnackMessage] = useState(message);\n\n  useEffect(() => setOpen(snackBarOpen), [snackBarOpen]);\n  useEffect(() => setSnackMessage(message), [message]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setSnackMessage(null);\n    onClose();\n  };\n\n  const action = (\n    <IconButton\n      size=\"small\"\n      aria-label=\"close\"\n      color=\"inherit\"\n      onClick={handleClose}\n    >\n      <CloseIcon fontSize=\"small\" />\n    </IconButton>\n  );\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      message={<SnackText message={snackMessage} error={error} />}\n      action={action}\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n    />\n  );\n}\n\nSimpleSnackbar.defaultProps = {\n  error: false,\n};\n\nSimpleSnackbar.propTypes = {\n  message: PropTypes.string.isRequired,\n  snackBarOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  error: PropTypes.bool,\n};\n\nSnackText.propTypes = {\n  message: PropTypes.string.isRequired,\n  error: PropTypes.bool.isRequired,\n};\n","import { useState } from 'react';\n\nexport default function useDate(initialDate) {\n  const [date, setDate] = useState(initialDate);\n  const handleDateChange = (e) => {\n    const newDate = new Date(e);\n    if (e) {\n      const formattedDate = newDate.toLocaleDateString('en-in', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric',\n      });\n      setDate(formattedDate);\n    } else {\n      setDate(null);\n    }\n  };\n  return [date, setDate, handleDateChange];\n}\n","import { useState } from 'react';\n\nexport default function useStory(initialState) {\n  const [story, setStory] = useState(initialState);\n  const handleStoryChange = (event) => setStory(event.target.value);\n  return [story, setStory, handleStoryChange];\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useTitle(initialValue) {\n  const [title, setTitle] = useState(initialValue);\n  useEffect(() => setTitle(initialValue), [initialValue]);\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  return [title, setTitle, handleTitleChange];\n}\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\n\nexport default function ActionIcon({ icon, label }) {\n  return (\n    <Box sx={{ alignItems: 'center' }}>\n      <IconButton\n        aria-label=\"delete\"\n        sx={{\n          bgcolor: 'form.input',\n        }}\n      >\n        {icon}\n      </IconButton>\n      {label}\n    </Box>\n  );\n}\n\nActionIcon.propTypes = {\n  icon: PropTypes.node.isRequired,\n  label: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@mui/material/Dialog';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function Confirm({\n  confirm, handleCallback, handleCloseCallback, title, message,\n}) {\n  const [open, setOpen] = useState(confirm);\n  useEffect(() => setOpen(confirm), [confirm]);\n\n  const handleClose = () => {\n    setOpen(false);\n    handleCloseCallback();\n  };\n\n  const handleSubmit = () => {\n    handleClose();\n    handleCallback();\n  };\n\n  return (\n    <Dialog open={open} sx={{ backgroundColor: 'faded.black' }}>\n      <DialogTitle>{title}</DialogTitle>\n      <Box sx={{ p: 2 }}>\n        <Typography sx={{ pb: 2 }}>{message}</Typography>\n        <Stack spacing={2} direction=\"row\">\n          <Button variant=\"contained\" onClick={handleClose}>Cancel</Button>\n          <Button variant=\"outlined\" onClick={handleSubmit}>OK</Button>\n        </Stack>\n      </Box>\n    </Dialog>\n  );\n}\n\nConfirm.propTypes = {\n  confirm: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  handleCallback: PropTypes.func.isRequired,\n  handleCloseCallback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ActionIcon from 'components/ActionIcon';\nimport Confirm from 'components/confirmation';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport api from '../Api';\n\nexport function DeleteMemoryIcon() {\n  return (\n    <ActionIcon icon={<DeleteIcon />} label=\"Delete\" />\n  );\n}\n\nexport function ConfirmDelete({ callback, open, closeCallback }) {\n  const DeleteTitle = 'Delete Memory';\n  const DeleteConfirmMessage = 'Do you want to delete this memory?';\n  return (\n    <Confirm\n      confirm={open}\n      title={DeleteTitle}\n      handleCallback={callback}\n      handleCloseCallback={() => closeCallback()}\n      message={DeleteConfirmMessage}\n    />\n  );\n}\n\nexport default async function deleteMemory(bucket, authURL, memoryID, memoryDeleteCallback) {\n  try {\n    const deleteResults = await api.deleteMemory(bucket, authURL, memoryID);\n    memoryDeleteCallback(deleteResults);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nConfirmDelete.propTypes = {\n  open: PropTypes.bool.isRequired,\n  callback: PropTypes.func.isRequired,\n  closeCallback: PropTypes.func.isRequired,\n};\n","import ActionIcon from 'components/ActionIcon';\nimport EditIcon from '@mui/icons-material/Edit';\n\nexport default function UpdateMemoryIcon() {\n  return (\n    <ActionIcon icon={<EditIcon />} label=\"Edit\" />\n  );\n}\n","import { useState } from 'react';\n\nexport default function useEmail() {\n  const [items, setItems] = useState([]);\n  const [value, setValue] = useState('');\n  const [error, setError] = useState(null);\n\n  const isInList = (email) => items.includes(email);\n\n  // eslint-disable-next-line\n  const isEmail = (email) => /[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/.test(email);\n\n  const isValid = (email) => {\n    let err = null;\n\n    if (isInList(email)) {\n      err = `${email} has already been added.`;\n    }\n\n    if (!isEmail(email)) {\n      err = `${email} is not a valid email address.`;\n    }\n\n    if (err) {\n      setError(err);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleKeyDown = (evt) => {\n    if (['Enter', 'Tab', ','].includes(evt.key)) {\n      evt.preventDefault();\n\n      const val = value.trim();\n\n      if (val && isValid(val)) {\n        setItems([...items, value]);\n        setValue('');\n      }\n    }\n  };\n\n  const handleChange = (evt) => {\n    setValue(evt.target.value);\n    setError(null);\n  };\n\n  const handleDelete = (item) => {\n    setItems((prevItems) => prevItems.filter((i) => i !== item));\n  };\n\n  const handlePaste = (evt) => {\n    evt.preventDefault();\n\n    const paste = evt.clipboardData.getData('text');\n    // eslint-disable-next-line\n    var emails = paste.match(/[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g);\n\n    if (emails) {\n      const toBeAdded = emails.filter((email) => !isInList(email));\n      setItems([...items, ...toBeAdded]);\n    }\n  };\n\n  return [items, value, error, handleKeyDown, handleChange, handleDelete, handlePaste];\n}\n","import PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Grid from '@mui/material/Grid';\n\nexport default function EmailInput({\n  items,\n  value,\n  error,\n  handleKeyDown,\n  handleChange,\n  handleDelete,\n  handlePaste,\n}) {\n  return (\n    <Stack direction=\"column\" spacing={2} sx={{ mb: 3 }}>\n      <TextField\n        id=\"outlined-error\"\n        value={value}\n        label=\"Email List\"\n        placeholder=\"Type or paste email addresses and press `Enter`...\"\n        onKeyDown={handleKeyDown}\n        onChange={handleChange}\n        onPaste={handlePaste}\n        helperText={\n          error || 'Type or paste email addresses and press `Enter`...'\n        }\n        error={!!error}\n        sx={{ my: 1 }}\n      />\n      <Grid container spacing={2}>\n        {items.map((item) => (\n          <Chip\n            key={item}\n            label={item}\n            variant=\"outlined\"\n            onDelete={() => handleDelete(item)}\n            sx={{ margin: 0.5 }}\n            size=\"small\"\n          />\n        ))}\n      </Grid>\n    </Stack>\n  );\n}\n\nEmailInput.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  value: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  handleKeyDown: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handlePaste: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport EmailInput from 'components/EmailInput';\nimport Box from '@mui/material/Box';\n\nexport default function NewShares({\n  items,\n  value,\n  error,\n  handleKeyDown,\n  handleChange,\n  handleDelete,\n  handlePaste,\n  handleClose,\n  handleSubmit,\n}) {\n  return (\n    <Box sx={{ p: 2 }}>\n      <EmailInput\n        items={items}\n        value={value}\n        error={error}\n        handleKeyDown={handleKeyDown}\n        handleChange={handleChange}\n        handleDelete={handleDelete}\n        handlePaste={handlePaste}\n      />\n      <Stack spacing={2} direction=\"row\">\n        <Button variant=\"outlined\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button variant=\"contained\" onClick={handleSubmit}>\n          Share\n        </Button>\n      </Stack>\n    </Box>\n  );\n}\n\nNewShares.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  value: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  handleKeyDown: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handlePaste: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Chip from '@mui/material/Chip';\nimport TableHead from '@mui/material/TableHead';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\n\nexport default function StatusTable({ invitation, accept }) {\n  const colorMap = {\n    pending: 'warning',\n    sent: 'success',\n    failed: 'error',\n    rejected: 'error',\n    accepted: 'success',\n  };\n  return (\n    <Table size=\"small\" aria-label=\"statuses\">\n      <TableHead>\n        <TableRow>\n          <TableCell align=\"left\">Invitation</TableCell>\n          <TableCell align=\"left\">Accepted</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        <TableRow key={new Date()}>\n          <TableCell align=\"left\">\n            <Chip color={colorMap[invitation]} size=\"small\" label={invitation} />\n          </TableCell>\n          <TableCell align=\"left\">\n            <Chip color={colorMap[accept]} size=\"small\" label={accept} />\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  );\n}\n\nStatusTable.propTypes = {\n  invitation: PropTypes.string.isRequired,\n  accept: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport TableCell from '@mui/material/TableCell';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function CheckboxCell({ selected, handleChange }) {\n  const [checked, setChecked] = useState(selected);\n\n  useEffect(() => {\n    setChecked(selected);\n  }, [selected]);\n\n  // eslint-disable-next-line no-console\n  console.log('check box cell', selected, checked, handleChange);\n  return (\n    <TableCell padding=\"checkbox\" key=\"checkbox\">\n      <Checkbox color=\"primary\" checked={checked} onChange={handleChange} />\n    </TableCell>\n  );\n}\n\nCheckboxCell.propTypes = {\n  selected: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TableCell from '@mui/material/TableCell';\nimport Chip from '@mui/material/Chip';\nimport Avatar from '@mui/material/Avatar';\n\nexport default function PersonalDetailsCell({ email, picture, name }) {\n  return (\n    <TableCell component=\"th\" scope=\"row\" sx={{ p: 1 }} key=\"personal-details\">\n      <Chip\n        avatar={(\n          <Avatar\n            alt={email}\n            src={picture}\n            sx={{ referrerPolicy: 'no-referrer' }}\n          />\n        )}\n        label={name}\n        sx={{ b: 1, maxWidth: 170 }}\n        color=\"primary\"\n        variant=\"outlined\"\n      />\n    </TableCell>\n  );\n}\n\nPersonalDetailsCell.propTypes = {\n  email: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TableCell from '@mui/material/TableCell';\nimport IconButton from '@mui/material/IconButton';\nimport ExpandCircleDownIcon from '@mui/icons-material/ExpandCircleDown';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\n\nexport default function ExpandStatusIconCell({ open, handleClick }) {\n  return (\n    <TableCell\n      align=\"center\"\n      style={{ paddingBottom: 0, paddingTop: 0 }}\n      colSpan={6}\n      onClick={handleClick}\n      key=\"expand-status\"\n    >\n      <IconButton aria-label=\"expand row\" size=\"small\">\n        {!open ? <ExpandCircleDownIcon /> : <ExpandLessIcon />}\n      </IconButton>\n    </TableCell>\n  );\n}\n\nExpandStatusIconCell.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Collapse from '@mui/material/Collapse';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\n\nimport StatusTable from './StatusTable';\nimport CheckboxCell from './CheckboxCell';\nimport PersonalDetailsCell from './PersonalDetailsCell';\nimport ExpandStatusIconCell from './ExpandStatusIconCell';\n\nexport default function ShareeRow({\n  name,\n  email,\n  picture,\n  invitation,\n  accept,\n  isSelected,\n  onCheckBoxClick,\n}) {\n  const [open, setOpen] = useState(false);\n  const handleClick = () => setOpen(!open);\n\n  return (\n    <>\n      <TableRow\n        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n        key={`${{ email }}details`}\n      >\n        <CheckboxCell selected={isSelected} handleChange={onCheckBoxClick} />\n        <PersonalDetailsCell email={email} picture={picture} name={name} />\n        <ExpandStatusIconCell open={open} handleClick={handleClick} />\n      </TableRow>\n      <TableRow key={`${{ email }}status`}>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Status\n              </Typography>\n              <StatusTable invitation={invitation} accept={accept} />\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\n\nShareeRow.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  invitation: PropTypes.string.isRequired,\n  accept: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onCheckBoxClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TableCell from '@mui/material/TableCell';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function SelectAllCheckboxCell({ numSelected, rowCount, onSelectAllClick }) {\n  return (\n    <TableCell padding=\"checkbox\" key=\"selectAll\">\n      <Checkbox\n        color=\"primary\"\n        indeterminate={numSelected > 0 && numSelected < rowCount}\n        checked={rowCount > 0 && numSelected === rowCount}\n        onChange={onSelectAllClick}\n      />\n    </TableCell>\n  );\n}\n\nSelectAllCheckboxCell.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Button from '@mui/material/Button';\n\nimport SelectAllCheckboxCell from './SelectAllCheckboxCell';\n\nexport default function TableHeader({\n  numSelected, rowCount, onSelectAllClick, handleUnshareClick,\n}) {\n  return (\n    <TableHead>\n      <TableRow>\n        <SelectAllCheckboxCell\n          numSelected={numSelected}\n          rowCount={rowCount}\n          onSelectAllClick={onSelectAllClick}\n          key=\"selectAll\"\n        />\n        <TableCell\n          align=\"center\"\n          sx={{ fontWeight: 'bold', fontSize: '1em' }}\n          key=\"message\"\n        >\n          {numSelected === 0 ? 'Shared With' : `${numSelected} selected`}\n        </TableCell>\n        <TableCell align=\"center\" sx={{ fontWeight: 'bold' }} key=\"action\">\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            sx={{ textTransform: 'none' }}\n            disabled={numSelected === 0}\n            onClick={handleUnshareClick}\n          >\n            Unshare\n          </Button>\n        </TableCell>\n      </TableRow>\n    </TableHead>\n  );\n}\n\nTableHeader.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  handleUnshareClick: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport Paper from '@mui/material/Paper';\n\nimport ShareeRow from './ShareRow';\nimport TableHeader from './TableHeader';\n\nexport default function ExistingShares({ shareData, onUnShare }) {\n  const [numSelected, setNumSelected] = useState(0);\n  const [selected, setSelected] = useState(Array(shareData.sharees.length).fill(0));\n\n  // eslint-disable-next-line no-console\n  console.log('share data', shareData, selected);\n\n  const handleCheckBoxClick = (ind) => {\n    console.log('handle click index', ind);\n    if (selected[ind] === 1) {\n      setNumSelected((prevSelected) => prevSelected - 1);\n    } else {\n      setNumSelected((prevSelected) => prevSelected + 1);\n    }\n\n    setSelected([\n      ...selected.slice(0, ind),\n      1 - selected[ind],\n      ...selected.slice(ind + 1),\n    ]);\n  };\n\n  const handleSelectAllClick = () => {\n    if (selected.length > 0 && numSelected < selected.length) {\n      setSelected(Array(shareData.sharees.length).fill(1));\n      setNumSelected(selected.length);\n    } else {\n      setSelected(Array(shareData.sharees.length).fill(0));\n      setNumSelected(0);\n    }\n  };\n\n  const handleUnshare = () => {\n    const unshareEmails = [];\n    for (let i = 0; i < selected.length; i += 1) {\n      if (selected[i] === 1) {\n        unshareEmails.push(shareData.sharees[i].email);\n      }\n    }\n    onUnShare(unshareEmails);\n  };\n\n  return ('sharees' in shareData) ? (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"memory share table\">\n        <TableHeader\n          numSelected={numSelected}\n          rowCount={shareData.sharees.length}\n          onSelectAllClick={handleSelectAllClick}\n          handleUnshareClick={handleUnshare}\n        />\n        <TableBody>\n          {shareData.sharees.map((sharee, index) => {\n            let name;\n            let picture;\n            if ('details' in sharee && sharee.details) {\n              if ('name' in sharee.details) {\n                name = sharee.details.name;\n              } else if ('username' in sharee.details && sharee.details.username) {\n                name = sharee.details.username;\n              } else {\n                name = sharee.email;\n              }\n              if ('picture' in sharee.details) {\n                picture = sharee.details.picture;\n              } else {\n                picture = '';\n              }\n            } else {\n              name = sharee.email;\n              picture = '';\n            }\n            // eslint-disable-next-line no-console\n            console.log('name, picture', name, picture);\n            return (\n              <ShareeRow\n                key={sharee.email}\n                email={sharee.email}\n                name={name}\n                picture={picture}\n                invitation={sharee.status.invitation}\n                accept={sharee.status.accept}\n                isSelected={selected[index] === 1}\n                onCheckBoxClick={() => handleCheckBoxClick(index)}\n              />\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  ) : null;\n}\n\nExistingShares.propTypes = {\n  shareData: PropTypes.shape({\n    sharees: PropTypes.arrayOf(PropTypes.shape({\n      email: PropTypes.string.isRequired,\n      status: PropTypes.shape({\n        accept: PropTypes.string.isRequired,\n        invitation: PropTypes.string.isRequired,\n      }).isRequired,\n      details: PropTypes.shape({\n        email: PropTypes.string,\n        given_name: PropTypes.string,\n        family_name: PropTypes.string,\n        name: PropTypes.string,\n        picture: PropTypes.string,\n        username: PropTypes.string,\n        email_verified: PropTypes.string,\n      }),\n    }).isRequired).isRequired,\n  }).isRequired,\n  onUnShare: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function CloseButton({ handleClose }) {\n  return (\n    <IconButton\n      aria-label=\"close\"\n      onClick={handleClose}\n      sx={{\n        position: 'absolute',\n        right: 8,\n        top: 8,\n        color: (theme) => theme.palette.grey[500],\n      }}\n    >\n      <CloseIcon />\n    </IconButton>\n  );\n}\n\nCloseButton.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n};\n","import ActionIcon from 'components/ActionIcon';\nimport ShareIcon from '@mui/icons-material/Share';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@mui/material/Typography';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Divider from '@mui/material/Divider';\nimport useEmail from 'hooks/email';\n\nimport NewShares from 'components/NewShares';\nimport ExistingShares from 'components/ExistingShares';\nimport CloseButton from 'components/CloseButton';\nimport api from '../Api';\n\nexport function ShareMemoryIcon() {\n  return <ActionIcon icon={<ShareIcon />} label=\"Share\" />;\n}\n\nexport function ShareComponent({\n  confirm, memoryShareCallback, memoryUnShareCallback, closeCallback, memoryID,\n}) {\n  const ShareTitle = 'Share Memory';\n  const [\n    items,\n    value,\n    error,\n    handleKeyDown,\n    handleChange,\n    handleDelete,\n    handlePaste,\n  ] = useEmail();\n\n  const [shareData, setShareData] = useState(null);\n\n  useEffect(async () => {\n    try {\n      const data = await api.getShareData(memoryID);\n      setShareData(data);\n    } catch (err) {\n      /* eslint-disable no-console */\n      console.log(err);\n    }\n  }, []);\n\n  const [open, setOpen] = useState(confirm);\n  useEffect(() => setOpen(confirm), [confirm]);\n\n  const handleClose = () => {\n    setOpen(false);\n    closeCallback();\n  };\n\n  const handleSubmit = async () => {\n    //  callback(items);\n    try {\n      /* eslint-disable no-console */\n      console.log('share memory', memoryID, items);\n      const shareResults = await api.shareMemory(memoryID, items);\n      console.log(shareResults);\n      memoryShareCallback(shareResults);\n    } catch (err) {\n      /* eslint-disable no-console */\n      console.log(err);\n    }\n  };\n\n  const handleUnshare = async (emails) => {\n    //  callback(items);\n    try {\n      /* eslint-disable no-console */\n      console.log('share memory', memoryID, emails);\n      const shareResults = await api.revokeShare(memoryID, items);\n      console.log(shareResults);\n      memoryUnShareCallback(shareResults);\n    } catch (err) {\n      /* eslint-disable no-console */\n      console.log(err);\n    }\n  };\n\n  const existingShares = (shareData !== null) ? (\n    <>\n      <Typography sx={{ m: 2, fontSize: '1.2rem' }}>Existing Shares</Typography>\n      <ExistingShares shareData={shareData} onUnShare={handleUnshare} />\n    </>\n  ) : null;\n\n  console.log(shareData);\n\n  return (\n    <Dialog\n      open={open}\n      sx={{\n        '& .MuiPaper-root': { m: 0 },\n        backgroundColor: 'faded.black',\n      }}\n    >\n      <DialogTitle>\n        {ShareTitle}\n        <CloseButton handleClose={handleClose} />\n      </DialogTitle>\n      <Divider />\n      <Typography sx={{ m: 2 }}>\n        New Shares (\n        {items.length}\n        added)\n      </Typography>\n      <NewShares\n        items={items}\n        value={value}\n        error={error}\n        handleKeyDown={handleKeyDown}\n        handleChange={handleChange}\n        handleDelete={handleDelete}\n        handlePaste={handlePaste}\n        handleClose={handleClose}\n        handleSubmit={handleSubmit}\n      />\n      <Divider />\n      {existingShares}\n    </Dialog>\n  );\n}\n\nShareComponent.propTypes = {\n  confirm: PropTypes.bool.isRequired,\n  memoryShareCallback: PropTypes.func.isRequired,\n  memoryUnShareCallback: PropTypes.func.isRequired,\n  closeCallback: PropTypes.func.isRequired,\n  memoryID: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Confirm from 'components/confirmation';\nimport UpdateMemoryIcon from 'components/UpdateMemoryIcon';\nimport { ShareComponent, ShareMemoryIcon } from './Share';\nimport { ConfirmDelete, DeleteMemoryIcon } from './Delete';\n\nfunction ConfirmAction({\n  title, message, callback, open, closeCallback,\n}) {\n  const [confirm, setConfirm] = useState(open);\n  useEffect(() => setConfirm(open), [open]);\n\n  return (\n    <Confirm\n      title={title}\n      confirm={confirm}\n      handleCallback={callback}\n      handleCloseCallback={() => {\n        setConfirm(false);\n        closeCallback();\n      }}\n      message={message}\n    />\n  );\n}\n\nexport default function MemoryActions({\n  snackBar, handleDelete, memoryShareCallback, handleEditClick, memoryID,\n}) {\n  let actionComponent;\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [action, setAction] = useState(null);\n\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  const closeConfirm = () => setAction(null);\n\n  if (action === 'delete') {\n    actionComponent = (\n      <ConfirmDelete open callback={handleDelete} closeCallback={closeConfirm} />\n    );\n  }\n\n  if (action === 'share') {\n    actionComponent = (\n      <ShareComponent\n        confirm\n        memoryShareCallback={memoryShareCallback}\n        closeCallback={() => setAction(null)}\n        memoryID={memoryID}\n      />\n    );\n  }\n\n  const handleDeleteClick = () => {\n    setAction('delete');\n    handleClose();\n  };\n\n  const handleShareClick = () => {\n    setAction('share');\n    handleClose();\n  };\n\n  const handleEdit = () => {\n    handleEditClick();\n    handleClose();\n  };\n\n  return (\n    <div>\n      <MoreVertIcon onClick={handleClick} />\n      <Menu\n        id=\"memory-actions\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n        sx={{ borderRadius: '10px' }}\n      >\n        <MenuItem onClick={handleEdit}><UpdateMemoryIcon /></MenuItem>\n        <MenuItem onClick={handleShareClick}><ShareMemoryIcon /></MenuItem>\n        <MenuItem onClick={handleDeleteClick}><DeleteMemoryIcon /></MenuItem>\n      </Menu>\n      {actionComponent}\n      {snackBar}\n    </div>\n  );\n}\n\nMemoryActions.propTypes = {\n  snackBar: PropTypes.node.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  memoryShareCallback: PropTypes.func.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n  memoryID: PropTypes.string.isRequired,\n};\n\nConfirmAction.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  callback: PropTypes.func.isRequired,\n  closeCallback: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Navigate } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport Box from '@mui/material/Box';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Divider from '@mui/material/Divider';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport SimpleSnackbar from 'components/simple_snackbar';\nimport deleteMemory from './Delete';\nimport MemoryActions from './Actions';\n\nexport default function MemoryContentStructure({\n  header, subheader, photoLayout, storyLayout, bucket, memoryID, authURL, handleEditClick, preview,\n}) {\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  let className;\n  const theme = useTheme();\n  const lgdown = useMediaQuery(theme.breakpoints.down('lg'));\n  if (lgdown) className = '';\n  else className = 'vertical-scroll';\n\n  const handleSnackMessage = (msg, error) => {\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const memoryDeleteCallback = (open) => {\n    if (open.status === 'ok') {\n      handleSnackMessage('Memory deleted successfully', false);\n    } else {\n      handleSnackMessage('Error while deleting memory', true);\n    }\n    setSnack(true);\n  };\n\n  const memoryShareCallback = (results) => {\n    console.log(results);\n    if (results.ok === true) {\n      handleSnackMessage('Memory shared successfully', false);\n    } else {\n      handleSnackMessage('Error while sharing memory', true);\n    }\n    setSnack(true);\n  };\n\n  const memoryUnShareCallback = (results) => {\n    console.log(results);\n    if (results.ok === true) {\n      handleSnackMessage('Memory unshared successfully', false);\n    } else {\n      handleSnackMessage('Error while unsharing memory', true);\n    }\n    setSnack(true);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const snackBar = (\n    <SimpleSnackbar\n      snackBarOpen={snack}\n      message={snackMessage}\n      onClose={handleSnackBarClose}\n      error={snackError}\n    />\n  );\n\n  const actions = !preview ? (\n    <MemoryActions\n      snackBar={snackBar}\n      handleDelete={() => {\n        deleteMemory(bucket, authURL, memoryID, memoryDeleteCallback);\n      }}\n      memoryID={memoryID}\n      memoryShareCallback={memoryShareCallback}\n      memoryUnShareCallback={memoryUnShareCallback}\n      handleEditClick={handleEditClick}\n    />\n  ) : <MoreVertIcon />;\n\n  return (snack === false) ? (\n    <Navigate to=\"/memories\" replace />\n  ) : (\n    <Card\n      sx={{\n        boxShadow: 0,\n        bgcolor: 'button.main',\n        p: 1,\n      }}\n    >\n      <CardHeader\n        title={header}\n        subheader={subheader}\n        action={actions}\n      />\n      <Divider />\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-start',\n          flexDirection: {\n            lg: 'row',\n            xs: 'column',\n          },\n          height: {\n            lg: '72vh',\n          },\n          my: 1,\n        }}\n      >\n        <Box\n          sx={{\n            width: {\n              lg: '70%',\n              xs: '100%',\n            },\n            overflowY: 'scroll',\n            borderRadius: 5,\n          }}\n          className={className}\n        >\n          {photoLayout}\n        </Box>\n        <Box\n          sx={{\n            width: { lg: '30%', sx: '100%' },\n            overflowY: 'scroll',\n            mt: {\n              lg: 0,\n              xs: 2,\n            },\n            p: {\n              lg: 1,\n            },\n            px: 1,\n          }}\n          className={className}\n        >\n          {storyLayout}\n        </Box>\n      </Box>\n    </Card>\n  );\n}\n\nMemoryContentStructure.propTypes = {\n  header: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  subheader: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  photoLayout: PropTypes.element.isRequired,\n  storyLayout: PropTypes.element.isRequired,\n  memoryID: PropTypes.string.isRequired,\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n  preview: PropTypes.bool.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SwipeableViews from 'react-swipeable-views';\nimport Box from '@mui/material/Box';\nimport { autoPlay, virtualize, bindKeyboard } from 'react-swipeable-views-utils';\n\nconst EnhancedSwipeableViews = bindKeyboard(autoPlay(virtualize(SwipeableViews)));\n\nfunction mod(count, total) {\n  const modulus = count % total;\n  if (modulus < 0) {\n    return modulus + total;\n  }\n  return modulus;\n}\n\nexport default function MemoryImageSlide({\n  ind, images, handleNext, handleStepChange,\n}) {\n  const [activeStep, setActiveStep] = useState(ind);\n  const [loadedImages, setLoadedImages] = useState(0);\n  const [display, setDisplay] = useState(null);\n\n  useEffect(() => {\n    setActiveStep(ind);\n  }, [ind]);\n\n  useEffect(() => {\n    if (loadedImages < images.length) {\n      setDisplay('none');\n    } else {\n      setDisplay('flex');\n    }\n  }, [loadedImages]);\n\n  const handleImageLoad = () => setLoadedImages((prevLoaded) => prevLoaded + 1);\n\n  const slideRenderer = (props) => {\n    /* eslint-disable  react/prop-types */\n    const { index, key } = props;\n    const virtNum = mod(index, images.length);\n    const srcSetList = images[virtNum].images ? (\n      images[virtNum].images.map(({ src, width }) => `${src} ${width}w`)\n    ) : [];\n    const srcSet = srcSetList.join(',');\n    const style = {\n      display: 'block',\n      boxSizing: 'content-box',\n      cursor: 'pointer',\n      objectFit: 'contain',\n      height: '100vh',\n    };\n\n    return (\n      <Box\n        component=\"img\"\n        onLoad={handleImageLoad}\n        sx={{\n          display: { display },\n          justifyContents: 'center',\n          width: '100%',\n          bgcolor: '#1c1c1c',\n        }}\n        src={images[virtNum].src}\n        srcSet={srcSet}\n        style={style}\n        alt={images[virtNum].src}\n        key={key}\n      />\n    );\n  };\n\n  return (\n    <EnhancedSwipeableViews\n      index={activeStep}\n      onChangeIndex={handleStepChange}\n      enableMouseEvents\n      animateTransitions\n      interval={10000}\n      onClick={handleNext}\n      style={{ backgroundColor: 'muted.main' }}\n      slideRenderer={slideRenderer}\n    />\n  );\n}\n\nMemoryImageSlide.defaultProps = {\n  ind: 0,\n};\n\nMemoryImageSlide.propTypes = {\n  ind: PropTypes.number,\n  handleNext: PropTypes.func.isRequired,\n  handleStepChange: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport CardHeader from '@mui/material/CardHeader';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport IconButton from '@mui/material/IconButton';\n\nimport RemovePhotoIcon from 'components/RemovePhotoIcon';\nimport MemoryImageSlide from 'components/MemoryImageSlide';\n\nfunction NextPic({ handleClick }) {\n  return (\n    <IconButton\n      edge=\"start\"\n      color=\"primary\"\n      aria-label=\"close\"\n      onClick={handleClick}\n      sx={{\n        position: 'absolute', top: '50%', right: 0, transform: 'translate(0%, -50%)',\n      }}\n    >\n      <KeyboardArrowRight sx={{ color: 'button.main', fontSize: '4.5rem' }} />\n    </IconButton>\n  );\n}\n\nfunction PreviousPic({ handleClick }) {\n  return (\n    <IconButton\n      edge=\"start\"\n      color=\"primary\"\n      aria-label=\"close\"\n      onClick={handleClick}\n      sx={{\n        position: 'absolute', top: '50%', left: 0, transform: 'translate(0%, -50%)',\n      }}\n    >\n      <KeyboardArrowLeft sx={{ color: 'button.main', fontSize: '4.5rem' }} />\n    </IconButton>\n  );\n}\n\nexport default function MemoryCarousel({\n  open, title, date, images, index, handleNext, handleBack, handleClose, handleChange,\n}) {\n  return (\n    <Dialog\n      open={open}\n      fullScreen\n    >\n      <MemoryImageSlide\n        images={images}\n        ind={index}\n        handleNext={handleNext}\n        handleStepChange={handleChange}\n      />\n      <CardHeader\n        title={title}\n        subheader={date}\n        sx={{\n          position: 'absolute',\n          top: 10,\n          left: 10,\n          bgcolor: 'button.main',\n          borderRadius: 3,\n          padding: 1,\n        }}\n      />\n      <PreviousPic handleClick={handleBack} />\n      <NextPic handleClick={handleNext} />\n      <RemovePhotoIcon size=\"large\" handleClick={handleClose} />\n    </Dialog>\n  );\n}\n\nNextPic.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nPreviousPic.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nMemoryCarousel.defaultProps = {\n  index: 0,\n};\n\nMemoryCarousel.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport useTitle from '../../hooks/title';\n\nexport default function MemoryTitle({ editable, text, handleTitleUpdate }) {\n  const [title, setTitle, handleTitleChange] = useTitle(text);\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n\n  useEffect(() => {\n    setEdit(editable);\n    setTitle(text);\n    setStartEdit(false);\n  }, [editable]);\n\n  if (!edit && !startEdit) {\n    return <Typography variant=\"h6\">{title}</Typography>;\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'center' }} spacing={2}>\n        <Typography variant=\"h6\">{title}</Typography>\n        <EditIcon fontSize=\"medium\" onClick={() => setStartEdit(true)} />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'flex-end', justifyContent: 'flex-start' }} spacing={2}>\n        <TextField\n          id=\"standard-basic\"\n          size=\"small\"\n          label=\"Title\"\n          onChange={handleTitleChange}\n          variant=\"standard\"\n          defaultValue={title}\n          sx={{ maxWidth: '200px' }}\n        />\n        <DoneTwoToneIcon\n          fontSize=\"medium\"\n          onClick={() => {\n            handleTitleUpdate(title);\n            setStartEdit(false);\n          }}\n        />\n        <ClearIcon fontSize=\"medium\" onClick={() => { setTitle(text); setStartEdit(false); }} />\n      </Stack>\n    );\n  }\n}\n\nMemoryTitle.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  handleTitleUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n\nimport useDate from '../../hooks/date';\n\nexport default function MemoryDate({ editable, prevDate, handleDateUpdate }) {\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n  const [date, setDate, handleDateChange] = useDate(prevDate);\n\n  useEffect(() => {\n    setEdit(editable);\n    setDate(prevDate);\n    setStartEdit(false);\n  }, [editable, prevDate]);\n\n  if (!edit && !startEdit) {\n    return <Typography>{date}</Typography>;\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'center' }} spacing={2}>\n        <Typography>{date}</Typography>\n        <EditIcon fontSize=\"medium\" onClick={() => setStartEdit(true)} />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'flex-end', justifyContent: 'flex-start', mt: 3 }} spacing={2}>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <DatePicker\n            label=\"Memory Date\"\n            value={date}\n            onChange={handleDateChange}\n            placeholder=\"dd/MM/yyyy\"\n            inputFormat=\"dd/MM/yyyy\"\n            maxDate={new Date()}\n            renderInput={(props) => (\n              <TextField\n                readOnly\n                required\n          // eslint-disable-next-line react/jsx-props-no-spreading\n                {...props}\n              />\n            )}\n          />\n        </LocalizationProvider>\n        <DoneTwoToneIcon\n          fontSize=\"medium\"\n          onClick={() => {\n            handleDateUpdate(date);\n            setStartEdit(false);\n          }}\n        />\n        <ClearIcon fontSize=\"medium\" onClick={() => { setDate(prevDate); setStartEdit(false); }} />\n      </Stack>\n    );\n  }\n}\n\nMemoryDate.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  prevDate: PropTypes.string.isRequired,\n  handleDateUpdate: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Box from '@mui/material/Box';\nimport useStory from '../../hooks/story';\nimport './memory.css';\n\nexport default function MemoryStory({ editable, prevStory, handleStoryUpdate }) {\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n  const [story, setStory, handleStoryChange] = useStory(prevStory);\n  const storyRef = useRef();\n\n  useEffect(() => {\n    setEdit(editable);\n    setStory(prevStory);\n    setStartEdit(false);\n  }, [editable, prevStory]);\n\n  if (!edit && !startEdit) {\n    return (\n      <Typography style={{ whiteSpace: 'pre-wrap' }}>{story}</Typography>\n    );\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"column\" spacing={2}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'muted.main' }}>Edit Story</Typography>\n          <EditIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              setStartEdit(true);\n            }}\n          />\n        </Stack>\n        <Divider sx={{ width: 1 }} />\n        <Typography style={{ whiteSpace: 'pre-wrap' }}>{story}</Typography>\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"column\" spacing={2}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'muted.main' }}>Editing Story</Typography>\n          <DoneTwoToneIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              handleStoryUpdate(story);\n              setStartEdit(false);\n            }}\n          />\n          <ClearIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              setStory(prevStory);\n              setStartEdit(false);\n            }}\n          />\n        </Stack>\n        <Divider sx={{ width: 1 }} />\n        <Box\n          sx={{\n            p: 2,\n            m: 1,\n            my: 2,\n            border: 1,\n            borderColor: 'primary.main',\n            bgcolor: 'input.background',\n            minHeight: '70vh',\n            borderRadius: 5,\n            width: '90%',\n          }}\n          onClick={() => storyRef.current.focus()}\n        >\n          <TextareaAutosize\n            autoFocus\n            aria-label=\"minimum height\"\n            placeholder=\"Tell your story...\"\n            value={story}\n            onChange={handleStoryChange}\n            style={{\n              width: '100%',\n              minHeight: '184px',\n              maxHeight: '70vh',\n              boxSizing: 'border-box',\n              paddingTop: '5px',\n              border: 0,\n              overflow: 'auto',\n              outline: 'none',\n              resize: 'vertical',\n              borderRadius: 5,\n              '&:focus': {\n                border: 0,\n              },\n            }}\n            ref={storyRef}\n          />\n\n        </Box>\n      </Stack>\n    );\n  }\n}\n\nMemoryStory.propTypes = {\n  prevStory: PropTypes.string.isRequired,\n  editable: PropTypes.bool.isRequired,\n  handleStoryUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport PhotoAlbum from 'react-photo-album';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport Button from '@mui/material/Button';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { alpha } from '@mui/material/styles';\n\nfunction OptionsButton({\n  children, onClick, name, updateOp,\n}) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: (updateOp === name) ? 'button.main' : 'muted.main',\n        borderRadius: 5,\n        backgroundColor: (updateOp === name) ? 'primary.main' : 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: (updateOp === name) ? 'button.main' : 'muted.main',\n          backgroundColor: (updateOp === name) ? 'primary.main' : 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nfunction AddPhotos({ handleChange, onClick, updateOp }) {\n  return (\n    <OptionsButton onClick={onClick} name=\"add\" updateOp={updateOp}>\n      <input type=\"file\" hidden multiple accept=\"image/*\" onChange={handleChange} />\n      <AddPhotoIcon sx={{ fontSize: '1.5rem' }} />\n      Add\n    </OptionsButton>\n  );\n}\n\nfunction MemoryPhotoAlbum({ images, handlePhotoClick, renderPhoto }) {\n  const [arrangement, setArrangement] = useState(null);\n  useEffect(() => {\n    let twidth = 0;\n    let theight = 0;\n    images.forEach(({ height, width }) => {\n      if (height > width) theight += 1;\n      else twidth += 1;\n    });\n    if (twidth > theight) setArrangement('rows');\n    else setArrangement('columns');\n  }, [images]);\n\n  return renderPhoto ? (\n    <PhotoAlbum\n      layout={arrangement}\n      photos={images}\n      onClick={handlePhotoClick}\n      spacing={2}\n      renderPhoto={renderPhoto}\n    />\n  ) : (\n    <PhotoAlbum\n      layout={arrangement}\n      photos={images}\n      onClick={handlePhotoClick}\n      spacing={2}\n    />\n  );\n}\n\nexport default function MemoryImages({\n  editable, images, handlePhotoClick, handleThumbnailUpdate, deleteImage, addImage,\n}) {\n  const [edit, setEdit] = useState(editable);\n  const [updateOp, setUpdateOp] = useState(null);\n  const [thumbnail, setThumbnail] = useState(null);\n\n  const handleOpUpdate = (op) => {\n    if (updateOp === op) {\n      setUpdateOp(null);\n    } else {\n      setUpdateOp(op);\n    }\n  };\n\n  useEffect(() => {\n    setEdit(editable);\n    setUpdateOp(null);\n  }, [editable]);\n\n  const handleThumbnailChange = (name) => {\n    setThumbnail(name);\n    const thumbnailImage = images.find((image) => image.alt === name);\n    handleThumbnailUpdate(thumbnailImage);\n  };\n\n  const handleImageDelete = (name) => {\n    const deleted = images.find((image) => image.alt === name);\n    deleteImage(deleted);\n  };\n\n  const renderPhotosWithDeleteIcon = ({\n    layout,\n    imageProps: { alt, style, ...restImageProps },\n  }) => (\n    <Button component=\"div\">\n      <img\n        alt={alt}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        style={{ ...style, width: layout.width, padding: 0 }}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        {...restImageProps}\n      />\n      <IconButton\n        size=\"medium\"\n        sx={{\n          color: 'black',\n          bgcolor: alpha('#fff', 0.4),\n          position: 'absolute',\n          top: 10,\n          right: 12,\n        }}\n        onClick={() => handleImageDelete(alt)}\n      >\n        <CloseIcon size=\"medium\" />\n      </IconButton>\n    </Button>\n  );\n\n  const renderPhotosWithRadioButton = ({\n    layout,\n    imageProps: { alt, style, ...restImageProps },\n  }) => (\n    <Button component=\"div\">\n      <img\n        alt={alt}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        style={{ ...style, width: layout.width, padding: 0 }}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        {...restImageProps}\n      />\n      <FormControlLabel\n        control={<Radio />}\n        label=\"\"\n        checked={alt === thumbnail}\n        onChange={() => handleThumbnailChange(alt)}\n        sx={{\n          pr: 1,\n          position: 'absolute',\n          bgcolor: alpha('#fff', 0.6),\n          color: 'black',\n          borderRadius: '0px 5px 5px 0px',\n          borderColor: 'secondary.main',\n          borderLeft: 0,\n          bottom: 20,\n          left: 15,\n        }}\n      />\n    </Button>\n  );\n\n  const OptionsRow = (\n    <Stack direction=\"row\" spacing={2}>\n      <AddPhotos handleChange={addImage} onClick={() => handleOpUpdate('add')} updateOp={updateOp} />\n      <OptionsButton onClick={() => handleOpUpdate('delete')} name=\"delete\" updateOp={updateOp}>\n        <DeleteIcon sx={{ fontSize: '1.5rem' }} />\n        Delete\n      </OptionsButton>\n      <OptionsButton onClick={() => handleOpUpdate('thumbnail')} name=\"thumbnail\" updateOp={updateOp}>Set Thumbnail</OptionsButton>\n    </Stack>\n  );\n\n  const updatePanel = (\n    <Stack direction=\"row\">\n      <Typography variant=\"h6\" color=\"muted.main\">\n        Images:\n        {images.length}\n      </Typography>\n    </Stack>\n  );\n\n  if (!edit) {\n    return (\n      <MemoryPhotoAlbum images={images} handlePhotoClick={handlePhotoClick} />\n    );\n  }\n\n  if (edit && updateOp === 'delete') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n          renderPhoto={renderPhotosWithDeleteIcon}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && updateOp === 'thumbnail') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n          renderPhoto={renderPhotosWithRadioButton}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && updateOp === 'add') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && !updateOp) {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum images={images} handlePhotoClick={handlePhotoClick} />\n      </Stack>\n    );\n  }\n}\n\nMemoryImages.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  handlePhotoClick: PropTypes.func.isRequired,\n  handleThumbnailUpdate: PropTypes.func.isRequired,\n  deleteImage: PropTypes.func.isRequired,\n  addImage: PropTypes.func.isRequired,\n};\n\nMemoryPhotoAlbum.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  handlePhotoClick: PropTypes.func.isRequired,\n  renderPhoto: PropTypes.func,\n};\n\nMemoryPhotoAlbum.defaultProps = {\n  renderPhoto: null,\n};\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  updateOp: PropTypes.string.isRequired,\n};\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Link from '@mui/material/Link';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Divider from '@mui/material/Divider';\nimport Box from '@mui/material/Box';\nimport MemoryCarousel from './MemoryCarousel';\nimport MemoryContentStructure from './ContentStructure';\nimport MemoryTitle from './MemoryTitle';\nimport MemoryDate from './MemoryDate';\nimport MemoryStory from './MemoryStory';\nimport MemoryImages from './MemoryImages';\nimport api from '../Api';\nimport SimpleSnackbar from '../../components/simple_snackbar';\nimport './memory.css';\n\nfunction BackButton({ preview }) {\n  if (preview === false) {\n    return (\n      <Stack\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        sx={{ backgroundColor: 'button.main', paddingX: 2, paddingY: 1 }}\n      >\n        <Link href=\"/\" underline=\"none\">\n          <Button\n            variant=\"contained\"\n            component=\"label\"\n            sx={{\n              color: 'primary.main',\n              backgroundColor: 'button.main',\n              padding: '6px 8px',\n              boxShadow: 0,\n              '&:hover': {\n                backgroundColor: 'button.main',\n              },\n            }}\n          >\n            <ArrowBackIcon size=\"medium\" sx={{ paddingRight: 1 }} />\n            <Typography variant=\"body1\" color=\"muted.main\">Memories</Typography>\n          </Button>\n        </Link>\n      </Stack>\n    );\n  }\n  return null;\n}\n\nexport default function MemoryContent({\n  memTitle,\n  memDate,\n  memStory,\n  memImages,\n  bucket,\n  memoryID,\n  authURL,\n  preview,\n}) {\n  const [open, setOpen] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [title, setTitle] = useState(memTitle);\n  const [date, setDate] = useState(memDate);\n  const [story, setStory] = useState(memStory);\n  const [images, setImages] = useState(memImages);\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n\n  const [newImages, setNewImages] = useState([]);\n  const [newImagesCount, setNewImagesCount] = useState(null);\n  const [errorUploadImages, setErrorUploadImages] = useState([]);\n  const [addImageOpen, setAddImageOpen] = useState(false);\n  const [uploadImageProgress, setUploadImageProgress] = useState(null);\n  const [uploadImageStatus, setUploadImageStatus] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  const [httpError, setHTTPError] = useState(false);\n\n  const maxSteps = images.length;\n\n  useEffect(() => setTitle(memTitle), [memTitle]);\n  useEffect(() => setDate(memDate), [memDate]);\n  useEffect(() => setStory(memStory), [memStory]);\n  useEffect(() => setImages(memImages), [memImages]);\n\n  const handleSnackMessage = (msg, error) => {\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const handleHTTPError = (response, operation, callback) => {\n    if (response.status === 401) {\n      handleSnackMessage('You have been logged out. Please login to continue.', true);\n    } else if (response.status === 403) {\n      handleSnackMessage('You do not have permissions to do this operation.', true);\n    } else {\n      handleSnackMessage(`Unknown error occured while ${operation}`, true);\n    }\n    callback(response.status);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const httpErrorCallback = (status) => {\n    setSnack(true);\n    setHTTPError(status);\n  };\n\n  const UpdateDetails = async (item, value) => {\n    try {\n      const resp = await api.updateMemoryDetails(\n        bucket,\n        authURL,\n        memoryID,\n        item,\n        value,\n      );\n      if (resp.ok) {\n        handleSnackMessage(`Memory ${item} updated successfully`, false);\n      } else {\n        handleHTTPError(resp, `updating ${item}`, httpErrorCallback);\n      }\n      setSnack(true);\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const UpdateThumbnail = async (image) => {\n    try {\n      const resp = await api.updateMemoryImage(\n        bucket,\n        authURL,\n        memoryID,\n        'thumbnail',\n        image,\n      );\n      if (resp.ok) {\n        handleSnackMessage('Thumbnail updated successfully', false);\n        setSnack(true);\n      } else {\n        handleHTTPError(resp, 'updating thumbnail', httpErrorCallback);\n      }\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const deleteImage = async (image) => {\n    try {\n      let resp;\n      if (images.length > 1) {\n        resp = await api.updateMemoryImage(\n          bucket,\n          authURL,\n          memoryID,\n          'delete',\n          image,\n        );\n        if (resp.ok) {\n          handleSnackMessage('Memory image deleted successfully', false);\n          setImages(images.filter((item) => item.title !== image.title));\n        } else {\n          handleHTTPError(resp, 'deleting image', httpErrorCallback);\n        }\n      } else {\n        handleSnackMessage('Atleast 1 image is needed for memory. Unable to delete', true);\n      }\n      setSnack(true);\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const addImage = async (details) => {\n    try {\n      const resp = await api.updateMemoryImage(\n        bucket,\n        authURL,\n        memoryID,\n        'add',\n        details,\n      );\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const handleNewImages = async () => {\n    /* eslint-disable  no-await-in-loop, no-restricted-syntax */\n    for (const [index, img] of newImages.entries()) {\n      const [det, file, src] = img;\n      const putURL = await addImage(det).then((response) => {\n        if (response.ok) {\n          return response.text();\n        }\n        handleHTTPError(response, 'adding image', httpErrorCallback);\n        return '';\n      });\n      const photo = {\n        key: `memories/${memoryID}/images/${det.name}`,\n        src,\n        alt: det.name,\n        title: det.name,\n        width: det.width,\n        height: det.height,\n        images: [],\n      };\n      const uploadResp = await fetch(putURL, { body: file, method: 'PUT' });\n      if (uploadResp.ok) {\n        setUploadImageProgress(`Images uploaded: ${index + 1} / ${newImagesCount} `);\n        setImages((pics) => pics.concat([photo]));\n      } else {\n        setUploadImageStatus('Error while uploading memory image');\n        setErrorUploadImages((errImgs) => errImgs.concat([det.name]));\n        handleHTTPError(uploadResp, 'deleting image', httpErrorCallback);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    if (newImages.length > 0) {\n      setAddImageOpen(true);\n      setUploadImageProgress('Preparing images for upload....');\n    }\n    if (newImages.length === newImagesCount) {\n      await handleNewImages();\n      if (errorUploadImages.length > 0) {\n        setUploadImageStatus(`Error while uploading ${errorUploadImages.length} images`);\n      } else {\n        setUploadImageStatus(`${newImages.length} image(s) uploaded successfully`);\n      }\n      setErrorUploadImages([]);\n      setNewImagesCount(null);\n      setNewImages([]);\n      setTimeout(() => {\n        setAddImageOpen(false);\n        setUploadImageStatus(null);\n        setUploadImageProgress(null);\n      }, 3000);\n    }\n  }, [newImages]);\n\n  const handleImageAdd = async (event) => {\n    if (event.target.files) {\n      const files = Array.from(event.target.files);\n      setNewImagesCount(files.length);\n      if (images.length + files.length <= 15) {\n        files.forEach((file) => {\n          const image = new Image();\n          image.onload = async (e) => {\n            const height = e.target.naturalHeight;\n            const width = e.target.naturalWidth;\n            const size = file.size / (1024 * 1024);\n            const { name } = file;\n            const resImages = [500, 1000, 1500].map((resHeight) => ({\n              height: resHeight, width: Math.ceil((resHeight * width) / height),\n            }));\n            const creationDate = Date.now();\n            const newName = `${creationDate}-${name}`;\n            const imageDetails = [{\n              name: newName, size, height, width, images: resImages,\n            }, file, e.target.src];\n            setNewImages((pics) => pics.concat([imageDetails]));\n          };\n          image.src = URL.createObjectURL(file);\n        });\n        files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n      } else {\n        handleSnackMessage(`Unable to add ${files.length} images. Maximum images allowed per memory is 15`, true);\n        setSnack(true);\n      }\n    }\n  };\n\n  const updateTitle = (value) => {\n    const resp = UpdateDetails('title', value);\n    if (resp) {\n      setTitle(value);\n    }\n  };\n\n  const updateDate = (value) => {\n    const resp = UpdateDetails('date', value);\n    if (resp) {\n      setDate(value);\n    }\n  };\n\n  const updateStory = (value) => {\n    const resp = UpdateDetails('story', value);\n    if (resp) {\n      setStory(value);\n    }\n  };\n\n  const handleClose = () => setOpen(false);\n\n  const handleActiveIndexChange = (step) => setActiveIndex(step);\n\n  const handleBack = () => {\n    setActiveIndex(\n      (prevActiveStep) => (prevActiveStep - 1 + maxSteps) % maxSteps,\n    );\n  };\n\n  const handleNext = () => {\n    setActiveIndex((prevActiveStep) => (prevActiveStep + 1) % maxSteps);\n  };\n\n  const handlePhotoClick = (photo, event, index) => {\n    setOpen(true);\n    setActiveIndex(index);\n  };\n\n  const handleEditClick = () => setEdit(true);\n\n  const memoryTitle = (\n    <MemoryTitle\n      editable={edit}\n      text={title}\n      handleTitleUpdate={updateTitle}\n    />\n  );\n\n  const memoryDate = (\n    <MemoryDate editable={edit} prevDate={date} handleDateUpdate={updateDate} />\n  );\n\n  const storyLayout = (\n    <MemoryStory\n      editable={edit}\n      prevStory={story}\n      handleStoryUpdate={updateStory}\n    />\n  );\n\n  const photoLayout = (\n    <MemoryImages\n      editable={edit}\n      images={images}\n      handlePhotoClick={handlePhotoClick}\n      handleThumbnailUpdate={UpdateThumbnail}\n      deleteImage={deleteImage}\n      addImage={handleImageAdd}\n    />\n  );\n\n  const updateDone = (\n    <Button\n      variant=\"contained\"\n      component=\"label\"\n      onClick={() => setEdit(false)}\n      sx={{\n        color: 'primary.main',\n        borderRadius: 5,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n      }}\n    >\n      <DoneIcon size=\"medium\" sx={{ paddingRight: 1 }} />\n      <Typography variant=\"body1\" color=\"muted.main\">Edit</Typography>\n    </Button>\n  );\n\n  if (httpError === 401 && snack === false) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return (\n    <>\n      {edit ? (\n        <Stack\n          direction=\"row\"\n          justifyContent=\"flex-start\"\n          sx={{ backgroundColor: 'button.main', paddingX: 2, paddingY: 1 }}\n        >\n          {updateDone}\n        </Stack>\n      ) : <BackButton preview={preview} /> }\n      <Box\n        component=\"div\"\n        sx={{\n          backgroundColor: 'button.main',\n          margin: edit ? '5px' : 0,\n        }}\n      >\n        <MemoryContentStructure\n          header={memoryTitle}\n          subheader={memoryDate}\n          photoLayout={photoLayout}\n          storyLayout={storyLayout}\n          memoryID={memoryID}\n          bucket={bucket}\n          authURL={authURL}\n          handleEditClick={handleEditClick}\n          preview={preview}\n        />\n      </Box>\n      <MemoryCarousel\n        open={open}\n        title={title}\n        date={date}\n        images={images}\n        index={activeIndex}\n        handleNext={handleNext}\n        handleBack={handleBack}\n        handleClose={handleClose}\n        handleChange={handleActiveIndexChange}\n      />\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n        error={snackError}\n      />\n      <Dialog\n        open={addImageOpen}\n        fullWidth\n        sx={{\n          p: 1,\n        }}\n      >\n        <Card sx={{ maxWidth: 1, p: 1 }}>\n          <CardHeader title=\"Adding Images\" sx={{ textAlign: 'center' }} />\n          <Divider />\n          <CardContent>\n            <Typography variant=\"h6\" sx={{ color: 'muted.main' }}>{uploadImageProgress}</Typography>\n            <Stack justifyContent=\"center\" sx={{ py: 2 }}>\n              <Typography variant=\"h5\">{uploadImageStatus}</Typography>\n            </Stack>\n          </CardContent>\n        </Card>\n      </Dialog>\n\n    </>\n  );\n}\n\nMemoryContent.defaultProps = {\n  memTitle: 'Memory Title',\n  memDate: 'Memory Date',\n  memStory: 'Memory Text',\n};\n\nMemoryContent.propTypes = {\n  memTitle: PropTypes.string,\n  memDate: PropTypes.string,\n  memStory: PropTypes.string,\n  memoryID: PropTypes.string.isRequired,\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n  memImages: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  preview: PropTypes.bool.isRequired,\n};\n\nBackButton.propTypes = {\n  preview: PropTypes.bool.isRequired,\n};\n"],"names":["RemovePhotoIcon","size","handleClick","sx","color","bgcolor","alpha","position","top","right","onClick","defaultProps","SnackText","message","error","direction","spacing","justifyContents","alignItems","fontSize","SimpleSnackbar","snackBarOpen","onClose","useState","open","setOpen","snackMessage","setSnackMessage","useEffect","handleClose","action","autoHideDuration","anchorOrigin","vertical","horizontal","useDate","initialDate","date","setDate","e","newDate","Date","formattedDate","toLocaleDateString","day","month","year","useStory","initialState","story","setStory","event","target","value","useTitle","initialValue","title","setTitle","ActionIcon","icon","label","Box","IconButton","Confirm","confirm","handleCallback","handleCloseCallback","Dialog","backgroundColor","DialogTitle","p","Typography","pb","Stack","Button","variant","DeleteMemoryIcon","Delete","ConfirmDelete","callback","closeCallback","bucket","authURL","memoryID","memoryDeleteCallback","api","deleteResults","console","log","UpdateMemoryIcon","Edit","useEmail","items","setItems","setValue","setError","isInList","email","includes","evt","key","preventDefault","val","trim","err","test","isEmail","isValid","item","prevItems","filter","i","emails","clipboardData","getData","match","toBeAdded","EmailInput","handleKeyDown","handleChange","handleDelete","handlePaste","mb","TextField","id","placeholder","onKeyDown","onChange","onPaste","helperText","my","Grid","container","map","Chip","onDelete","margin","NewShares","handleSubmit","StatusTable","invitation","accept","colorMap","pending","sent","failed","rejected","accepted","Table","TableHead","TableRow","TableCell","align","TableBody","CheckboxCell","selected","checked","setChecked","padding","Checkbox","PersonalDetailsCell","picture","name","component","scope","avatar","Avatar","alt","src","referrerPolicy","b","maxWidth","ExpandStatusIconCell","style","paddingBottom","paddingTop","colSpan","ExpandLess","ExpandCircleDown","ShareeRow","isSelected","onCheckBoxClick","border","Collapse","in","timeout","unmountOnExit","gutterBottom","SelectAllCheckboxCell","numSelected","rowCount","onSelectAllClick","indeterminate","TableHeader","handleUnshareClick","fontWeight","textTransform","disabled","ExistingShares","shareData","onUnShare","setNumSelected","Array","sharees","length","fill","setSelected","TableContainer","Paper","unshareEmails","push","sharee","index","details","username","status","ind","prevSelected","slice","CloseButton","theme","palette","grey","Close","ShareMemoryIcon","Share","ShareComponent","memoryShareCallback","memoryUnShareCallback","setShareData","data","shareResults","handleUnshare","existingShares","m","Divider","MemoryActions","actionComponent","snackBar","handleEditClick","anchorEl","setAnchorEl","setAction","Boolean","MoreVert","currentTarget","Menu","MenuListProps","borderRadius","MenuItem","MemoryContentStructure","className","header","subheader","photoLayout","storyLayout","preview","snack","setSnack","snackError","setSnackError","useTheme","useMediaQuery","breakpoints","down","handleSnackMessage","msg","actions","deleteMemory","results","ok","to","replace","Card","boxShadow","CardHeader","display","justifyContent","flexDirection","lg","xs","height","width","overflowY","mt","px","EnhancedSwipeableViews","bindKeyboard","autoPlay","virtualize","SwipeableViews","MemoryImageSlide","images","handleNext","handleStepChange","activeStep","setActiveStep","loadedImages","setLoadedImages","setDisplay","handleImageLoad","prevLoaded","onChangeIndex","enableMouseEvents","animateTransitions","interval","slideRenderer","props","virtNum","count","total","modulus","mod","srcSet","join","onLoad","boxSizing","cursor","objectFit","NextPic","edge","transform","KeyboardArrowRight","PreviousPic","left","KeyboardArrowLeft","MemoryCarousel","handleBack","fullScreen","MemoryTitle","editable","text","handleTitleUpdate","handleTitleChange","edit","setEdit","startEdit","setStartEdit","defaultValue","DoneTwoTone","Clear","MemoryDate","prevDate","handleDateUpdate","handleDateChange","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","inputFormat","maxDate","renderInput","readOnly","required","MemoryStory","prevStory","handleStoryUpdate","handleStoryChange","storyRef","useRef","whiteSpace","borderColor","minHeight","current","focus","TextareaAutosize","autoFocus","maxHeight","overflow","outline","resize","ref","OptionsButton","children","updateOp","AddPhotos","type","hidden","multiple","MemoryPhotoAlbum","handlePhotoClick","renderPhoto","arrangement","setArrangement","twidth","theight","forEach","layout","photos","MemoryImages","handleThumbnailUpdate","deleteImage","addImage","setUpdateOp","thumbnail","setThumbnail","handleOpUpdate","op","OptionsRow","updatePanel","imageProps","restImageProps","deleted","find","image","handleImageDelete","FormControlLabel","control","Radio","thumbnailImage","handleThumbnailChange","pr","borderLeft","bottom","BackButton","paddingX","paddingY","Link","href","underline","ArrowBack","paddingRight","MemoryContent","memTitle","memDate","memStory","memImages","activeIndex","setActiveIndex","setImages","newImages","setNewImages","newImagesCount","setNewImagesCount","errorUploadImages","setErrorUploadImages","addImageOpen","setAddImageOpen","uploadImageProgress","setUploadImageProgress","uploadImageStatus","setUploadImageStatus","httpError","setHTTPError","maxSteps","handleHTTPError","response","operation","httpErrorCallback","UpdateDetails","resp","UpdateThumbnail","handleNewImages","entries","img","det","file","then","putURL","photo","fetch","body","method","uploadResp","pics","concat","errImgs","setTimeout","handleImageAdd","files","from","Image","onload","naturalHeight","naturalWidth","resImages","resHeight","Math","ceil","creationDate","now","newName","imageDetails","URL","createObjectURL","revokeObjectURL","memoryTitle","memoryDate","updateDone","Done","prevActiveStep","step","fullWidth","textAlign","CardContent","py"],"sourceRoot":""}