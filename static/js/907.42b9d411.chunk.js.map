{"version":3,"file":"static/js/907.42b9d411.chunk.js","mappings":"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","sources":["pages/MemoryThumbnail.jsx","pages/MemoryThumbnailCard.jsx","pages/memory/create/ToggleViewMode.jsx","components/FormStepper.jsx","pages/memory/MemoryUtils.jsx","pages/memory/create/PreviewCardHeader.jsx","components/NavigationButton.jsx","components/FormStepperNavigation.jsx","components/BoxForm.jsx","pages/memory/create/TitleDateForm.jsx","components/ErrorText.jsx","components/ThumbnailChooser.jsx","pages/memory/create/SelectedImage.jsx","pages/memory/create/ImagePreviewer.jsx","pages/memory/create/ImageSelector.jsx","pages/memory/create/ImageForm.jsx","pages/memory/create/StoryEditor.jsx","pages/memory/create/StoryForm.jsx","pages/memory/create/CreateMemoryProgress.jsx","pages/memory/create/ModeContent.jsx","hooks/formStep.jsx","hooks/selectedImages.jsx","hooks/progressMessage.jsx","pages/memory/create/CreateMemoryForm.jsx","pages/memory/create/PreviewMemory.jsx","pages/memory/create/CreateMemory.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Typography from '@mui/material/Typography';\nimport MemoryThumbnailCard from './MemoryThumbnailCard';\n\nfunction ThumbnailImage({\n  imageSrc, imageSrcSet, title, handleImageLoad,\n}) {\n  return (\n    <CardMedia\n      component=\"img\"\n      src={imageSrc}\n      srcSet={imageSrcSet}\n      alt={title}\n      sx={{\n        borderColor: 'muted.main',\n        borderRadius: 4,\n        textAlign: 'center',\n        objectFit: 'cover',\n        height: {\n          lg: 270,\n          sm: 220,\n          xs: 170,\n        },\n      }}\n      onLoad={handleImageLoad}\n    />\n  );\n}\n\nfunction ThumbnailDetails({ title, date }) {\n  return (\n    <CardContent>\n      <CardHeader\n        disableTypography\n        title={(\n          <Typography\n            noWrap\n            sx={{\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              width: { xs: 'calc(75%)', sm: 'calc(100%)' },\n              fontWeight: 600,\n            }}\n          >\n            {title}\n          </Typography>\n        )}\n        subheader={<Typography sx={{ color: 'muted.main' }}>{date}</Typography>}\n        sx={{\n          padding: 0,\n          color: 'faded.black',\n        }}\n      />\n    </CardContent>\n  );\n}\n\nexport default function MemoryThumbnail({\n  title,\n  date,\n  thumbnailImage,\n  thumbnailImageSrcSet,\n  handleClick,\n  handleImageLoad,\n}) {\n  return (\n    <MemoryThumbnailCard handleClick={handleClick}>\n      <ThumbnailImage\n        imageSrc={thumbnailImage}\n        imageSrcSet={thumbnailImageSrcSet}\n        title={title}\n        handleImageLoad={handleImageLoad}\n      />\n      <ThumbnailDetails title={title} date={date} />\n    </MemoryThumbnailCard>\n  );\n}\n\nThumbnailDetails.defaultProps = {\n  title: 'Memory Thumbnail Image',\n  date: 'Memory Date',\n};\n\nThumbnailDetails.propTypes = {\n  title: PropTypes.string,\n  date: PropTypes.string,\n};\n\nThumbnailImage.defaultProps = {\n  title: 'Memory Thumbnail Image',\n  imageSrc: '',\n  imageSrcSet: '',\n  handleImageLoad: () => {},\n};\n\nThumbnailImage.propTypes = {\n  title: PropTypes.string,\n  imageSrc: PropTypes.string,\n  imageSrcSet: PropTypes.string,\n  handleImageLoad: PropTypes.func,\n};\n\nMemoryThumbnail.defaultProps = {\n  thumbnailImageSrcSet: '',\n  handleImageLoad: () => {},\n};\n\nMemoryThumbnail.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  date: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  thumbnailImage: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  thumbnailImageSrcSet: PropTypes.string,\n  handleImageLoad: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardActionArea from '@mui/material/CardActionArea';\n//  import { useTheme, alpha } from '@mui/material/styles';\n\nexport default function MemoryThumbnailCard({ handleClick, children }) {\n  //  const theme = useTheme();\n\n  return (\n    <CardActionArea onClick={handleClick}>\n      <Card\n        elevation={0}\n        sx={{\n          bgcolor: '#fff',\n          borderRadius: 5,\n          border: '2px solid gray',\n          color: 'black',\n          position: 'relative',\n          height: {\n            lg: 350,\n            sm: 300,\n            xs: 250,\n          },\n          '&:hover': {\n            border: 3,\n            borderColor: 'secondary.main',\n            elevation: 0,\n          },\n        }}\n      >\n        {children}\n      </Card>\n    </CardActionArea>\n  );\n}\n\nMemoryThumbnailCard.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport Typography from '@mui/material/Typography';\n\nexport default function ToggleViewMode({ mode, handleModeChange, modes }) {\n  return (\n    <Divider>\n      <Box sx={{ display: 'flex', justifyContent: 'center', p: 2 }}>\n        <ToggleButtonGroup\n          exclusive\n          value={mode}\n          aria-label=\"view-change\"\n          color=\"primary\"\n          sx={{ bgcolor: 'button.main' }}\n\n        >\n          {modes.map((modeName) => (\n            <ToggleButton\n              key={modeName}\n              value={modeName}\n              onClick={() => handleModeChange(`${modeName}`)}\n              sx={{ border: 2, borderColor: 'primary.main' }}\n            >\n              <Typography variant=\"h6\">{modeName}</Typography>\n            </ToggleButton>\n          ))}\n        </ToggleButtonGroup>\n      </Box>\n    </Divider>\n  );\n}\n\nToggleViewMode.propTypes = {\n  mode: PropTypes.string.isRequired,\n  handleModeChange: PropTypes.func.isRequired,\n  modes: PropTypes.PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\n\nexport default function FormStepper({ titles, activeStep, handleClick }) {\n  return (\n    <Stepper\n      activeStep={activeStep}\n      alternativeLabel\n      sx={{ py: 4 }}\n    >\n      {titles.map((label, index) => (\n        <Step key={label} onClick={handleClick(index)}>\n          <StepLabel>{label}</StepLabel>\n        </Step>\n      ))}\n    </Stepper>\n  );\n}\n\nFormStepper.propTypes = {\n  titles: PropTypes.arrayOf(PropTypes.string).isRequired,\n  activeStep: PropTypes.number.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import api from '../Api';\n\nfunction UploadImages(\n  bucket,\n  authURL,\n  memoryKey,\n  title,\n  imageDetails,\n  imageFiles,\n  incrementImageCount,\n) {\n  const paramList = imageDetails.map((detail, index) => {\n    const imgFile = imageFiles[index];\n    return {\n      Key: ['memories', memoryKey, 'images', detail.name].join('/'),\n      Body: imgFile,\n      ContentType: imgFile.type,\n    };\n  });\n  const uploadPromises = api.uploadMultipleImages(bucket, authURL, paramList, incrementImageCount);\n  return Promise.allSettled(uploadPromises);\n}\n\nasync function ValidateDetails(bucket, authURL, memoryDetails) {\n  const detailsJSON = JSON.stringify(memoryDetails);\n  const validateResp = await api.validateDetails(bucket, authURL, detailsJSON);\n  if (validateResp.status === 'error') {\n    return false;\n  }\n  return validateResp.Valid === true;\n}\n\nasync function UploadDetails(bucket, authURL, memoryDetails) {\n  const detailsJSON = JSON.stringify(memoryDetails);\n  const memoryDetailsKey = ['memories', memoryDetails.key, 'details.json'].join('/');\n  const uploadResp = await api.upload(bucket, authURL, memoryDetailsKey, detailsJSON);\n  return (uploadResp && uploadResp.ok === true);\n}\n\nconst InitializeMemory = async (\n  bucket,\n  authURL,\n  memoryDetails,\n  handleProgress,\n  updateMessageStatus,\n  addMessage,\n) => {\n  handleProgress(0);\n  addMessage('Initializing memory', false);\n  const valid = await ValidateDetails(bucket, authURL, memoryDetails);\n  let initRes;\n  if (valid === true) {\n    initRes = await UploadDetails(bucket, authURL, memoryDetails);\n    updateMessageStatus('Initializing Memory', initRes);\n    handleProgress(10);\n  } else {\n    updateMessageStatus('Initializing Memory', 'failed');\n  }\n  return valid;\n};\n\nconst HandleImages = async (\n  bucket,\n  authURL,\n  memoryKey,\n  title,\n  imageDetails,\n  imageFiles,\n  incrementImageCount,\n  handleProgress,\n) => {\n  const imagesResults = await UploadImages(\n    bucket,\n    authURL,\n    memoryKey,\n    title,\n    imageDetails,\n    imageFiles,\n    incrementImageCount,\n  );\n  for (let i = 0; i < imagesResults.length; i += 1) {\n    if ((imagesResults[i].status === 'rejected') || (imagesResults[i].value.ok !== true)) {\n      return false;\n    }\n  }\n  handleProgress(95);\n  return true;\n};\n\nconst CreateMemory = async (\n  bucket,\n  authURL,\n  memoryDetails,\n  handleProgress,\n  updateMessageStatus,\n  addMessage,\n  imageFiles,\n  incrementImageCount,\n) => {\n  // Validate details and upload if valid\n  const initMemResults = await InitializeMemory(\n    bucket,\n    authURL,\n    memoryDetails,\n    handleProgress,\n    updateMessageStatus,\n    addMessage,\n  );\n\n  let imagesResults;\n  if (initMemResults === true) {\n    // Upload original images\n    imagesResults = await HandleImages(\n      bucket,\n      authURL,\n      memoryDetails.key,\n      memoryDetails.title,\n      memoryDetails.imageDetails,\n      imageFiles,\n      incrementImageCount,\n      handleProgress,\n    );\n\n    if (imagesResults === true) {\n      const finalizeResults = await api.finalizeMemory(bucket, authURL, memoryDetails.key);\n      if (parseInt(finalizeResults.MemoryID, 10) !== memoryDetails.key) {\n        return false;\n      }\n      return true;\n    }\n    updateMessageStatus('Uploading Original Images', 'failed');\n  }\n\n  return false;\n};\n\nexport default { CreateMemory };\n","import PropTypes from 'prop-types';\nimport CardHeader from '@mui/material/CardHeader';\n\nexport default function PreviewCardHeader({ title }) {\n  return (\n    <CardHeader\n      title={title}\n      sx={{\n        border: 0,\n        borderColor: 'primary.main',\n        textAlign: 'center',\n        width: 1,\n        mb: 1,\n        bgcolor: 'button.main',\n        p: 0,\n        py: 2,\n        borderRadius: 2,\n      }}\n    />\n  );\n}\n\nPreviewCardHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\n\nexport default function NavigationButton({ label, handleClick, disabled }) {\n  return (\n    <Button\n      onClick={handleClick}\n      disabled={disabled}\n      sx={{\n        m: 2,\n        border: 2,\n        borderColor: disabled ? 'muted.main' : 'ternary.main',\n        borderRadius: 5,\n        bgcolor: 'input.background',\n      }}\n    >\n      {label}\n    </Button>\n  );\n}\n\nNavigationButton.defaultProps = {\n  disabled: false,\n};\n\nNavigationButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport NavigationButton from 'components/NavigationButton';\n\nexport default function FormStepperNavigation({\n  handleNext, handlePrevious, isLast, isFirst,\n}) {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'row',\n        pt: 2,\n        width: 1,\n        justifyContent: 'space-evenly',\n      }}\n    >\n      { isFirst ? (\n        <NavigationButton disabled handleClick={() => {}} label=\"Back\" />\n      ) : (\n        <NavigationButton handleClick={handlePrevious} label=\"Back\" />\n      )}\n      { isLast ? (\n        <NavigationButton handleClick={handleNext} label=\"Create Memory\" />\n      ) : (\n        <NavigationButton handleClick={handleNext} label=\"Next\" />\n      )}\n    </Box>\n  );\n}\n\nFormStepperNavigation.propTypes = {\n  handleNext: PropTypes.func.isRequired,\n  handlePrevious: PropTypes.func.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isFirst: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\n\nexport default function BoxForm({ children }) {\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': {\n          m: 1, maxWidth: '90%', width: '45ch',\n        },\n        '& .MuiOutlinedInput-root': {\n          backgroundColor: 'form.input',\n          borderRadius: 5,\n        },\n        flexDirection: 'column',\n        display: 'flex',\n        alignItems: 'center',\n        width: 'auto',\n        pt: 2,\n      }}\n      autoComplete=\"true\"\n    >\n      {children}\n    </Box>\n  );\n}\n\nBoxForm.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n\nimport * as yup from 'yup';\n\nimport FormStepperNavigation from 'components/FormStepperNavigation';\nimport BoxForm from 'components/BoxForm';\n\nexport default function TitleDateForm({\n  title,\n  date,\n  handleTitleChange,\n  handleDateChange,\n  handleNext,\n  handlePrevious,\n  isLast,\n  isFirst,\n  activeStep,\n}) {\n  const [titleError, setTitleError] = useState('');\n  const [dateError, setDateError] = useState('');\n\n  const [titleTouched, setTitleTouched] = useState(false);\n  const [dateTouched, setDateTouched] = useState(false);\n\n  const titleSchema = yup.object({\n    title: yup.string().required('Memory Title is required').max(40, 'Maximum length of memory title is 40'),\n  }).required();\n\n  const dateSchema = yup.object({\n    date: yup.date('Enter date by clicking calendar icon on the right end of date picker')\n      .required('Memory Date is required').nullable(),\n  }).required();\n  const isFieldValid = async (key, value, setFieldError, schema) => {\n    let hasError = false;\n    const testField = await schema\n      .validate({ [key]: value }, { abortEarly: false })\n      .catch((error) => error);\n    setFieldError('');\n    if (testField.inner) {\n      testField.inner.forEach((error) => setFieldError(error.message));\n      hasError = true;\n    }\n    return !hasError;\n  };\n\n  const isValid = async () => {\n    const titleValid = await isFieldValid('title', title, setTitleError, titleSchema);\n    const dateValid = await isFieldValid('date', date, setDateError, dateSchema);\n    return titleValid && dateValid;\n  };\n\n  useEffect(() => {\n    if (titleTouched) {\n      isFieldValid('title', title, setTitleError, titleSchema);\n    }\n    if (dateTouched) {\n      isFieldValid('date', date, setDateError, dateSchema);\n    }\n  }, [title, date]);\n\n  const submitForm = async (handleCallback) => {\n    const valid = await isValid();\n    if (valid) {\n      handleCallback();\n    }\n  };\n\n  const onTitleChange = (event) => {\n    setTitleTouched(true);\n    handleTitleChange(event);\n  };\n\n  const onDateChange = (event) => {\n    setDateTouched(true);\n    handleDateChange(event);\n  };\n\n  return (\n    <BoxForm>\n      <TextField\n        required\n        onChange={onTitleChange}\n        id=\"outlined-required\"\n        label=\"Memory Name\"\n        defaultValue={title}\n        helperText={titleError || \"E.g. Gogol's 2nd Birthday\"}\n        error={!!titleError}\n      />\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DatePicker\n          label=\"Memory Date\"\n          value={date}\n          onChange={onDateChange}\n          placeholder=\"dd/MM/yyyy\"\n          inputFormat=\"dd/MM/yyyy\"\n          maxDate={new Date()}\n          renderInput={(props) => (\n            <TextField\n              readOnly\n              required\n          // eslint-disable-next-line react/jsx-props-no-spreading\n              {...props}\n              error={!!dateError}\n              helperText={dateError || ''}\n            />\n          )}\n        />\n      </LocalizationProvider>\n      <FormStepperNavigation\n        activeStep={activeStep}\n        handleNext={() => submitForm(handleNext)}\n        handlePrevious={handlePrevious}\n        isLast={isLast}\n        isFirst={isFirst}\n      />\n    </BoxForm>\n  );\n}\n\nTitleDateForm.defaultProps = {\n  date: '',\n};\n\nTitleDateForm.propTypes = {\n  activeStep: PropTypes.number.isRequired,\n  date: PropTypes.string,\n  isLast: PropTypes.bool.isRequired,\n  isFirst: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n\n  handleDateChange: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handlePrevious: PropTypes.func.isRequired,\n  handleTitleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\n\nexport default function ErrorText({ text }) {\n  return (\n    <Typography sx={{ color: 'error.main' }}>\n      { text }\n    </Typography>\n  );\n}\n\nErrorText.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Radio from '@mui/material/Radio';\nimport { alpha } from '@mui/material/styles';\n\nexport default function ThumbnailChooser({ index, thumbnail, handleThumbnailChange }) {\n  return (\n    <FormControlLabel\n      control={<Radio />}\n      label=\"Thumbnail\"\n      checked={thumbnail === index}\n      onChange={() => handleThumbnailChange(index)}\n      sx={{\n        pr: 1,\n        position: 'absolute',\n        bgcolor: alpha('#fff', 0.6),\n        color: 'black',\n        borderRadius: '0px 5px 5px 0px',\n        borderColor: 'secondary.main',\n        borderLeft: 0,\n        bottom: 20,\n        left: 15,\n      }}\n    />\n  );\n}\n\nThumbnailChooser.propTypes = {\n  index: PropTypes.number.isRequired,\n  thumbnail: PropTypes.number.isRequired,\n  handleThumbnailChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\n\nexport default function SelectedImage({\n  photo, index, setDimensions, thumbnail, resizeHeights,\n}) {\n  const handleImageOnload = (event, heights) => {\n    const originalWidth = event.target.naturalWidth;\n    const originalHeight = event.target.naturalHeight;\n    const images = heights.map((height) => ({\n      height, width: Math.ceil((height * originalWidth) / originalHeight),\n    }));\n    setDimensions(index, images);\n  };\n\n  return (\n    <Box\n      component=\"img\"\n      onLoad={(event) => handleImageOnload(event, resizeHeights)}\n      sx={{\n        border: (thumbnail === index) ? 4 : 0,\n        borderColor: 'primary.main',\n        borderRadius: (thumbnail === index) ? 5 : 0,\n        mb: 1,\n        '&:hover': {\n          border: 5,\n          borderColor: 'secondary.main',\n        },\n      }}\n      src={photo}\n      alt={photo.name}\n      height=\"140px\"\n      width=\"140px\"\n      fit=\"crop\"\n      auto=\"format\"\n      loading=\"lazy\"\n    />\n  );\n}\n\nSelectedImage.propTypes = {\n  photo: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  thumbnail: PropTypes.number.isRequired,\n  resizeHeights: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Divider from '@mui/material/Divider';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nimport RemovePhotoIcon from 'components/RemovePhotoIcon';\nimport ThumbnailChooser from 'components/ThumbnailChooser';\nimport SelectedImage from './SelectedImage';\n\nexport default function ImagePreviewer({\n  imageDetails,\n  handleRemoveImage,\n  thumbnail,\n  handleThumbnailChange,\n  setDimensions,\n  resizeHeights,\n}) {\n  return imageDetails.length\n    ? (\n      <>\n        <Divider />\n        <Typography sx={{ p: 2 }} variant=\"h6\" align=\"center\">\n          Selected Images\n        </Typography>\n        <Grid\n          container\n          alignItems=\"center\"\n          justifyContent=\"space-around\"\n          sx={{ p: 1 }}\n        >\n          {imageDetails.map((photo, index) => (\n            <Button key={photo.url} component=\"div\">\n              <SelectedImage\n                photo={photo.url}\n                index={index}\n                setDimensions={setDimensions}\n                thumbnail={thumbnail}\n                resizeHeights={resizeHeights}\n              />\n              <RemovePhotoIcon handleClick={() => handleRemoveImage(index)} />\n              <ThumbnailChooser\n                index={index}\n                thumbnail={thumbnail}\n                handleThumbnailChange={handleThumbnailChange}\n              />\n            </Button>\n          ))}\n        </Grid>\n      </>\n    )\n    : null;\n}\n\nImagePreviewer.propTypes = {\n  imageDetails: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    url: PropTypes.string,\n    size: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n  handleRemoveImage: PropTypes.func.isRequired,\n  thumbnail: PropTypes.number.isRequired,\n  handleThumbnailChange: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  resizeHeights: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport AddAPhotoIcon from '@mui/icons-material/AddAPhoto';\n\nexport default function ImageSelector({ handleChange }) {\n  return (\n    <Box sx={{ display: 'flex', justifyContent: 'center', pb: 1 }}>\n      <Button\n        variant=\"contained\"\n        component=\"label\"\n        color=\"button\"\n        sx={{\n          borderRadius: 5, border: 2, borderColor: 'primary.main', backgroundColor: 'input.background',\n        }}\n      >\n        <input type=\"file\" hidden multiple accept=\"image/*\" onChange={handleChange} />\n        <Typography variant=\"h6\">Add Pictures</Typography>\n        <AddAPhotoIcon sx={{ fontSize: '2.5rem' }} />\n      </Button>\n    </Box>\n  );\n}\n\nImageSelector.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Divider from '@mui/material/Divider';\n\nimport FormStepperNavigation from 'components/FormStepperNavigation';\nimport BoxForm from 'components/BoxForm';\nimport ErrorText from 'components/ErrorText';\nimport ImagePreviewer from './ImagePreviewer';\nimport ImageSelector from './ImageSelector';\n\nexport default function ImageForm({\n  imageDetails,\n  thumbnail,\n  handleSelectedImageChange,\n  handleThumbnailChange,\n  removeSelectedImage,\n  handleNext,\n  handlePrevious,\n  isLast,\n  isFirst,\n  setDimensions,\n  resizeHeights,\n}) {\n  const maxAllowedImages = 15;\n  const minAllowedImages = 1;\n  const [imageError, setImageError] = useState('');\n  const [touched, setTouched] = useState(false);\n  const [totalImages, setTotalImages] = useState(0);\n  const [open, setOpen] = useState(false);\n\n  function isValid() {\n    let valid = true;\n    setImageError('');\n    if (imageDetails.length < minAllowedImages) {\n      setImageError('Need atleast one image to create a memory');\n      valid = false;\n    }\n\n    if (imageDetails.length > maxAllowedImages) {\n      setImageError(`Maximum Allowed Images per Memory: ${maxAllowedImages}`);\n      valid = false;\n    }\n\n    return valid;\n  }\n\n  useEffect(() => {\n    if (touched) isValid();\n  }, [imageDetails, touched]);\n\n  useEffect(() => {\n    if (totalImages < imageDetails.length) {\n      setTotalImages(imageDetails.length);\n    }\n    if (totalImages > imageDetails.length) {\n      setOpen(true);\n    }\n    if (totalImages === imageDetails.length) {\n      setOpen(false);\n    }\n  }, [imageDetails, totalImages]);\n\n  const handleSubmit = (handleCallback) => {\n    if (isValid()) {\n      handleCallback();\n    }\n  };\n\n  const handleImageChange = (event) => {\n    setTouched(true);\n    if (event.target.files) {\n      setTotalImages(event.target.files.length + imageDetails.length);\n    }\n    handleSelectedImageChange(event, isValid);\n  };\n\n  const handleImageDelete = (index) => {\n    setTotalImages((prevCount) => prevCount - 1);\n    removeSelectedImage(index);\n  };\n\n  return (\n    <BoxForm>\n      <Grid item>\n        <ImageSelector\n          handleChange={handleImageChange}\n        />\n      </Grid>\n      <Grid item container direction=\"column\" alignItems=\"center\">\n        <Typography>\n          Total Images Selected:\n          {imageDetails.length}\n          /\n          {maxAllowedImages}\n        </Typography>\n        <ErrorText text={imageError} />\n      </Grid>\n      <FormStepperNavigation\n        handleNext={() => handleSubmit(handleNext)}\n        handlePrevious={handlePrevious}\n        isLast={isLast}\n        isFirst={isFirst}\n      />\n      <Grid item>\n        <ImagePreviewer\n          imageDetails={imageDetails}\n          handleRemoveImage={handleImageDelete}\n          thumbnail={thumbnail}\n          handleThumbnailChange={handleThumbnailChange}\n          setDimensions={setDimensions}\n          resizeHeights={resizeHeights}\n        />\n      </Grid>\n      <Dialog\n        open={open}\n        fullWidth\n        sx={{\n          p: 1,\n        }}\n      >\n        <Card sx={{ maxWidth: 1, p: 1 }}>\n          <CardHeader title=\"Adding Images\" sx={{ textAlign: 'center' }} />\n          <Divider />\n          <CardContent>\n            <Typography variant=\"h6\" sx={{ color: 'muted.main' }}>\n              Total Images Selected:\n              {imageDetails.length}\n              /\n              {maxAllowedImages}\n            </Typography>\n            <Stack justifyContent=\"center\" sx={{ py: 2 }}>\n              <Typography variant=\"h5\" color=\"error\">{imageError}</Typography>\n            </Stack>\n          </CardContent>\n        </Card>\n      </Dialog>\n    </BoxForm>\n  );\n}\n\nImageForm.propTypes = {\n  imageDetails: PropTypes.arrayOf(PropTypes.shape({\n    url: PropTypes.string,\n    name: PropTypes.string,\n    size: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n  handleSelectedImageChange: PropTypes.func.isRequired,\n  removeSelectedImage: PropTypes.func.isRequired,\n  thumbnail: PropTypes.number.isRequired,\n  handleThumbnailChange: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handlePrevious: PropTypes.func.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isFirst: PropTypes.bool.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  resizeHeights: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport { useRef, useEffect } from 'react';\n\nexport default function StoryEditor({\n  storyError, story, handleStoryChange,\n}) {\n  const storyRef = useRef();\n\n  useEffect(() => {\n    storyRef.current.focus();\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        p: 2,\n        m: 1,\n        my: 2,\n        border: 1,\n        borderColor: storyError ? 'error.main' : 'primary.main',\n        bgcolor: 'input.background',\n        minHeight: '200px',\n        borderRadius: 5,\n      }}\n      onClick={() => storyRef.current.focus()}\n    >\n      <TextareaAutosize\n        autoFocus\n        aria-label=\"minimum height\"\n        placeholder=\"Tell your story...\"\n        value={story}\n        onChange={handleStoryChange}\n        style={{\n          width: '100%',\n          minHeight: '184px',\n          maxHeight: '70vh',\n          boxSizing: 'border-box',\n          paddingTop: '5px',\n          border: 0,\n          overflow: 'auto',\n          outline: 'none',\n          resize: 'vertical',\n          borderRadius: 5,\n          '&:focus': {\n            border: 0,\n          },\n        }}\n        ref={storyRef}\n      />\n    </Box>\n  );\n}\n\nStoryEditor.propTypes = {\n  storyError: PropTypes.string.isRequired,\n  story: PropTypes.string.isRequired,\n  handleStoryChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Box from '@mui/material/Box';\n\nimport FormStepperNavigation from 'components/FormStepperNavigation';\nimport ErrorText from 'components/ErrorText';\nimport StoryEditor from './StoryEditor';\n\nexport default function StoryForm({\n  story,\n  handleStoryChange,\n  handleNext,\n  handlePrevious,\n  isLast,\n  isFirst,\n  progressDialog,\n}) {\n  const maxStoryLength = 100000;\n  const [storyError, setStoryError] = useState('');\n\n  const submitForm = (handleCallback) => {\n    const memoryText = story;\n    if (memoryText.length <= maxStoryLength) {\n      setStoryError('');\n      handleCallback();\n    } else {\n      setStoryError(`Maximum story length is: ${maxStoryLength}`);\n    }\n  };\n\n  return (\n    <>\n      <StoryEditor\n        storyError={storyError}\n        story={story}\n        handleStoryChange={handleStoryChange}\n      />\n      <Box sx={{ p: 1, m: 1 }}>\n        <ErrorText text={storyError} />\n      </Box>\n      <FormStepperNavigation\n        handleNext={() => submitForm(handleNext)}\n        handlePrevious={handlePrevious}\n        isLast={isLast}\n        isFirst={isFirst}\n      />\n      {progressDialog}\n    </>\n  );\n}\n\nStoryForm.propTypes = {\n  story: PropTypes.string.isRequired,\n  handleStoryChange: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handlePrevious: PropTypes.func.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isFirst: PropTypes.bool.isRequired,\n  progressDialog: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Divider from '@mui/material/Divider';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\n\nfunction LinearProgressWithLabel({ value }) {\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n      <Box sx={{ width: '100%', mr: 1 }}>\n        <LinearProgress variant=\"determinate\" value={value} />\n      </Box>\n      <Box sx={{ minWidth: 35 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {`${Math.round(\n            value,\n          )}%`}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nfunction MessageProgress({ message, done }) {\n  let showStatus;\n  if (done === 'failed') {\n    showStatus = <Typography color=\"error.main\">Failed</Typography>;\n  } else if (done === true) {\n    showStatus = <Typography color=\"success.main\">Done</Typography>;\n  } else {\n    showStatus = <CircularProgress size={30} />;\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'space-between' }}>\n      <Box sx={{ width: '100%', mr: 1 }}>\n        <Typography>{message}</Typography>\n      </Box>\n      <Box sx={{ minWidth: 35 }}>\n        {showStatus}\n      </Box>\n    </Box>\n\n  );\n}\n\nfunction MemoryCreationStatus({ progress, counter }) {\n  if (progress === 100) {\n    return (\n      <>\n        <Box sx={{\n          display: 'flex', justifyContent: 'center', alignItems: 'center', m: 2,\n        }}\n        >\n          <CheckCircleOutlineIcon color=\"success\" fontSize=\"large\" sx={{ mr: 2 }} />\n          <Typography variant=\"h5\" color=\"primary.main\">Memory Created Successfully</Typography>\n        </Box>\n\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <Box>\n            <Typography>Navigating to memories page in </Typography>\n          </Box>\n          <Box sx={{ mx: 1 }}>\n            <Typography variant=\"h6\" color=\"success.main\">\n              {counter}\n            </Typography>\n          </Box>\n          <Box>\n            <Typography>seconds</Typography>\n          </Box>\n        </Box>\n      </>\n    );\n  }\n  if (progress === -1) {\n    return (\n      <>\n        <Box sx={{\n          display: 'flex', justifyContent: 'center', alignItems: 'center', m: 2,\n        }}\n        >\n          <ErrorOutlineIcon color=\"error\" fontSize=\"large\" sx={{ mr: 2 }} />\n          <Typography variant=\"h5\" color=\"primary.main\">Memory Creation Failed</Typography>\n        </Box>\n\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <Box>\n            <Typography>Navigating to memories page in </Typography>\n          </Box>\n          <Box sx={{ mx: 1 }}>\n            <Typography variant=\"h6\" color=\"success.main\">\n              {counter}\n            </Typography>\n          </Box>\n          <Box>\n            <Typography>seconds</Typography>\n          </Box>\n        </Box>\n      </>\n    );\n  }\n  return null;\n}\n\nexport default function CreateMemoryProgress({\n  open, progress, messages,\n}) {\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    let timerId;\n    if (counter > 0) {\n      timerId = setTimeout(() => setCounter(counter - 1), 1000);\n    }\n    return () => clearTimeout(timerId);\n  }, [counter]);\n\n  useEffect(() => {\n    if (progress === 100 || progress === -1) setCounter(3);\n  }, [progress]);\n\n  return (\n    <Dialog\n      open={open}\n      fullWidth\n      sx={{\n        p: 1,\n      }}\n\n    >\n      <Card sx={{ maxWidth: 1, p: 1 }}>\n        <CardHeader title=\"Creating Memory\" sx={{ textAlign: 'center' }} />\n        <Divider />\n        <CardContent>\n          <LinearProgressWithLabel value={progress > 0 ? progress : 0} />\n          {messages.map((mesg) => (\n            <MessageProgress key={mesg.message} message={mesg.message} done={mesg.done} />\n          ))}\n          <MemoryCreationStatus progress={progress} counter={counter} />\n        </CardContent>\n      </Card>\n    </Dialog>\n\n  );\n}\n\nMemoryCreationStatus.propTypes = {\n  progress: PropTypes.number.isRequired,\n  counter: PropTypes.number.isRequired,\n};\n\nLinearProgressWithLabel.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nMessageProgress.propTypes = {\n  message: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n};\n\nCreateMemoryProgress.defaultProps = {\n  messages: [],\n};\n\nCreateMemoryProgress.propTypes = {\n  open: PropTypes.bool.isRequired,\n  progress: PropTypes.number.isRequired,\n  messages: PropTypes.arrayOf(PropTypes.exact(\n    {\n      message: PropTypes.string,\n      done: PropTypes.bool,\n    },\n  )),\n};\n","import { useState, useEffect } from 'react';\n\nimport { useNavigate } from 'react-router-dom';\nimport CreateMemoryForm from 'pages/memory/create/CreateMemoryForm';\nimport MemoryUtils from 'pages/memory/MemoryUtils';\nimport useTitle from 'hooks/title';\nimport useDate from 'hooks/date';\nimport useSelectedImages from 'hooks/selectedImages';\nimport useStory from 'hooks/story';\nimport useStep from 'hooks/formStep';\nimport useProgressMessage from 'hooks/progressMessage';\n\nimport PreviewMemory from './PreviewMemory';\nimport TitleDateForm from './TitleDateForm';\nimport ImageForm from './ImageForm';\nimport StoryForm from './StoryForm';\n\nimport CreateMemoryProgress from './CreateMemoryProgress';\n\nfunction getTotalSize(images) {\n  return images.reduce((partialSum, image) => partialSum + image.size, 0);\n}\n\nexport default function ModeContent({ mode, bucket, authURL }) {\n  const navigate = useNavigate();\n  const resizeHeights = [500, 1000, 1500];\n  const stepTitles = [\n    'Enter memory title and date',\n    'Upload Pictures',\n    'Write story',\n  ];\n  const [activeStep, handleNext, handlePrevious, isLast, isFirst] = useStep(stepTitles.length);\n  const [title,, handleTitleChange] = useTitle('');\n  const [date,, handleDateChange] = useDate('');\n  const [\n    imageDetails,\n    thumbnail,\n    handleSelectedImageChange,\n    removeSelectedImage,\n    handleThumbnailChange,\n    setDimensions,\n  ] = useSelectedImages();\n\n  const [story,, handleStoryChange] = useStory('');\n  const [open, setOpen] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [messages, addMessage, updateMessageStatus] = useProgressMessage();\n  const [uploadCount, setUploadCount] = useState(0);\n\n  const handleProgress = (progressPercentage) => setProgress(progressPercentage);\n  const incrementImageCount = () => setUploadCount((cnt) => cnt + 1);\n  const imageFiles = imageDetails.map((detail) => detail.imageFile);\n\n  useEffect(() => {\n    const message = `Uploading Images (${uploadCount}/${imageDetails.length})`;\n    if (uploadCount >= 0 && progress >= 10) {\n      if (uploadCount === 0) addMessage(message, false);\n      else updateMessageStatus(message, false);\n\n      if (imageDetails.length === uploadCount) updateMessageStatus(message, true);\n    }\n  }, [uploadCount, progress]);\n\n  const TitleDate = (\n    <TitleDateForm\n      activeStep={activeStep}\n      handleNext={handleNext}\n      handlePrevious={handlePrevious}\n      isLast={isLast}\n      isFirst={isFirst}\n      title={title}\n      date={date}\n      handleTitleChange={handleTitleChange}\n      handleDateChange={handleDateChange}\n    />\n  );\n\n  const SelectImages = (\n    <ImageForm\n      imageDetails={imageDetails}\n      handleSelectedImageChange={handleSelectedImageChange}\n      removeSelectedImage={removeSelectedImage}\n      thumbnail={thumbnail}\n      handleThumbnailChange={handleThumbnailChange}\n      handleNext={handleNext}\n      handlePrevious={handlePrevious}\n      isLast={isLast}\n      isFirst={isFirst}\n      setDimensions={setDimensions}\n      resizeHeights={resizeHeights}\n    />\n  );\n\n  const handleSubmit = async () => {\n    // so that the newest memory has the smallest key and so  comes first in s3 listObjects\n    // When this fails wont be there to take blame. Should be dead by then. :-)\n    const memoryKey = new Date(2100, 1, 1).getTime() - Date.now();\n    const memoryDetails = {\n      key: memoryKey,\n      title,\n      date,\n      lastModified: new Date(),\n      imageDetails,\n      //  contentState: convertToRaw(editorState.getCurrentContent()),\n      story,\n      thumbnail: imageDetails[thumbnail],\n      totalSize: getTotalSize(imageDetails),\n    };\n    setOpen(true);\n\n    const created = await MemoryUtils.CreateMemory(\n      bucket,\n      authURL,\n      memoryDetails,\n      handleProgress,\n      updateMessageStatus,\n      addMessage,\n      imageFiles,\n      incrementImageCount,\n    );\n\n    if (created === true) {\n      handleProgress(100);\n    } else {\n      handleProgress(-1);\n    }\n    setTimeout(() => navigate('/memories'), 3000);\n  };\n\n  const ProgressDialog = (\n    <CreateMemoryProgress open={open} progress={progress} messages={messages} />\n  );\n\n  const WriteStory = (\n    <StoryForm\n      story={story}\n      handleStoryChange={handleStoryChange}\n      handleNext={handleSubmit}\n      handlePrevious={handlePrevious}\n      isLast={isLast}\n      isFirst={isFirst}\n      progressDialog={ProgressDialog}\n    />\n  );\n\n  const stepForms = [TitleDate, SelectImages, WriteStory];\n\n  let content;\n\n  const CreateModeContent = CreateMemoryForm(\n    stepTitles.length,\n    stepTitles,\n    stepForms,\n    handleSubmit,\n    activeStep,\n    isLast,\n    handleNext,\n    handlePrevious,\n  );\n  const PreviewModeContent = PreviewMemory(title, date, imageDetails, thumbnail, story);\n  if (mode === 'Create') {\n    content = CreateModeContent;\n  }\n\n  if (mode === 'Preview') {\n    content = PreviewModeContent;\n  }\n\n  return content;\n}\n","import { useState } from 'react';\n\nexport default function useStep(stepCount) {\n  const [activeStep, setActiveStep] = useState(0);\n\n  const handleNext = () => {\n    setActiveStep((activeStep + 1) % stepCount);\n  };\n\n  const handlePrevious = () => {\n    setActiveStep((activeStep - 1 + stepCount) % stepCount);\n  };\n\n  const isLast = activeStep === stepCount - 1;\n  const isFirst = activeStep === 0;\n\n  return [activeStep, handleNext, handlePrevious, isLast, isFirst];\n}\n","import { useState } from 'react';\n\nexport default function useSelectedImages() {\n  const [imageDetails, setImageDetails] = useState([]);\n  const [imageFiles, setImageFiles] = useState([]);\n  const [thumbnail, setThumbnail] = useState(0);\n\n  const handleThumbnailChange = (index) => {\n    setThumbnail(index);\n  };\n\n  const handleSelectedImageChange = (event) => {\n    if (event.target.files) {\n      const files = Array.from(event.target.files);\n      files.forEach((file) => {\n        const image = new Image();\n        image.onload = (e) => {\n          const date = Date.now();\n          const newName = `${date}-${file.name}`;\n          setImageDetails((arr) => arr.concat([\n            {\n              name: newName,\n              size: file.size / (1024 * 1024),\n              url: e.target.src,\n              height: e.target.naturalHeight,\n              width: e.target.naturalWidth,\n              imageFile: file,\n            },\n          ]));\n        };\n        image.src = URL.createObjectURL(file);\n      });\n      setImageFiles((arr) => arr.concat(files));\n      files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n    }\n  };\n\n  const removeSelectedImage = (index) => {\n    setImageDetails([\n      ...imageDetails.slice(0, index),\n      ...imageDetails.slice(index + 1),\n    ]);\n\n    setImageFiles([\n      ...imageFiles.slice(0, index),\n      ...imageFiles.slice(index + 1),\n    ]);\n\n    if (index < thumbnail) {\n      handleThumbnailChange(thumbnail - 1);\n    } else if (index === thumbnail) {\n      handleThumbnailChange(0);\n    }\n  };\n\n  const setDimensions = (index, images) => {\n    setImageDetails([\n      ...imageDetails.slice(0, index),\n      {\n        ...imageDetails[index],\n        images,\n      },\n      ...imageDetails.slice(index + 1),\n    ]);\n  };\n\n  return [\n    imageDetails,\n    thumbnail,\n    handleSelectedImageChange,\n    removeSelectedImage,\n    handleThumbnailChange,\n    setDimensions,\n  ];\n}\n","import { useState } from 'react';\n\nexport default function useProgressMessage() {\n  const [messages, setMessages] = useState([]);\n\n  const addMessage = (message, done) => {\n    const newMessage = [{ message, done }];\n    setMessages((arr) => arr.concat(newMessage));\n  };\n\n  const updateMessageStatus = (message, done) => {\n    const newMessage = [{ message, done }];\n    setMessages((arr) => arr.slice(0, -1).concat(newMessage));\n  };\n\n  return [messages, addMessage, updateMessageStatus];\n}\n","import Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport FormStepper from 'components/FormStepper';\n\nexport default function CreateMemoryForm(\n  stepCount,\n  stepTitles,\n  stepForms,\n  handleSubmit,\n  activeStep,\n) {\n  return (\n    <Grid container justifyContent=\"center\">\n      <Grid\n        item\n        lg={6}\n        xs={12}\n        sx={{\n          boxShadow: 10,\n          borderRadius: 5,\n          bgcolor: 'button.main',\n          mb: 2,\n        }}\n      >\n        <Box>\n          <FormStepper\n            titles={stepTitles}\n            activeStep={activeStep}\n            handleClick={() => {}}\n          />\n          <Divider />\n          {stepForms[activeStep]}\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import Grid from '@mui/material/Grid';\n\nimport MemoryThumbnail from 'pages/MemoryThumbnail';\nimport MemoryContent from 'pages/memory/MemoryContent';\nimport PreviewCardHeader from './PreviewCardHeader';\n\nexport default function PreviewMemory(\n  title,\n  date,\n  imageDetails,\n  thumbnail,\n  story,\n) {\n  return (\n    <Grid container justifyContent=\"space-evenly\" sx={{ p: 0 }}>\n      <Grid\n        item\n        xs={6}\n        sm={4}\n        md={4}\n        lg={3}\n        xl={2}\n        sx={{ px: 1, mb: 1 }}\n      >\n        <PreviewCardHeader title=\"Thumbnail Preview\" />\n        <MemoryThumbnail\n          title={title}\n          date={date || ''}\n          thumbnailImage={(imageDetails.length) > 0 ? imageDetails[thumbnail].url : ''}\n          handleClick={() => {}}\n        />\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        lg={9}\n        xl={10}\n      >\n        <PreviewCardHeader title=\"Memory Preview\" />\n        <MemoryContent\n          memTitle={title}\n          memDate={date}\n          memStory={story}\n          memImages={imageDetails.map((image) => ({\n            src: image.url,\n            width: image.width,\n            height: image.height,\n          }))}\n          imageNames={imageDetails.map((image) => image.name)}\n          preview\n        />\n      </Grid>\n    </Grid>\n  );\n}\n","import { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport BasePage from 'pages/base_page';\nimport ToggleViewMode from './ToggleViewMode';\nimport ModeContent from './ModeContent';\n\nexport default function CreateMemory({ bucket, authURL }) {\n  const modes = ['Create', 'Preview'];\n  const [mode, setMode] = useState(modes[0]);\n  const ref = useRef(null);\n\n  return (\n    <BasePage>\n      <ToggleViewMode mode={mode} handleModeChange={setMode} modes={modes} />\n      <ModeContent mode={mode} formRef={ref} bucket={bucket} authURL={authURL} />\n    </BasePage>\n  );\n}\n\nCreateMemory.propTypes = {\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n};\n"],"names":["ThumbnailImage","imageSrc","imageSrcSet","title","handleImageLoad","component","src","srcSet","alt","sx","borderColor","borderRadius","textAlign","objectFit","height","lg","sm","xs","onLoad","ThumbnailDetails","date","disableTypography","noWrap","overflow","textOverflow","width","fontWeight","subheader","color","padding","MemoryThumbnail","thumbnailImage","thumbnailImageSrcSet","handleClick","defaultProps","MemoryThumbnailCard","children","onClick","elevation","bgcolor","border","position","ToggleViewMode","mode","handleModeChange","modes","Divider","Box","display","justifyContent","p","ToggleButtonGroup","exclusive","value","map","modeName","ToggleButton","Typography","variant","FormStepper","titles","activeStep","Stepper","alternativeLabel","py","label","index","Step","StepLabel","UploadImages","bucket","authURL","memoryKey","imageDetails","imageFiles","incrementImageCount","paramList","detail","imgFile","Key","name","join","Body","ContentType","type","uploadPromises","api","Promise","allSettled","ValidateDetails","memoryDetails","detailsJSON","JSON","stringify","validateResp","status","Valid","UploadDetails","memoryDetailsKey","key","uploadResp","ok","InitializeMemory","handleProgress","updateMessageStatus","addMessage","valid","initRes","HandleImages","imagesResults","i","length","CreateMemory","finalizeResults","parseInt","MemoryID","PreviewCardHeader","CardHeader","mb","NavigationButton","disabled","Button","m","FormStepperNavigation","handleNext","handlePrevious","isLast","isFirst","flexDirection","pt","BoxForm","maxWidth","backgroundColor","alignItems","autoComplete","TitleDateForm","handleTitleChange","handleDateChange","useState","titleError","setTitleError","dateError","setDateError","titleTouched","setTitleTouched","dateTouched","setDateTouched","titleSchema","yup","required","max","dateSchema","nullable","isFieldValid","setFieldError","schema","hasError","validate","abortEarly","catch","error","testField","inner","forEach","message","isValid","titleValid","dateValid","useEffect","submitForm","handleCallback","TextField","onChange","event","id","defaultValue","helperText","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","placeholder","inputFormat","maxDate","Date","renderInput","props","readOnly","ErrorText","text","ThumbnailChooser","thumbnail","handleThumbnailChange","FormControlLabel","control","Radio","checked","pr","alpha","borderLeft","bottom","left","SelectedImage","photo","setDimensions","resizeHeights","heights","originalWidth","target","naturalWidth","originalHeight","naturalHeight","images","Math","ceil","handleImageOnload","fit","auto","loading","ImagePreviewer","handleRemoveImage","align","Grid","container","url","RemovePhotoIcon","ImageSelector","handleChange","pb","hidden","multiple","accept","AddAPhoto","fontSize","ImageForm","handleSelectedImageChange","removeSelectedImage","imageError","setImageError","touched","setTouched","totalImages","setTotalImages","open","setOpen","item","files","direction","prevCount","Dialog","fullWidth","Card","CardContent","Stack","StoryEditor","storyError","story","handleStoryChange","storyRef","useRef","current","focus","my","minHeight","TextareaAutosize","autoFocus","style","maxHeight","boxSizing","paddingTop","outline","resize","ref","StoryForm","progressDialog","maxStoryLength","setStoryError","LinearProgressWithLabel","mr","LinearProgress","minWidth","round","MessageProgress","showStatus","done","CircularProgress","size","MemoryCreationStatus","progress","counter","CheckCircleOutline","mx","ErrorOutline","CreateMemoryProgress","messages","setCounter","timerId","setTimeout","clearTimeout","mesg","ModeContent","navigate","useNavigate","stepTitles","stepCount","setActiveStep","useStep","useTitle","useDate","setImageDetails","setImageFiles","setThumbnail","Array","from","file","image","Image","onload","e","now","newName","arr","concat","imageFile","URL","createObjectURL","revokeObjectURL","slice","useSelectedImages","useStory","setProgress","setMessages","newMessage","useProgressMessage","uploadCount","setUploadCount","progressPercentage","cnt","content","TitleDate","SelectImages","handleSubmit","getTime","lastModified","totalSize","reduce","partialSum","MemoryUtils","created","ProgressDialog","CreateModeContent","stepForms","boxShadow","CreateMemoryForm","PreviewModeContent","md","xl","px","MemoryContent","memTitle","memDate","memStory","memImages","imageNames","preview","PreviewMemory","setMode","formRef"],"sourceRoot":""}