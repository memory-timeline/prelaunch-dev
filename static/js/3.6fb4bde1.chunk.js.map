{"version":3,"file":"static/js/3.6fb4bde1.chunk.js","mappings":"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","sources":["components/RemovePhotoIcon.jsx","components/simple_snackbar.jsx","hooks/date.jsx","hooks/story.jsx","hooks/title.jsx","components/ActionIcon.jsx","components/confirmation.jsx","pages/memory/Delete.jsx","components/EmailInput.jsx","hooks/email.jsx","pages/memory/Share.jsx","components/UpdateMemoryIcon.jsx","pages/memory/Actions.jsx","pages/memory/ContentStructure.jsx","components/MemoryImageSlide.jsx","pages/memory/MemoryCarousel.jsx","pages/memory/MemoryTitle.jsx","pages/memory/MemoryDate.jsx","pages/memory/MemoryStory.jsx","pages/memory/MemoryImages.jsx","pages/memory/MemoryContent.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { alpha } from '@mui/material/styles';\n\nexport default function RemovePhotoIcon({ size, handleClick }) {\n  return (\n    <IconButton\n      size={size}\n      sx={{\n        color: 'black',\n        bgcolor: alpha('#fff', 0.4),\n        position: 'absolute',\n        top: 10,\n        right: 12,\n      }}\n      onClick={handleClick}\n    >\n      <CloseIcon size={size} />\n    </IconButton>\n  );\n}\n\nRemovePhotoIcon.defaultProps = {\n  size: 'small',\n};\n\nRemovePhotoIcon.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  size: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Stack from '@mui/material/Stack';\nimport DoneIcon from '@mui/icons-material/Done';\nimport Typography from '@mui/material/Typography';\n\nfunction SnackText({ message, error }) {\n  if (error === true) {\n    return (\n      <Stack direction=\"row\" spacing={2} justifyContents=\"space-between\" alignItems=\"center\">\n        <CloseIcon fontSize=\"small\" color=\"error\" />\n        <Typography>{message}</Typography>\n      </Stack>\n    );\n  }\n  return (\n    <Stack direction=\"row\" spacing={2} justifyContents=\"space-between\" alignItems=\"center\">\n      <DoneIcon fontSize=\"small\" color=\"success\" />\n      <Typography>{message}</Typography>\n    </Stack>\n  );\n}\n\nexport default function SimpleSnackbar({\n  snackBarOpen, message, onClose, error,\n}) {\n  const [open, setOpen] = useState(snackBarOpen);\n  const [snackMessage, setSnackMessage] = useState(message);\n\n  useEffect(() => setOpen(snackBarOpen), [snackBarOpen]);\n  useEffect(() => setSnackMessage(message), [message]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setSnackMessage(null);\n    onClose();\n  };\n\n  const action = (\n    <IconButton\n      size=\"small\"\n      aria-label=\"close\"\n      color=\"inherit\"\n      onClick={handleClose}\n    >\n      <CloseIcon fontSize=\"small\" />\n    </IconButton>\n  );\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      message={<SnackText message={snackMessage} error={error} />}\n      action={action}\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n    />\n  );\n}\n\nSimpleSnackbar.defaultProps = {\n  error: false,\n};\n\nSimpleSnackbar.propTypes = {\n  message: PropTypes.string.isRequired,\n  snackBarOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  error: PropTypes.bool,\n};\n\nSnackText.propTypes = {\n  message: PropTypes.string.isRequired,\n  error: PropTypes.bool.isRequired,\n};\n","import { useState } from 'react';\n\nexport default function useDate(initialDate) {\n  const [date, setDate] = useState(initialDate);\n  const handleDateChange = (e) => {\n    const newDate = new Date(e);\n    if (e) {\n      const formattedDate = newDate.toLocaleDateString('en-in', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric',\n      });\n      setDate(formattedDate);\n    } else {\n      setDate(null);\n    }\n  };\n  return [date, setDate, handleDateChange];\n}\n","import { useState } from 'react';\n\nexport default function useStory(initialState) {\n  const [story, setStory] = useState(initialState);\n  const handleStoryChange = (event) => setStory(event.target.value);\n  return [story, setStory, handleStoryChange];\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useTitle(initialValue) {\n  const [title, setTitle] = useState(initialValue);\n  useEffect(() => setTitle(initialValue), [initialValue]);\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  return [title, setTitle, handleTitleChange];\n}\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\n\nexport default function ActionIcon({ icon, label }) {\n  return (\n    <Box sx={{ alignItems: 'center' }}>\n      <IconButton\n        aria-label=\"delete\"\n        sx={{\n          bgcolor: 'form.input',\n        }}\n      >\n        {icon}\n      </IconButton>\n      {label}\n    </Box>\n  );\n}\n\nActionIcon.propTypes = {\n  icon: PropTypes.node.isRequired,\n  label: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@mui/material/Dialog';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function Confirm({\n  confirm, handleCallback, handleCloseCallback, title, message,\n}) {\n  const [open, setOpen] = useState(confirm);\n  useEffect(() => setOpen(confirm), [confirm]);\n\n  const handleClose = () => {\n    setOpen(false);\n    handleCloseCallback();\n  };\n\n  const handleSubmit = () => {\n    handleClose();\n    handleCallback();\n  };\n\n  return (\n    <Dialog open={open} sx={{ backgroundColor: 'faded.black' }}>\n      <DialogTitle>{title}</DialogTitle>\n      <Box sx={{ p: 2 }}>\n        <Typography sx={{ pb: 2 }}>{message}</Typography>\n        <Stack spacing={2} direction=\"row\">\n          <Button variant=\"contained\" onClick={handleClose}>Cancel</Button>\n          <Button variant=\"outlined\" onClick={handleSubmit}>OK</Button>\n        </Stack>\n      </Box>\n    </Dialog>\n  );\n}\n\nConfirm.propTypes = {\n  confirm: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  handleCallback: PropTypes.func.isRequired,\n  handleCloseCallback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ActionIcon from 'components/ActionIcon';\nimport Confirm from 'components/confirmation';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport api from '../Api';\n\nexport function DeleteMemoryIcon() {\n  return (\n    <ActionIcon icon={<DeleteIcon />} label=\"Delete\" />\n  );\n}\n\nexport function ConfirmDelete({ callback, open, closeCallback }) {\n  const DeleteTitle = 'Delete Memory';\n  const DeleteConfirmMessage = 'Do you want to delete this memory?';\n  return (\n    <Confirm\n      confirm={open}\n      title={DeleteTitle}\n      handleCallback={callback}\n      handleCloseCallback={() => closeCallback()}\n      message={DeleteConfirmMessage}\n    />\n  );\n}\n\nexport default async function deleteMemory(bucket, authURL, memoryID, memoryDeleteCallback) {\n  try {\n    const deleteResults = await api.deleteMemory(bucket, authURL, memoryID);\n    memoryDeleteCallback(deleteResults);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nConfirmDelete.propTypes = {\n  open: PropTypes.bool.isRequired,\n  callback: PropTypes.func.isRequired,\n  closeCallback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Grid from '@mui/material/Grid';\n\nexport default function EmailInput({\n  items, value, error, handleKeyDown, handleChange, handleDelete, handlePaste,\n}) {\n  return (\n    <Stack direction=\"column\" spacing={2} sx={{ mb: 3 }}>\n\n      <TextField\n        id=\"outlined-error\"\n        value={value}\n        label=\"Email List\"\n        placeholder=\"Type or paste email addresses and press `Enter`...\"\n        onKeyDown={handleKeyDown}\n        onChange={handleChange}\n        onPaste={handlePaste}\n        helperText={error || 'Type or paste email addresses and press `Enter`...'}\n        error={!!error}\n        sx={{ my: 1 }}\n      />\n\n      <Grid container spacing={2}>\n        {items.map((item) => (\n          <Chip\n            key={item}\n            label={item}\n            variant=\"outlined\"\n            onDelete={() => handleDelete(item)}\n            sx={{ margin: 0.5 }}\n            size=\"small\"\n          />\n        ))}\n      </Grid>\n    </Stack>\n\n  );\n}\n\nEmailInput.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  value: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  handleKeyDown: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handlePaste: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\n\nexport default function useEmail() {\n  const [items, setItems] = useState([]);\n  const [value, setValue] = useState('');\n  const [error, setError] = useState(null);\n\n  const isInList = (email) => items.includes(email);\n\n  // eslint-disable-next-line\n  const isEmail = (email) => /[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/.test(email);\n\n  const isValid = (email) => {\n    let err = null;\n\n    if (isInList(email)) {\n      err = `${email} has already been added.`;\n    }\n\n    if (!isEmail(email)) {\n      err = `${email} is not a valid email address.`;\n    }\n\n    if (err) {\n      setError(err);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleKeyDown = (evt) => {\n    if (['Enter', 'Tab', ','].includes(evt.key)) {\n      evt.preventDefault();\n\n      const val = value.trim();\n\n      if (val && isValid(val)) {\n        setItems([...items, value]);\n        setValue('');\n      }\n    }\n  };\n\n  const handleChange = (evt) => {\n    setValue(evt.target.value);\n    setError(null);\n  };\n\n  const handleDelete = (item) => {\n    setItems((prevItems) => prevItems.filter((i) => i !== item));\n  };\n\n  const handlePaste = (evt) => {\n    evt.preventDefault();\n\n    const paste = evt.clipboardData.getData('text');\n    // eslint-disable-next-line\n    var emails = paste.match(/[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g);\n\n    if (emails) {\n      const toBeAdded = emails.filter((email) => !isInList(email));\n      setItems([...items, ...toBeAdded]);\n    }\n  };\n\n  return [items, value, error, handleKeyDown, handleChange, handleDelete, handlePaste];\n}\n","import ActionIcon from 'components/ActionIcon';\nimport ShareIcon from '@mui/icons-material/Share';\nimport EmailInput from 'components/EmailInput';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@mui/material/Dialog';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Divider from '@mui/material/Divider';\nimport useEmail from 'hooks/email';\n\n//  import api from '../Api';\n\nexport function ShareMemoryIcon() {\n  return (\n    <ActionIcon icon={<ShareIcon />} label=\"Share\" />\n  );\n}\n\nexport function ShareComponent({ confirm, callback, closeCallback }) {\n  const ShareTitle = 'Share Memory';\n  const [\n    items,\n    value,\n    error,\n    handleKeyDown,\n    handleChange,\n    handleDelete,\n    handlePaste,\n  ] = useEmail();\n\n  const [open, setOpen] = useState(confirm);\n  useEffect(() => setOpen(confirm), [confirm]);\n\n  const handleClose = () => {\n    setOpen(false);\n    closeCallback();\n  };\n\n  const handleSubmit = () => {\n    handleClose();\n    callback(items);\n  };\n\n  return (\n    <Dialog fullWidth open={open} sx={{ backgroundColor: 'faded.black' }}>\n      <DialogTitle>{ShareTitle}</DialogTitle>\n      <Divider />\n      <Box sx={{ p: 2 }}>\n        <EmailInput\n          items={items}\n          value={value}\n          error={error}\n          handleKeyDown={handleKeyDown}\n          handleChange={handleChange}\n          handleDelete={handleDelete}\n          handlePaste={handlePaste}\n        />\n        <Stack spacing={2} direction=\"row\">\n          <Button variant=\"outlined\" onClick={handleClose}>Cancel</Button>\n          <Button variant=\"contained\" onClick={handleSubmit}>Share</Button>\n        </Stack>\n      </Box>\n    </Dialog>\n\n  );\n}\n\nexport default async function shareMemory(\n  bucket, authURL, memoryID, emailList, memoryShareCallback,\n) {\n  try {\n    /* eslint-disable no-console */\n    console.log('share memory', bucket, authURL, memoryID, emailList);\n    //  const shareResults = await api.shareMemory(bucket, authURL, memoryID, emailList);\n    memoryShareCallback();\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nShareComponent.propTypes = {\n  confirm: PropTypes.bool.isRequired,\n  callback: PropTypes.func.isRequired,\n  closeCallback: PropTypes.func.isRequired,\n};\n","import ActionIcon from 'components/ActionIcon';\nimport EditIcon from '@mui/icons-material/Edit';\n\nexport default function UpdateMemoryIcon() {\n  return (\n    <ActionIcon icon={<EditIcon />} label=\"Edit\" />\n  );\n}\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Confirm from 'components/confirmation';\nimport UpdateMemoryIcon from 'components/UpdateMemoryIcon';\nimport { ShareComponent, ShareMemoryIcon } from './Share';\nimport { ConfirmDelete, DeleteMemoryIcon } from './Delete';\n\nfunction ConfirmAction({\n  title, message, callback, open, closeCallback,\n}) {\n  const [confirm, setConfirm] = useState(open);\n  useEffect(() => setConfirm(open), [open]);\n\n  return (\n    <Confirm\n      title={title}\n      confirm={confirm}\n      handleCallback={callback}\n      handleCloseCallback={() => {\n        setConfirm(false);\n        closeCallback();\n      }}\n      message={message}\n    />\n  );\n}\n\nexport default function MemoryActions({\n  snackBar, handleDelete, handleShare, handleEditClick,\n}) {\n  let actionComponent;\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [action, setAction] = useState(null);\n\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  const closeConfirm = () => setAction(null);\n\n  if (action === 'delete') {\n    actionComponent = (\n      <ConfirmDelete open callback={handleDelete} closeCallback={closeConfirm} />\n    );\n  }\n\n  if (action === 'share') {\n    actionComponent = (\n      <ShareComponent\n        confirm\n        callback={(emailList) => handleShare(emailList)}\n        closeCallback={() => setAction(null)}\n      />\n    );\n  }\n\n  const handleDeleteClick = () => {\n    setAction('delete');\n    handleClose();\n  };\n\n  const handleShareClick = () => {\n    setAction('share');\n    handleClose();\n  };\n\n  const handleEdit = () => {\n    handleEditClick();\n    handleClose();\n  };\n\n  return (\n    <div>\n      <MoreVertIcon onClick={handleClick} />\n      <Menu\n        id=\"memory-actions\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n        sx={{ borderRadius: '10px' }}\n      >\n        <MenuItem onClick={handleEdit}><UpdateMemoryIcon /></MenuItem>\n        <MenuItem onClick={handleShareClick}><ShareMemoryIcon /></MenuItem>\n        <MenuItem onClick={handleDeleteClick}><DeleteMemoryIcon /></MenuItem>\n      </Menu>\n      {actionComponent}\n      {snackBar}\n    </div>\n  );\n}\n\nMemoryActions.propTypes = {\n  snackBar: PropTypes.node.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handleShare: PropTypes.func.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n};\n\nConfirmAction.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  callback: PropTypes.func.isRequired,\n  closeCallback: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Navigate } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport Box from '@mui/material/Box';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Divider from '@mui/material/Divider';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport SimpleSnackbar from 'components/simple_snackbar';\nimport deleteMemory from './Delete';\nimport shareMemory from './Share';\nimport MemoryActions from './Actions';\n\nexport default function MemoryContentStructure({\n  header, subheader, photoLayout, storyLayout, bucket, memoryID, authURL, handleEditClick, preview,\n}) {\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  let className;\n  const theme = useTheme();\n  const lgdown = useMediaQuery(theme.breakpoints.down('lg'));\n  if (lgdown) className = '';\n  else className = 'vertical-scroll';\n\n  const handleSnackMessage = (msg, error) => {\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const memoryDeleteCallback = (open) => {\n    if (open.status === 'ok') {\n      handleSnackMessage('Memory deleted successfully', false);\n    } else {\n      handleSnackMessage('Error while deleting memory', true);\n    }\n    setSnack(true);\n  };\n\n  const memoryShareCallback = () => {\n    //  if (open.status === 'ok') {\n    //  handleSnackMessage('Memory deleted successfully', false);\n    //  } else {\n    //  handleSnackMessage('Error while deleting memory', true);\n    //  }\n    handleSnackMessage('Memory shared successfully', false);\n    setSnack(true);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const snackBar = (\n    <SimpleSnackbar\n      snackBarOpen={snack}\n      message={snackMessage}\n      onClose={handleSnackBarClose}\n      error={snackError}\n    />\n  );\n\n  const actions = !preview ? (\n    <MemoryActions\n      snackBar={snackBar}\n      handleDelete={() => {\n        deleteMemory(bucket, authURL, memoryID, memoryDeleteCallback);\n      }}\n      handleShare={(emailList) => {\n        shareMemory(bucket, authURL, memoryID, emailList, memoryShareCallback);\n      }}\n      handleEditClick={handleEditClick}\n    />\n  ) : <MoreVertIcon />;\n\n  return (snack === false) ? (\n    <Navigate to=\"/memories\" replace />\n  ) : (\n    <Card\n      sx={{\n        boxShadow: 0,\n        bgcolor: 'button.main',\n        p: 1,\n      }}\n    >\n      <CardHeader\n        title={header}\n        subheader={subheader}\n        action={actions}\n      />\n      <Divider />\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-start',\n          flexDirection: {\n            lg: 'row',\n            xs: 'column',\n          },\n          height: {\n            lg: '72vh',\n          },\n          my: 1,\n        }}\n      >\n        <Box\n          sx={{\n            width: {\n              lg: '70%',\n              xs: '100%',\n            },\n            overflowY: 'scroll',\n            borderRadius: 5,\n          }}\n          className={className}\n        >\n          {photoLayout}\n        </Box>\n        <Box\n          sx={{\n            width: { lg: '30%', sx: '100%' },\n            overflowY: 'scroll',\n            mt: {\n              lg: 0,\n              xs: 2,\n            },\n            p: {\n              lg: 1,\n            },\n            px: 1,\n          }}\n          className={className}\n        >\n          {storyLayout}\n        </Box>\n      </Box>\n    </Card>\n  );\n}\n\nMemoryContentStructure.propTypes = {\n  header: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  subheader: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  photoLayout: PropTypes.element.isRequired,\n  storyLayout: PropTypes.element.isRequired,\n  memoryID: PropTypes.string.isRequired,\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n  preview: PropTypes.bool.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SwipeableViews from 'react-swipeable-views';\nimport Box from '@mui/material/Box';\nimport { autoPlay, virtualize, bindKeyboard } from 'react-swipeable-views-utils';\n\nconst EnhancedSwipeableViews = bindKeyboard(autoPlay(virtualize(SwipeableViews)));\n\nfunction mod(count, total) {\n  const modulus = count % total;\n  if (modulus < 0) {\n    return modulus + total;\n  }\n  return modulus;\n}\n\nexport default function MemoryImageSlide({\n  ind, images, handleNext, handleStepChange,\n}) {\n  const [activeStep, setActiveStep] = useState(ind);\n  const [loadedImages, setLoadedImages] = useState(0);\n  const [display, setDisplay] = useState(null);\n\n  useEffect(() => {\n    setActiveStep(ind);\n  }, [ind]);\n\n  useEffect(() => {\n    if (loadedImages < images.length) {\n      setDisplay('none');\n    } else {\n      setDisplay('flex');\n    }\n  }, [loadedImages]);\n\n  const handleImageLoad = () => setLoadedImages((prevLoaded) => prevLoaded + 1);\n\n  const slideRenderer = (props) => {\n    /* eslint-disable  react/prop-types */\n    const { index, key } = props;\n    const virtNum = mod(index, images.length);\n    const srcSetList = images[virtNum].images ? (\n      images[virtNum].images.map(({ src, width }) => `${src} ${width}w`)\n    ) : [];\n    const srcSet = srcSetList.join(',');\n    const style = {\n      display: 'block',\n      boxSizing: 'content-box',\n      cursor: 'pointer',\n      objectFit: 'contain',\n      height: '100vh',\n    };\n\n    return (\n      <Box\n        component=\"img\"\n        onLoad={handleImageLoad}\n        sx={{\n          display: { display },\n          justifyContents: 'center',\n          width: '100%',\n          bgcolor: '#1c1c1c',\n        }}\n        src={images[virtNum].src}\n        srcSet={srcSet}\n        style={style}\n        alt={images[virtNum].src}\n        key={key}\n      />\n    );\n  };\n\n  return (\n    <EnhancedSwipeableViews\n      index={activeStep}\n      onChangeIndex={handleStepChange}\n      enableMouseEvents\n      animateTransitions\n      interval={10000}\n      onClick={handleNext}\n      style={{ backgroundColor: 'muted.main' }}\n      slideRenderer={slideRenderer}\n    />\n  );\n}\n\nMemoryImageSlide.defaultProps = {\n  ind: 0,\n};\n\nMemoryImageSlide.propTypes = {\n  ind: PropTypes.number,\n  handleNext: PropTypes.func.isRequired,\n  handleStepChange: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport CardHeader from '@mui/material/CardHeader';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport IconButton from '@mui/material/IconButton';\n\nimport RemovePhotoIcon from 'components/RemovePhotoIcon';\nimport MemoryImageSlide from 'components/MemoryImageSlide';\n\nfunction NextPic({ handleClick }) {\n  return (\n    <IconButton\n      edge=\"start\"\n      color=\"primary\"\n      aria-label=\"close\"\n      onClick={handleClick}\n      sx={{\n        position: 'absolute', top: '50%', right: 0, transform: 'translate(0%, -50%)',\n      }}\n    >\n      <KeyboardArrowRight sx={{ color: 'button.main', fontSize: '4.5rem' }} />\n    </IconButton>\n  );\n}\n\nfunction PreviousPic({ handleClick }) {\n  return (\n    <IconButton\n      edge=\"start\"\n      color=\"primary\"\n      aria-label=\"close\"\n      onClick={handleClick}\n      sx={{\n        position: 'absolute', top: '50%', left: 0, transform: 'translate(0%, -50%)',\n      }}\n    >\n      <KeyboardArrowLeft sx={{ color: 'button.main', fontSize: '4.5rem' }} />\n    </IconButton>\n  );\n}\n\nexport default function MemoryCarousel({\n  open, title, date, images, index, handleNext, handleBack, handleClose, handleChange,\n}) {\n  return (\n    <Dialog\n      open={open}\n      fullScreen\n    >\n      <MemoryImageSlide\n        images={images}\n        ind={index}\n        handleNext={handleNext}\n        handleStepChange={handleChange}\n      />\n      <CardHeader\n        title={title}\n        subheader={date}\n        sx={{\n          position: 'absolute',\n          top: 10,\n          left: 10,\n          bgcolor: 'button.main',\n          borderRadius: 3,\n          padding: 1,\n        }}\n      />\n      <PreviousPic handleClick={handleBack} />\n      <NextPic handleClick={handleNext} />\n      <RemovePhotoIcon size=\"large\" handleClick={handleClose} />\n    </Dialog>\n  );\n}\n\nNextPic.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nPreviousPic.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nMemoryCarousel.defaultProps = {\n  index: 0,\n};\n\nMemoryCarousel.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport useTitle from '../../hooks/title';\n\nexport default function MemoryTitle({ editable, text, handleTitleUpdate }) {\n  const [title, setTitle, handleTitleChange] = useTitle(text);\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n\n  useEffect(() => {\n    setEdit(editable);\n    setTitle(text);\n    setStartEdit(false);\n  }, [editable]);\n\n  if (!edit && !startEdit) {\n    return <Typography variant=\"h6\">{title}</Typography>;\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'center' }} spacing={2}>\n        <Typography variant=\"h6\">{title}</Typography>\n        <EditIcon fontSize=\"medium\" onClick={() => setStartEdit(true)} />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'flex-end', justifyContent: 'flex-start' }} spacing={2}>\n        <TextField\n          id=\"standard-basic\"\n          size=\"small\"\n          label=\"Title\"\n          onChange={handleTitleChange}\n          variant=\"standard\"\n          defaultValue={title}\n          sx={{ maxWidth: '200px' }}\n        />\n        <DoneTwoToneIcon\n          fontSize=\"medium\"\n          onClick={() => {\n            handleTitleUpdate(title);\n            setStartEdit(false);\n          }}\n        />\n        <ClearIcon fontSize=\"medium\" onClick={() => { setTitle(text); setStartEdit(false); }} />\n      </Stack>\n    );\n  }\n}\n\nMemoryTitle.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  handleTitleUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n\nimport useDate from '../../hooks/date';\n\nexport default function MemoryDate({ editable, prevDate, handleDateUpdate }) {\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n  const [date, setDate, handleDateChange] = useDate(prevDate);\n\n  useEffect(() => {\n    setEdit(editable);\n    setDate(prevDate);\n    setStartEdit(false);\n  }, [editable, prevDate]);\n\n  if (!edit && !startEdit) {\n    return <Typography>{date}</Typography>;\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'center' }} spacing={2}>\n        <Typography>{date}</Typography>\n        <EditIcon fontSize=\"medium\" onClick={() => setStartEdit(true)} />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'flex-end', justifyContent: 'flex-start', mt: 3 }} spacing={2}>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <DatePicker\n            label=\"Memory Date\"\n            value={date}\n            onChange={handleDateChange}\n            placeholder=\"dd/MM/yyyy\"\n            inputFormat=\"dd/MM/yyyy\"\n            maxDate={new Date()}\n            renderInput={(props) => (\n              <TextField\n                readOnly\n                required\n          // eslint-disable-next-line react/jsx-props-no-spreading\n                {...props}\n              />\n            )}\n          />\n        </LocalizationProvider>\n        <DoneTwoToneIcon\n          fontSize=\"medium\"\n          onClick={() => {\n            handleDateUpdate(date);\n            setStartEdit(false);\n          }}\n        />\n        <ClearIcon fontSize=\"medium\" onClick={() => { setDate(prevDate); setStartEdit(false); }} />\n      </Stack>\n    );\n  }\n}\n\nMemoryDate.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  prevDate: PropTypes.string.isRequired,\n  handleDateUpdate: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Box from '@mui/material/Box';\nimport useStory from '../../hooks/story';\nimport './memory.css';\n\nexport default function MemoryStory({ editable, prevStory, handleStoryUpdate }) {\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n  const [story, setStory, handleStoryChange] = useStory(prevStory);\n  const storyRef = useRef();\n\n  useEffect(() => {\n    setEdit(editable);\n    setStory(prevStory);\n    setStartEdit(false);\n  }, [editable, prevStory]);\n\n  if (!edit && !startEdit) {\n    return (\n      <Typography style={{ whiteSpace: 'pre-wrap' }}>{story}</Typography>\n    );\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"column\" spacing={2}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'muted.main' }}>Edit Story</Typography>\n          <EditIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              setStartEdit(true);\n            }}\n          />\n        </Stack>\n        <Divider sx={{ width: 1 }} />\n        <Typography style={{ whiteSpace: 'pre-wrap' }}>{story}</Typography>\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"column\" spacing={2}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'muted.main' }}>Editing Story</Typography>\n          <DoneTwoToneIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              handleStoryUpdate(story);\n              setStartEdit(false);\n            }}\n          />\n          <ClearIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              setStory(prevStory);\n              setStartEdit(false);\n            }}\n          />\n        </Stack>\n        <Divider sx={{ width: 1 }} />\n        <Box\n          sx={{\n            p: 2,\n            m: 1,\n            my: 2,\n            border: 1,\n            borderColor: 'primary.main',\n            bgcolor: 'input.background',\n            minHeight: '70vh',\n            borderRadius: 5,\n            width: '90%',\n          }}\n          onClick={() => storyRef.current.focus()}\n        >\n          <TextareaAutosize\n            autoFocus\n            aria-label=\"minimum height\"\n            placeholder=\"Tell your story...\"\n            value={story}\n            onChange={handleStoryChange}\n            style={{\n              width: '100%',\n              minHeight: '184px',\n              maxHeight: '70vh',\n              boxSizing: 'border-box',\n              paddingTop: '5px',\n              border: 0,\n              overflow: 'auto',\n              outline: 'none',\n              resize: 'vertical',\n              borderRadius: 5,\n              '&:focus': {\n                border: 0,\n              },\n            }}\n            ref={storyRef}\n          />\n\n        </Box>\n      </Stack>\n    );\n  }\n}\n\nMemoryStory.propTypes = {\n  prevStory: PropTypes.string.isRequired,\n  editable: PropTypes.bool.isRequired,\n  handleStoryUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport PhotoAlbum from 'react-photo-album';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport Button from '@mui/material/Button';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { alpha } from '@mui/material/styles';\n\nfunction OptionsButton({\n  children, onClick, name, updateOp,\n}) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: (updateOp === name) ? 'button.main' : 'muted.main',\n        borderRadius: 5,\n        backgroundColor: (updateOp === name) ? 'primary.main' : 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: (updateOp === name) ? 'button.main' : 'muted.main',\n          backgroundColor: (updateOp === name) ? 'primary.main' : 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nfunction AddPhotos({ handleChange, onClick, updateOp }) {\n  return (\n    <OptionsButton onClick={onClick} name=\"add\" updateOp={updateOp}>\n      <input type=\"file\" hidden multiple accept=\"image/*\" onChange={handleChange} />\n      <AddPhotoIcon sx={{ fontSize: '1.5rem' }} />\n      Add\n    </OptionsButton>\n  );\n}\n\nfunction MemoryPhotoAlbum({ images, handlePhotoClick, renderPhoto }) {\n  const [arrangement, setArrangement] = useState(null);\n  useEffect(() => {\n    let twidth = 0;\n    let theight = 0;\n    images.forEach(({ height, width }) => {\n      if (height > width) theight += 1;\n      else twidth += 1;\n    });\n    if (twidth > theight) setArrangement('rows');\n    else setArrangement('columns');\n  }, [images]);\n\n  return renderPhoto ? (\n    <PhotoAlbum\n      layout={arrangement}\n      photos={images}\n      onClick={handlePhotoClick}\n      spacing={2}\n      renderPhoto={renderPhoto}\n    />\n  ) : (\n    <PhotoAlbum\n      layout={arrangement}\n      photos={images}\n      onClick={handlePhotoClick}\n      spacing={2}\n    />\n  );\n}\n\nexport default function MemoryImages({\n  editable, images, handlePhotoClick, handleThumbnailUpdate, deleteImage, addImage,\n}) {\n  const [edit, setEdit] = useState(editable);\n  const [updateOp, setUpdateOp] = useState(null);\n  const [thumbnail, setThumbnail] = useState(null);\n\n  const handleOpUpdate = (op) => {\n    if (updateOp === op) {\n      setUpdateOp(null);\n    } else {\n      setUpdateOp(op);\n    }\n  };\n\n  useEffect(() => {\n    setEdit(editable);\n    setUpdateOp(null);\n  }, [editable]);\n\n  const handleThumbnailChange = (name) => {\n    setThumbnail(name);\n    const thumbnailImage = images.find((image) => image.alt === name);\n    handleThumbnailUpdate(thumbnailImage);\n  };\n\n  const handleImageDelete = (name) => {\n    const deleted = images.find((image) => image.alt === name);\n    deleteImage(deleted);\n  };\n\n  const renderPhotosWithDeleteIcon = ({\n    layout,\n    imageProps: { alt, style, ...restImageProps },\n  }) => (\n    <Button component=\"div\">\n      <img\n        alt={alt}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        style={{ ...style, width: layout.width, padding: 0 }}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        {...restImageProps}\n      />\n      <IconButton\n        size=\"medium\"\n        sx={{\n          color: 'black',\n          bgcolor: alpha('#fff', 0.4),\n          position: 'absolute',\n          top: 10,\n          right: 12,\n        }}\n        onClick={() => handleImageDelete(alt)}\n      >\n        <CloseIcon size=\"medium\" />\n      </IconButton>\n    </Button>\n  );\n\n  const renderPhotosWithRadioButton = ({\n    layout,\n    imageProps: { alt, style, ...restImageProps },\n  }) => (\n    <Button component=\"div\">\n      <img\n        alt={alt}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        style={{ ...style, width: layout.width, padding: 0 }}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        {...restImageProps}\n      />\n      <FormControlLabel\n        control={<Radio />}\n        label=\"\"\n        checked={alt === thumbnail}\n        onChange={() => handleThumbnailChange(alt)}\n        sx={{\n          pr: 1,\n          position: 'absolute',\n          bgcolor: alpha('#fff', 0.6),\n          color: 'black',\n          borderRadius: '0px 5px 5px 0px',\n          borderColor: 'secondary.main',\n          borderLeft: 0,\n          bottom: 20,\n          left: 15,\n        }}\n      />\n    </Button>\n  );\n\n  const OptionsRow = (\n    <Stack direction=\"row\" spacing={2}>\n      <AddPhotos handleChange={addImage} onClick={() => handleOpUpdate('add')} updateOp={updateOp} />\n      <OptionsButton onClick={() => handleOpUpdate('delete')} name=\"delete\" updateOp={updateOp}>\n        <DeleteIcon sx={{ fontSize: '1.5rem' }} />\n        Delete\n      </OptionsButton>\n      <OptionsButton onClick={() => handleOpUpdate('thumbnail')} name=\"thumbnail\" updateOp={updateOp}>Set Thumbnail</OptionsButton>\n    </Stack>\n  );\n\n  const updatePanel = (\n    <Stack direction=\"row\">\n      <Typography variant=\"h6\" color=\"muted.main\">\n        Images:\n        {images.length}\n      </Typography>\n    </Stack>\n  );\n\n  if (!edit) {\n    return (\n      <MemoryPhotoAlbum images={images} handlePhotoClick={handlePhotoClick} />\n    );\n  }\n\n  if (edit && updateOp === 'delete') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n          renderPhoto={renderPhotosWithDeleteIcon}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && updateOp === 'thumbnail') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n          renderPhoto={renderPhotosWithRadioButton}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && updateOp === 'add') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && !updateOp) {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum images={images} handlePhotoClick={handlePhotoClick} />\n      </Stack>\n    );\n  }\n}\n\nMemoryImages.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  handlePhotoClick: PropTypes.func.isRequired,\n  handleThumbnailUpdate: PropTypes.func.isRequired,\n  deleteImage: PropTypes.func.isRequired,\n  addImage: PropTypes.func.isRequired,\n};\n\nMemoryPhotoAlbum.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  handlePhotoClick: PropTypes.func.isRequired,\n  renderPhoto: PropTypes.func,\n};\n\nMemoryPhotoAlbum.defaultProps = {\n  renderPhoto: null,\n};\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  updateOp: PropTypes.string.isRequired,\n};\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Link from '@mui/material/Link';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Divider from '@mui/material/Divider';\nimport Box from '@mui/material/Box';\nimport MemoryCarousel from './MemoryCarousel';\nimport MemoryContentStructure from './ContentStructure';\nimport MemoryTitle from './MemoryTitle';\nimport MemoryDate from './MemoryDate';\nimport MemoryStory from './MemoryStory';\nimport MemoryImages from './MemoryImages';\nimport api from '../Api';\nimport SimpleSnackbar from '../../components/simple_snackbar';\nimport './memory.css';\n\nfunction BackButton({ preview }) {\n  if (preview === false) {\n    return (\n      <Stack\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        sx={{ backgroundColor: 'button.main', paddingX: 2, paddingY: 1 }}\n      >\n        <Link href=\"/\" underline=\"none\">\n          <Button\n            variant=\"contained\"\n            component=\"label\"\n            sx={{\n              color: 'primary.main',\n              backgroundColor: 'button.main',\n              padding: '6px 8px',\n              boxShadow: 0,\n              '&:hover': {\n                backgroundColor: 'button.main',\n              },\n            }}\n          >\n            <ArrowBackIcon size=\"medium\" sx={{ paddingRight: 1 }} />\n            <Typography variant=\"body1\" color=\"muted.main\">Memories</Typography>\n          </Button>\n        </Link>\n      </Stack>\n    );\n  }\n  return null;\n}\n\nexport default function MemoryContent({\n  memTitle,\n  memDate,\n  memStory,\n  memImages,\n  bucket,\n  memoryID,\n  authURL,\n  preview,\n}) {\n  const [open, setOpen] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [title, setTitle] = useState(memTitle);\n  const [date, setDate] = useState(memDate);\n  const [story, setStory] = useState(memStory);\n  const [images, setImages] = useState(memImages);\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n\n  const [newImages, setNewImages] = useState([]);\n  const [newImagesCount, setNewImagesCount] = useState(null);\n  const [errorUploadImages, setErrorUploadImages] = useState([]);\n  const [addImageOpen, setAddImageOpen] = useState(false);\n  const [uploadImageProgress, setUploadImageProgress] = useState(null);\n  const [uploadImageStatus, setUploadImageStatus] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  const [httpError, setHTTPError] = useState(false);\n\n  const maxSteps = images.length;\n\n  useEffect(() => setTitle(memTitle), [memTitle]);\n  useEffect(() => setDate(memDate), [memDate]);\n  useEffect(() => setStory(memStory), [memStory]);\n  useEffect(() => setImages(memImages), [memImages]);\n\n  const handleSnackMessage = (msg, error) => {\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const handleHTTPError = (response, operation, callback) => {\n    if (response.status === 401) {\n      handleSnackMessage('You have been logged out. Please login to continue.', true);\n    } else if (response.status === 403) {\n      handleSnackMessage('You do not have permissions to do this operation.', true);\n    } else {\n      handleSnackMessage(`Unknown error occured while ${operation}`, true);\n    }\n    callback(response.status);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const httpErrorCallback = (status) => {\n    setSnack(true);\n    setHTTPError(status);\n  };\n\n  const UpdateDetails = async (item, value) => {\n    try {\n      const resp = await api.updateMemoryDetails(\n        bucket,\n        authURL,\n        memoryID,\n        item,\n        value,\n      );\n      if (resp.ok) {\n        handleSnackMessage(`Memory ${item} updated successfully`, false);\n      } else {\n        handleHTTPError(resp, `updating ${item}`, httpErrorCallback);\n      }\n      setSnack(true);\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const UpdateThumbnail = async (image) => {\n    try {\n      const resp = await api.updateMemoryImage(\n        bucket,\n        authURL,\n        memoryID,\n        'thumbnail',\n        image,\n      );\n      if (resp.ok) {\n        handleSnackMessage('Thumbnail updated successfully', false);\n        setSnack(true);\n      } else {\n        handleHTTPError(resp, 'updating thumbnail', httpErrorCallback);\n      }\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const deleteImage = async (image) => {\n    try {\n      let resp;\n      if (images.length > 1) {\n        resp = await api.updateMemoryImage(\n          bucket,\n          authURL,\n          memoryID,\n          'delete',\n          image,\n        );\n        if (resp.ok) {\n          handleSnackMessage('Memory image deleted successfully', false);\n          setImages(images.filter((item) => item.title !== image.title));\n        } else {\n          handleHTTPError(resp, 'deleting image', httpErrorCallback);\n        }\n      } else {\n        handleSnackMessage('Atleast 1 image is needed for memory. Unable to delete', true);\n      }\n      setSnack(true);\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const addImage = async (details) => {\n    try {\n      const resp = await api.updateMemoryImage(\n        bucket,\n        authURL,\n        memoryID,\n        'add',\n        details,\n      );\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const handleNewImages = async () => {\n    /* eslint-disable  no-await-in-loop, no-restricted-syntax */\n    for (const [index, img] of newImages.entries()) {\n      const [det, file, src] = img;\n      const putURL = await addImage(det).then((response) => {\n        if (response.ok) {\n          return response.text();\n        }\n        handleHTTPError(response, 'adding image', httpErrorCallback);\n        return '';\n      });\n      const photo = {\n        key: `memories/${memoryID}/images/${det.name}`,\n        src,\n        alt: det.name,\n        title: det.name,\n        width: det.width,\n        height: det.height,\n        images: [],\n      };\n      const uploadResp = await fetch(putURL, { body: file, method: 'PUT' });\n      if (uploadResp.ok) {\n        setUploadImageProgress(`Images uploaded: ${index + 1} / ${newImagesCount} `);\n        setImages((pics) => pics.concat([photo]));\n      } else {\n        setUploadImageStatus('Error while uploading memory image');\n        setErrorUploadImages((errImgs) => errImgs.concat([det.name]));\n        handleHTTPError(uploadResp, 'deleting image', httpErrorCallback);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    if (newImages.length > 0) {\n      setAddImageOpen(true);\n      setUploadImageProgress('Preparing images for upload....');\n    }\n    if (newImages.length === newImagesCount) {\n      await handleNewImages();\n      if (errorUploadImages.length > 0) {\n        setUploadImageStatus(`Error while uploading ${errorUploadImages.length} images`);\n      } else {\n        setUploadImageStatus(`${newImages.length} image(s) uploaded successfully`);\n      }\n      setErrorUploadImages([]);\n      setNewImagesCount(null);\n      setNewImages([]);\n      setTimeout(() => {\n        setAddImageOpen(false);\n        setUploadImageStatus(null);\n        setUploadImageProgress(null);\n      }, 3000);\n    }\n  }, [newImages]);\n\n  const handleImageAdd = async (event) => {\n    if (event.target.files) {\n      const files = Array.from(event.target.files);\n      setNewImagesCount(files.length);\n      if (images.length + files.length <= 15) {\n        files.forEach((file) => {\n          const image = new Image();\n          image.onload = async (e) => {\n            const height = e.target.naturalHeight;\n            const width = e.target.naturalWidth;\n            const size = file.size / (1024 * 1024);\n            const { name } = file;\n            const resImages = [500, 1000, 1500].map((resHeight) => ({\n              height: resHeight, width: Math.ceil((resHeight * width) / height),\n            }));\n            const creationDate = Date.now();\n            const newName = `${creationDate}-${name}`;\n            const imageDetails = [{\n              name: newName, size, height, width, images: resImages,\n            }, file, e.target.src];\n            setNewImages((pics) => pics.concat([imageDetails]));\n          };\n          image.src = URL.createObjectURL(file);\n        });\n        files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n      } else {\n        handleSnackMessage(`Unable to add ${files.length} images. Maximum images allowed per memory is 15`, true);\n        setSnack(true);\n      }\n    }\n  };\n\n  const updateTitle = (value) => {\n    const resp = UpdateDetails('title', value);\n    if (resp) {\n      setTitle(value);\n    }\n  };\n\n  const updateDate = (value) => {\n    const resp = UpdateDetails('date', value);\n    if (resp) {\n      setDate(value);\n    }\n  };\n\n  const updateStory = (value) => {\n    const resp = UpdateDetails('story', value);\n    if (resp) {\n      setStory(value);\n    }\n  };\n\n  const handleClose = () => setOpen(false);\n\n  const handleActiveIndexChange = (step) => setActiveIndex(step);\n\n  const handleBack = () => {\n    setActiveIndex(\n      (prevActiveStep) => (prevActiveStep - 1 + maxSteps) % maxSteps,\n    );\n  };\n\n  const handleNext = () => {\n    setActiveIndex((prevActiveStep) => (prevActiveStep + 1) % maxSteps);\n  };\n\n  const handlePhotoClick = (photo, event, index) => {\n    setOpen(true);\n    setActiveIndex(index);\n  };\n\n  const handleEditClick = () => setEdit(true);\n\n  const memoryTitle = (\n    <MemoryTitle\n      editable={edit}\n      text={title}\n      handleTitleUpdate={updateTitle}\n    />\n  );\n\n  const memoryDate = (\n    <MemoryDate editable={edit} prevDate={date} handleDateUpdate={updateDate} />\n  );\n\n  const storyLayout = (\n    <MemoryStory\n      editable={edit}\n      prevStory={story}\n      handleStoryUpdate={updateStory}\n    />\n  );\n\n  const photoLayout = (\n    <MemoryImages\n      editable={edit}\n      images={images}\n      handlePhotoClick={handlePhotoClick}\n      handleThumbnailUpdate={UpdateThumbnail}\n      deleteImage={deleteImage}\n      addImage={handleImageAdd}\n    />\n  );\n\n  const updateDone = (\n    <Button\n      variant=\"contained\"\n      component=\"label\"\n      onClick={() => setEdit(false)}\n      sx={{\n        color: 'primary.main',\n        borderRadius: 5,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n      }}\n    >\n      <DoneIcon size=\"medium\" sx={{ paddingRight: 1 }} />\n      <Typography variant=\"body1\" color=\"muted.main\">Edit</Typography>\n    </Button>\n  );\n\n  if (httpError === 401 && snack === false) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return (\n    <>\n      {edit ? (\n        <Stack\n          direction=\"row\"\n          justifyContent=\"flex-start\"\n          sx={{ backgroundColor: 'button.main', paddingX: 2, paddingY: 1 }}\n        >\n          {updateDone}\n        </Stack>\n      ) : <BackButton preview={preview} /> }\n      <Box\n        component=\"div\"\n        sx={{\n          backgroundColor: 'button.main',\n          margin: edit ? '5px' : 0,\n        }}\n      >\n        <MemoryContentStructure\n          header={memoryTitle}\n          subheader={memoryDate}\n          photoLayout={photoLayout}\n          storyLayout={storyLayout}\n          memoryID={memoryID}\n          bucket={bucket}\n          authURL={authURL}\n          handleEditClick={handleEditClick}\n          preview={preview}\n        />\n      </Box>\n      <MemoryCarousel\n        open={open}\n        title={title}\n        date={date}\n        images={images}\n        index={activeIndex}\n        handleNext={handleNext}\n        handleBack={handleBack}\n        handleClose={handleClose}\n        handleChange={handleActiveIndexChange}\n      />\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n        error={snackError}\n      />\n      <Dialog\n        open={addImageOpen}\n        fullWidth\n        sx={{\n          p: 1,\n        }}\n      >\n        <Card sx={{ maxWidth: 1, p: 1 }}>\n          <CardHeader title=\"Adding Images\" sx={{ textAlign: 'center' }} />\n          <Divider />\n          <CardContent>\n            <Typography variant=\"h6\" sx={{ color: 'muted.main' }}>{uploadImageProgress}</Typography>\n            <Stack justifyContent=\"center\" sx={{ py: 2 }}>\n              <Typography variant=\"h5\">{uploadImageStatus}</Typography>\n            </Stack>\n          </CardContent>\n        </Card>\n      </Dialog>\n\n    </>\n  );\n}\n\nMemoryContent.defaultProps = {\n  memTitle: 'Memory Title',\n  memDate: 'Memory Date',\n  memStory: 'Memory Text',\n};\n\nMemoryContent.propTypes = {\n  memTitle: PropTypes.string,\n  memDate: PropTypes.string,\n  memStory: PropTypes.string,\n  memoryID: PropTypes.string.isRequired,\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n  memImages: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  preview: PropTypes.bool.isRequired,\n};\n\nBackButton.propTypes = {\n  preview: PropTypes.bool.isRequired,\n};\n"],"names":["RemovePhotoIcon","size","handleClick","sx","color","bgcolor","alpha","position","top","right","onClick","defaultProps","SnackText","message","error","direction","spacing","justifyContents","alignItems","fontSize","SimpleSnackbar","snackBarOpen","onClose","useState","open","setOpen","snackMessage","setSnackMessage","useEffect","handleClose","action","autoHideDuration","anchorOrigin","vertical","horizontal","useDate","initialDate","date","setDate","e","newDate","Date","formattedDate","toLocaleDateString","day","month","year","useStory","initialState","story","setStory","event","target","value","useTitle","initialValue","title","setTitle","ActionIcon","icon","label","Box","IconButton","Confirm","confirm","handleCallback","handleCloseCallback","Dialog","backgroundColor","DialogTitle","p","Typography","pb","Stack","Button","variant","DeleteMemoryIcon","Delete","ConfirmDelete","callback","closeCallback","bucket","authURL","memoryID","memoryDeleteCallback","api","deleteResults","console","log","EmailInput","items","handleKeyDown","handleChange","handleDelete","handlePaste","mb","TextField","id","placeholder","onKeyDown","onChange","onPaste","helperText","my","Grid","container","map","item","Chip","onDelete","margin","useEmail","setItems","setValue","setError","isInList","email","includes","evt","key","preventDefault","val","trim","err","test","isEmail","isValid","prevItems","filter","i","emails","clipboardData","getData","match","toBeAdded","ShareMemoryIcon","Share","ShareComponent","fullWidth","Divider","emailList","memoryShareCallback","UpdateMemoryIcon","Edit","MemoryActions","actionComponent","snackBar","handleShare","handleEditClick","anchorEl","setAnchorEl","setAction","Boolean","MoreVert","currentTarget","Menu","MenuListProps","borderRadius","MenuItem","MemoryContentStructure","className","header","subheader","photoLayout","storyLayout","preview","snack","setSnack","snackError","setSnackError","theme","useTheme","useMediaQuery","breakpoints","down","handleSnackMessage","msg","status","actions","deleteMemory","shareMemory","to","replace","Card","boxShadow","CardHeader","display","justifyContent","flexDirection","lg","xs","height","width","overflowY","mt","px","EnhancedSwipeableViews","bindKeyboard","autoPlay","virtualize","SwipeableViews","MemoryImageSlide","ind","images","handleNext","handleStepChange","activeStep","setActiveStep","loadedImages","setLoadedImages","setDisplay","length","handleImageLoad","prevLoaded","index","onChangeIndex","enableMouseEvents","animateTransitions","interval","style","slideRenderer","props","virtNum","count","total","modulus","mod","srcSet","src","join","component","onLoad","boxSizing","cursor","objectFit","alt","NextPic","edge","transform","KeyboardArrowRight","PreviousPic","left","KeyboardArrowLeft","MemoryCarousel","handleBack","fullScreen","padding","MemoryTitle","editable","text","handleTitleUpdate","handleTitleChange","edit","setEdit","startEdit","setStartEdit","defaultValue","maxWidth","DoneTwoTone","Clear","MemoryDate","prevDate","handleDateUpdate","handleDateChange","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","inputFormat","maxDate","renderInput","readOnly","required","MemoryStory","prevStory","handleStoryUpdate","handleStoryChange","storyRef","useRef","whiteSpace","m","border","borderColor","minHeight","current","focus","TextareaAutosize","autoFocus","maxHeight","paddingTop","overflow","outline","resize","ref","OptionsButton","children","name","updateOp","AddPhotos","type","hidden","multiple","accept","MemoryPhotoAlbum","handlePhotoClick","renderPhoto","arrangement","setArrangement","twidth","theight","forEach","layout","photos","MemoryImages","handleThumbnailUpdate","deleteImage","addImage","setUpdateOp","thumbnail","setThumbnail","handleOpUpdate","op","OptionsRow","updatePanel","imageProps","restImageProps","deleted","find","image","handleImageDelete","Close","FormControlLabel","control","Radio","checked","thumbnailImage","handleThumbnailChange","pr","borderLeft","bottom","BackButton","paddingX","paddingY","Link","href","underline","ArrowBack","paddingRight","MemoryContent","memTitle","memDate","memStory","memImages","activeIndex","setActiveIndex","setImages","newImages","setNewImages","newImagesCount","setNewImagesCount","errorUploadImages","setErrorUploadImages","addImageOpen","setAddImageOpen","uploadImageProgress","setUploadImageProgress","uploadImageStatus","setUploadImageStatus","httpError","setHTTPError","maxSteps","handleHTTPError","response","operation","httpErrorCallback","UpdateDetails","resp","ok","UpdateThumbnail","details","handleNewImages","entries","img","det","file","then","putURL","photo","fetch","body","method","uploadResp","pics","concat","errImgs","setTimeout","handleImageAdd","files","Array","from","Image","onload","naturalHeight","naturalWidth","resImages","resHeight","Math","ceil","creationDate","now","newName","imageDetails","URL","createObjectURL","revokeObjectURL","memoryTitle","memoryDate","updateDone","Done","prevActiveStep","step","textAlign","CardContent","py"],"sourceRoot":""}