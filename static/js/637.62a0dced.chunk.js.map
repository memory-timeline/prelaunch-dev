{"version":3,"file":"static/js/637.62a0dced.chunk.js","mappings":"iJA2BqB,aAUpB,OAVoB,0BAArB,WAAsBA,EAAKC,GAAI,8EAEW,OAFX,SAErBC,EAAS,CAAED,KAAAA,EAAME,OAAQ,OAAQ,EAAD,OACnBC,MAAMJ,EAAKE,GAAQG,MAAK,SAACC,GAAQ,OAAKA,CAAQ,IAAE,KAAD,EAAxD,OAAJC,EAAI,yBACHA,GAAI,OAGQ,OAHR,yBAGXC,QAAQC,IAAI,EAAD,IAAQ,kFAGtB,sBAkED,KACEC,WAtGF,SAAoBC,EAAWC,GAC7B,IACE,IACMV,EAAS,CAAEW,WAAYF,GAE7B,OAAOG,EAAAA,EAAAA,KADSC,oCAFH,mBAGsBb,EAAQc,KAAKC,UAAUL,GAK5D,CAJE,MAAOM,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EA4FEC,YA1FF,SAAqBR,EAAWC,GAC9B,IACE,IACMV,EAAS,CAAEW,WAAYF,GAE7B,OAAOG,EAAAA,EAAAA,KADSC,oCAFH,oBAGsBb,EAAQc,KAAKC,UAAUL,GAK5D,CAJE,MAAOM,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EAgFEE,OAhFD,SACqB,EAAD,mCAgFnBC,aApEF,SAAsBC,GACpB,IACE,IACMpB,EAAS,CAAEqB,WAAYD,GAE7B,OAAOR,EAAAA,EAAAA,IADSC,oCAFH,oBAGqBb,EAKpC,CAJE,MAAOgB,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EA0DEM,aAxDF,SAAsBC,GACpB,IACE,IACMvB,EAAS,CAAEW,WAAYY,GAE7B,OAAOX,EAAAA,EAAAA,IADSC,oCAFH,yBAGqBb,EAKpC,CAJE,MAAOgB,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EA8CEQ,WA5CF,SAAoBD,GAClB,IACE,IACMvB,EAAS,CAAEW,WAAYY,GAE7B,OAAOX,EAAAA,EAAAA,IADSC,oCAFH,mBAGqBb,EAKpC,CAJE,MAAOgB,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EAkCES,cAhCF,SAAuBF,GACrB,IACE,IACMvB,EAAS,CAAEW,WAAYY,GAE7B,OAAOX,EAAAA,EAAAA,aADSC,oCAFH,sBAG8Bb,EAK7C,CAJE,MAAOgB,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EAsBEU,oBApBF,SAA6BH,GAC3B,IACE,IACMvB,EAAS,CAAEW,WAAYY,GAE7B,OAAOX,EAAAA,EAAAA,IADSC,oCAFH,6BAGqBb,EAKpC,CAJE,MAAOgB,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,E,kDCtGMW,EAAG,yCAAG,WAAO7B,EAAK8B,GAAI,8FAO6B,OAP3B5B,EAAM,+BAAG,CAAC,EAClC6B,EAAM,kBAAc/B,GAAG,OAAG8B,GACxBE,EAAU,CACd7B,OAAQ,MACR8B,YAAa,UACbC,QAAS,IAAIC,QAAQ,CAAE,eAAgB,sBAEzCJ,GAAM,WAAQ,IAAIK,gBAAgBlC,GAAQmC,YAAa,SACpCjC,MAAM2B,EAAQC,GAAS,KAAD,EAA/B,IAAJzB,EAAI,QACA+B,GAAG,CAAD,mBACU,MAAhB/B,EAAKgC,OAAc,iBACyD,OAA9EC,SAASC,OAAS,4DAA4D,kBACvE,CAAEF,OAAQ,oBAAmB,WAElB,MAAhBhC,EAAKgC,OAAc,0CACd,CAAEA,OAAQ,cAAa,iCAI3BhC,EAAKmC,QAAM,4CACnB,gBApBQ,wCAsBHC,EAAI,yCAAG,WAAO3C,EAAK8B,EAAM5B,EAAQD,GAAI,8EAQvC,OAPE2C,EAAM,kBAAc5C,GAAG,OAAG8B,GAC9Bc,GAAM,WAAQ,IAAIR,gBAAgBlC,GAAQmC,YACpCL,EAAU,CACd7B,OAAQ,OACR8B,YAAa,UACbC,QAAS,IAAIC,QAAQ,CAAE,eAAgB,qBACvClC,KAAAA,GACD,kBACMG,MAAMwC,EAAQZ,GAAS3B,MAAK,SAACC,GAClC,OAAKA,EAASgC,GAGPhC,EAASoC,OAFP,CAAEH,OAAQ,QAGrB,KAAE,2CACH,gBAfS,4CAiBJM,EAAY,yCAAG,WAAO7C,EAAK8B,EAAM5B,GAAM,8EAOzC,OANE0C,EAAM,kBAAc5C,GAAG,OAAG8B,GAC9Bc,GAAM,WAAQ,IAAIR,gBAAgBlC,GAAQmC,YACpCL,EAAU,CACd7B,OAAQ,SACR8B,YAAa,UACbC,QAAS,IAAIC,QAAQ,CAAE,eAAgB,sBACxC,kBACM/B,MAAMwC,EAAQZ,GAAS3B,MAAK,SAACC,GAClC,OAAKA,EAASgC,GAGPhC,EAASoC,OAFP,CAAEH,OAAQ,QAGrB,KAAE,2CACH,gBAdiB,0CAelB,KAAiBV,IAAAA,EAAKc,KAAAA,EAAME,aAAAA,E,6FClDb,SAASC,EAAc,GAA8B,IAA5BC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KACzD,OACE,SAACC,EAAA,EAAM,CACLC,GAAIF,EACJG,QAAQ,YACRC,UAAU,QACVL,QAASA,EACTM,GAAI,CACFC,MAAO,aACPC,aAAc,GACdC,gBAAiB,cACjBC,QAAS,UACT,UAAW,CACTH,MAAO,aACPE,gBAAiB,gBAEnB,SAEDV,GAGP,CAEAD,EAAca,aAAe,CAC3BX,QAAS,WAAO,G,eCvBH,SAASY,EAAU,GAAmB,IAAjBC,EAAY,EAAZA,aAClC,OACE,UAACf,EAAa,CAACG,KAAK,MAAK,WACvB,kBAAOa,KAAK,OAAOC,QAAM,EAACC,UAAQ,EAACC,OAAO,UAAUC,SAAUL,KAC9D,SAAC,IAAY,CAACP,GAAI,CAAEa,SAAU,WAC9B,SAACC,EAAA,EAAU,CAACd,GAAI,CAAEe,WAAY,QAAS,SAAC,iBAG9C,C,wNCqGA,GACEC,mBAAoB,WACpBC,mBAAoB,KACpBC,UAAW,GACXC,iBAAkB,KAClBN,SAAU,GACVO,WAAY,GACZC,YAAa,IACbC,gBAAiB,IACjBC,cAAe,GACfC,sBAAuB,GACvBC,UAAW,EACXC,UAAW,GACXC,aAAc,EACdC,WA3HiB,CACjBC,GAAI,CACFC,SAAS,EACTC,MAAO,KACPC,OAAQ,KACRC,KAAM,aACNC,MAAM,SAACC,EAAA,EAAe,CAACnC,GAAI,CAAEoC,GAAI,EAAGC,KAAM,WAC1CC,cAAe,CAAC,KAAM,OAExBC,GAAI,CACFT,SAAS,EACTC,MAAO,KACPC,OAAQ,KACRC,KAAM,aACNC,MAAM,SAACC,EAAA,EAAe,CAACnC,GAAI,CAAEoC,GAAI,EAAGC,KAAM,YAE5CG,YAAa,CACXV,SAAS,EACTE,OAAQ,KACRD,MAAO,KACPE,KAAM,eACNC,MACE,SAACC,EAAA,EAAe,CACdnC,GAAI,CACFoC,GAAI,EACJK,UAAW,gBACXJ,KAAM,WAIZC,cAAe,CAAC,cAAe,gBAEjCI,YAAa,CACXZ,SAAS,EACTE,OAAQ,KACRD,MAAO,KACPE,KAAM,eACNC,MAAM,SAACC,EAAA,EAAe,CAACnC,GAAI,CAAEoC,GAAI,EAAGK,UAAW,gBAAiBJ,KAAM,YAExEM,eAAgB,CACdb,SAAS,EACTE,OAAQ,IACRD,MAAO,IACPE,KAAM,wBACNC,MAAM,SAACU,EAAA,EAAY,CAAC5C,GAAI,CAAEqC,KAAM,UAAWD,GAAI,MAEjDS,cAAe,CACbf,SAAS,EACTE,OAAQ,IACRD,MAAO,KACPE,KAAM,uBACNC,MAAM,SAACU,EAAA,EAAY,CAAC5C,GAAI,CAAEqC,KAAM,UAAWD,GAAI,MAEjDU,OAAQ,CACNhB,SAAS,EACTE,OAAQ,KACRD,MAAO,KACPE,KAAM,OACNC,MAAM,SAACU,EAAA,EAAY,CAAC5C,GAAI,CAAEqC,KAAM,UAAWD,GAAI,MAEjDW,eAAgB,CACdjB,SAAS,EACTE,OAAQ,KACRD,MAAO,KACPE,KAAM,SACNC,MACE,SAACc,EAAA,EAAY,CACXhD,GAAI,CACFG,gBAAiB,UACjBkC,KAAM,QACND,GAAI,MAKZa,WAAY,CACVnB,SAAS,EACTE,OAAQ,KACRD,MAAO,KACPE,KAAM,QACNC,MACE,SAACgB,EAAA,EAAa,CACZlD,GAAI,CACFqC,KAAM,QACNc,WACE,sFACFf,GAAI,MAKZgB,gBAAiB,CACftB,SAAS,EACTE,OAAQ,KACRD,MAAO,KACPE,KAAM,OACNC,MACE,SAACgB,EAAA,EAAa,CACZlD,GAAI,CACFqC,KAAM,QACNc,WACE,sFACFf,GAAI,Q,UCxGd,SAASiB,EAAkBC,EAAOC,EAAWC,EAAYC,EAAUC,GACjE,IAAMC,EAAazE,SAAS0E,cAAc,UAC1CD,EAAW5B,MAAQwB,EACnBI,EAAW3B,OAASwB,EACpB,IAGIK,EACAC,EAJEC,EAAMJ,EAAWK,WAAW,MAC5BC,EAAcV,EAAYC,EAC3BzB,EAAkBwB,EAAXvB,EAAsBwB,EAG5BU,EAAcC,KAAKC,MAAMD,KAAKE,KAAKd,EAAYE,IACrD,GAAoB,IAAhBS,EACFH,EAAIO,UAAUhB,EAAO,EAAG,EAAGvB,EAAOC,EAAQ,EAAG,EAAGyB,EAAUC,OACrD,CACL,IAAK,IAAIa,EAAI,EAAGA,EAAIL,EAAaK,GAAK,EAEpCT,GADAD,EAAW9B,GAAS,GACGkC,EACb,IAANM,EACFR,EAAIO,UAAUhB,EAAO,EAAG,EAAGvB,EAAOC,EAAQ,EAAG,EAAG6B,EAAUC,GAE1DC,EAAIO,UAAUX,EAAY,EAAG,EAAG5B,EAAOC,EAAQ,EAAG,EAAG6B,EAAUC,GAEjE/B,EAAQ8B,EACR7B,EAAS8B,EAGXC,EAAIO,UAAUX,EAAY,EAAG,EAAG5B,EAAOC,EAAQ,EAAG,EAAGyB,EAAUC,EACjE,CAEA,IAAMc,EAAUtF,SAAS0E,cAAc,UAKvC,OAJAY,EAAQzC,MAAQ0B,EAChBe,EAAQxC,OAAS0B,EACFc,EAAQR,WAAW,MAC3BM,UAAUX,EAAY,EAAG,EAAGF,EAAUC,EAAW,EAAG,EAAGD,EAAUC,GACjEc,CACT,CA8BA,SAASC,EAAWC,EAAKC,EAAQC,EAAQC,GACvC,OAAIA,EAASH,EAAIC,IAAWD,EAAIE,GAAUC,EAAeD,EAClDD,CACT,CAsEC,SAEcG,EAAc,EAAD,uDAU3B,OAV2B,0BAA5B,WAA6BxB,EAAOC,EAAWC,EAAYuB,EAAUC,EAASC,GAAQ,sFAMM,OALpFC,EAAkBH,EAAWC,EAC5BvB,EACLF,EAAYY,KAAKgB,KAAKD,GADPxB,EAEfF,EAAaW,KAAKgB,KAAKD,GAEnBE,EAAgB/B,EAAkBC,EAAOC,EAAWC,EAAYC,EAAUC,GAAW,EAAD,OAC9D,IAAI2B,SAAQ,SAACC,GAAO,OAAKF,EAAcG,OAAOD,EAASL,EAAS,IAAE,KAAD,EACrC,OADlDO,EAAa,OACbC,EAAeC,IAAIC,gBAAgBH,GAAc,kBAChD,CAACA,EAAeC,EAAchC,EAAUC,IAAU,4CAC1D,+BAEckC,EAAY,EAAD,mDAuCzB,OAvCyB,0BAA1B,WAA2BC,EAAGvC,EAAOwC,EAAMC,GAAe,sGAetD,GAfsD,EACXF,EAAEhB,OAAvCmB,EAAY,EAAZA,aAAcC,EAAa,EAAbA,cAAeC,EAAG,EAAHA,IAC/BC,EAAK,UAAMC,KAAKC,MAAK,YAAIP,EAAKnG,MAC9BsE,EAAc+B,EAAeC,EAC7BK,EAAOC,EAAAA,EAAAA,QAAcT,GACvBU,EAAc,CAChBL,MAAAA,EACAD,IAAAA,EACAD,cAAAA,EACAD,aAAAA,EACA/B,YAAAA,EACAwC,kBAAmBxC,EACnBzD,KAAMsF,EAAKtF,KACXsF,KAAAA,EACAQ,KAAMC,EAAAA,EAAAA,QAAcT,MAElBQ,EAAOI,EAAAA,cAAsB,iBAEQ,OAAvCxJ,QAAQyJ,KAAK,0BAA0B,SACc7B,EACnDxB,EACA0C,EACAC,EACAK,EACAI,EAAAA,aACAZ,EAAKtF,MACL,KAAD,0BAPMoG,EAAO,KAAEC,EAAM,KAAEhD,EAAQ,KAAEC,EAAS,KAQ3C0C,GAAW,kBACNA,GAAW,IACdN,IAAKW,EACLZ,cAAenC,EACfkC,aAAcnC,EACdiC,KAAMc,EACNN,KAAMC,EAAAA,EAAAA,QAAcK,KAGtB1J,QAAQ4J,QAAQ,0BAA0B,QAE5Cf,EAAgBS,GAAa,6CAC9B,sBAE6B,aAY7B,OAZ6B,0BAA9B,WAA+BO,EAAOC,EAAkBC,EAAqBC,GAAe,4EACtFH,EAAMlC,OAAOsC,QACfH,GAAiB,SAACI,GAAG,OAAKA,EAAML,EAAMlC,OAAOsC,MAAME,MAAM,IACzDJ,EAAoBF,EAAMlC,OAAOsC,MAAME,SACjCF,EAAQG,MAAMC,KAAKR,EAAMlC,OAAOsC,QAChCK,IAAG,yCAAC,WAAO1B,GAAI,6EACbxC,EAAQ,IAAImE,OACZC,OAAS,SAAC7B,GAAC,OAAKD,EAAYC,EAAGvC,EAAOwC,EAAMoB,EAAiB,EACnE5D,EAAM4C,IAAMR,IAAIC,gBAAgBG,GAAM,2CACvC,mDAJQ,IAKTqB,EAAMK,KAAI,SAAC1B,GAAI,OAAKJ,IAAIiC,gBAAgB7B,EAAK,KAC9C,2CACF,wBAED,SAAS8B,EAAoBC,EAAMC,EAAMC,GACvC,IAAMC,EAASH,EAAOC,EACtB,OAAIE,EAASD,EAAU,CAACF,EAAMA,EAAOE,GACjCC,EAASD,EAAU,CAACD,EAAOC,EAAGD,GAC3B,CAACD,EAAMC,EAChB,CAEA,SAASG,EAAShG,EAAMiG,EAAGC,EAAGC,EAAUvH,EAAUO,GAGhD,GAAoB,IAAhBa,EAAKoF,OAAc,MAAO,GAC9B,IACMgB,EAAanJ,SAAS0E,cAAc,UAC1CyE,EAAWtG,MAAQqG,EAAW,GAC9BC,EAAWrG,OAAS,IACpB,IAAM+B,EAAMsE,EAAWrE,WAAW,MAClCD,EAAIuE,KAAI,UAAMzH,EAAQ,YACtBkD,EAAIwE,UAAY,SAShB,IARA,IAAMC,EAAQN,EACVO,EAAQN,EACNO,EAAQzG,EAAK0G,MAAM,KACrBC,EAAO,GACPC,EAAW,GACTC,EAAY,GAGTC,EAAI,EAAGA,EAAIL,EAAMrB,OAAQ0B,GAAK,EAAG,CAExCF,GAAQ,UAAOH,EAAMK,GAAE,KACPhF,EAAIiF,YAAYH,GACN9G,MAEVsG,EAAWtG,OAASgH,EAAI,GAEtCD,EAAUG,KAAK,CAACL,EAAMJ,EAAOC,IAE7BA,GAASrH,EAETwH,EAAI,UAAMF,EAAMK,GAAE,KAClBF,EAAQ,UAAMH,EAAMK,GAAE,MAGtBH,GAAI,UAAOF,EAAMK,GAAE,KAIjBA,IAAML,EAAMrB,OAAS,GACvByB,EAAUG,KAAK,CAACL,EAAMJ,EAAOC,GAEjC,CAEA,OAAOK,CACT,CAEA,SAASI,EAAcjH,EAAMiG,EAAGC,EAAGC,EAAUvH,EAAUO,EAAY8C,GACjE,GAAoB,IAAhBjC,EAAKoF,OACP,OAAO,EAET,IAAQhG,EAAgBqF,EAAAA,YASxB,OARkBuB,EAChBhG,EACAiG,EACAC,EACAC,EACAvH,EAAWqD,EACX9C,EAAa8C,GAEGmD,OAASjG,EAAa,EAAIC,GAAe6C,CAC7D,CAiCA,OACEiF,OArNF,WAEE,MADe,CAAC,IAAK,KACPhF,KAAKiF,MAAMjF,KAAKkF,UAChC,EAmNEC,YAhPF,SAAqB5E,EAAKG,GACxB,IAAMkE,EAAIrE,EAAI2C,OAEd,GAAIxC,GAAUH,EAAI,GAAI,OAAO,EAC7B,GAAIG,GAAUH,EAAIqE,EAAI,GAAI,OAAOA,EAAI,EAKrC,IAHA,IAAIQ,EAAQ,EACRC,EAAMT,EACNU,EAAM,EACHF,EAAQC,GAAK,CAGlB,GAAI9E,EAFJ+E,GAAOF,EAAQC,GAAO,KAEL3E,EAAQ,OAAO4E,EAEhC,GAAI5E,EAASH,EAAI+E,GAAM,CACrB,GAAIA,EAAM,GAAK5E,EAASH,EAAI+E,EAAM,GAAI,OAAOhF,EAAWC,EAAK+E,EAAM,EAAGA,EAAK5E,GAC3E2E,EAAMC,CACR,KAAO,CACL,GAAIA,EAAMV,EAAI,GAAKlE,EAASH,EAAI+E,EAAM,GAAI,OAAOhF,EAAWC,EAAK+E,EAAKA,EAAM,EAAG5E,GAC/E0E,EAAQE,EAAM,CAChB,CACF,CAEA,OAAOA,CACT,EAyNEC,YAlNF,SAAqBhF,EAAKG,GAMxB,IALA,IAAI0E,EAAQ,EACRC,EAAM9E,EAAI2C,OAAS,EACnB9C,EAAIgF,EACJI,EAAIH,EACJI,EAAkBzF,KAAK0F,IAAInF,EAAI6E,GAAS7E,EAAI8E,GAAO3E,GAChD0E,GAASC,GACd,GAAI9E,EAAI6E,GAAS7E,EAAI8E,GAAO3E,EACtBV,KAAK0F,IAAInF,EAAI6E,GAAS7E,EAAI8E,GAAO3E,GAAU+E,IAE7CA,EAAkBzF,KAAK0F,IAAInF,EAAI6E,GAAS7E,EAAI8E,GAAO3E,GACnDN,EAAIgF,EACJI,EAAIH,GAENA,GAAO,MACF,MAAI9E,EAAI6E,GAAS7E,EAAI8E,IAAQ3E,GAO7B,CAELN,EAAIgF,EACJI,EAAIH,EACJ,KACF,CAXMrF,KAAK0F,IAAInF,EAAI6E,GAAS7E,EAAI8E,GAAO3E,GAAU+E,IAC7CA,EAAkBzF,KAAK0F,IAAInF,EAAI6E,GAAS7E,EAAI8E,GAAO3E,GACnDN,EAAIgF,EACJI,EAAIH,GAEND,GAAS,CAMX,CAGF,OADqBpF,KAAKiF,MAAMjF,KAAKkF,UACZ,CAAC9E,EAAGoF,GACtB,CAACA,EAAGpF,EACb,EAmLEuF,eAjLF,SAAwBC,EAAKC,EAAKC,GAChC,MAAY,MAARF,EAAoBC,EAAMC,EACtBD,EAAMC,GAAQD,EAAMC,EAC9B,EA+KEC,gBA1HD,SAE8B,EAAD,uCAyH5BjC,SAAAA,EACAkC,cAtBoB,SAACC,GAAK,qBAAaA,EAAMC,EAAC,aAAKD,EAAME,EAAC,aAAKF,EAAMG,EAAC,aAAKH,EAAMrC,EAAC,MAuBlFH,oBAAAA,EACA4C,eAxRF,SACEzG,EACA0G,EACAC,EACAxG,EACAyG,EACAC,EACAC,GAEA,IAAQhK,EAA0B6F,EAAAA,SAAhBrF,EAAgBqF,EAAAA,YAClC3C,EAAIuE,KAAI,UAAMpE,EAAcrD,EAAQ,YACpCkD,EAAIwE,UAAY,SAChBxE,EAAI+G,aAAe,MACnB/G,EAAIgH,UAAY,YAChBhH,EAAIiH,SAAS,EAAGN,EAAUC,EAAaD,EAAWG,GAClD9G,EAAIgH,UAAY,QAEhB,IAC6B,EAD7B,UACoBN,GAAS,IAA7B,2BAA+B,CAAC,IAArBQ,EAAK,QACd,UAAwBA,EAAK,GAAtBC,EAAQ,KAAI/C,EAAC,KACpBpE,EAAIoH,SACFD,EACAE,SAAST,EAAc,EAAG,IAC1BS,SAASjD,EAAIuC,EAAW,IAAMxG,EAAc7C,EAAcuJ,EAAc,IAE5E,CAAC,+BACH,EA+PE1B,cAAAA,EACAmC,mBA1CF,SACEC,EACAC,EACAtJ,EACAiG,EACAC,EACAtH,EACAO,EACA8C,EACAD,GAIA,OAAO2D,EAAoB0D,EAAYC,EADpBrC,EAAcjH,EAAMiG,EAAGC,EAAGmD,EAAYzK,EAAUO,EAAY8C,GACdD,EACnE,EA6BEuH,mBAzBF,SAA4BC,EAAeC,EAAgBC,GACzD,IAAMC,EAAKH,EAAgBC,EACrBG,EAAmBF,EAAiBnE,KAAI,SAACsE,GAC7C,IAAMC,EAAgBN,EAAgBK,EAAG1B,MAAMpE,aAAgB8F,EAAG1B,MAAMrI,MAClEiK,EAAgBD,EAAeH,EAGrC,MAAO,CADOH,EAAgBM,EAAeL,EAAiBM,EAC/C,CAACD,EAAcC,GAChC,IAEA,OADAH,EAAiBI,MAAK,SAAClE,EAAGwC,GAAC,OAAKA,EAAE,GAAKxC,EAAE,EAAE,IACpC8D,EAAiB,GAAG,EAC7B,G,wGC/Se,SAASK,EAAYzB,EAAWC,EAAUG,EAAY7I,GACnE,IAAQnB,EAAsC6F,EAAAA,SAA5BtF,EAA4BsF,EAAAA,WAAhBrF,EAAgBqF,EAAAA,YAC9C,OACE,iCACE,SAACyF,EAAA,EAAK,CACJnM,GAAI,CACFgC,OAAQ6I,EACR1K,iBAAiBiM,EAAAA,EAAAA,IAAM,UAAW,IAClC1B,SAAU,WACV2B,IAAK3B,EACL3I,MAAO,UAKT0I,EAAUjD,KAAI,SAACyD,GAAK,OAClB,SAACnK,EAAA,EAAU,CAETd,GAAI,CACF+B,MAAO,OACP2I,SAAU,WACV2B,IAAK3B,EAAWO,EAAM,GAAK5J,EAAcW,EACzCsK,SAAU,EACVrM,MAAO,cACPsI,UAAW,SACXgE,WAAY,QACZ1L,SAAS,GAAD,OAAKA,EAAQ,MACrBO,WAAW,GAAD,OAAKA,EAAU,MACzBoL,cAAe,UACf,SAEDvB,EAAM,IAdFA,EAAM,GAeA,MAKvB,CCvCe,SAASwB,EAAa,GASjC,IARFtG,EAAK,EAALA,MACApE,EAAK,EAALA,MACA2K,EAAM,EAANA,OACAtM,EAAO,EAAPA,QACAF,EAAY,EAAZA,aACAyM,EAAI,EAAJA,KACAN,EAAG,EAAHA,IACAnG,EAAG,EAAHA,IAEA,OACE,SAAC0G,EAAA,EAAG,CAEF7M,UAAU,MACVoG,MAAOA,EACP0G,IAAK1G,EACLpE,MAAOA,EACP2K,OAAQA,EACRxG,IAAKA,EACLlG,GAAI,CACF0K,SAAU,WACVtK,QAAQ,GAAD,OAAKA,EAAO,MACnBF,aAAa,GAAD,OAAKA,EAAY,MAC7ByM,KAAAA,EACAN,IAAAA,IAZGlG,EAgCX,C,qCCzCe,SAAS2G,EAAkB,GAAyB,IAAvBT,EAAG,EAAHA,IAAKM,EAAI,EAAJA,KAAMjN,EAAO,EAAPA,QACrD,OACE,SAACqN,EAAA,EAAO,CAAC5G,MAAM,eAAc,UAC3B,SAAC6G,EAAA,EAAU,CACT1G,KAAK,SACLtG,GAAI,CACFC,OAAOmM,EAAAA,EAAAA,IAAM,OAAQ,IACrBa,SAASb,EAAAA,EAAAA,IAAM,OAAQ,IACvB1B,SAAU,WACV2B,IAAAA,EACAM,KAAAA,EACAvM,QAAS,EACTF,aAAc,cACduC,UAAW,uBAEb/C,QAASA,EAAQ,UAEjB,SAACwN,EAAA,EAAU,CAAC5G,KAAK,cAIzB,C,cCtBqB6G,EAAI,WACvB,WAAY/C,IAAQ,eAClBgD,KAAKhD,MAAQA,EACbgD,KAAKT,KAAO,KACZS,KAAKC,MAAQ,IACf,CAmZC,OAnZA,kCAED,SAAWC,GACT,OAAW,MAAPA,GACFF,KAAKhD,MAAQkD,EAAIlD,MACD,MAAZkD,EAAIX,OACNS,KAAKT,KAAO,IAAIQ,EAAKG,EAAIX,KAAKvC,OAC9BgD,KAAKT,KAAKY,WAAWD,EAAIX,OAEV,MAAbW,EAAID,QACND,KAAKC,MAAQ,IAAIF,EAAKG,EAAID,MAAMjD,OAChCgD,KAAKC,MAAME,WAAWD,EAAID,QAErBD,MAEF,IACT,GAAC,sBAED,WACE,MAAI,QAASA,KAAKhD,MACV,GAAN,eAAWgD,KAAKT,KAAKa,aAAU,OAAKJ,KAAKC,MAAMG,aAG1C,CAACJ,KAAKhD,MAAMrI,MAAQqL,KAAKhD,MAAMpI,OACxC,GAAC,qBAED,WACE,IAAIyL,EAAS,GACb,EAAoCL,KAAKhD,MAAjCL,EAAG,EAAHA,IAAK5D,EAAK,EAALA,MAAOlC,EAAW,EAAXA,YACpB,OAAa,OAATmJ,KAAsB,MACtB,QAASA,KAAKhD,OAAOqD,EAAOxE,KAAK,CAACc,EAAK9F,IACvC,UAAWmJ,KAAKhD,OAAOqD,EAAOxE,KAAK,CAAC9C,EAAOlC,IAC7B,OAAdmJ,KAAKT,OAAec,EAASA,EAAOC,OAAON,KAAKT,KAAK7K,YACtC,OAAfsL,KAAKC,QAAgBI,EAASA,EAAOC,OAAON,KAAKC,MAAMvL,YACpD2L,EACT,GAAC,kBAED,WACE,GAAa,OAATL,KAAe,OAAO,KAC1B,IAAMO,EAAW,IAAIR,GAAK,UAAKC,KAAKhD,QAGpC,OAFiB,MAAbgD,KAAKT,OAAcgB,EAAShB,KAAOS,KAAKT,KAAKiB,QAC/B,MAAdR,KAAKC,QAAeM,EAASN,MAAQD,KAAKC,MAAMO,QAC7CD,CACT,GAAC,2BAED,SAAcE,GAAY,IAAD,OACvB,GAAa,OAATT,KAAe,CACjB,GAAI,UAAWA,KAAKhD,MAAO,CACzB,IAAM0D,EAAYD,EAAUC,WAAU,SAACC,GAAI,OAAKA,EAAK5H,QAAU,EAAKiE,MAAMjE,KAAK,IACzE6H,EAAYH,EAAUC,GAC5BV,KAAKhD,MAAMlE,IAAM8H,EAAU9H,GAC7B,CACiB,MAAbkH,KAAKT,MAAcS,KAAKT,KAAKsB,cAAcJ,GAC7B,MAAdT,KAAKC,OAAeD,KAAKC,MAAMY,cAAcJ,EACnD,CACF,GAAC,6BAED,WACE,GAAa,OAATT,KAAe,CACjB,GAAI,UAAWA,KAAKhD,MAAO,CACzB,MAAyBgD,KAAKhD,MAAd8D,GAAL,EAAHhI,KAAY,aACpBkH,KAAKhD,MAAQ8D,CACf,CACiB,MAAbd,KAAKT,MAAcS,KAAKT,KAAKwB,kBACf,MAAdf,KAAKC,OAAeD,KAAKC,MAAMc,iBACrC,CACF,GAAC,0BAED,SAAaC,GAAY,IAAD,OACtB,GAAa,OAAThB,KAAe,CACjB,GAAI,UAAWA,KAAKhD,MAAO,CACzB,IAAM9G,EAAQ8K,EAAUC,MAAK,SAACN,GAAI,OAAKA,EAAK5H,QAAU,EAAKiE,MAAMjE,KAAK,IACtEiH,KAAKhD,MAAMlE,IAAM5C,EAAM4C,GACzB,CACiB,MAAbkH,KAAKT,MAAcS,KAAKT,KAAK2B,aAAaF,GAC5B,MAAdhB,KAAKC,OAAeD,KAAKC,MAAMiB,aAAaF,EAClD,CACF,GAAC,yBAED,SACEhO,EACAF,EACAqO,EACAC,EACAC,EACAC,EACAC,GAEA,MAAoCvB,KAAKhD,MAAjCrI,EAAK,EAALA,MAAOoE,EAAK,EAALA,MAAOD,EAAG,EAAHA,IAEhB0I,EAFsB,EAAD1G,EAEVwG,EACXG,EAHyB,EAAD1G,EAGbsG,EACjB,OACE,iCACE,SAAChC,EAAY,CACXtG,MAAOA,EACPpE,MAAOA,EACP2K,OAAQiC,EACRzI,IAAKA,EACL9F,QAASA,EACTF,aAAcA,EACdyM,KAAMiC,EACNvC,IAAKwC,KAEK,IAAXN,GACC,SAACzB,EAAiB,CAChBT,IAAKwC,EAAOzO,EACZuM,KAAMiC,EAAO7M,EAAQ3B,EACrBV,QAAS,kBAAM8O,EAAkBrI,EAAM,IAEvC,OAGV,GAAC,wBAED,SACE2I,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAQrF,EAAQqD,KAAKhD,MAAbL,IACR,OAAa,OAATqD,KAAsB,KACtBrD,GAEA,gCACgB,MAAbqD,KAAKT,KAAeS,KAAKT,KAAK0C,WAAWP,EAAIC,EAAIC,EAAIC,EAAKC,EAAIC,EAAIC,GAAQ,KAC5D,MAAdhC,KAAKC,MAAgBD,KAAKC,MAAMgC,WAAWP,EAAIC,EAAIC,EAAIC,EAAKC,EAAIC,EAAIC,GAAQ,QAI/E,UAAWhC,KAAKhD,MAAcgD,KAAKkC,YAAYR,EAAIC,EAAIC,EAAIC,EAAKC,EAAIC,EAAIC,GACrE,IACT,GAAC,yBAED,SAAY9L,GACV,IAAMK,EAAazE,SAAS0E,cAAc,UAC1CD,EAAW5B,MAAQqL,KAAKhD,MAAMpE,aAC9BrC,EAAW3B,OAASoL,KAAKhD,MAAMnE,cAC/B,IAGIpC,EACAC,EAJEyL,EAAU5L,EAAWK,WAAW,MAClCjC,EAAQqL,KAAKhD,MAAMpE,aACnBhE,EAASoL,KAAKhD,MAAMnE,cAGlB/B,EAAcC,KAAKC,MAAMD,KAAKE,KAAK+I,KAAKhD,MAAMpE,aAAeoH,KAAKhD,MAAMrI,QAC9E,GAAoB,IAAhBmC,EACFqL,EAAQjL,UAAUhB,EAAO,EAAG,EAAGvB,EAAOC,EAAQ,EAAG,EAAGoL,KAAKhD,MAAMrI,MAAOqL,KAAKhD,MAAMpI,YAC5E,CACL,IAAK,IAAIuC,EAAI,EAAGA,EAAIL,EAAaK,GAAK,EAEpCT,GADAD,EAAW9B,GAAS,GACGqL,KAAKhD,MAAMnG,YACxB,IAANM,EAEFgL,EAAQjL,UAAUhB,EAAO,EAAG,EAAGvB,EAAOC,EAAQ,EAAG,EAAG6B,EAAUC,GAE9DyL,EAAQjL,UAAUX,EAAY,EAAG,EAAG5B,EAAOC,EAAQ,EAAG,EAAG6B,EAAUC,GAErE/B,EAAQ8B,EACR7B,EAAS8B,EAGXyL,EAAQjL,UAAUX,EAAY,EAAG,EAAG5B,EAAOC,EAAQ,EAAG,EAAGoL,KAAKhD,MAAMrI,MAAOqL,KAAKhD,MAAMpI,OACxF,CACA,OAAO2B,CACT,GAAC,0BAED,SAAaI,EAAKJ,EAAYvD,EAASoP,EAAQf,EAASC,GACtD,IAAMxG,EAAIkF,KAAKhD,MAAMlC,EAAI9H,EAAUsO,EAC7BvG,EAAIiF,KAAKhD,MAAMjC,EAAI/H,EAAUqO,EAC7BgB,EAAYrC,KAAKhD,MAAMrI,MAAQ,EAAI3B,EACnCsP,EAAaD,EAAYrC,KAAKhD,MAAMnG,YAE1CF,EAAI4L,OACJ5L,EAAI6L,YACJ7L,EAAI8L,OAAO3H,EAAIsH,EAAQrH,GACvBpE,EAAI+L,OAAO5H,EAAIuH,EAAYD,EAAQrH,GACnCpE,EAAIgM,iBAAiB7H,EAAIuH,EAAWtH,EAAGD,EAAIuH,EAAWtH,EAAIqH,GAC1DzL,EAAI+L,OAAO5H,EAAIuH,EAAWtH,EAAIuH,EAAaF,GAC3CzL,EAAIgM,iBAAiB7H,EAAIuH,EAAWtH,EAAIuH,EAAYxH,EAAIuH,EAAYD,EAAQrH,EAAIuH,GAChF3L,EAAI+L,OAAO5H,EAAIsH,EAAQrH,EAAIuH,GAC3B3L,EAAIgM,iBAAiB7H,EAAGC,EAAIuH,EAAYxH,EAAGC,EAAIuH,EAAaF,GAC5DzL,EAAI+L,OAAO5H,EAAGC,EAAIqH,GAClBzL,EAAIgM,iBAAiB7H,EAAGC,EAAGD,EAAIsH,EAAQrH,GACvCpE,EAAIiM,YACJjM,EAAIkM,OAEJlM,EAAIO,UACFX,EACA,EACA,EACAyJ,KAAKhD,MAAMrI,MACXqL,KAAKhD,MAAMpI,OACXkG,EACAC,EACAsH,EACAC,GAEF3L,EAAImM,SACN,GAAC,2BAED,SAAcC,EAAe/P,EAASoP,EAAQf,EAASC,GAAU,IAAD,OAM9D,GALI,QAAStB,KAAKhD,QAChBgD,KAAKT,KAAKyD,cAAcD,EAAe/P,EAASoP,EAAQf,EAASC,GACjEtB,KAAKC,MAAM+C,cAAcD,EAAe/P,EAASoP,EAAQf,EAASC,IAGhE,UAAWtB,KAAKhD,MAAO,CACzB,IAAMrG,EAAMoM,EAAcnM,WAAW,MAC/BqM,EAAS,IAAI5I,MACnB4I,EAAO3I,OAAS,WACd,IAAM/D,EAAa,EAAK2M,YAAYD,GAC9Bd,EAAU5L,EAAWK,WAAW,MACtC,EAAKuM,aAAaxM,EAAKJ,EAAYvD,EAASoP,EAAQf,EAASC,GAC7Da,EAAQiB,UAAU,EAAG,EAAG7M,EAAW5B,MAAO4B,EAAW3B,OACvD,EACAqO,EAAOnK,IAAMkH,KAAKhD,MAAMlE,GAC1B,CACF,GAsDA,sBAEA,SAASuK,EAAQC,EAAKC,GACpB,GAAIA,EAAa,EAAG,MAAO,GAC3B,GAAmB,IAAfA,EAAkB,CAKpB,OAHAvD,KAAKhD,MAAQqG,EADQ,GAErBrD,KAAKT,KAAO,KACZS,KAAKC,MAAQ,KACNoD,EAAOG,MAAM,EACtB,CAEA,IAcIC,EACApK,EAfEsD,EAAMvM,EAAQ2L,SAEpB,GADAiE,KAAKhD,MAAQ,CAAEL,IAAAA,EAAKtD,kBAAmBiK,GACpB,IAAfC,EAAkB,CACpB,IAAOG,EAA0B,EAAfC,EAAkB,EAQpC,OAPA3D,KAAKhD,MAAMnG,YAAczG,EAAQsM,eAC/BsD,KAAKhD,MAAML,IACX0G,EAAOK,GAAW7M,YAClBwM,EAAOM,GAAY9M,aAErBmJ,KAAKT,KAAO,IAAIQ,EAAKsD,EAAOK,IAC5B1D,KAAKC,MAAQ,IAAIF,EAAKsD,EAAOM,IACtBN,EAAOO,QAAO,SAACC,EAAMC,GAAK,OAAM,CAACJ,EAAWC,GAAYI,SAASD,EAAM,GAChF,CAIA9D,KAAKT,KAAO,IAAIQ,EAAK,CAAEpD,IAAKvM,EAAQ2L,WACpCiE,KAAKC,MAAQ,IAAIF,EAAK,CAAEpD,IAA6B,MAAxBqD,KAAKT,KAAKvC,MAAML,IAAc,IAAM,MAEjEtD,EAAoBiK,EAAM,EACd,MAAR3G,IACFtD,EAA0B,EAANiK,GAGtB,IACA,EADqBvM,KAAKiF,MAAMjF,KAAKkF,UACE,CAAC,OAAQ,SAAW,CAAC,QAAS,QAAO,eAArE+H,EAAK,KAAEC,EAAM,KAcpB,OAbAR,EAAazD,KAAKgE,GAAOE,SACvBb,EACAhK,EACAkK,EAAaxM,KAAKC,MAAMuM,EAAa,IAEvCE,EAAazD,KAAKiE,GAAQC,SAAST,EAAYpK,EAAmBtC,KAAKC,MAAMuM,EAAa,IAE1FvD,KAAKhD,MAAMnG,YAAczG,EAAQsM,eAC/BsD,KAAKhD,MAAML,IACXqD,KAAKT,KAAKvC,MAAMnG,YAChBmJ,KAAKC,MAAMjD,MAAMnG,aAGZ4M,CACT,GAAC,oBAED,SAAOU,GACL,IAAIC,EAAc,EAClB,OAAa,OAATpE,MAEc,OAAdA,KAAKT,MAAgC,OAAfS,KAAKC,QACzBD,KAAKhD,MAAMnG,YAAcmJ,KAAKhD,MAAM3D,kBAAoB8K,IAC1DnE,KAAKhD,MAAML,IAAM,IACjByH,GAAe,GAEbpE,KAAKhD,MAAMnG,YAAcmJ,KAAKhD,MAAM3D,kBAAoB8K,IAC1DnE,KAAKhD,MAAML,IAAM,IACjByH,GAAe,GAGM,MAAnBpE,KAAKhD,MAAML,KACbqD,KAAKT,KAAKvC,MAAM3D,kBAAoB2G,KAAKhD,MAAM3D,kBAAoB,EACnE2G,KAAKC,MAAMjD,MAAM3D,kBAAoB2G,KAAKhD,MAAM3D,kBAAoB,IAEpE2G,KAAKT,KAAKvC,MAAM3D,kBAAmD,EAA/B2G,KAAKhD,MAAM3D,kBAC/C2G,KAAKC,MAAMjD,MAAM3D,kBAAmD,EAA/B2G,KAAKhD,MAAM3D,mBAElD+K,GAAepE,KAAKT,KAAK8E,OAAOF,GAAMnE,KAAKC,MAAMoE,OAAOF,GACxDnE,KAAKhD,MAAMnG,YAAczG,EAAQsM,eAC/BsD,KAAKhD,MAAML,IACXqD,KAAKT,KAAKvC,MAAMnG,YAChBmJ,KAAKC,MAAMjD,MAAMnG,cAvBKuN,CA4B5B,GAAC,qBAED,SAAQE,EAAaC,EAAcC,EAASC,EAASC,EAAWC,GAC5C,MAAdD,GACF1E,KAAKhD,MAAMpI,OAAS2P,EACpBvE,KAAKhD,MAAMrI,MAAQqL,KAAKhD,MAAMpI,OAASoL,KAAKhD,MAAMnG,cAElDmJ,KAAKhD,MAAMrI,MAAQ2P,EACnBtE,KAAKhD,MAAMpI,OAASoL,KAAKhD,MAAMrI,MAAQqL,KAAKhD,MAAMnG,aAGnC,SAAb8N,GACF3E,KAAKhD,MAAMlC,EAAI0J,EACfxE,KAAKhD,MAAMjC,EAAI0J,GACQ,MAAdC,GACT1E,KAAKhD,MAAMjC,EAAI0J,EAAUF,EAAevE,KAAKhD,MAAMpI,OACnDoL,KAAKhD,MAAMlC,EAAI0J,IAEfxE,KAAKhD,MAAMlC,EAAI0J,EAAUF,EAActE,KAAKhD,MAAMrI,MAClDqL,KAAKhD,MAAMjC,EAAI0J,GAGjB,MAAqCzE,KAAKhD,MAAlCrI,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAQkG,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAG4B,EAAG,EAAHA,IAEX,OAAdqD,KAAKT,MACPS,KAAKT,KAAKqF,QAAQjQ,EAAOC,EAAQkG,EAAGC,EAAG4B,EAAK,QAE3B,OAAfqD,KAAKC,OACPD,KAAKC,MAAM2E,QAAQjQ,EAAOC,EAAQkG,EAAGC,EAAG4B,EAAK,QAEjD,GAAC,6BAED,WACE,GAAI,QAASqD,KAAKhD,MAAO,CACvB,MAAkBgD,KAAKT,KAAKsF,kBAAiB,eAAtCC,EAAE,KAAEC,EAAG,KACd,EAAkB/E,KAAKC,MAAM4E,kBAAiB,eAAvCG,EAAE,KAAEC,EAAG,KACd,MAAO,CAACH,GAAME,EAAID,EAAIzE,OAAO2E,GAC/B,CACA,GAAI,UAAWjF,KAAKhD,MAAO,CACzB,IAAMkI,EACJlF,KAAKhD,MAAMrI,OAASqL,KAAKhD,MAAMpE,cAC/BoH,KAAKhD,MAAMpI,QAAUoL,KAAKhD,MAAMnE,cAClC,OAAOqM,EAAQ,CAACA,EAAO,IAAM,CAACA,EAAO,EAAC,UAAKlF,OAC7C,CACA,OAAO,CACT,KAAC,EAxZsB,GCCJmF,EAAU,WAC7B,WAAYnI,GACV,IADkB,oBACAoI,IAAdpF,KAAKqF,KAEP,OADArF,KAAKqF,KAAO,IAAItF,EAAK/C,GACdgD,IAEX,CAoKC,OApKA,kCAED,SAAW1O,GACT0O,KAAKqF,KAAK/T,SAAO,UAAQA,EAC3B,GAAC,qBAED,WACE,OAAkB,OAAd0O,KAAKqF,KACArF,KAAKqF,KAAK3Q,UAEZ,IACT,GAAC,2BAED,SAAc+L,GACM,OAAdT,KAAKqF,MAAerF,KAAKqF,KAAKxE,cAAcJ,EAClD,GAAC,wBAED,SAAWP,GAET,OADgB,MAAZA,EAAImF,MAAcrF,KAAKqF,KAAKlF,WAAWD,EAAImF,MACxCrF,IACT,GAAC,6BAED,WACE,IAAMsF,EAAWtF,KAAKQ,OAItB,OAHkB,OAAdR,KAAKqF,MACPC,EAASD,KAAKtE,kBAETuE,CACT,GAAC,0BAED,SAAatE,GACO,OAAdhB,KAAKqF,MAAerF,KAAKqF,KAAKnE,aAAaF,EACjD,GAAC,wBAED,SAAWzD,EAAaC,EAAc2D,EAAQC,EAAmBG,GAC/D,IAAQ9N,EAAsC6F,EAAAA,SAA5BtF,EAA4BsF,EAAAA,WAAhBrF,EAAgBqF,EAAAA,YAC9C,EAA0B0G,KAAKqF,KAAKrI,MAA5BrI,EAAK,EAALA,MAAOC,EAAM,EAANA,OACf,EAAwDoL,KAAKqF,KAAK/T,QAA1DuD,EAAI,EAAJA,KAAM0Q,EAAO,EAAPA,QAASvS,EAAO,EAAPA,QAASF,EAAY,EAAZA,aAAcD,EAAK,EAALA,MACxC2S,EAAKpV,EAAQyK,SAAShG,EAAM,EAAG,EAAG0I,EAAa9J,EAAUO,GACzDyJ,EAAa5I,EAAKoF,OAASuL,EAAGvL,OAASjG,EAAa,EAAIC,EAAcW,EAAS,EACjFyM,GAAW7D,EAAeC,EAAa7I,GAAU,EAC/C0M,GAAW/D,EAAc5I,GAAS,EACpC2I,EAAWE,EAAeC,EAM9B,OALI8H,GAAW1Q,EAAKoF,OAAS,IAC3BoH,GAAW5D,EACXH,EAAW,GAGK,OAAd0C,KAAKqF,MAEL,SAAC7F,EAAA,EAAG,CAAC5M,GAAI,CAAEG,gBAAiB,SAAU,UACpC,UAACyM,EAAA,EAAG,CACF7K,MAAO4I,EACP3I,OAAQ4I,EACR5K,GAAI,CACF0K,SAAU,WACVvK,gBAAiB3C,EAAQ2M,cAAclK,IACvC,UAEDmN,KAAKqF,KAAKpD,WACTjP,EACAF,EACAqO,EACAC,EACAC,EACAC,EACAC,GAED1M,EAAKoF,OAAS6E,EAAY0G,EAAIlI,EAAUG,EAAY7I,GAAU,UAKhE,IACT,GAAC,2BAED,SAAc2I,EAAaC,EAAcuF,EAAejM,GACtD,IAAQrD,EAAsC6F,EAAAA,SAA5BtF,EAA4BsF,EAAAA,WAAhBrF,EAAgBqF,EAAAA,YAC9C,GAAkB,OAAd0G,KAAKqF,KAAe,CACtB,MAAwDrF,KAAKqF,KAAK/T,QAA1DuD,EAAI,EAAJA,KAAM0Q,EAAO,EAAPA,QAASvS,EAAO,EAAPA,QAASF,EAAY,EAAZA,aAAcD,EAAK,EAALA,MAC9C,EAA0BmN,KAAKqF,KAAKrI,MAA5BrI,EAAK,EAALA,MAAOC,EAAM,EAANA,OACT4Q,EAAKpV,EAAQyK,SACjBhG,EACA,EACA,EACA0I,EACA9J,EAAWqD,EACX9C,EAAa8C,GAET2G,EAAa5I,EAAKoF,OACpBuL,EAAGvL,OAASjG,EAAa8C,EAAc,EAAI7C,EAAcuJ,EACzD,EACA6D,GAAW7D,EAAeC,EAAa7I,GAAU,EAC/C0M,GAAW/D,EAAc5I,GAAS,EACpC2I,EAAWE,EAAeC,EAC1B8H,GAAW1Q,EAAKoF,OAAS,IAC3BoH,GAAW5D,EACXH,EAAW,GAEb,IAAM3G,EAAMoM,EAAcnM,WAAW,MACrCD,EAAIgH,UAAY,QAChBhH,EAAIiH,SAAS,EAAG,EAAGmF,EAAcpO,MAAOoO,EAAcnO,QACtD+B,EAAIgH,UAAYvN,EAAQ2M,cAAclK,GACtC8D,EAAIiH,SAAS,EAAG,EAAGmF,EAAcpO,MAAOoO,EAAcnO,QACtDoL,KAAKqF,KAAKrC,cACRD,EACA/P,EAAU8D,EACVhE,EAAegE,EACfuK,EACAC,GAEFlR,EAAQgN,eAAezG,EAAK6O,EAAIlI,EAAUxG,EAAayG,EAAaC,EAAcC,EACpF,CACF,GAAC,2BAED,WACE,IAAMgI,EAAQzF,KAAKqF,KAAKjF,WACxB,OAAOrJ,KAAK2O,IAAG,MAAR3O,MAAI,OAAQ0O,GACrB,GAAC,iCAED,SAAoBpC,EAAQC,GAC1BtD,KAAKqF,KAAKnB,SAASb,EAAQC,EAAKD,EAAOpJ,OACzC,GAAC,oBAED,SAAOkK,GAML,IALA,IAAIwB,EAAO,EACPC,EAAa5F,KAAKQ,OAClBqF,EAAkB7F,KAAKqF,KAAKrI,MAAMnG,YAChCiP,EAAsB9F,KAAKqF,KAAKrI,MAAM3D,mBAAqB,EAAI8K,GACjE4B,EAAU,IACPJ,EAAO,KAAOI,EAAU,GAAG,CAChCA,EAAU/F,KAAKqF,KAAKhB,OAAOF,GAC3BwB,GAAQ,EACR,IAAMK,EAAOhG,KAAKqF,KAAKrI,MAAMnG,YAAcmJ,KAAKqF,KAAKrI,MAAM3D,kBAK3D,GAJItC,KAAK0F,IAAIuJ,GAAQjP,KAAK0F,IAAIoJ,EAAkB7F,KAAKqF,KAAKrI,MAAM3D,qBAC9DwM,EAAkB7F,KAAKqF,KAAKrI,MAAMnG,YAClC+O,EAAa5F,KAAKQ,QAEfwF,EAAO,GAAKA,EAAOF,GAAiC,IAATE,EAAY,KAC9D,CAEA,MAAO,CAACH,EAAiBD,EAC3B,GAAC,kBAED,WACE,IAAMK,EAAW,IAAId,EAAW,CAAC,GAGjC,OAFAc,EAASZ,KAAOrF,KAAKqF,KAAK7E,OAC1ByF,EAASZ,KAAK/T,SAAO,UAAQ0O,KAAKqF,KAAK/T,SAChC2U,CACT,GAAC,qBAED,SAAQ1I,EAAaC,EAAc3G,GACjC,MAAqBzG,EAAQoK,oBAAoB+C,EAAaC,EAAc3G,GAAY,eAAjF4D,EAAI,KAAEC,EAAI,KACjBsF,KAAKqF,KAAKrI,MAAMrI,MAAQ8F,EACxBuF,KAAKqF,KAAKrI,MAAMpI,OAAS8F,EACzBsF,KAAKqF,KAAKrI,MAAMlC,EAAI,EACpBkF,KAAKqF,KAAKrI,MAAMjC,EAAI,EACpB,MAAqCiF,KAAKqF,KAAKrI,MAAvCrI,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAQkG,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAG4B,EAAG,EAAHA,IACN,OAAnBqD,KAAKqF,KAAK9F,MAAeS,KAAKqF,KAAK9F,KAAKqF,QAAQjQ,EAAOC,EAAQkG,EAAGC,EAAG4B,EAAK,QACtD,OAApBqD,KAAKqF,KAAKpF,OAAgBD,KAAKqF,KAAKpF,MAAM2E,QAAQjQ,EAAOC,EAAQkG,EAAGC,EAAG4B,EAAK,QAClF,GAAC,6BAED,WACE,OAAOqD,KAAKqF,KAAKR,iBACnB,KAAC,EA1K4B,GCwC/B,OAAiBqB,mBA/BjB,SAA4B7C,EAAQvP,EAAWqS,EAAYC,GAGzD,IAFA,IAAMC,EAZR,SAAsBC,GAEpB,IADA,IAAMC,EAAYD,EACTnP,EAAIoP,EAAUtM,OAAS,EAAG9C,EAAI,EAAGA,GAAK,EAAG,CAChD,IAAMoF,EAAIxF,KAAKC,MAAMD,KAAKkF,UAAY9E,EAAI,IACpCqP,EAAOF,EAAMnP,GACnBoP,EAAUpP,GAAKoP,EAAUhK,GACzBgK,EAAUhK,GAAKiK,CACjB,CACA,OAAOD,CACT,CAG4BE,CAAapD,GACjCqD,EAAe,GACZvP,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAAG,CAC/B,IAAMwP,EAAU,IAAIxB,EAAW,CAAExI,IAAKvM,EAAQ2L,WAC9C4K,EAAQC,oBAAoBP,EAAmBF,EAAaC,GAE5DM,EAAa7K,KAAK8K,EAAQtC,OAAO,EAAIvQ,GACvC,CAEA4S,EAAa7H,MAAK,SAAClE,EAAGwC,GACpB,IAAM0J,EAAOV,EAAaC,EAG1B,OAFcrP,KAAK0F,IAAI9B,EAAE,GAAKkM,GAChB9P,KAAK0F,IAAIU,EAAE,GAAK0J,EAEhC,IAEA,IAAMC,EAAMJ,EAAa9C,QAAO,SAACjD,GAAI,OAAKA,EAAK,GAAGoG,QAAQ,KAAOL,EAAa,GAAG,GAAGK,QAAQ,EAAE,IAC1FC,EAAW,EACXC,EAAU,CAAC,EASf,OARAH,EAAII,SAAQ,SAACC,GACXA,EAAQ,GAAGvC,QAAgBuB,EAAaC,EAArB,IAAmC,IAAMD,EAAaC,GACzE,IAAMX,EAAQ0B,EAAQ,GAAGC,gBACrB3B,EAAQuB,IACVA,EAAWvB,EACXwB,EAAUE,EAEd,IACOF,CACT,G,eCPA,OAAiBI,oBAtBjB,SAA6BC,EAAiBC,EAAWC,EAAgBnE,EAAQpT,GAC/E,IAAMwX,EAAgBC,OAAOC,KAAKJ,GAAWnN,IAAG,yCAAC,WAAOyJ,GAAI,gFAEf,GAArC+D,EAAY,oBAAgB3X,EAAS,QACvC4T,IAAS+D,EAAY,yCAChBN,EAAgBnP,OAAM,yCAAC,WAAO0P,GAAI,+FACvCC,EAAAA,EAAAA,OAAkBP,EAAUK,GAAeC,IAAK,8FADrB,KAE5B,OAKkD,OAD/CvY,EAAMiY,EAAU1D,GAChBkE,EAAM1E,EAAOpC,MAAK,SAAC+G,GAAG,OAAKA,EAAIjP,QAAU8K,CAAI,IAAC,kBAC7CiE,EAAAA,EAAAA,OAAkBxY,EAAKyY,EAAIrP,MAAM/I,MAAK,SAACE,GAE5C,OADA2X,IACO3X,CACT,KAAE,2CACH,mDAhB+C,IAkBhD,OAAO4X,CACT,EAEsCQ,eAnCtC,SAAwBC,GAEtB,IADA,IAAIrW,EACKsF,EAAI,EAAGA,EAAI+Q,EAAejO,OAAQ9C,GAAK,EAAG,CACjD,GAAiC,cAA7B+Q,EAAe/Q,GAAGtF,SAAyD,IAA/BqW,EAAe/Q,GAAG6F,MAAMpL,GAEjE,CACLC,GAAS,EACT,KACF,CAJEA,GAAS,CAKb,CACA,OAAOA,CACT,GCDe,SAASsW,EAAQC,GAC9B,IACExU,EAQE0F,EAAAA,mBAPFzF,EAOEyF,EAAAA,mBANF9E,EAME8E,EAAAA,WALFxF,EAKEwF,EAAAA,UAJFpF,EAIEoF,EAAAA,gBAHF7F,EAGE6F,EAAAA,SAFFtF,EAEEsF,EAAAA,WADFrF,EACEqF,EAAAA,YAEJ,GAA8B+O,EAAAA,EAAAA,UAASD,GAAa,eAA7CE,EAAO,KAAEC,EAAU,KAC1B,GAAsCF,EAAAA,EAAAA,UAASzU,GAAmB,eAA3D4U,EAAW,KAAEC,EAAc,KAClC,GAAsCJ,EAAAA,EAAAA,UAASxU,GAAmB,eAA3D6U,EAAW,KAAEC,EAAc,KAClC,GAA4CN,EAAAA,EAAAA,UAAS,GAAE,eAAhDO,EAAc,KAAEC,EAAiB,KAClCC,EC1BO,WACb,IAAMC,GAAYC,EAAAA,EAAAA,UACZC,GAAaD,EAAAA,EAAAA,UACbE,GAAYF,EAAAA,EAAAA,UACZG,GAAiBH,EAAAA,EAAAA,UACjBI,GAAcJ,EAAAA,EAAAA,UAEpB,GAA4BX,EAAAA,EAAAA,UAAS,GAAE,eAAhCzT,EAAM,KAAEyU,EAAS,KACxB,GAAsChB,EAAAA,EAAAA,UAAS,GAAE,eAA1CjC,EAAW,KAAEkD,EAAc,KAClC,GAAoCjB,EAAAA,EAAAA,UAAS,GAAE,eAAxClC,EAAU,KAAEoD,EAAa,KAChC,GAA0BlB,EAAAA,EAAAA,UAAS,GAAE,eAA9B1T,EAAK,KAAE6U,EAAQ,KACtB,GAAkCnB,EAAAA,EAAAA,UAAS,GAAE,eAAtCoB,EAAS,KAAEC,EAAY,KAC9B,GAAgCrB,EAAAA,EAAAA,UAAS,GAAE,eAApCrN,EAAQ,KAAE2O,EAAW,KAC5B,GAAoCtB,EAAAA,EAAAA,UAAS,GAAE,eAAxC5K,EAAU,KAAEmM,EAAa,KAE1BC,EAAgB,WACpB,IAAMC,EAAWC,OAAOC,WAAaD,OAAOE,YACtCC,EAAenB,EAAUoB,QAAUpB,EAAUoB,QAAQC,aAAe,EACpEC,EAAoBlB,EAAegB,QAAUhB,EAAegB,QAAQC,aAAe,EACzF,IAAiB,IAAbN,EAAmB,CACrB,IAEMQ,EAAcJ,GAFEjB,EAAWkB,QAAUlB,EAAWkB,QAAQC,aAAe,IACxDlB,EAAUiB,QAAUjB,EAAUiB,QAAQC,aAAe,GACRC,EAClEV,EAAY5S,KAAK2O,IAAIqE,OAAOC,WAAYD,OAAOQ,OAAOC,aACtDd,EAAa3S,KAAK2O,IAAIqE,OAAOE,YAAaF,OAAOQ,OAAOE,aAAeH,EAAc,GACvF,KAAO,CACL,IAAMI,EAAezB,EAAWkB,QAAUlB,EAAWkB,QAAQQ,YAAc,EACrEC,EAAc1B,EAAUiB,QAAUjB,EAAUiB,QAAQQ,YAAc,EACxEhB,EAAYI,OAAOC,YAAcY,EAAcF,GAAgB,IAC/DhB,EAAaK,OAAOE,YAAcC,EAAeG,EACnD,CACF,EAkBA,OAZAQ,EAAAA,EAAAA,YAAU,WACRhB,GACF,GAAG,CAACd,EAAUoB,QAASlB,EAAWkB,QAASjB,EAAUiB,WAErDU,EAAAA,EAAAA,YAAU,WAKR,OAJAhB,IAEAE,OAAOe,iBAAiB,SAAUjB,GAE3B,kBAAME,OAAOgB,oBAAoB,SAAUlB,EAAe,CACnE,GAAG,IAEI,CACLT,YAAAA,EACAH,WAAAA,EACAF,UAAAA,EACAG,UAAAA,EACAC,eAAAA,EACAxU,MAAAA,EACAC,OAAAA,EACAwR,YAAAA,EACAD,WAAAA,EACAoD,cAAAA,EACAD,eAAAA,EACAG,UAAAA,EACAzO,SAAAA,EACAgQ,oBA9B0B,WACtB5B,EAAYe,SAASf,EAAYe,QAAQc,OAC/C,EA6BExN,WAAAA,EACAmM,cAAAA,EACAJ,SAAAA,EACAH,UAAAA,EAEJ,CD3CqB6B,GACb5Z,EE3BO,WACb,IAAM6Z,EAAmB,CACvBnY,QAAS,EACTF,aAAc,EACdD,MAAO,CACLoK,EAAG,IACHC,EAAG,IACHC,EAAG,IACHxC,EAAG,GAEL9F,KAAM,GACN0Q,SAAS,GAGX,GAA8B8C,EAAAA,EAAAA,UAAS8C,GAAiB,eAAjD7Z,EAAO,KAAE8Z,EAAU,KAC1B,GAAoD/C,EAAAA,EAAAA,WAAS,GAAM,eAA5DgD,EAAkB,KAAEC,EAAqB,KAChD,GAAsCjD,EAAAA,EAAAA,UAAS,MAAK,eAA7CkD,EAAW,KAAEC,EAAc,KAClC,GAAgDnD,EAAAA,EAAAA,UAAS,IAAG,eAArDoD,EAAgB,KAAEC,EAAmB,KAatCC,EAAmB,SAAClT,GACxB,IAAQhB,EAAWgB,EAAXhB,OACR2T,GAAW,SAACQ,GAAI,yBAAWA,GAAI,IAAE/W,KAAM4C,EAAOuF,OAAK,GACrD,EAQA,MAAO,CACL1L,QAAAA,EACA8Z,WAAAA,EACAS,MAzBY,WAAH,OAAST,EAAWD,EAAkB,EA0B/CW,oBAzB0B,SAACrT,GAAC,OAAK2S,GAAW,SAACQ,GAAI,yBAAWA,GAAI,IAAE5Y,QAASyF,EAAEhB,OAAOuF,OAAK,GAAK,EA0B9F+O,mBAzByB,SAACtT,GAC1B2S,GAAW,SAACQ,GAAI,yBAAWA,GAAI,IAAE9Y,aAAc2F,EAAEhB,OAAOuF,OAAK,GAC/D,EAwBEgP,iBAtBuB,WAAH,OAASV,GAAsB,SAACW,GAAG,OAAMA,CAAG,GAAE,EAuBlEC,iBAtBuB,WAAH,OAASZ,GAAsB,EAAO,EAuB1Da,kBAtBwB,SAACC,GAAG,OAAKhB,GAAW,SAACQ,GAAI,yBAAWA,GAAI,IAAE/Y,MAAOuZ,EAAIC,KAAG,GAAK,EAuBrFC,qBAtB2B,SAACtP,GAAK,OAAKoO,GAAW,SAACQ,GAAI,yBAAWA,GAAI,IAAErG,QAASvI,GAAK,GAAK,EAuB1F2O,iBAAAA,EACAN,mBAAAA,EACAE,YAAAA,EACAC,eAAAA,EACAC,iBAAAA,EACAC,oBAAAA,EACAa,iBAtBuB,SAAC9T,GACxBkT,EAAiBlT,GACjB+S,EAAe,MACfE,EAAoB,KACtB,EAoBF,CFhCkBc,GACVC,EG5BO,WACb,OAAwBpE,EAAAA,EAAAA,WAAS,GAAM,eAAhCqE,EAAI,KAAEC,EAAO,KACpB,GAAgCtE,EAAAA,EAAAA,WAAS,GAAM,eAAxCuE,EAAQ,KAAEC,EAAW,KAC5B,GAAkCxE,EAAAA,EAAAA,WAAS,GAAM,eAA1CyE,EAAS,KAAEC,EAAY,KAC9B,GAA8B1E,EAAAA,EAAAA,WAAS,GAAM,eAAtC2E,EAAO,KAAEC,EAAU,KAC1B,GAAgC5E,EAAAA,EAAAA,WAAS,GAAM,eAAxCnE,EAAQ,KAAEgJ,EAAW,KAC5B,GAAsC7E,EAAAA,EAAAA,WAAS,GAAM,eAA9C8E,EAAW,KAAEC,EAAc,KAClC,GAAwC/E,EAAAA,EAAAA,UAAS,CAC/CnK,WAAY,EACZC,YAAa,IACb,eAHKkP,EAAY,KAAEC,EAAe,KA8BpC,MAAO,CACLC,YAnBkB,WAAH,OAASH,GAAe,EAAO,EAoB9ClJ,SAAAA,EACAsJ,eA3BqB,WAAH,OAASb,GAAQ,EAAM,EA4BzCc,uBAT6B,WAC7BP,GAAY,GACZI,EAAgB,CAAEpP,WAAY,EAAGC,YAAa,GAChD,EAOEuP,SAtBe,WAAH,OAASN,GAAe,SAACO,GAAE,OAAMA,CAAE,GAAE,EAuBjDC,gBArBsB,SAACC,EAAGC,GAC1BR,EAAgB,CAAEpP,WAAY2P,EAAG1P,YAAa2P,IAC9CZ,GAAY,GACZP,GAAQ,EACV,EAkBEoB,gBA3BsB,WAAH,OAASpB,GAAQ,EAAO,EA4B3CqB,UAjCgB,WAAH,OAASf,GAAW,EAAM,EAkCvCP,KAAAA,EACAW,aAAAA,EACAL,QAAAA,EACAE,YAAAA,EACAP,QAAAA,EACAW,gBAAAA,EACAL,WAAAA,EACAE,YAAAA,EACAC,eAAAA,EACAR,SAAAA,EACAC,YAAAA,EACAoB,YAvCkB,WAAH,OAASpB,GAAY,EAAO,EAwC3CqB,YA9BkB,WAClBnB,GAAa,GACbF,GAAY,EACd,EA4BEsB,WA7CiB,WACjBtB,GAAY,EACd,EA4CEC,UAAAA,EACAC,aAAAA,EAEJ,CHnCkBqB,GACV/K,EI1BO,SAAmB+E,GAChC,OAAwCC,EAAAA,EAAAA,UAAS,GAAE,eAA5CgG,EAAW,KAAEC,EAAgB,KACpC,GAA8CjG,EAAAA,EAAAA,UAAS,GAAE,eAAlDkG,EAAe,KAAEC,EAAkB,KAC1C,GAAkCnG,EAAAA,EAAAA,UAAS,GAAE,eAAtCoG,EAAQ,KAAEC,EAAa,KAC9B,GAA4BrG,EAAAA,EAAAA,UAAS,GAAE,eAAhCsG,EAAM,KAAEC,EAAS,KACxB,GAA4BvG,EAAAA,EAAAA,UAAS,IAAG,eAAjChF,EAAM,KAAEwL,EAAS,KACxB,GAAoDxG,EAAAA,EAAAA,UAAS,IAAG,eAAzDyG,EAAkB,KAAEC,EAAqB,KAChD,GAAoD1G,EAAAA,EAAAA,UAAS,IAAG,eAAzD2G,EAAkB,KAAEC,EAAqB,MAEhDpE,EAAAA,EAAAA,YAAU,WACJ,WAAYzC,IACdyG,EAAUzG,EAAa/E,QACN,IAAboL,GAAgBC,EAActG,EAAa/E,OAAOpJ,QAE1D,GAAG,CAACmO,IAEJ,IAoBMtO,EAAe,yCAAG,WAAOV,GAAW,sEACxCyV,GAAU,SAACvX,GAAG,OAAKA,EAAIgJ,OAAO,CAAClH,GAAa,IAC5CoV,GAAmB,SAACxU,GAAG,OAAKA,EAAM,CAAC,IAAE,2CACtC,gBAHoB,sCAKfJ,EAAmB,SAACsV,GACxB,GAAoB,IAAhBA,EAEF,OADAD,EAAsB,KACf,EAET,GAAIC,EAAc,EAAG,CACnB,GAAIA,EAAc5V,EAAAA,UAKhB,OAJA2V,EAAsB,mCAAD,OACgB3V,EAAAA,UAAmB,gCAExDyV,EAAsB,KACf,EAET,GAAIG,EAAc5V,EAAAA,UAKhB,OAJAyV,EAAsB,2DAAD,OACwCzV,EAAAA,YAE7D2V,EAAsB,KACf,EAET,GAAIC,GAAe5V,EAAAA,WAAuB4V,GAAe5V,EAAAA,UAGvD,OAFAyV,EAAsB,IACtBE,EAAsB,KACf,CAEX,CACA,OAAO,CACT,EAEME,EAAU,yCAAG,WAAOxV,GAAK,4EAGe,GAFtCuV,EAAcvV,EAAMlC,OAAOsC,MAAME,OAASwU,GAGlC,IADA7U,EAAiBsV,GACb,gCACV9e,EAAQ0M,gBAAgBnD,EAAO+U,EAAeJ,EAAkBxU,GAAiB,KAAD,sCAEzF,gBAPe,sCAwBhB,MAAO,CACL+R,MAhBY,WACZgD,EAAU,IACVH,EAAc,GACdE,EAAU,GACVJ,EAAmB,EACrB,EAYE1U,gBAAAA,EACAqV,WAAAA,EACA9L,OAAAA,EACAoL,SAAAA,EACAE,OAAAA,EACAJ,gBAAAA,EACAF,YAAAA,EACAe,OAjBa,SAACrW,GACd,IAAMsW,EAAchM,EAAO3C,WAAU,SAACC,GAAI,OAAKA,EAAK5H,QAAUA,CAAK,IAC7DuW,EAAY,kBAAOjM,EAAOG,MAAM,EAAG6L,KAAY,OAAKhM,EAAOG,MAAM6L,EAAc,KAGrF,OAFAR,EAAUS,GACVZ,GAAc,SAAC1U,GAAG,OAAKA,EAAM,CAAC,IACvBsV,CACT,EAYEZ,cAAAA,EACAG,UAAAA,EACAD,UAAAA,EACAN,iBAAAA,EACAE,mBAAAA,EACAe,aA7FmB,SAACC,GAEpB,OADgB,OAAOA,GACLpV,KAAI,SAAC4N,GAErB,OAD+BA,EAAvBtP,KAAuBsP,EAAjBlP,KAAY,OAAKkP,EAAG,EAEpC,GACF,EAwFEjH,gBAtFsB,SAACyO,GAEvB,OADgB,OAAOA,GACLpV,KAAI,SAAC4N,GAErB,OAD+BA,EAAvBtP,KAAuBsP,EAAjBlP,KAAY,OAAKkP,EAAG,EAEpC,GACF,EAiFEyH,uBA/E6B,WAC7BjB,GAAmB,SAACxU,GAAG,OAAKA,EAAM,CAAC,GACrC,EA8EEgV,mBAAAA,EACAC,sBAAAA,EACAH,mBAAAA,EACAC,sBAAAA,EACAnV,iBAAAA,EAEJ,CJ5FiB8V,CAAUpH,GACnBqH,EK5BO,SAAiBvH,GAA2C,IAA7BwH,EAAe,uDAAG,WAAO,EACrE,GAAwBvH,EAAAA,EAAAA,UAAS,IAAIlD,EAAW,CAAC,IAAG,eAA7C0K,EAAI,KAAEC,EAAO,MAEpBjF,EAAAA,EAAAA,YAAU,WACR,IAAMkF,EAAU,IAAI5K,EAAW,CAAC,GAC5B,YAAaiD,GAAgBV,OAAOC,KAAKS,EAAaE,SAASrO,OAAS,IAC1E8V,EAAQ5P,WAAWiI,EAAaE,QAAQuH,MACpC,YAAazH,EAAaE,QAAQuH,KAAKxK,MACzCuK,GAAgB,SAAChE,GAAI,yBAChBA,GACAxD,EAAaE,QAAQuH,KAAKxK,KAAK/T,QAAO,IAG7Cwe,EAAQC,GAEZ,GAAG,CAAC3H,IAEJ,IAAMyD,EAAQ,WAAH,OAASiE,EAAQ,CAAC,EAAG,EAE1BE,EAAW,SAACC,EAAWnc,EAAWqS,EAAYC,EAAa9U,GAC/D,MAAgC4e,EAAUhK,mBACxC+J,EACAnc,EACAqS,EACAC,GAJO+J,GAKR,YAL2B,GAM5BA,EAAoBC,WAAW9e,GAC/Bwe,EAAQK,EACV,EAEA,MAAO,CAAEN,KAAAA,EAAMC,QAAAA,EAASjE,MAAAA,EAAOmE,SAAAA,EACjC,CLHoBK,CAAQ/H,EAAShX,EAAQ8Z,YAC3C,GAAkC/C,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAvCiI,EAAS,KAAEC,EAAY,KAiB9B,GAAoClI,EAAAA,EAAAA,WAfd,WAAH,MAAU,CAC3BC,QAAS,CACPzT,KAAM,iBACNhD,OAAQ,WAEVwR,OAAQ,CACNxO,KAAK,kBAAD,OAAoB+T,EAAc,cAAMvF,EAAOA,OAAOpJ,OAAM,KAChEpI,OAAQ,WAEV2e,WAAY,CACV3b,KAAM,qBACNhD,OAAQ,WAEX,IAE0D,eAApD4e,EAAU,KAAEC,EAAa,KAE1BzgB,GACJ,YAAamY,GAAgB,eAAgBA,EAAaE,QACtDF,EAAaE,QAAQnY,WACrB6I,KAAKC,MAILyD,GAAiB,WAAH,OAASlI,EAAWkU,GAAa/T,MAAQH,EAAWkU,GAAa9T,MAAO,EAGtF4S,GAAiB,WAAH,OAASqB,GAAkB,SAAC7O,GAAG,OAAKA,EAAM,CAAC,GAAE,EAE3D2W,GAAe,SAACC,EAAK/e,GACzB,IAAMmL,GAAK,kBAAQyT,EAAWG,IAAI,IAAE/e,OAAAA,IACpC6e,GAAc,SAACG,GAAE,yBAAWA,GAAE,cAAGD,EAAM5T,GAAK,GAC9C,EA4BM8T,GAAoB,WACxB,IAAMtS,EAAKmR,EAAUE,KAAKxK,KAAKrI,MAAMnG,YAC/Bka,EAAiB7c,EAAkBsK,EACnC8I,EAAkBxV,SAAS0E,cAAc,UACzCwa,EAAgBrB,EAAUE,KAAKrP,OACrCwQ,EAAc3L,KAAK/T,QAAQuD,KAAO,GAClCmc,EAAcpM,QAAQmM,EAAgB7c,EAAiBsK,GACvD8I,EAAgB3S,MAAQoc,EACxBzJ,EAAgB1S,OAASV,EACzB8c,EAAchO,cACZ+N,EACA7c,EACAoT,EACAyJ,EAAiBjI,EAAWnU,OAI9B,IAAMsc,EAAmB,CACvBlY,MAAM,aAAD,OAAe9I,GAAS,QAC7B6I,IAAK,GACLD,cAAe3E,EACf0E,aAAcmY,EACdla,YAAa2H,EACbpL,KAAM,aAGR,OADAmd,EAAaU,GACN,CAACA,EAAkB3J,EAC5B,EAEM4J,GAAa,SAAC3e,EAAM0e,GAExB,OADAxI,EAAelW,GACR,CACLpC,WAAYF,GAAU0B,WACtBY,KAAAA,EACA4e,aAAczI,EACd0I,WAAY,2BACZC,gBAAiB,2BACjBhO,OAAQA,EAAOkM,aAAalM,EAAOA,QACnCwM,KAAMF,EAAUE,KAAK9O,kBACrBuP,UAAWW,EAEf,EAEMK,GAAa,yCAAG,WAAO/e,EAAMgf,GAAO,wFAIL,OAJK,EACHT,KAAmB,eAAjDU,EAAS,KAAElK,EAAe,KAGjCqJ,GAAa,UAAW,WAAW,SACTY,EAAQthB,GAAWihB,GAAW3e,EAAMif,IAAY,KAAD,EAAxD,KACb,WADEC,EAAW,UACqC,UAAvBA,EAAY5f,OAAkB,gBACzB,OAAlC8e,GAAa,UAAW,UAAU,mBAC3B,GAAK,OAMoB,OAHlCA,GAAa,UAAW,QAGxBA,GAAa,SAAU,WAAW,UACL1Y,QAAQyZ,WACnCC,EAAWtK,oBACTC,EACAmK,EACAjK,GACAnE,EAAOA,OACPpT,KAEF,KAAD,GAM8D,OAdzDiY,EAAc,OASpByI,GAAa,SAAU,QAGvBA,GAAa,aAAc,WACrBzL,EAAQyM,EAAW1J,eAAeC,GACxCyI,GAAa,cAAwB,IAAVzL,EAAiB,OAAS,UAAU,kBACxDA,GAAK,4CACb,gBA/BkB,wCAiCblV,GAAU,yCAAG,WAAOuC,GAAI,+FAAK+e,GAAc/e,EAAMuV,EAAAA,EAAAA,aAAsB,2DAA7D,sCACVrX,GAAW,yCAAG,WAAO8B,GAAI,+FAAK+e,GAAc/e,EAAMuV,EAAAA,EAAAA,cAAuB,2DAA9D,sCAEX8J,GAAc,WAAH,OAAgD,IAAvClK,OAAOC,KAAKgI,EAAUE,MAAM5V,MAAa,EAyFnE,OAfA4Q,EAAAA,EAAAA,YAnL2B,WACzB,IAAMgH,EAAU,yBAAqBjJ,EAAc,cAAMvF,EAAOoL,SAAQ,KACpEzR,GAAK,kBAAQyT,EAAWpN,QAAM,IAAExO,KAAMgd,IACtCjJ,IAAmBvF,EAAOoL,UAAYpL,EAAOoL,SAAW,IAC1DzR,GAAK,kBAAQA,GAAK,IAAEnL,OAAQ,UAE9B6e,GAAc,SAACG,GAAE,yBAAWA,GAAE,IAAExN,OAAQrG,GAAK,GAC/C,GA4K8B,CAAC4L,EAAgBvF,EAAOoL,YACtD5D,EAAAA,EAAAA,YA1D2B,WAEzB,GADAtC,EAAWH,GACP,YAAaA,EAAc,CAC7B,IAAM0J,EAAQ1J,EAAaE,QACvB,SAAUwJ,GAAStJ,IAAgB5U,GACrC6U,EAAeqJ,EAAMvf,MAEnB,iBAAkBuf,GAASpJ,IAAgB7U,GAC7C8U,EAAeP,EAAaE,QAAQ6I,aAExC,CACF,GA+C8B,CAAC/I,KAE/ByC,EAAAA,EAAAA,YArBwC,WACtC,IAAQlW,EAAgEmU,EAAhEnU,MAAOC,EAAyDkU,EAAzDlU,OAAQgV,EAAiDd,EAAjDc,cAAeL,EAAkCT,EAAlCS,cAAeD,EAAmBR,EAAnBQ,eAC7CzU,EAASvD,EAAQA,QAAjBuD,KACR,IAAK+c,KAAe,CAClB,IAAMG,EAAK3hB,EAAQyK,SAAShG,EAAM,EAAG,EAAGF,EAAOlB,EAAUO,GACnDge,EACJnd,EAAKoF,OAAS,EAAI8X,EAAG9X,OAASjG,EAAa,EAAIC,EAAcW,EAAS,EACxE,EAAexE,EAAQoK,oBACrB7F,EACAC,EAASod,EACTrC,EAAUE,KAAKxK,KAAKrI,MAAMnG,aAC3B,eAJMgX,EAAC,KAAEC,EAAC,KAKXlE,EAAcoI,GACdzI,EAAcsE,GACdvE,EAAewE,EACjB,CACF,GAK2C,CACzChF,EAAWnU,MACXmU,EAAWlU,OACX+a,EAAUE,KACVve,EAAQA,QAAQuD,QAGlBgW,EAAAA,EAAAA,YAlF8B,WAC5B,IAAMrM,EAAK9B,KACX,IACGkV,MACD,gBAAiBjC,EAAUE,KAAKxK,KAAKrI,OACrC2S,EAAUE,KAAKxK,KAAKrI,MAAMnG,cAAgB2H,EAC1C,CACA,IAAM8G,EAAWqK,EAAUE,KAAKrP,OAChC8E,EAAStI,OAAK,kBAAQsI,EAAStI,OAAK,IAAEnG,YAAa2H,IACnD8G,EAASD,KAAKrI,OAAK,kBAAQsI,EAASD,KAAKrI,OAAK,IAAE3D,kBAAmBmF,IACnEmR,EAAUG,QAAQxK,GACdjC,EAAOA,OAAOpJ,OAAS,GAAGwS,EAAQQ,YAAW,EACnD,CACF,GAqEiC,CAACvE,KAClCmC,EAAAA,EAAAA,YArC6B,WAC3B,IAAMrM,EAAK9B,KACH1B,EAAwB8N,EAAxB9N,SAAUyO,EAAcX,EAAdW,UAClB,EAAerZ,EAAQoK,oBAAoBQ,EAAUyO,EAAWjL,GAAG,eAA5DqP,EAAC,KAAEC,EAAC,KACXhF,EAAWU,SAASqE,GACpB/E,EAAWO,UAAUyE,EACvB,GA+BgC,CAAChF,EAAW9N,SAAU8N,EAAWW,UAAWf,KAE5EmC,EAAAA,EAAAA,YAzDyB,YAEpBxH,EAAOgL,YAAc,GAAKhL,EAAOgL,cAAgBhL,EAAOkL,iBACzD9B,EAAQO,WAER3J,EAAOiL,iBAAiB,GACxBjL,EAAOmL,mBAAmB,GAC1BmB,EAAUK,SACR3M,EAAOA,OACPvP,EACAgV,EAAWnU,MACXmU,EAAWlU,OAASkU,EAAWrL,WAC/BnM,EAAQA,SAEVmb,EAAQQ,YAAW,GAEvB,GAyC4B,CAAC5J,EAAOgL,YAAahL,EAAOkL,gBAAiB9B,EAAQO,UAE1E,CACLtE,EACAwI,GACA1I,EACA8H,EACArgB,GACA6Y,EACAxX,EACAmb,EACApJ,EACAsM,EAnMkB,WAClBA,EAAU9D,QACVxI,EAAOwI,QACPva,EAAQua,OACV,EAzBwB,WAAO,EA2BL,SAACoG,GACzB,IAAM3C,EAAejM,EAAO+L,OAAO6C,GACnCtC,EAAUK,SACRV,EACAxb,EACAgV,EAAW3C,WACX2C,EAAW1C,YACX9U,EAAQA,QAEZ,EAwLEtB,GACAygB,EACAhgB,GA7N8B,SAACyhB,GAAE,OAAKvJ,EAAeuJ,EAAI,EAGlC,SAACC,GAAO,OAAK1J,EAAe0J,EAAS,EA8NhE,C,4GM/Qe,SAASC,GAAY,GAAoC,IAAlCC,EAAM,EAANA,OAAQhgB,EAAQ,EAARA,SAAUigB,EAAW,EAAXA,YACtD,GAAwBjK,EAAAA,EAAAA,WAAS,GAAM,eAAhCqE,EAAI,KAAEC,EAAO,KAEpB,OADA9B,EAAAA,EAAAA,YAAU,kBAAM8B,GAAQ,EAAK,GAAE,IACxB0F,EAAOpY,OAAS,GACrB,UAACsY,EAAA,EAAM,CAAC7F,KAAMA,EAAM8F,WAAS,aAC3B,SAACC,GAAA,EAAW,CAAC7f,GAAI,CAAEuI,UAAW,SAAUtI,MAAO,MAAOc,WAAY,QAAS,SAAC,cAG5E,SAAC+e,GAAA,EAAa,CACZC,UAAQ,EACR/f,GAAI,CACF8B,QAAS,OACTke,WAAY,SACZC,eAAgB,iBAChB,UAEF,UAACC,GAAA,EAAiB,CAAClgB,GAAI,CAAE8B,QAAS,SAAUqe,GAAI,GAAI,WAClD,SAACrf,EAAA,EAAU,CAACd,GAAI,CAAEe,WAAY,QAAS,SAAC,qCACxC,SAACqf,GAAA,EAAI,CAACpgB,GAAI,CAAEqgB,GAAI,GAAI,SACjBZ,EAAOjY,KAAI,SAAC8Y,GAAG,OACd,SAACC,GAAA,GAAQ,CAACvgB,GAAI,CAAE8B,QAAS,YAAa0e,cAAe,QAAS,SAAEF,GAAe,YAKvF,SAACG,GAAA,EAAa,WACZ,SAAC7gB,EAAA,EAAM,CACLE,QAAQ,WACRJ,QAAS,WACPggB,IACA3F,GAAQ,EACV,EAAE,SACH,eAMLta,CAEJ,CChDe,SAASihB,GAAQ,GAQ5B,IAPFC,EAAc,EAAdA,eACAC,EAAU,EAAVA,WACAC,EAAW,EAAXA,YACAC,EAAe,EAAfA,gBACAtS,EAAiB,EAAjBA,kBACA9P,EAAO,EAAPA,QACAue,EAAI,EAAJA,KAEA,GAA8BxH,EAAAA,EAAAA,UAAS,MAAK,eAArCsL,EAAO,KAAEC,EAAU,KAClBvQ,EAAsBmQ,EAAtBnQ,OAAQuL,EAAc4E,EAAd5E,UACR1K,EAAgEuP,EAAhEvP,SAAUuJ,EAAsDgG,EAAtDhG,uBAAwBJ,EAA8BoG,EAA9BpG,aAAcF,EAAgBsG,EAAhBtG,YAChDvY,EAA2C2e,EAA3C3e,OAAQD,EAAmC4e,EAAnC5e,MAAOyR,EAA4BmN,EAA5BnN,YAAaD,EAAeoN,EAAfpN,WAC5B1S,EAAyB6F,EAAAA,SAAftF,EAAesF,EAAAA,WAE3BiI,EAAyB,WAAH,OAASqN,GAAU,SAAC5U,GAAG,OAAKA,EAAM,CAAC,GAAE,EAC3D6Z,EAAU,SAACC,GAAC,OAA+B,IAA1BpM,OAAOC,KAAKmM,GAAG7Z,MAAa,EAC7C8Z,EAAgB,WAGpB,GAFAlE,EAAKjL,QAAQuB,EAAYC,EAAayJ,EAAKxK,KAAKrI,MAAMnG,aACtDgZ,EAAKO,WAAW9e,GACZ+R,EAAOpJ,OAAS,EAAG,CACrB4V,EAAK3O,aAAamC,GAClB,IAAM2Q,EAAcnE,EAAK5N,WACvBtN,EACAC,EACAuY,EACA/L,EACAG,GAEFqS,EAAWI,GACXN,EAAgB7D,EAClB,CACF,GAEAhF,EAAAA,EAAAA,YAAU,WACHgJ,EAAQhE,IAA2B,MAAlBA,EAAKxK,KAAK9F,MAC9BwU,GAEJ,GAAG,KAEHlJ,EAAAA,EAAAA,YAAU,WACHgJ,EAAQhE,IAA2B,MAAlBA,EAAKxK,KAAK9F,KAG9BqU,EAAW,MAFXG,GAIJ,GAAG,CAAClE,EAAMve,EAAS6U,EAAYC,EAAa+G,EAAa9J,IAEzD,IAyBMuD,EAAsB,SAACqN,EAAIC,GAC/B,IAAMC,EAdc,WACpB,IAAMA,EAAatE,EAAKrP,OAExB,OADA2T,EAAWtT,cAAcwC,GAClB8Q,CACT,CAUqBC,GACb5V,EAAKqR,EAAKxK,KAAKrI,MAAMnG,YACrBC,EAAcmd,EAAKtf,EACzB,EAAuBvE,EAAQ6N,mBAC7BgW,EACAC,EACA5iB,EAAQuD,KACR,EACA,EACApB,EACAO,EACA8C,EACA+Y,EAAKxK,KAAKrI,MAAMnG,aACjB,eAVMwd,EAAK,KAAEC,EAAK,KAYnB,OADAH,EAAWvP,QAAQyP,EAAOC,EAAO9V,GAC1B2V,CACT,EAEMI,EAAkB,SAACC,EAAOP,EAAIC,GAClC,IAAMpd,EAAcmd,EAAKtf,EACnBoO,EA5BU,SAACkR,EAAIC,GACrB,IAAMnR,EAAgBjR,SAAS0E,cAAc,UAG7C,OAFAuM,EAAcpO,MAAQsf,EACtBlR,EAAcnO,OAASsf,EAChBnR,CACT,CAuBwB0R,CAAUR,EAAIC,GACpCM,EAAMxR,cAAciR,EAAIC,EAAInR,EAAejM,GAE3C4d,YAAW,kBAjDoBC,EAiDiBV,EAjDbW,EAiDiBV,OAAnBnR,EAhD1B5K,QAAO,SAAC0P,GACb,IAAMgN,EAAO/iB,SAAS0E,cAAc,KACpCqe,EAAKC,SAAQ,kBAAcH,EAAG5N,QAAQ,GAAE,YAAI6N,EAAG7N,QAAQ,GAAE,YAAI/N,KAAKC,MAAK,QACvE4b,EAAKE,KAAOzc,IAAIC,gBAAgBsP,GAChCgN,EAAK5J,QACL3S,IAAIiC,gBAAgBsa,EAAKE,MACzBF,EAAKE,KAAO,KACZtH,GACF,GAAG,cATmB,IAASkH,EAAIC,CAiDoB,GAAE,OAC3D,EAuBA,OArBA/J,EAAAA,EAAAA,YAAU,WACR,IAAiB,IAAb3G,EAAmB,CACrB,IAAoB+P,EAAwB5G,EAApCnP,WAA6BgW,EAAO7G,EAApBlP,YAClBgW,EAAavN,EAAoBqN,EAAIC,GAC3C,EAA2BC,EAAWtP,kBAAiB,eAAhDK,EAAK,KAAE8P,EAAS,KACvB,GAAI9P,EACFqP,EAAgBJ,EAAYF,EAAIC,OAC3B,CACL,MAAuB9jB,EAAQgO,mBAAmB6V,EAAIC,EAAIc,GAAU,eAA7DC,EAAK,KAAEC,EAAK,KACbC,EAAgBvO,EAAoBqO,EAAOC,GACjD,EAAiCC,EAActQ,kBAAiB,eAAzDuQ,EAAQ,KAAEC,EAAY,KACzBD,EACFb,EAAgBY,EAAeF,EAAOC,GAGtCplB,QAAQC,IAAI,6BAA8BslB,EAE9C,CACF,CACF,GAAG,CAACnR,IAEGyP,CACT,C,oDCjHe,SAAS2B,GAAe,GAAiD,IAA/C5I,EAAI,EAAJA,KAAMpa,EAAO,EAAPA,QAASijB,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAO9M,EAAW,EAAXA,YACtE,GAA0BL,EAAAA,EAAAA,UAAS,IAAG,eAA/BrL,EAAK,KAAEyY,EAAQ,KAUtB,OACE,UAAClD,EAAA,EAAM,CAAC7F,KAAMA,EAAM8F,WAAS,aAC3B,SAACC,GAAA,EAAW,CAAC7f,GAAI,CAAEuI,UAAW,UAAW,SAAC,sBAC1C,UAACuX,GAAA,EAAa,CACZC,UAAQ,EACR/f,GAAI,CACF8B,QAAS,OACTke,WAAY,SACZC,eAAgB,iBAChB,WAEF,SAACC,GAAA,EAAiB,CAAClgB,GAAI,CAAE8B,QAAS,SAAUqe,GAAI,GAAI,SAAC,yBACrD,UAAC2C,GAAA,EAAW,CAAClD,WAAS,EAAC5f,GAAI,CAAEoI,SAAU,OAAQ,WAC7C,SAAC2a,GAAA,EAAU,CAACljB,GAAG,2BAA0B,SAAC,mBAC1C,SAACmjB,GAAA,EAAM,CACLC,QAAQ,2BACRpjB,GAAG,qBACHqjB,aAAa,KACb9Y,MAAOA,EACP+Y,MAAM,gBACNviB,SAAU,SAACmG,GAAK,OAAK8b,EAAS9b,EAAMlC,OAAOuF,MAAM,EACjDgZ,WAAY,CACVpjB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP+f,WAAY,MACZle,QAAS,SAEX,SAED,kBAAmB8gB,EAAM9M,GACxB8M,EAAM9M,GAAaxT,cAAckF,KAAI,SAAC6b,GAAE,OACtC,UAACC,GAAA,EAAQ,CAAsBlZ,MAAOiZ,EAAG,UACtCT,EAAMS,GAAInhB,KACV0gB,EAAMS,GAAIphB,OAFE2gB,EAAMS,GAAIphB,KAGd,KAGb,UAACqhB,GAAA,EAAQ,CAA+BlZ,MAAO0L,EAAY,UACxD8M,EAAM9M,GAAa5T,KACnB0gB,EAAM9M,GAAa7T,OAFP2gB,EAAM9M,GAAa7T,eAQ1C,UAACwe,GAAA,EAAa,YACZ,SAAC7gB,EAAA,EAAM,CAACE,QAAQ,WAAWyjB,SAA2B,IAAjBnZ,EAAM/C,OAAc3H,QAxDxC,WACrBA,EAAQkjB,EAAMxY,GAAOrI,MAAO6gB,EAAMxY,GAAOpI,QACzC6gB,EAAS,GACX,EAqDuF,SAAC,cAGlF,SAACjjB,EAAA,EAAM,CAACE,QAAQ,OAAOJ,QAtDT,WAClBmjB,EAAS,IACTF,GACF,EAmDkD,SAAC,gBAMrD,C,gBCtEe,SAASa,GAAW,GAA0C,IAAxC5N,EAAW,EAAXA,YAAakE,EAAI,EAAJA,KAAMpa,EAAO,EAAPA,QAASijB,EAAO,EAAPA,QAC/D,GAAwBlN,EAAAA,EAAAA,UAASG,GAAY,eAAtCjW,EAAI,KAAE8jB,EAAO,KACpB,GAAoBhO,EAAAA,EAAAA,UAAS,IAAtBiO,GAAyB,YAAhB,GAehB,OACE,UAAC/D,EAAA,EAAM,CAAC7F,KAAMA,EAAM8F,WAAS,aAC3B,SAACC,GAAA,EAAW,CAAC7f,GAAI,CAAEuI,UAAW,UAAW,SAAC,kBAC1C,SAACuX,GAAA,EAAa,CACZC,UAAQ,EACR/f,GAAI,CACF8B,QAAS,OACTke,WAAY,SACZC,eAAgB,iBAChB,UAEF,SAAC0D,GAAA,EAAS,CACR7jB,QAAQ,WACRqjB,MAAM,mBACND,aAAcvjB,EACdiB,SAzBiB,SAACiF,GACxB,IAAQhB,EAAWgB,EAAXhB,OACR4e,EAAQ5e,EAAOuF,MACjB,EAuBQ9D,KAAK,QACLtG,GAAI,CAAE+B,MAAO,OAAQ6hB,GAAI,GACzBC,WAAY,CAAE7jB,GAAI,CAAEG,iBAAiBiM,EAAAA,EAAAA,IAAM,OAAQ,MACnD0X,WAAYJ,EACZ9lB,QAAS8lB,OAGb,UAACjD,GAAA,EAAa,YACZ,SAAC7gB,EAAA,EAAM,CAACE,QAAQ,WAAWyjB,SAA0B,IAAhB5jB,EAAK0H,OAAc3H,QAtC3C,WACjBA,EAAQC,EACV,EAoCkF,SAAC,UAG7E,SAACC,EAAA,EAAM,CAACE,QAAQ,OAAOJ,QAhCT,WAClB+jB,EAAQ,IACRd,GACF,EA6BkD,SAAC,gBAMrD,C,mDC/CA,SAASoB,KACP,OACE,SAACC,GAAA,EAAS,CACR/jB,MAAM,QACNqG,KAAK,WACLtG,GAAI,CAAEikB,OAAQ,gBAAiB/jB,aAAc,QAGnD,CAEA,SAASgkB,GAAgB,GAAa,IAAXjlB,EAAM,EAANA,OACzB,MAAe,YAAXA,GACK,SAACklB,GAAA,EAAgB,CAAClkB,MAAM,OAAOqG,KAAK,SAE9B,YAAXrH,GACK,SAACmlB,GAAA,EAAW,CAACnkB,MAAM,WAAWqG,KAAK,aAE7B,SAAXrH,GACK,SAAColB,GAAA,EAAsB,CAACpkB,MAAM,UAAUqG,KAAK,aAEvC,WAAXrH,GACK,SAAC8kB,GAAU,SADpB,CAGF,CAMA,SAASO,GAAO,GAAmB,IAAjBriB,EAAI,EAAJA,KAAMhD,EAAM,EAANA,OAChBgB,EAAQ,CACZskB,SAASnY,EAAAA,EAAAA,IAAM,OAAQ,KACvBoY,KAAM,QACNC,QAAS,QACTC,OAAQ,OAGV,OACE,UAACvY,EAAA,EAAK,CAACwY,UAAU,MAAM1E,eAAe,gBAAe,WACnD,SAACnf,EAAA,EAAU,CAACd,GAAI,CAAEe,WAAY,OAAQF,SAAU,OAAQZ,MAAOA,EAAMhB,IAAU,SAC5EgD,KAEH,SAACiiB,GAAe,CAACjlB,OAAQA,MAG/B,CAOA,SAAS2lB,GAAc,GAAsB,IAApB3lB,EAAM,EAANA,OAAQ4lB,EAAO,EAAPA,QAC/B,MAAe,WAAX5lB,GAEA,UAACkN,EAAA,EAAK,CACJwY,UAAU,MACVG,QAAS,EACT7E,eAAe,SACfD,WAAW,SACXhgB,GAAI,CAAE+B,MAAO,OAAQgjB,EAAG,GAAI,WAE5B,SAAChB,GAAU,KACX,SAACjjB,EAAA,EAAU,UAAC,+BAKH,YAAX7B,GAAmC,YAAXA,EAA6B,KAE1C,YAAXA,GAEA,UAACkN,EAAA,EAAK,CACJwY,UAAU,MACVG,QAAS,EACT7E,eAAe,SACfD,WAAW,SACXhgB,GAAI,CAAE+B,MAAO,OAAQgjB,EAAG,GAAI,WAE5B,SAACV,GAAA,EAAsB,CAACpkB,MAAM,UAAUD,GAAI,CAAEa,SAAU,WACxD,UAACC,EAAA,EAAU,WAAC,0DAC8C+jB,EAAQ,oBAMjE,IACT,CAOe,SAASG,GAAiB,GAAmB,IAAjBlL,EAAI,EAAJA,KAAM7a,EAAM,EAANA,OAC3CgmB,EAAgB,UACpB,GAA8BxP,EAAAA,EAAAA,WAAU,GAAE,eAAnCoP,EAAO,KAAEK,EAAU,MAC1BjN,EAAAA,EAAAA,YAAU,WACR,IAAIkN,EAIJ,OAHIN,EAAU,GAAuB,YAAlBI,IACjBE,EAAUrD,YAAW,kBAAMoD,EAAWL,EAAU,EAAE,GAAE,MAE/C,kBAAMO,aAAaD,EAAS,CACrC,GAAG,CAACN,EAASI,IAEb,IAAMI,EAAYvQ,OAAOwQ,OAAOrmB,GAAQuI,KAAI,SAAC+d,GAAG,OAAKA,EAAItmB,MAAM,IAY/D,OAXIomB,EAAUlU,SAAS,UACrB8T,EAAgB,SACPI,EAAUlU,SAAS,WAC5B8T,EAAgB,UACNI,EAAUlU,SAAS,cACZ,IAAb0T,GACFK,EAAW,GAEbD,EAAgB,YAIhB,UAACtF,EAAA,EAAM,CAAC7F,KAAMA,EAAM8F,WAAS,aAC3B,SAACC,GAAA,EAAW,CAAC7f,GAAI,CAAEuI,UAAW,UAAW,SAAC,kBAC1C,SAACuX,GAAA,EAAa,CAACC,UAAQ,YACrB,SAAC5T,EAAA,EAAK,CAACwY,UAAU,SAAS1E,eAAe,SAAS6E,QAAS,EAAE,SAC1DhQ,OAAOwQ,OAAOrmB,GAAQuI,KAAI,SAACyW,GAAE,OAC5B,SAACqG,GAAM,CAAeriB,KAAMgc,EAAGhc,KAAMhD,OAAQgf,EAAGhf,QAAnCgf,EAAGhc,KAA0C,SAIhE,SAAC2iB,GAAa,CAAC3lB,OAAQgmB,EAAeJ,QAASA,MAGrD,C,wFChIA,SAASW,GAAkB,GAAqD,IAAnD7lB,EAAI,EAAJA,KAAMY,EAAY,EAAZA,aAAcmjB,EAAS,EAATA,UAAW+B,EAAe,EAAfA,gBAC1D,GAAgChQ,EAAAA,EAAAA,WAAS,GAAM,eAAxCiQ,EAAQ,KAAEC,EAAW,KAC5B,GAAoClQ,EAAAA,EAAAA,UAClCtR,KAAK2O,IAAwB,GAAnBnT,EAAK0H,OAAS,GAAwC,GAA/BX,EAAAA,cAA0B,KAC5D,eAFMkf,EAAU,KAAEC,EAAa,KAI1BC,EAAaC,GAAAA,GACT,CACNpmB,KAAMomB,GAAAA,KAEHC,IAAItf,EAAAA,cAAwB,yBAAD,OAA2BA,EAAAA,kBAE1Duf,WAEGC,EAAO,yCAAG,yGACU3f,EAAAA,EAAAA,aAAmB,OAAQ5G,EAAM8lB,EAAiBK,GAAY,KAAD,EAAtE,OAATK,EAAS,yBACRA,GAAS,2CACjB,kBAHY,mCAUPC,EAAU,yCAAG,WAAOvgB,GAAC,yEACF,KAAnBA,EAAEhB,OAAOuF,MAAY,gBACvB7J,EAAa,YAAY,uBAEI,OAA7BA,EAAasF,EAAEhB,OAAOuF,OAAO,SACT8b,IAAU,KAAD,EAAlB,IACG,IADH,OACQ,mDAIrBP,GAAY,GAAO,4CACpB,gBAXe,sCAqBhB,OAFA1N,EAAAA,EAAAA,YAAU,kBAAMiO,GAAS,GAAE,CAACvmB,KAER,IAAb+lB,GACL,SAAC/B,GAAA,EAAS,CACR0C,UAAU,cACVC,OAAO,QACPxmB,QAAQ,WACRojB,aAAcvjB,EACd4mB,WAAS,EACTjgB,KAAK,QACL1F,SAlCqB,SAACiF,GACxBggB,EAAc1hB,KAAK2O,IAAkC,GAA7BjN,EAAEhB,OAAOuF,MAAM/C,OAAS,GAAwC,GAA/BX,EAAAA,cAA0B,KACnFnG,EAAasF,EAAEhB,OAAOuF,MACxB,EAgCIoc,OAAQJ,EACRK,UAlBkB,SAAC5gB,GACH,KAAdA,EAAE6gB,UAAiC,IAAf7gB,EAAE8gB,UACxBP,EAAWvgB,EAEf,EAeI+gB,gBAAiB,CACf3mB,MAAO,YACP4mB,SAAS,GAEXzD,WAAY,CACV0D,MAAO,CACLve,UAAW,SACXtI,MAAO,OACPE,iBAAiBiM,EAAAA,EAAAA,IAAM,OAAQ,IAC/BrK,MAAM,GAAD,OAAK6jB,EAAU,MACpBmB,QAAS,QAGbjD,YACE,SAAChjB,EAAA,EAAU,CACThB,QAAQ,OACRE,GAAI,CACFe,WAAY,OACZd,MAAO,iBACPsI,UAAW,UACX,SAEDmb,IAGL9lB,QAAS8lB,EACT1jB,GAAI,CACF0K,SAAU,WACViC,KAAM,MACNlK,UAAW,qBACXukB,OAAQ,WAIZ,SAAClmB,EAAA,EAAU,CACThB,QAAQ,KACRJ,QAvFgB,WAAH,OAASimB,GAAY,EAAM,EAwFxCU,UAAU,cACVrmB,GAAI,CACFC,MAAO,OACPyK,SAAU,WACViC,KAAM,MACNlK,UAAW,qBACXwkB,EAAG,GACH,SAEDtnB,GAGP,CASe,SAASunB,GAAO,GAAoE,IAAlE/Q,EAAS,EAATA,UAAWxW,EAAI,EAAJA,KAAMwnB,EAAgB,EAAhBA,iBAAkBzD,EAAS,EAATA,UAAW+B,EAAe,EAAfA,gBACvE2B,GAAUC,EAAAA,GAAAA,IAAc,SAACC,GAAK,OAAKA,EAAMC,YAAYC,KAAK,KAAK,IACrE,OACE,UAACC,GAAA,EAAK,CACJC,IAAKvR,EACLnW,GAAI,CACF8B,QAAS,OACTke,WAAY,SACZC,eAAgB,gBAChB8E,EAAG,EACH5kB,gBAAiB,eACjBD,aAAc,GAEhBynB,UAAW,EAAE,WAEb,SAAC/a,EAAA,EAAG,CAAC5M,GAAI,CAAE4nB,QAAS,WAAYjb,KAAM,OAAQ,UAC5C,UAACR,EAAA,EAAK,CAACwY,UAAU,MAAM3E,WAAW,SAAS8E,QAAS,EAAE,WACpD,SAAC+C,GAAA,EAAI,CAAC1F,KAAK,YAAYliB,MAAM,QAAQ6nB,UAAU,OAAM,UACnD,SAAClb,EAAA,EAAG,CAAC5M,GAAI,CAAE8B,QAAS,OAAQke,WAAY,UAAW,UACjD,SAAC+H,GAAA,EAAa,CAAClnB,SAAS,eAG3BumB,GACC,SAACS,GAAA,EAAI,CAAC1F,KAAK,IAAIliB,MAAM,QAAQ6nB,UAAU,OAAM,UAC3C,SAAC,MAAS,CAAC/lB,MAAM,OAAOC,OAAO,YAGjC,SAAC6lB,GAAA,EAAI,CAAC1F,KAAK,IAAIliB,MAAM,QAAQ6nB,UAAU,OAAM,UAC3C,SAAC,MAAQ,CAAC/lB,MAAM,OAAOC,OAAO,iBAKtC,SAACwjB,GAAiB,CAChB7lB,KAAMA,EACNY,aAAc4mB,EACdzD,UAAWA,EACX+B,gBAAiBA,KAEnB,SAAC,KAAW,MAGlB,C,2BCvKe,SAASuC,GAAa,GAAmC,IAAjCjmB,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAQimB,EAAa,EAAbA,cACpD,OACE,SAACrb,EAAA,EAAG,CACF5M,GAAI,CACFkoB,gBAAgB,OAAD,OAASC,GAAW,KACnCC,eAAgBrmB,EAChBsmB,UAAW,OACXtmB,MAAAA,EACAC,OAAAA,EACAF,QAAS,OACTme,eAAgB,SAChBD,WAAY,UACZ,SAEDiI,GAGP,C,gBCbe,SAASK,GAAK,GAezB,IAQEC,EAtBJzO,EAAI,EAAJA,KACAE,EAAQ,EAARA,SACAwO,EAAc,EAAdA,eACAvpB,EAAM,EAANA,OACA0hB,EAAc,EAAdA,eACAC,EAAU,EAAVA,WACA6H,EAAM,EAANA,OACA5O,EAAO,EAAPA,QACA6O,EAAc,EAAdA,eACAC,EAAU,EAAVA,WACAC,EAAgB,EAAhBA,iBACA7H,EAAO,EAAPA,QACA8H,EAAQ,EAARA,SACAC,EAAe,EAAfA,gBAEQ/mB,EAAuD4e,EAAvD5e,MAAOC,EAAgD2e,EAAhD3e,OAAQoG,EAAwCuY,EAAxCvY,SAAUyO,EAA8B8J,EAA9B9J,UAAWN,EAAmBoK,EAAnBpK,eACtCwS,EAAaxS,EAAegB,QAAUhB,EAAegB,QAAQC,aAAe,EAC9EwR,GAAe,EACXvY,EAAiCmQ,EAAjCnQ,OAAQoL,EAAyB+E,EAAzB/E,SAAUU,EAAeqE,EAAfrE,WACtB9L,EAAOpJ,OAAS,IAClB2hB,GAAe,GAGF,aAAX/pB,IACFspB,GACE,SAACP,GAAY,CACXjmB,MAAOA,EACPC,OAAQA,EACRimB,eAAe,SAACgB,GAAA,EAAO,CAAC9iB,MAAM,2BAKrB,cAAXlH,IACFspB,GACE,gCACGxH,GACD,SAACkI,GAAA,EAAO,CAAC9iB,MAAM,6BAKN,YAAXlH,IACFspB,GACE,SAACP,GAAY,CACXjmB,MAAOA,EACPC,OAAQA,EACRimB,eACE,iCACE,SAACgB,GAAA,EAAO,CAAC9iB,MAAK,mBAAcya,EAAWjF,gBAAe,cAAME,EAAQ,iBACnEkF,QAOI,UAAX9hB,IACFspB,GACE,SAACP,GAAY,CACXjmB,MAAOA,EACPC,OAAQA,EACRimB,cACElmB,GACE,UAACoK,EAAA,EAAK,CAACwY,UAAU,SAASG,QAAS,EAAG7E,eAAe,eAAc,WACjE,SAACrT,EAAA,EAAG,CAACyZ,UAAU,gBAAgBpG,eAAe,SAASjgB,GAAI,CAAE8B,QAAS,QAAS,UAC7E,SAACxB,GAAA,EAAS,CAACC,aAAcgc,OAE3B,UAACzb,EAAA,EAAU,CACTd,GAAI,CACFG,gBAAiB,cACjB4kB,EAAG,GACH9kB,MAAO,eACPc,WAAY,OACZF,SAAU,SACV0H,UAAW,UACX,UACH,eACc7B,EAAAA,UAAoB,MAAIA,EAAAA,UAAoB,cAE3D,UAAC5F,EAAA,EAAU,CACTd,GAAI,CACFG,gBAAiB,cACjB4kB,EAAG,GACH9kB,MAAO,eACPc,WAAY,OACZF,SAAU,UACV,UACH,0BACyB,IAAI,IAAE6F,EAAAA,aAAuB,4BAIzD,sBAOK,UAAXzH,IACFspB,EAAUxH,GAEZ,IAAMmI,GAAW/kB,KAAK2O,IAAIqE,OAAOC,WAAYD,OAAOQ,OAAOC,YAAcxP,GAAY,EAErF,OACE,UAACwE,EAAA,EAAG,CACF7M,UAAU,MACVC,GAAI,CACF0K,SAAU,YACV,UAED+d,EACAO,EAAenP,EAAU,KACzBC,EAAO4O,EAAiB,KACxB1O,EAAW2O,EAAa,KACxBH,EAAiBI,EAAmB,MACrC,UAACzc,EAAA,EAAK,CACJwY,UAAU,SACV5iB,MAAOqG,EACPpG,OAAQ6U,EAAYkS,EACpB/oB,GAAI,CACF0K,SAAU,WACViC,KAAMuc,EACNlJ,WAAY,SACZC,eAAgB,SAChB9f,gBAAiB,QACjB,UAED2oB,EACAP,KAEFS,EAAeH,EAAW,OAGjC,C,gBC5IMM,I,SAAc,CAClBC,mBAAoB,CAClBC,WAAY,CACVC,SAAS,GAEXC,eAAgB,YAChBC,kBAAmB,kBACjB,IAAInkB,SAAQ,SAACC,GACXwc,YAAW,WACT3K,OAAOsS,SAAS,EAAG,GACnBnkB,GACF,GAAG,IACL,GAAE,EACJmkB,UAAU,GAEZC,iBAAiB,IAGbC,GAAc,CAClBC,QAAS,CACP,CAAEC,QAAS,4BAA6B5nB,KAAM,OAAQzB,KAAM,UAC5D,CAAEqpB,QAAS,0BAA2B5nB,KAAM,OAAQzB,KAAM,QAC1D,CAAEqpB,QAAS,0BAA2B5nB,KAAM,OAAQzB,KAAM,UAIxDspB,GAAQ,EAAC,kBAERH,IAAW,IACd9pB,GAAI,cACJkqB,SAAU,CAAExV,QAAS,eAAgByV,GAAI,SACzC/nB,KAAM,CAAC,mBAAe,kBAGnB0nB,IAAW,IACd9pB,GAAI,QACJkqB,SAAU,CAAExV,QAAS,iBAAkByV,GAAI,OAC3C7jB,MAAO,2BACPlE,KAAM,CAAC,uFAAmF,kBAGvF0nB,IAAW,IACd9pB,GAAI,cACJkqB,SAAU,CAAExV,QAAS,eAAgByV,GAAI,SACzC/nB,KAAM,CAAC,mBAIX,SAASgoB,KACP,IAAMC,GAAOC,EAAAA,EAAAA,YAAWC,GAAAA,IAMxB,OAJAnS,EAAAA,EAAAA,YAAU,WACJiS,GAAMA,EAAK3gB,OACjB,GAAG,CAAC2gB,KAEG,uBACT,CAEe,SAASG,KACtB,OACE,SAAC,MAAY,CAACP,MAAOA,GAAOX,YAAaA,GAAY,UACnD,SAACc,GAAY,KAGnB,C,oDCjEe,SAASK,GAAK,GAAgC,IAA9BnH,EAAK,EAALA,MAAOjhB,EAAI,EAAJA,KAAM3B,EAAY,EAAZA,aAC1C,OACE,SAACgqB,GAAA,EAAsB,CACrBC,WAAS,EACTrH,MAAOA,EACPjhB,KAAMA,EACNlC,GAAI,CACFyqB,GAAI,EACJ1pB,WAAY,OACZd,MAAO,OACPyqB,QAAS,OACT,UAAW,CACTzqB,MAAO,QACPyqB,QAAS,SAGbhrB,QAASa,GAGf,CACA+pB,GAAKjqB,aAAe,CAClBE,aAAc,WAAO,G,eCrBR,SAASoqB,GAAc,GAAiC,IAA/BC,EAAM,EAANA,OAAQnrB,EAAQ,EAARA,SAAUorB,EAAQ,EAARA,SACxD,OACE,SAACC,GAAA,GAAM,CACLF,OAAQA,EACR9qB,QAAQ,YACRirB,WAAY,CACVrD,IAAKmD,EACL7qB,GAAI,CACFgC,OAAQ,cACRqK,IAAK,MACLlM,gBAAiB,cACjBF,MAAO,OACPc,WAAY,OACZb,aAAyB,SAAX0qB,EAAoB,gBAAkB,gBACpDnoB,UAAW,qBACXwhB,OAAQ,IAEV,SAEDxkB,GAGP,CAEAkrB,GAActqB,aAAe,CAC3BwqB,SAAU,WAAO,G,gBC3BJ,SAASG,KACtB,OAAO,SAACC,GAAA,EAAO,CAACjrB,GAAI,CAAEG,gBAAiB,OAAQ+qB,GAAI,GAAKprB,QAAQ,UAClE,CCQe,SAASqrB,GAAe,GAAqC,IAAnC9U,EAAU,EAAVA,WAAY+U,EAAU,EAAVA,WAAYC,EAAM,EAANA,OACzD9qB,EAAe,SAAC+qB,GACH,aAAbA,GACFF,IAEe,SAAbE,GACFD,GAEJ,EAEA,OACE,SAACV,GAAa,CAACC,OAAO,QAAQC,SAAUxU,EAAW,UACjD,UAAC+J,GAAA,EAAI,CAACpgB,GAAI,CAAEG,gBAAiB,SAAU,WACrC,SAACmqB,GAAI,CAACnH,MAAM,OAAOjhB,MAAM,SAACqpB,GAAA,EAAQ,IAAKhrB,aAAc,kBAAMA,EAAa,OAAO,KAC/E,SAACyqB,GAAe,KAChB,SAACV,GAAI,CACHnH,MAAM,WACNjhB,MAAM,SAACspB,GAAA,EAAY,IACnBjrB,aAAc,kBAAMA,EAAa,WAAW,KAE9C,SAACyqB,GAAe,KAChB,SAACV,GAAI,CACHnH,OACE,iCACE,SAACriB,EAAA,EAAU,CAACd,GAAI,CAAEa,SAAU,UAAWE,WAAY,QAAS,SAAC,WAC7D,SAACD,EAAA,EAAU,CAACd,GAAI,CAAEa,SAAU,UAAWE,WAAY,QAAS,SAAC,gBAGjEmB,MAAM,SAACupB,GAAA,EAAS,IAChBlrB,aAAc,kBAAMA,EAAa,QAAQ,QAKnD,C,oDCpCe,SAASmrB,GAAmB,GAAyC,IAAvC5R,EAAI,EAAJA,KAAM6R,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SACrE,OACE,UAAClM,EAAA,EAAM,CAAC7F,KAAMA,EAAK,WACjB,UAAC+F,GAAA,EAAW,CACV7f,GAAI,CACFuI,UAAW,SACXxH,WAAY,OACZd,OAAOmM,EAAAA,EAAAA,IAAM,OAAQ,KACrB,UAEY,QAAbyf,EAAqB,QAAU,SAAS,eAE3C,UAAC/L,GAAA,EAAa,CAACC,UAAQ,aACrB,UAACG,GAAA,EAAiB,CAAClgB,GAAI,CAAEe,WAAY,OAAQd,MAAO,OAAQ6rB,GAAI,GAAI,UAAC,kBACtC,QAAbD,EAAqB,QAAU,SAAS,qBAE1D,SAAC/qB,EAAA,EAAU,CAAChB,QAAQ,YAAYE,GAAI,CAAEC,MAAO,MAAOc,WAAY,QAAUgrB,QAAM,WAAC,WAGjF,SAACjrB,EAAA,EAAU,CAACd,GAAI,CAAEa,SAAU,SAAUZ,MAAO,OAAQc,WAAY,QAAS,SAAC,sCAI7E,UAAC0f,GAAA,EAAa,YACZ,SAAC7gB,EAAA,EAAM,CAACF,QAASisB,EAAU3rB,GAAI,CAAEC,MAAO,OAAQ,SAChC,QAAb4rB,EAAqB,QAAU,YAElC,SAACjsB,EAAA,EAAM,CAACE,QAAQ,WAAWJ,QAASksB,EAAS,SAAC,gBAMtD,CC3Be,SAASI,GAAgB,GAQpC,IAPFnB,EAAQ,EAARA,SACAzP,EAAS,EAATA,UACA6Q,EAAU,EAAVA,WACAC,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACAxR,EAAW,EAAXA,YACAkR,EAAQ,EAARA,SAEA,GAAgDpW,EAAAA,EAAAA,WAAS,GAAM,eAAxD2W,EAAgB,KAAEC,EAAmB,KAC5C,GAA8C5W,EAAAA,EAAAA,WAAS,GAAM,eAAtD6W,EAAe,KAAEC,EAAkB,KAC1C,GAAkC9W,EAAAA,EAAAA,WAAS,GAAM,eAA1C+W,EAAS,KAAEC,EAAY,KACxBC,GAAUtW,EAAAA,EAAAA,QAAO,MAEjBuW,EAAW,WACfhS,IACA0R,GAAoB,GACpBE,GAAmB,GACnBE,GAAa,EACf,GAEAxU,EAAAA,EAAAA,YAAU,WACR,SAAS2U,EAAmB7lB,GACtB2lB,EAAQnV,UAAYmV,EAAQnV,QAAQsV,SAAS9lB,EAAMlC,SACrD8nB,GAEJ,CAGA,OADAztB,SAASgZ,iBAAiB,YAAa0U,GAChC,WAEL1tB,SAASiZ,oBAAoB,YAAayU,EAC5C,CACF,GAAG,CAACF,IAEJ,IAoCMI,EAAmB,WAAH,OAASL,GAAa,EAAO,EAMnD,OACE,SAAC9B,GAAa,CAACC,OAAO,OAAM,UAC1B,UAACze,EAAA,EAAK,CAACwY,UAAU,MAAMG,QAAS,EAAG9E,WAAW,SAAS0H,IAAKmD,EAAS,WACnE,UAACzK,GAAA,EAAI,CACHpgB,GAAI,CACFG,gBAAiB,QACjBD,aAAc,iBACd,WAEF,SAACoqB,GAAI,CAACnH,MAAM,YAAYjhB,MAAM,SAAC6qB,GAAA,EAAqB,IAAKxsB,aA7BzC,WACtBosB,IACAvR,GACF,KA2BQ,SAAC4P,GAAe,KAChB,SAACV,GAAI,CAACnH,MAAM,SAASjhB,MAAM,SAAC8qB,GAAA,EAAS,IAAKzsB,aArDxB,WACxB,IAAM0sB,EAAMb,EACZC,GAAoB,SAACa,GAAE,OAAMA,CAAE,KACnB,IAARD,GAAcN,GASpB,KA0CQ,SAAC3B,GAAe,KAChB,SAACV,GAAI,CAACnH,MAAM,OAAOjhB,MAAM,SAACirB,GAAA,EAAQ,IAAK5sB,aAzCvB,WAClB+rB,EACFC,GAAmB,IAEnBI,IACAJ,GAAmB,GAEvB,KAmCQ,SAACvB,GAAe,KAChB,SAACV,GAAI,CACHnH,MAAoB,QAAb0I,EAAqB,QAAU,SACtC3pB,KAAmB,QAAb2pB,GAAqB,SAACuB,GAAA,EAAW,KAAM,SAAClgB,EAAA,EAAU,IACxD3M,aAjCe,WACnBisB,EACFC,GAAa,IAEbE,IACAF,GAAa,GAEjB,OA6BOL,EAAmBH,EAAa,KAChCK,GAAkB,gBAAK5E,IAAKgF,EAAQ,SAAER,IAAkB,MACzD,SAACR,GAAkB,CACjB5R,KAAM0S,EACNb,SA9BkB,WACxBmB,IACAX,GACF,EA4BQP,SAAUkB,EACVjB,SAAUA,QAKpB,C,gBCrHe,SAASwB,GAAoB,GAAmC,IAAjCvS,EAAQ,EAARA,SAAUwS,EAAK,EAALA,MAAO3S,EAAW,EAAXA,YAM7D,OACE,UAACyF,GAAA,EAAI,CACHpgB,GAAI,CACFG,gBAAiB,QACjBD,aAAc,sBACd8B,OAAQ,eACR,WAEF,SAACsoB,GAAI,CAACnH,MAAM,MAAMjhB,MAAM,SAACqrB,GAAA,EAAqB,IAAKhtB,aAbrC,WAChBoa,IACA2S,GACF,KAWI,SAACtC,GAAe,KAChB,SAACV,GAAI,CAACnH,MAAM,SAASjhB,MAAM,SAACgL,EAAA,EAAU,IAAK3M,aAAcua,MAG/D,CCxBe,SAAS0S,GAAY,GAA+D,IAA7DC,EAAc,EAAdA,eAAgBC,EAAa,EAAbA,cAAeC,EAAY,EAAZA,aAAcC,EAAW,EAAXA,YACjF,OACE,UAACzhB,EAAA,EAAK,CACJwY,UAAU,SACVG,QAAS,EACT9kB,GAAI,CACF+kB,EAAG,EACH5kB,gBAAiB,QACjBD,aAAc,sBACd2tB,UAAW,uCACX,UAEDJ,EACAC,EACAC,EACAC,IAGP,C,gBClBe,SAASE,GAAK,GAAgC,IAA9B3K,EAAK,EAALA,MAAOjhB,EAAI,EAAJA,KAAM3B,EAAY,EAAZA,aAC1C,OACE,SAACgqB,GAAA,EAAsB,CACrBC,WAAS,EACTrH,MAAOA,EACP/Y,MAAO+Y,EAAM4K,cACb7rB,KAAMA,EACNlC,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASyqB,QAAS,SAE/ChrB,QAASa,GAGf,CCVe,SAASytB,GAAc,GAAqC,IAAnC3X,EAAU,EAAVA,WAAY+U,EAAU,EAAVA,WAAYC,EAAM,EAANA,OAC9D,OACE,UAAC4C,GAAA,EAAgB,CACfvG,IAAKrR,EACL6X,YAAU,EACVluB,GAAI,CAAEyqB,GAAI,EAAG1pB,WAAY,OAAQZ,iBAAiBiM,EAAAA,EAAAA,IAAM,OAAQ,KAAO,WAEvE,SAAC0hB,GAAI,CAAC3K,MAAM,OAAOjhB,MAAM,SAACqpB,GAAA,EAAQ,IAAKhrB,aAAc8qB,KACrD,SAACyC,GAAI,CAAC3K,MAAM,WAAWjhB,MAAM,SAACspB,GAAA,EAAY,IAAKjrB,aAAc6qB,KAC7D,SAAC0C,GAAI,CAAC3K,MAAM,iBAAiBjhB,MAAM,SAACupB,GAAA,EAAS,IAAKlrB,aAAc,WAAO,MAG7E,CCVe,SAAS4tB,GAAa,GAAoC,IAAlC/jB,EAAK,EAALA,MAAO7J,EAAY,EAAZA,aAAcsrB,EAAQ,EAARA,SAC1D,OACE,UAACoC,GAAA,EAAgB,CACfC,YAAU,EACV9jB,MAAOA,EACPxJ,SAAUL,EACVP,GAAI,CACFe,WAAY,OACZZ,iBAAiBiM,EAAAA,EAAAA,IAAM,OAAQ,IAC/B,iBAAkB,CAAEnM,MAAO,UAC3B,WAEF,SAACsqB,GAAA,EAAsB,CACrBpH,MAAM,YACN/Y,MAAM,YACNlI,MAAM,SAAC6qB,GAAA,EAAqB,IAC5B/sB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASyqB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrBpH,MAAM,SACN/Y,MAAM,QACNlI,MAAM,SAAC8qB,GAAA,EAAS,IAChBhtB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASyqB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrBpH,MAAM,OACN/Y,MAAM,OACNlI,MAAM,SAACirB,GAAA,EAAQ,IACfntB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASyqB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrBpH,MAAoB,QAAb0I,EAAqB,QAAU,SACtCzhB,MAAM,QACNlI,KAAmB,QAAb2pB,GAAqB,SAACuB,GAAA,EAAW,KAAM,SAAClgB,EAAA,EAAU,IACxDlN,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASyqB,QAAS,aAKvD,C,mDCpDe,SAAS0D,GAAY,GAMhC,IALFnuB,EAAK,EAALA,MACA4Y,EAAgB,EAAhBA,iBACAiB,EAAI,EAAJA,KACAuU,EAAkB,EAAlBA,mBACAC,EAAsB,EAAtBA,uBAEA,OAAOxU,GACL,UAAClN,EAAA,EAAG,CAAC5M,GAAI,CAAE0K,SAAU,YAAa,WAChC,UAACujB,GAAA,EAAgB,CACfC,YAAU,EACV9jB,MAAOyO,EACPjY,SAAU0tB,EACVtuB,GAAI,CACF8B,QAAS,OACTf,WAAY,OACZZ,iBAAiBiM,EAAAA,EAAAA,IAAM,OAAQ,IAC/BmiB,UAAW,iBACX7jB,SAAU,WACVsV,WAAY,UACZ,WAEF,SAACuK,GAAA,EAAsB,CACrBpH,OACE,SAACriB,EAAA,EAAU,CAACD,SAAS,UAAUE,WAAW,OAAM,SAAC,YAInDqJ,MAAM,UACNlI,MAAM,SAACssB,GAAA,EAAW,IAClBxuB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASyqB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrBpH,OACE,SAACriB,EAAA,EAAU,CAACD,SAAS,UAAUE,WAAW,OAAM,SAAC,WAInDqJ,MAAM,gBACNlI,MAAM,SAACusB,GAAA,EAAY,IACnBzuB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASyqB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrBpH,OACE,SAACriB,EAAA,EAAU,CAACD,SAAS,UAAUE,WAAW,OAAM,SAAC,UAInDqJ,MAAM,QACNlI,MACE,SAACwsB,GAAA,EAAU,CACT1uB,GAAI,CACFqC,KAAK,QAAD,OAAUpC,EAAMoK,EAAC,aAAKpK,EAAMqK,EAAC,aAAKrK,EAAMsK,EAAC,aAAKtK,EAAM8H,EAAC,KACzD7H,aAAc,SAIpBF,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASyqB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrBpH,MAAM,OACN/Y,MAAM,OACNlI,MAAM,SAACysB,GAAA,EAAS,IAChB3uB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAASyqB,QAAS,eAInD,SAAC1G,GAAA,EAAS,CACRnjB,SAAS,OACTb,GAAI,CACF0K,SAAU,WACV2B,IAAK,EACLgB,MAAO,EACPhL,KAAM,QACNlC,gBAAiB,OACjBD,aAAc,MACdE,QAAS,OAEXV,QAAS2uB,OAGX,IACN,CCpGe,SAASO,GAAa,GAA+D,IAA7D9U,EAAI,EAAJA,KAAM1P,EAAK,EAALA,MAAOikB,EAAkB,EAAlBA,mBAAoBQ,EAAY,EAAZA,aAAcC,EAAS,EAATA,UACpF,OAAOhV,GACL,UAAClN,EAAA,EAAG,CAAC5M,GAAI,CAAE0K,SAAU,YAAa,WAChC,UAACujB,GAAA,EAAgB,CACfC,YAAU,EACV9jB,MAAOA,EACPpK,GAAI,CACFe,WAAY,OACZZ,iBAAiBiM,EAAAA,EAAAA,IAAM,OAAQ,IAC/BmiB,UAAW,iBACX,iBAAkB,CAAEtuB,MAAO,UAC3B,WAEF,SAAC6tB,GAAI,CAAC3K,MAAM,SAASjhB,MAAM,SAACgL,EAAA,EAAU,IAAK3M,aAAcsuB,KACzD,SAACf,GAAI,CAAC3K,MAAM,MAAMjhB,MAAM,SAACqrB,GAAA,EAAqB,IAAKhtB,aAAcuuB,QAEnE,SAAC9K,GAAA,EAAS,CACRnjB,SAAS,OACTb,GAAI,CACF0K,SAAU,WACV2B,IAAK,EACLgB,MAAO,EACPhL,KAAM,QACNlC,gBAAiB,OACjBD,aAAc,MACdE,QAAS,OAEXV,QAAS2uB,OAGX,IACN,CC7Be,SAASU,GAAe,GAcnC,IAbFC,EAAW,EAAXA,YACAnO,EAAW,EAAXA,YACAF,EAAc,EAAdA,eACAwL,EAAW,EAAXA,YACAN,EAAQ,EAARA,SACA4B,EAAc,EAAdA,eACAC,EAAa,EAAbA,cACAC,EAAY,EAAZA,aACAC,EAAW,EAAXA,YACAjV,EAAW,EAAXA,YACAsW,EAAiB,EAAjBA,kBACApW,EAAgB,EAAhBA,iBACAqW,EAAsB,EAAtBA,uBAEQxwB,EAAkDswB,EAAlDtwB,QAAS0a,EAAyC4V,EAAzC5V,iBAAkBX,EAAuBuW,EAAvBvW,mBAC3B2C,EAAqCyF,EAArCzF,UAAWN,EAA0B+F,EAA1B/F,SAAUH,EAAgBkG,EAAhBlG,YACrBrE,EAAmCqK,EAAnCrK,UAAW8B,EAAwBuI,EAAxBvI,oBAEnB,GAAgC3C,EAAAA,EAAAA,WAAS,GAAK,eAAvC0Z,EAAQ,KAAEC,EAAW,KAC5B,GAA0B3Z,EAAAA,EAAAA,UAAS,IAAG,eAA/BrL,EAAK,KAAEyY,EAAQ,KACtB,GAAgCpN,EAAAA,EAAAA,WAAS,GAAM,eAAxC4Z,EAAQ,KAAEC,EAAW,KAC5B,GAAkC7Z,EAAAA,EAAAA,WAAS,GAAM,eAA1C+W,EAAS,KAAEC,EAAY,KAC9B,GAAkChX,EAAAA,EAAAA,WAAS,GAAM,eAA1C8Z,EAAS,KAAEC,EAAY,KAC9B,GAAoC/Z,EAAAA,EAAAA,UAAS,IAAG,eAAzCga,EAAU,KAAEC,EAAa,KAC1BhD,GAAUtW,EAAAA,EAAAA,QAAO,OAEvB6B,EAAAA,EAAAA,YAAU,WACR,SAAS2U,EAAmB7lB,GACtB2lB,EAAQnV,UAAYmV,EAAQnV,QAAQsV,SAAS9lB,EAAMlC,SACrDoqB,EAAkB,KAEtB,CAGA,OADA/vB,SAASgZ,iBAAiB,YAAa0U,GAChC,WAEL1tB,SAASiZ,oBAAoB,YAAayU,EAC5C,CACF,GAAG,CAACF,IAEJ,IAQMiD,EAAyB,WAC7BL,GAAY,GACZL,EAAkB,MAClBC,EAAuB,IACvBE,GAAY,GACZvM,EAAS,GACX,GAeA5K,EAAAA,EAAAA,YAAU,WACJoX,GAAiC,YAArBxW,GACdoW,EAAkBxB,EAEtB,GAAG,CAAC/uB,EAAQ0B,QAASivB,KAErBpX,EAAAA,EAAAA,YAAU,WACJoX,GAAiC,kBAArBxW,GACdoW,EAAkBvB,EAEtB,GAAG,CAAChvB,EAAQwB,aAAcmvB,KAE1BpX,EAAAA,EAAAA,YAAU,WACJoX,GAAiC,UAArBxW,GAAkCJ,GAChDwW,EAAkBtB,EAEtB,GAAG,CAACjvB,EAAQuB,MAAOovB,EAAU5W,KAE7BR,EAAAA,EAAAA,YAAU,WACJoX,GAAiC,SAArBxW,GACdoW,EAAkBrB,EAEtB,GAAG,CAAClvB,EAAQuD,KAAMotB,EAAU3wB,EAAQiU,UA0CpC,OACE,UAAC8U,GAAA,EAAK,CACJC,IAAKpR,EACLtW,GAAI,CACF0K,SAAU,QACV2B,IAAKlI,KAAK2O,IAAIqE,OAAOE,YAAaF,OAAOQ,OAAOE,aAChD1X,gBAAiB,QACjBD,aAAc,EACd6B,MAAOoC,KAAK2O,IAAIqE,OAAOC,WAAYD,OAAOQ,OAAOC,YACjDnV,UAAW,uBAEbklB,UAAW,EAAE,WAEb,SAAC+D,GAAkB,CACjB5R,KAAM0S,EACNb,SA1BoB,WACxBQ,IACAM,GAAa,GACb5J,EAAS,GACX,EAuBM+I,SArBoB,WACxBa,GAAa,GACb5J,EAAS,GACX,EAmBMgJ,SAAUA,IAEK,OAAhBlT,GACC,SAAC/L,EAAA,EAAG,CACF8a,IAAKgF,EACL1sB,GAAI,CACFG,iBAAiBiM,EAAAA,EAAAA,IAAM,OAAQ,KAC/B2Y,EAAG,GACH,SAEDpM,IAED,MACJ,SAACiW,GAAY,CACX9U,KAAMyV,EACNnlB,MAAOqlB,EACPZ,aAAc/T,EACdgU,UAlDiB,WACrBnU,IACAvC,GACF,EAgDMiW,mBAhI0B,WAC9BmB,GAAa,GACbE,EAAc,IACdN,GAAY,GACZzU,IACAkI,EAAS,GACX,KA4HI,SAACuL,GAAW,CACVnuB,MAAOvB,EAAQuB,MACf4Y,iBAAkBA,EAClBiB,KAAMuV,EACNhB,mBAAoBsB,EACpBrB,uBAvHyB,SAACzoB,EAAG+pB,GACjCV,EAAuBU,GACZ,YAAPA,EACFX,EAAkBxB,GACF,kBAAPmC,EACTX,EAAkBvB,GACF,UAAPkC,EACTxW,IACgB,SAAPwW,GACTX,EAAkBrB,EAEtB,IA8GKuB,GACC,SAAChB,GAAY,CAAC/jB,MAAOA,EAAO7J,aA/Eb,SAACwG,EAAOukB,GAC3B3Q,IANA+U,EAAc,IACdF,GAAa,GACbJ,GAAY,GAMZO,IACA9M,EAASyI,GACQ,cAAbA,EACFlQ,IACsB,UAAbkQ,GACT8D,GAAY,GACZI,GAAa,IACS,SAAblE,GACT8D,GAAY,GACZE,GAAY,IACU,UAAbhE,GACTmB,GAAa,EAEjB,EA+D8DZ,SAAUA,IAChE,OAGV,CC3Le,SAASgE,GAAY,GAAgC,IAA9BrvB,EAAI,EAAJA,KAAMD,EAAY,EAAZA,aAAcqiB,EAAK,EAALA,MACxD,OACE,UAACzW,EAAA,EAAK,CAACwY,UAAU,MAAM3E,WAAW,SAASC,eAAe,SAAQ,WAChE,UAACnf,EAAA,EAAU,CACTd,GAAI,CACFC,MAAO,aACPY,SAAU,UACVE,WAAY,QACZ,UACH,QACO,QAER,SAAC+hB,GAAA,EAAW,CACVhjB,QAAQ,WACRwG,KAAK,QACLggB,OAAO,OACPwJ,aAAW,EACX9vB,GAAI,CAAEggB,WAAY,UAAW,UAE7B,SAACgD,GAAA,EAAM,CACLqD,UAAU,cACVxmB,GAAG,8BACHuK,MAAO5J,EACPI,SAAUL,EACV4iB,MAAM,cACN4M,kBAAgB,EAChB3M,WAAY,CACVpjB,GAAI,CACF+kB,EAAG,EACHhkB,WAAY,OACZF,SAAU,UACVZ,MAAO,eACP+vB,GAAI,EACJC,SAAU,OACVjQ,WAAY,MACZle,QAAS,OACTouB,UAAW,SAEb,SAEDpb,OAAOC,KAAK6N,GAAOpb,KAAI,SAACwW,GACvB,OAA2B,IAAvB4E,EAAM5E,GAAKlc,SAEX,UAACwhB,GAAA,EAAQ,CACP6M,SAAO,EAEP/lB,MAAO4T,EACPhe,GAAI,CACFggB,WAAY,SACZK,GAAI,EACJ6P,UAAW,OACXrvB,SAAU,UACVE,WAAY,OACZd,MAAO,QACP,UAED2iB,EAAM5E,GAAK9b,KACX0gB,EAAM5E,GAAK/b,OAZP+b,GAgBJ,IACT,UAKV,CCtEe,SAASoS,GAAkB,GAAY,IAAVC,EAAK,EAALA,MAC1C,OACE,UAAClkB,EAAA,EAAK,CAACwY,UAAU,MAAM3E,WAAW,SAASC,eAAe,SAAQ,WAChE,SAACnf,EAAA,EAAU,CACTd,GAAI,CACFC,MAAO,aACPY,SAAU,UACVE,WAAY,OACZsf,GAAI,GACJ,SACH,aAGD,SAACvf,EAAA,EAAU,CACTd,GAAI,CACFC,MAAO,eACPY,SAAU,UACVE,WAAY,OACZgkB,EAAG,GACH,SAEDsL,MAIT,CCxBe,SAASC,GAAgB,GAOpC,IANF/Z,EAAc,EAAdA,eACAT,EAAW,EAAXA,YACA/T,EAAK,EAALA,MACA6gB,EAAK,EAALA,MACA2N,EAAgB,EAAhBA,iBACA5f,EAAU,EAAVA,WAOA,OACE,UAACxE,EAAA,EAAK,CACJub,IAAKnR,EACLoO,UAAU,MACV3E,WAAW,SACXC,eAAe,eACfjgB,GAAI,CACF+B,MAAAA,EACAwG,UAAW,SACX8X,GAAI,GACJ,WAEF,SAACwP,GAAW,CAACrvB,KAAMsV,EAAa8M,MAAOA,EAAOriB,aAjB7B,SAACwG,GACpB,IAAMuY,EAAKvY,EAAMlC,OAAOuF,MACxBmmB,EAAiBjR,EACnB,KAeI,SAAC8Q,GAAiB,CAACC,MAAO1f,MAGhC,CHkKAoe,GAAe1uB,aAAe,CAC5BsY,YAAa,M,gBI/LA,SAAS6X,GAAe,GAAmC,IAAjCpwB,EAAO,EAAPA,QAAS8Y,EAAmB,EAAnBA,oBAChD,OACE,UAAC/M,EAAA,EAAK,CACJwY,UAAU,SACV1E,eAAe,SACfD,WAAW,QACXhgB,GAAI,CAAEG,gBAAiB,eAAgB,WAEvC,SAACW,EAAA,EAAU,CACTd,GAAI,CACFe,WAAY,OACZd,MAAO,OACPY,SAAU,UACV4vB,aAAc,cACd,SACH,aAGD,SAACC,GAAA,GAAM,CACL,aAAW,UACXxN,aAAc,EACd9Y,MAAOhK,EACPuwB,kBAAkB,OAClBC,KAAM,GACN9d,IAAK,EACLkT,IAAK,GACLplB,SAAUsY,EACVlZ,GAAI,CAAEC,MAAO,aAIrB,CC/Be,SAAS4wB,GAAc,GAAiC,IAA/BrhB,EAAM,EAANA,OAAQ2J,EAAkB,EAAlBA,mBAC9C,OACE,UAAChN,EAAA,EAAK,CACJwY,UAAU,SACV1E,eAAe,SACfD,WAAW,QACXhgB,GAAI,CAAEG,gBAAiB,eAAgB,WAEvC,SAACW,EAAA,EAAU,CACTd,GAAI,CACFe,WAAY,OACZd,MAAO,OACPY,SAAU,WACV,SACH,mBAGD,SAAC6vB,GAAA,GAAM,CACL,aAAW,gBACXxN,aAAc,EACd9Y,MAAOoF,EACPmhB,kBAAkB,OAClBC,KAAM,EACN9d,IAAK,EACLkT,IAAK,GACLplB,SAAUuY,EACVnZ,GAAI,CAAEC,MAAO,aAIrB,C,wCCvBe,SAAS6wB,GAAY,GAQhC,IAPF7uB,EAAI,EAAJA,KACA8W,EAAgB,EAAhBA,iBACApG,EAAO,EAAPA,QACA+G,EAAoB,EAApBA,qBACAC,EAAgB,EAAhBA,iBACAoX,EAAS,EAATA,UACAC,EAAe,EAAfA,gBAEMC,EAAalL,GAAAA,GACT,CACN9jB,KAAM8jB,GAAAA,KAEHC,IACCtf,EAAAA,sBAAgC,yBAAD,OACNA,EAAAA,0BAG9Buf,WAEGC,EAAO,yCAAG,yGACU3f,EAAAA,EAAAA,aAAmB,OAAQtE,EAAM+uB,EAAiBC,GAAY,KAAD,EAAtE,OAATC,EAAS,yBACRA,GAAS,2CACjB,kBAHY,mCAab,OAFAjZ,EAAAA,EAAAA,YAAU,kBAAMiO,GAAS,GAAE,CAACjkB,KAG1B,UAACkK,EAAA,EAAK,CACJnM,GAAI,CACFG,gBAAiB,eACjB,WAEF,UAACgM,EAAA,EAAK,CAACwY,UAAU,MAAM3E,WAAW,SAASC,eAAe,gBAAgB6E,QAAS,EAAE,WACnF,SAAChkB,EAAA,EAAU,CAACd,GAAI,CAAEe,WAAY,OAAQd,MAAO,OAAQY,SAAU,WAAY,SAAC,kBAG5E,UAACswB,GAAA,EAAS,CAACC,KAAG,aACZ,SAACC,GAAA,EAAgB,CACfC,mBAAiB,EACjBC,SACE,SAACC,GAAA,EAAQ,CACPlrB,KAAK,QACLmrB,SAAqB,IAAZ9e,EACT/R,SAAU,kBAAM8Y,GAAqB,EAAM,EAC3C1Z,GAAI,CAAEC,MAAO,QAAS,gBAAiB,CAAEA,MAAO,YAGpDkjB,OACE,SAACriB,EAAA,EAAU,CAACD,SAAS,SAASE,WAAW,OAAM,SAAC,WAIlDf,GAAI,CAAEC,MAAO,OAAQc,WAAY,WAEnC,SAACswB,GAAA,EAAgB,CACfC,mBAAiB,EACjBC,SACE,SAACC,GAAA,EAAQ,CACPlrB,KAAK,QACLmrB,SAAqB,IAAZ9e,EACT/R,SAAU,kBAAM8Y,GAAqB,EAAK,EAC1C1Z,GAAI,CAAEC,MAAO,OAAQ,gBAAiB,CAAEA,MAAO,YAGnDkjB,OACE,SAACriB,EAAA,EAAU,CAACD,SAAS,SAASE,WAAW,OAAM,SAAC,QAIlDf,GAAI,CAAEC,MAAO,OAAQc,WAAY,OAAQF,SAAU,mBAIzD,SAAC8iB,GAAA,EAAS,CACR7jB,QAAQ,WACRqjB,MAAM,GACND,aAAcjhB,EACdwkB,UA3DgB,SAAC5gB,GACH,KAAdA,EAAE6gB,UAAiC,IAAf7gB,EAAE8gB,UACxBhN,EAAiB9T,EAErB,EAwDMS,KAAK,QACLtG,GAAI,CAAE+B,MAAO,OAAQ6hB,GAAI,GACzBhjB,SAAUmY,EACV8K,WAAY,CAAE7jB,GAAI,CAAEG,iBAAiBiM,EAAAA,EAAAA,IAAM,OAAQ,MACnD0X,YAAY,SAAChjB,EAAA,EAAU,CAACd,GAAI,CAAEa,SAAU,WAAY,SAAEkwB,IACtDnzB,QAASmzB,MAIjB,C,gBCnGe,SAASW,GAAa,GAMjC,IALFzxB,EAAK,EAALA,MACAwY,EAAkB,EAAlBA,mBACAkZ,EAAW,EAAXA,YACAjS,EAAW,EAAXA,YACAnf,EAAY,EAAZA,aAEA,OACE,UAAC4L,EAAA,EAAK,CACJwY,UAAU,MACV3E,WAAW,SACXC,eAAe,gBACf6E,QAAS,EACT9kB,GAAI,CAAEkrB,GAAI,GAAI,WAEd,SAACpqB,EAAA,EAAU,CAACd,GAAI,CAAEe,WAAY,OAAQd,MAAO,OAAQY,SAAU,WAAY,SAAC,sBAG5E,SAAC+L,EAAA,EAAG,CACF7M,UAAU,MACVC,GAAI,CACFI,QAAS,MACT+C,WAAY,OACZjD,aAAc,MACd2tB,UAAW,2BACX/rB,QAAS,eACTklB,OAAQ,WAEVtnB,QAASiyB,EAAY,UAErB,SAAC/kB,EAAA,EAAG,CACF7M,UAAU,MACVC,GAAI,CACF+B,MAAO,OACPC,OAAQ,OACR9B,aAAc,OACdiD,WAAW,QAAD,OAAUlD,EAAMoK,EAAC,aAAKpK,EAAMqK,EAAC,aAAKrK,EAAMsK,EAAC,aAAKtK,EAAM8H,EAAC,WAIrE,SAAC6pB,GAAW,CACV9X,KAAMrB,EACNxY,MAAOA,EACPyf,YAAaA,EACbnf,aAAcA,MAItB,CAeO,SAASqxB,GAAY,GAA6C,IAA3C9X,EAAI,EAAJA,KAAM7Z,EAAK,EAALA,MAAOyf,EAAW,EAAXA,YAAanf,EAAY,EAAZA,aACtD,OAAOuZ,GACL,+BACE,UAAClN,EAAA,EAAG,CACF7M,UAAU,MACVC,GAAI,CACF0K,SAAU,WACVmnB,OAAQ,EACRC,OAAQ,IACR,WAEF,SAAC9kB,EAAA,EAAU,CACThN,GAAI,CACF0K,SAAU,WACV2B,IAAK,EACLgB,MAAO,EACPwkB,OAAQ,EACR1xB,gBAAiB,cACjB4kB,EAAG,EACHtiB,UAAW,sBACXwhB,OAAQ,mBAEVvkB,QAASggB,EAAY,UAErB,SAACsE,GAAA,EAAS,OAEZ,SAAC,MAAY,CAAC/jB,MAAOA,EAAOW,SAAUL,SAGxC,IACN,CC3Fe,SAASwxB,GAAa,GAAuC,IAArCjY,EAAI,EAAJA,KAAMkY,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAAUtP,EAAO,EAAPA,QAC9D,OACE,UAAChD,EAAA,EAAM,CAAC7F,KAAMA,EAAK,WACH,IAAbmY,GACC,SAACpS,GAAA,EAAW,CAAC7f,GAAI,CAAEuI,UAAW,SAAUtI,MAAO,OAAQc,WAAY,QAAS,SAAC,SAG3E,MACJ,SAAC+e,GAAA,EAAa,CAACC,UAAuB,IAAbkS,EAAkB,UACzC,UAAC9lB,EAAA,EAAK,CAACwY,UAAU,MAAM1E,eAAe,gBAAgBD,WAAW,SAAS8E,QAAS,EAAE,WACrE,IAAbmN,GAAoB,SAAC9N,GAAA,EAAgB,IAAM,MAC5C,SAACrjB,EAAA,EAAU,CAAChB,QAAQ,KAAI,SAAEkyB,UAGhB,IAAbC,GACC,SAACxR,GAAA,EAAa,WACZ,SAAC7gB,EAAA,EAAM,CAACE,QAAQ,OAAOJ,QAASijB,EAAQ,SAAC,YAIzC,OAGV,C,gBCFe,SAASuP,GAAY,GAAyC,IAAvC9zB,EAAU,EAAVA,WAAY+zB,EAAY,EAAZA,aAActG,EAAQ,EAARA,SACtDjqB,EAAe8E,EAAAA,WACjB0rB,GAAWC,EAAAA,EAAAA,MACjB,GAA8B5c,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAnCC,EAAO,KAAEC,EAAU,KAC1B,GAA4BF,EAAAA,EAAAA,UAAS,YAAW,eAAzCxW,EAAM,KAAEqzB,EAAS,KACxB,GAAoC7c,EAAAA,EAAAA,WAAS,GAAM,eAA5C8c,EAAU,KAAEC,EAAa,KAChC,GAA0C/c,EAAAA,EAAAA,UAAS,IAAG,eAA/Cgd,EAAa,KAAEC,EAAgB,KACtC,GAA4Cjd,EAAAA,EAAAA,WAAS,GAAM,eAApDkd,EAAc,KAAEC,EAAiB,KACxC,GAAkCnd,EAAAA,EAAAA,UAAS,IAAG,eAAvCiO,EAAS,KAAEmP,EAAY,KAC9B,GAAkCpd,EAAAA,EAAAA,UAAS,IAAG,eAAvCsb,EAAS,KAAE+B,EAAY,KAE9B,EAmBIvd,EAAQG,GAAQ,gBAlBlBI,EAAW,KAEXF,EAAW,KAGX+K,EAAc,KACdqO,EAAW,KACXnO,EAAW,KACXD,EAAU,KACVmS,EAAS,KACT5G,EAAW,MACXrL,EAAe,MACftS,GAAiB,MACjBpR,GAAU,MACVygB,GAAU,MACVhgB,GAAW,MACXm1B,GAAuB,MACvB7L,GAAgB,MAGZ8L,GAAmB,SAACjB,EAASC,GACjB,KAAZD,IACFU,EAAiBV,GACjBY,EAAkBX,GAClBO,GAAc,GAElB,EAEMU,GAAoB,WACc,KAAlCtS,EAAWxE,qBACb+P,IACAvL,EAAWvE,sBAAsB,KAEG,KAAlCuE,EAAW1E,oBACb0E,EAAWzE,sBAAsB,IAEnCyW,GAAkB,GAClBF,EAAiB,IACjBF,GAAc,EAChB,GAEAva,EAAAA,EAAAA,YAAU,kBAAM2I,EAAW5Z,iBAAiB4Z,EAAW/E,SAAS,GAAE,CAAC+E,EAAW/E,YAE9E5D,EAAAA,EAAAA,YAAU,WAC8B,KAAlC2I,EAAWxE,oBACb6W,GAAiBrS,EAAWxE,oBAAoB,GAEZ,KAAlCwE,EAAWxE,oBACb6W,GAAiBrS,EAAW1E,oBAAoB,EAEpD,GAAG,CAAC0E,EAAWxE,mBAAoBwE,EAAW1E,qBAE1C0E,EAAW/E,WAAanV,EAAAA,YAAmD,IAA5Bma,EAAYtG,cAC7DsG,EAAYrG,gBAAe,GAC3ByY,GAAiB,gBAAD,OAAiBvsB,EAAAA,UAAmB,wBAAuB,IAG7E,IAAM+Y,GAAS,CACbiE,EACAqN,EACAnQ,EAAW1E,mBACX0E,EAAWxE,oBACXpL,QAAO,SAACmiB,GAAE,MAAY,KAAPA,CAAS,IAGxBz0B,GAcEswB,EAdFtwB,QACAwa,GAaE8V,EAbF9V,oBACAC,GAYE6V,EAZF7V,mBACAG,GAWE0V,EAXF1V,iBACAF,GAUE4V,EAVF5V,iBACAG,GASEyV,EATFzV,kBACAR,GAQEiW,EARFjW,iBACAW,GAOEsV,EAPFtV,qBACAjB,GAMEuW,EANFvW,mBACAE,GAKEqW,EALFrW,YACAC,GAIEoW,EAJFpW,eACAC,GAGEmW,EAHFnW,iBACAC,GAEEkW,EAFFlW,oBACAa,GACEqV,EADFrV,kBAGF1B,EAAAA,EAAAA,YAAS,uBAAC,4FAC4B,IAAhCnD,OAAOC,KAAKW,GAASrO,OAAY,mBAClB,aAAbwkB,EAAuB,gCACIztB,EAC3BwiB,EAAW9E,cACX8E,EAAW/D,wBACX,KAAD,EAHKvf,EAAc,OAIpBqY,EAAWrY,GAAgB,OAE7Bg1B,EAAU,aAAa,2CAExB,KAEHra,EAAAA,EAAAA,YAAU,WACR,IAAIgG,EAAKhf,EACE,aAAPgf,GAAkC,QAAb4N,IAAoB5N,EAAK,SACtB,IAAxB2C,EAAW/E,UAAyB,UAAPoC,IAC/BA,EAAK,SAEqB,IAAxB2C,EAAW/E,UAAkD,IAAhC/G,OAAOC,KAAKW,GAASrO,QAAuB,cAAP4W,IACpEA,EAAK,SAEH2C,EAAWnQ,OAAOpJ,OAAS,GAAKuZ,EAAWnQ,OAAOpJ,SAAWuZ,EAAW/E,WAC1EoC,EAAK,aAEH2C,EAAW7E,QAAU6E,EAAW/E,UAAY+E,EAAW/E,SAAW,IACpEoC,EAAK,SAGL2C,EAAW/E,UAAYnV,EAAAA,WACvBka,EAAWnQ,OAAOpJ,OAASuZ,EAAW/E,WAEtCoC,EAAK,WAE+B,KAAlC2C,EAAWxE,qBACb6B,EAAK,QACLgV,GAAiBrS,EAAWxE,oBAAoB,IAEZ,KAAlCwE,EAAW1E,qBAEX+B,EAD0B,IAAxB2C,EAAW/E,SACR,QAEA,QAEPoX,GAAiBrS,EAAW1E,oBAAoB,IAElDoW,EAAUrU,EACZ,GAAG,CAAC2C,IAEJ,IAAMwS,GAAQ,yCAAG,mFAGD,OAFdH,GAAiB,oBAAoB,GACrCtd,EAAW,CAAC,GACZwW,IAAc,SACRgG,IAAe,KAAD,EACpBG,EAAU,aACVY,KACiB,aAAbrH,IACFoH,GAAiB,+BAA+B,GAChDnR,YAAW,WACToR,KACAd,EAASiB,GAAAA,EAAAA,iBACX,GAAG,MACJ,2CACF,kBAda,mCAgBR9X,GAAU,yCAAG,WAAO5b,GAAI,sEACF,GAA1BkhB,EAAYvF,cACa,QAAbuQ,EAAkB,gCAASzuB,GAAWuC,GAAK,0DAAS9B,GAAY8B,GAAM,KAAD,sBAAxE,MAEPmiB,YAAW,WACQ,QAAb+J,GAAoBuH,KACxBvS,EAAY1G,cAAa,GACzBiY,EAASiB,GAAAA,EAAAA,iBACX,GAAG,KACJ,4CACF,gBAVe,sCAYV3K,IACJ,SAAClJ,GAAW,CAACC,OAAQA,GAAQC,YAAamB,EAAY1F,gBAAgB,UACpE,SAACuH,GAAc,CACb5I,KAAM+G,EAAY/G,KAClBpa,QAASmhB,EAAY7F,gBACrB2H,QAAS9B,EAAY1F,gBACrByH,MAAOhhB,EACPkU,YAAaA,MAKb6S,IACJ,SAACnJ,GAAW,CAACC,OAAQA,GAAQC,YAAamB,EAAYxF,YAAY,UAChE,SAACmI,GAAU,CACT5N,YAAaA,EACbkE,KAAM+G,EAAY7G,SAClBta,QAAS6b,GACToH,QAAS9B,EAAYxF,gBAKrBuN,IAAmB,SAAC5D,GAAgB,CAAClL,KAAM+G,EAAY3G,UAAWjb,OAAQ4e,KAE1EkD,IACJ,SAACL,GAAO,CACNC,eAAgBA,EAChBC,WAAYA,EACZC,YAAaA,EACbC,gBAAiBA,EACjBtS,kBAAmBA,GACnB9P,QAASswB,EAAYtwB,QACrBue,KAAM8V,EAAU9V,OAIdwQ,IACJ,SAAC+C,GAAc,CAACpwB,QAAS1B,GAAQ0B,QAAS8Y,oBAAqBA,KAG3DwU,IACJ,SAACmD,GAAa,CAACrhB,OAAQ9Q,GAAQwB,aAAciZ,mBAAoBA,KAG7DwU,IACJ,SAACiE,GAAW,CACV9X,KAAMrB,GACNxY,MAAOvB,GAAQuB,MACfM,aAAcgZ,GACdmG,YAAa,WACX9G,GAAe,MACfU,IACF,IAIEga,IACJ,SAAC5B,GAAY,CACXzxB,MAAOvB,GAAQuB,MACfwY,mBAAoBA,GACpBlY,aAAcgZ,GACdmG,YAAapG,GACbqY,YAAavY,KAIXwU,IACJ,SAACkD,GAAW,CACV7uB,KAAMvD,GAAQuD,KACd8W,iBAAkBA,GAClBpG,QAASjU,GAAQiU,QACjB+G,qBAAsBA,GACtBC,iBAAkBA,GAClBoX,UAAWA,EACXC,gBAAiB8B,IAIfS,IACJ,SAACxE,GAAc,CACbC,YAAaA,EACbnO,YAAaA,EACbF,eAAgBA,EAChBwL,YAAaiH,GACbvH,SAAUA,EACV4B,eAAgBA,GAChBC,cAAeA,GACfC,aAAcA,GACdC,YAAaA,GACbjV,YAAaA,GACbsW,kBAAmBrW,GACnBC,iBAAkBA,GAClBqW,uBAAwBpW,KAItB2P,IACJ,SAACvB,GAAM,CACL/Q,UAAWwK,EAAexK,UAC1BxW,KAAMiW,EACNuR,iBAAkBA,GAClBzD,UAAWA,EACX+B,gBAAiBoN,IAIfW,IACJ,SAACnG,GAAmB,CAClBvS,SAAU+F,EAAY/F,SACtBwS,MAAO3M,EAAevI,oBACtBuC,YAAakG,EAAYlG,cAIvB8Y,IACJ,SAACjG,GAAW,CACVC,eAAgBA,GAChBC,cAAeA,GACfC,aAAc2F,GACd1F,YAAaA,KAIX8F,IACJ,SAAC1H,GAAe,CACdnB,SAAUlK,EAAerK,UACzB8E,UAAWyF,EAAYzF,UACvB6Q,WAAYuH,GACZtH,SAAUuH,GACVtH,YAAaiH,GACbzY,YAAakG,EAAYlG,YACzBkR,SAAUA,IAIR3U,GAAWC,OAAOC,WAAaD,OAAOE,YACtCwR,GAAW3R,GAAWqc,GAAiBG,GAEvCrI,GAAM,yCAAG,4GAAYxK,EAAYtF,cAAY,6DAAvC,mCAENoY,GAAczc,IAClB,SAAC8W,GAAa,CACZ3X,WAAYsK,EAAetK,WAC3B+U,WAAYvK,EAAYjG,eACxByQ,OAAQA,MAGV,SAACF,GAAc,CACb9U,WAAYsK,EAAetK,WAC3B+U,WAAYvK,EAAYjG,eACxByQ,OAAQA,KAINvC,IACJ,SAACwH,GAAe,CACd/Z,eAAgBoK,EAAepK,eAC/BT,YAAaA,EACb/T,MAAO4e,EAAe5e,MACtB6gB,MAAOhhB,EACP2uB,iBAAkByC,GAClBriB,WAAYiQ,EAAW/E,WAI3B,OACE,UAACjP,EAAA,EAAG,CACF5M,GAAI,CACFG,gBAAiB,OACjB6B,OAAQmC,KAAK2O,IAAIqE,OAAOE,YAAaF,OAAOQ,OAAOE,aACnD+b,SAAU,UACV,WAEF,SAACvJ,GAAY,KACb,SAAC/B,GAAI,CACHxO,KAAM+G,EAAY/G,KAClBE,SAAU6G,EAAY7G,SACtBwO,eAAgB3H,EAAY3G,UAC5ByG,eAAgBA,EAChBC,WAAYA,EACZ6H,OAAQA,GACR5O,QAAS8Z,GACTjL,eAAgBA,GAChBC,WAAYA,GACZC,iBAAkBA,GAClB7H,QAASA,GACT8H,SAAUA,GACV5pB,OAAQA,EACR4sB,SAAUA,EACV/C,gBAAiBA,MAEnB,kBACEpB,IAAK/G,EAAenK,YACpBhW,KAAK,OACLC,QAAM,EACNC,UAAQ,EACRC,OAAO,UACPC,SAAUggB,EAAWrE,aAEtBsE,EAAYvP,UAAW,SAAC2X,GAAA,EAAO,CAAC9iB,MAAM,yBAA4B,MACnE,SAAC4rB,GAAY,CACXjY,KAAMyY,EACNP,QAASS,EACTR,SAAUU,EACVhQ,QAASuQ,OAIjB,CAEAhB,GAAY7xB,aAAe,CACzBjC,WAAY,WAAO,EACnB+zB,aAAc,WAAO,E","sources":["api/collage.jsx","api/helpers.js","components/OptionsButton.jsx","components/AddPhotos.jsx","static/config/collage.jsx","components/collage/helpers.js","components/collage/TextDisplay.jsx","components/collage/CollageImage.jsx","components/collage/DeleteImageButton.jsx","components/collage/node.jsx","components/collage/binaryTree.jsx","components/collage/treeUtils.js","components/collage/apiHelpers.js","hooks/collage/base.jsx","hooks/collage/dimensions.jsx","hooks/collage/options.jsx","hooks/collage/actions.jsx","hooks/collage/images.jsx","hooks/collage/tree.jsx","hocs/handle-error.jsx","components/collage/Collage.jsx","components/collage/DownloadDialog.jsx","components/collage/SaveDialog.jsx","components/collage/SaveStatusDialog.jsx","components/collage/Header.jsx","components/collage/EmptyCollage.jsx","components/collage/View.jsx","components/collage/intro.jsx","components/collage/DesktopActionItem.jsx","components/collage/DesktopDrawer.jsx","components/collage/ControlsDivider.jsx","components/collage/DesktopActions.jsx","components/collage/ClearCollageDialog.jsx","components/collage/DesktopControls.jsx","components/collage/DesktopImageOptions.jsx","components/collage/EditControl.jsx","components/collage/MobileActionItem.jsx","components/collage/MobileActions.jsx","components/collage/MainControls.jsx","components/collage/EditOptions.jsx","components/collage/ImageOptions.jsx","components/collage/MobileControls.jsx","components/collage/CollageType.jsx","components/collage/CollageImageCount.jsx","components/collage/CollageMetaInfo.jsx","components/collage/PaddingControl.jsx","components/collage/RadiusControl.jsx","components/collage/TextControl.jsx","components/collage/ColorControl.jsx","components/collage/CommonDialog.jsx","pages/collage/Base.jsx"],"sourcesContent":["import helpers from 'api/helpers';\n\nfunction newCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/new';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction saveCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/save';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\nasync function upload(url, body) {\n  try {\n    const params = { body, method: 'PUT' };\n    const resp = await fetch(url, params).then((response) => response);\n    return resp;\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction listCollages(nextToken) {\n  try {\n    const path = '/api/collage/list';\n    const params = { next_token: nextToken };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getThumbnail(collageId) {\n  try {\n    const path = '/api/collage/thumbnail';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getCollage(collageId) {\n  try {\n    const path = '/api/collage/get';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction deleteCollage(collageId) {\n  try {\n    const path = '/api/collage/delete';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.deleteMethod(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction checkOptimizeStatus(collageId) {\n  try {\n    const path = '/api/collage/resized-count';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\nexport default {\n  newCollage,\n  saveCollage,\n  upload,\n  listCollages,\n  getThumbnail,\n  getCollage,\n  deleteCollage,\n  checkOptimizeStatus,\n};\n","const get = async (url, path, params = {}) => {\n  let newUrl = `https://${url}${path}`;\n  const options = {\n    method: 'GET',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  newUrl += `?${new URLSearchParams(params).toString()}`;\n  const resp = await fetch(newUrl, options);\n  if (!resp.ok) {\n    if (resp.status === 401) {\n      document.cookie = 'userInfo=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return { status: 'unauthenticated' };\n    }\n    if (resp.status === 403) {\n      return { status: 'forbidden' };\n    }\n  }\n\n  return resp.json();\n};\n\nconst post = async (url, path, params, body) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'POST',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body,\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\n\nconst deleteMethod = async (url, path, params) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'DELETE',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\nexport default { get, post, deleteMethod };\n","import PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\n\nexport default function OptionsButton({ children, onClick, name }) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: 'muted.main',\n        borderRadius: 15,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: 'muted.main',\n          backgroundColor: 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  //  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport OptionsButton from 'components/OptionsButton';\nimport Typography from '@mui/material/Typography';\n\nexport default function AddPhotos({ handleChange }) {\n  return (\n    <OptionsButton name=\"add\">\n      <input type=\"file\" hidden multiple accept=\"image/*\" onChange={handleChange} />\n      <AddPhotoIcon sx={{ fontSize: '2rem' }} />\n      <Typography sx={{ fontWeight: 'bold' }}>Add Images</Typography>\n    </OptionsButton>\n  );\n}\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import FacebookIcon from '@mui/icons-material/Facebook';\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\nimport InstagramIcon from '@mui/icons-material/Instagram';\nimport DescriptionIcon from '@mui/icons-material/Description';\n\nconst paperSizes = {\n  A4: {\n    display: true,\n    width: 2480,\n    height: 3508,\n    text: 'A4 Potrait',\n    icon: <DescriptionIcon sx={{ mr: 1, fill: 'black' }} />,\n    downloadSizes: ['A4', 'A3'],\n  },\n  A3: {\n    display: false,\n    width: 3508,\n    height: 4961,\n    text: 'A3 Potrait',\n    icon: <DescriptionIcon sx={{ mr: 1, fill: 'black' }} />,\n  },\n  A4LandScape: {\n    display: true,\n    height: 2480,\n    width: 3508,\n    text: 'A4 LandScape',\n    icon: (\n      <DescriptionIcon\n        sx={{\n          mr: 1,\n          transform: 'rotate(90deg)',\n          fill: 'black',\n        }}\n      />\n    ),\n    downloadSizes: ['A4LandScape', 'A3LandScape'],\n  },\n  A3LandScape: {\n    display: false,\n    height: 3508,\n    width: 4961,\n    text: 'A3 LandScape',\n    icon: <DescriptionIcon sx={{ mr: 1, transform: 'rotate(90deg)', fill: 'black' }} />,\n  },\n  FBCoverDesktop: {\n    display: true,\n    height: 740,\n    width: 2000,\n    text: 'Cover Photo (Desktop)',\n    icon: <FacebookIcon sx={{ fill: '#3b5998', mr: 1 }} />,\n  },\n  FBCoverMobile: {\n    display: true,\n    height: 720,\n    width: 1280,\n    text: 'Cover Photo (Mobile)',\n    icon: <FacebookIcon sx={{ fill: '#3b5998', mr: 1 }} />,\n  },\n  FBPost: {\n    display: true,\n    height: 1260,\n    width: 2400,\n    text: 'Post',\n    icon: <FacebookIcon sx={{ fill: '#3b5998', mr: 1 }} />,\n  },\n  WhatsappStatus: {\n    display: true,\n    height: 1920,\n    width: 1080,\n    text: 'Status',\n    icon: (\n      <WhatsAppIcon\n        sx={{\n          backgroundColor: '#25D366',\n          fill: 'white',\n          mr: 1,\n        }}\n      />\n    ),\n  },\n  InstaStory: {\n    display: true,\n    height: 1920,\n    width: 1080,\n    text: 'Story',\n    icon: (\n      <InstagramIcon\n        sx={{\n          fill: 'white',\n          background:\n            'linear-gradient(45deg, #f09433 0%,#e6683c 25%,#dc2743 50%,#cc2366 75%,#bc1888 100%)',\n          mr: 1,\n        }}\n      />\n    ),\n  },\n  InstaPostSquare: {\n    display: true,\n    height: 1080,\n    width: 1080,\n    text: 'Post',\n    icon: (\n      <InstagramIcon\n        sx={{\n          fill: 'white',\n          background:\n            'linear-gradient(45deg, #f09433 0%,#e6683c 25%,#dc2743 50%,#cc2366 75%,#bc1888 100%)',\n          mr: 1,\n        }}\n      />\n    ),\n  },\n};\n\nexport default {\n  defaultCollageName: 'Untitled',\n  defaultCollageType: 'A4',\n  tolerance: 0.1,\n  resizeImageWidth: 1500,\n  fontSize: 20,\n  lineHeight: 25,\n  textPadding: 10 / 500,\n  thumbnailHeight: 500,\n  maxNameLength: 20,\n  maxColllageTextLength: 40,\n  minImages: 2,\n  maxImages: 15,\n  maxImageSize: 8,\n  paperSizes,\n};\n","import constants from 'static/config/collage';\nimport utils from 'utils';\n\nfunction resizeImageSlowly(image, origWidth, origHeight, reqWidth, reqHeight) {\n  const tempCanvas = document.createElement('canvas');\n  tempCanvas.width = origWidth;\n  tempCanvas.height = origHeight;\n  const ctx = tempCanvas.getContext('2d');\n  const aspectRatio = origWidth / origHeight;\n  let [width, height] = [origWidth, origHeight];\n  let newWidth;\n  let newHeight;\n  const scaleFactor = Math.floor(Math.log2(origWidth / reqWidth));\n  if (scaleFactor === 0) {\n    ctx.drawImage(image, 0, 0, width, height, 0, 0, reqWidth, reqHeight);\n  } else {\n    for (let i = 0; i < scaleFactor; i += 1) {\n      newWidth = width >> 1; // eslint-disable-line no-bitwise\n      newHeight = newWidth / aspectRatio; // eslint-disable-line no-bitwise\n      if (i === 0) {\n        ctx.drawImage(image, 0, 0, width, height, 0, 0, newWidth, newHeight);\n      } else {\n        ctx.drawImage(tempCanvas, 0, 0, width, height, 0, 0, newWidth, newHeight);\n      }\n      width = newWidth;\n      height = newHeight;\n    }\n\n    ctx.drawImage(tempCanvas, 0, 0, width, height, 0, 0, reqWidth, reqHeight);\n  }\n\n  const reqCanv = document.createElement('canvas');\n  reqCanv.width = reqWidth;\n  reqCanv.height = reqHeight;\n  const reqctx = reqCanv.getContext('2d');\n  reqctx.drawImage(tempCanvas, 0, 0, reqWidth, reqHeight, 0, 0, reqWidth, reqHeight);\n  return reqCanv;\n}\n\nfunction textCanvasDraw(\n  ctx,\n  textArray,\n  position,\n  scaleFactor,\n  canvasWidth,\n  canvasHeight,\n  textHeight\n) {\n  const { fontSize, textPadding } = constants;\n  ctx.font = `${scaleFactor * fontSize}px Arial`;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'top';\n  ctx.fillStyle = '#1c1c1cb3';\n  ctx.fillRect(0, position, canvasWidth, position + textHeight);\n  ctx.fillStyle = 'white';\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const chunk of textArray) {\n    const [textPart, , y] = chunk;\n    ctx.fillText(\n      textPart,\n      parseInt(canvasWidth / 2, 10),\n      parseInt(y + position + 2.5 * scaleFactor + textPadding * canvasHeight, 10)\n    );\n  }\n}\n\nfunction getClosest(arr, index1, index2, target) {\n  if (target - arr[index1] >= arr[index2] - target) return index2;\n  return index1;\n}\n\nfunction findClosest(arr, target) {\n  const n = arr.length;\n\n  if (target <= arr[0]) return 0;\n  if (target >= arr[n - 1]) return n - 1;\n\n  let start = 0;\n  let end = n;\n  let mid = 0;\n  while (start < end) {\n    mid = (start + end) / 2;\n\n    if (arr[mid] === target) return mid;\n\n    if (target < arr[mid]) {\n      if (mid > 0 && target > arr[mid - 1]) return getClosest(arr, mid - 1, mid, target);\n      end = mid;\n    } else {\n      if (mid < n - 1 && target < arr[mid + 1]) return getClosest(arr, mid, mid + 1, target);\n      start = mid + 1;\n    }\n  }\n\n  return mid;\n}\n\nfunction getCut() {\n  const cutArr = ['v', 'h'];\n  return cutArr[Math.round(Math.random())];\n}\n\nfunction findImgPair(arr, target) {\n  let start = 0;\n  let end = arr.length - 1;\n  let i = start;\n  let j = end;\n  let minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n  while (start <= end) {\n    if (arr[start] + arr[end] > target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        // update fetched pair and matching cost\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      end -= 1;\n    } else if (arr[start] + arr[end] <= target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      start += 1;\n    } else {\n      // best pair (m === 0) found\n      i = start;\n      j = end;\n      break;\n    }\n  }\n  const randomNumber = Math.round(Math.random());\n  if (randomNumber) return [i, j];\n  return [j, i];\n}\n\nfunction getAspectRatio(cut, ar1, ar2) {\n  if (cut === 'v') return ar1 + ar2;\n  return (ar1 * ar2) / (ar1 + ar2);\n}\n\nasync function optimizeImage(image, origWidth, origHeight, origSize, maxSize, fileType) {\n  const downScaleFactor = origSize / maxSize;\n  const [reqWidth, reqHeight] = [\n    origWidth / Math.sqrt(downScaleFactor),\n    origHeight / Math.sqrt(downScaleFactor),\n  ];\n  const resizedCanvas = resizeImageSlowly(image, origWidth, origHeight, reqWidth, reqHeight);\n  const optimizedFile = await new Promise((resolve) => resizedCanvas.toBlob(resolve, fileType));\n  const optimizedSRC = URL.createObjectURL(optimizedFile);\n  return [optimizedFile, optimizedSRC, reqWidth, reqHeight];\n}\n\nasync function imageOnLoad(e, image, file, detailsCallBack) {\n  const { naturalWidth, naturalHeight, src } = e.target;\n  const title = `${Date.now()}-${file.name}`;\n  const aspectRatio = naturalWidth / naturalHeight;\n  const size = utils.getSize(file);\n  let imageDetail = {\n    title,\n    src,\n    naturalHeight,\n    naturalWidth,\n    aspectRatio,\n    targetAspectRatio: aspectRatio,\n    type: file.type,\n    file,\n    size: utils.getSize(file),\n  };\n  if (size > constants.maxImageSize) {\n    // eslint-disable-next-line\n    console.time('Loading image optimize');\n    const [newFile, newSRC, newWidth, newHeight] = await optimizeImage(\n      image,\n      naturalWidth,\n      naturalHeight,\n      size,\n      constants.maxImageSize,\n      file.type\n    );\n    imageDetail = {\n      ...imageDetail,\n      src: newSRC,\n      naturalHeight: newHeight,\n      naturalWidth: newWidth,\n      file: newFile,\n      size: utils.getSize(newFile),\n    };\n    // eslint-disable-next-line\n    console.timeEnd('Loading image optimize');\n  }\n  detailsCallBack(imageDetail);\n}\n\nasync function handleImageLoad(event, handleImageCount, handleNewImageCount, handleImageData) {\n  if (event.target.files) {\n    handleImageCount((cnt) => cnt + event.target.files.length);\n    handleNewImageCount(event.target.files.length);\n    const files = Array.from(event.target.files);\n    files.map(async (file) => {\n      const image = new Image();\n      image.onload = (e) => imageOnLoad(e, image, file, handleImageData);\n      image.src = URL.createObjectURL(file);\n    });\n    files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n  }\n}\n\nfunction getCollageDimension(maxW, maxH, a) {\n  const origAR = maxW / maxH;\n  if (origAR < a) return [maxW, maxW / a];\n  if (origAR > a) return [maxH * a, maxH];\n  return [maxW, maxH];\n}\n\nfunction wrapText(text, x, y, maxWidth, fontSize, lineHeight) {\n  // First, start by splitting all of our text into words,\n  // but splitting it into an array split by spaces\n  if (text.length === 0) return [];\n  const paddingX = 1; // 8px on both sided\n  const textCanvas = document.createElement('canvas');\n  textCanvas.width = maxWidth - 2 * paddingX * 8;\n  textCanvas.height = 1000;\n  const ctx = textCanvas.getContext('2d');\n  ctx.font = `${fontSize}px Arial`;\n  ctx.textAlign = 'center';\n  const tempX = x;\n  let tempY = y;\n  const words = text.split(' ');\n  let line = ''; // This will store the text of the current line\n  let testLine = ''; // This will store the text when we add a word, to test if it's too long\n  const lineArray = []; // This is an array of lines, which the function will return\n\n  // Lets iterate over each word\n  for (let n = 0; n < words.length; n += 1) {\n    // Create a test line, and measure it..\n    testLine += `${words[n]} `;\n    const metrics = ctx.measureText(testLine);\n    const testWidth = metrics.width;\n    // If the width of this test line is more than the max width\n    if (testWidth > textCanvas.width && n > 0) {\n      // Then the line is finished, push the current line into \"lineArray\"\n      lineArray.push([line, tempX, tempY]);\n      // Increase the line height, so a new line is started\n      tempY += lineHeight;\n      // Update line and test line to use this word as the first word on the next line\n      line = `${words[n]} `;\n      testLine = `${words[n]} `;\n    } else {\n      // If the test line is still less than the max width, then add the word to the current line\n      line += `${words[n]} `;\n    }\n    // If we never reach the full max width, then there is only one line..\n    // so push it into the lineArray so we return something\n    if (n === words.length - 1) {\n      lineArray.push([line, tempX, tempY]);\n    }\n  }\n  // Return the line array\n  return lineArray;\n}\n\nfunction getTextHeight(text, x, y, maxWidth, fontSize, lineHeight, scaleFactor) {\n  if (text.length === 0) {\n    return 0;\n  }\n  const { textPadding } = constants;\n  const lineArray = wrapText(\n    text,\n    x,\n    y,\n    maxWidth,\n    fontSize * scaleFactor,\n    lineHeight * scaleFactor\n  );\n  return (lineArray.length * lineHeight + 2 * textPadding) * scaleFactor;\n}\n\nfunction getImageDimensions(\n  paperWidth,\n  paperHeight,\n  text,\n  x,\n  y,\n  fontSize,\n  lineHeight,\n  scaleFactor,\n  aspectRatio\n) {\n  // prettier-ignore\n  const textHeight = getTextHeight(text, x, y, paperWidth, fontSize, lineHeight, scaleFactor);\n  return getCollageDimension(paperWidth, paperHeight - textHeight, aspectRatio);\n}\n\nconst convertToRGBA = (value) => `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nfunction optimizeDimensions(maxPrintWidth, maxPrintHeight, problematicNodes) {\n  const ar = maxPrintWidth / maxPrintHeight;\n  const optimumTreeSizes = problematicNodes.map((pn) => {\n    const newRootWidth = (maxPrintWidth * pn.value.naturalWidth) / pn.value.width;\n    const newRootHeight = newRootWidth / ar;\n    // node with highest score needs smallest tree. smallest tree will satisfy all constraints\n    const score = maxPrintWidth - newRootWidth + maxPrintHeight - newRootHeight;\n    return [score, [newRootWidth, newRootHeight]];\n  });\n  optimumTreeSizes.sort((a, b) => b[0] - a[0]);\n  return optimumTreeSizes[0][1];\n}\n\nexport default {\n  getCut,\n  findClosest,\n  findImgPair,\n  getAspectRatio,\n  handleImageLoad,\n  wrapText,\n  convertToRGBA,\n  getCollageDimension,\n  textCanvasDraw,\n  getTextHeight,\n  getImageDimensions,\n  optimizeDimensions,\n};\n","import Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { alpha } from '@mui/material/styles';\nimport constants from 'static/config/collage';\n\nexport default function TextDisplay(textArray, position, textHeight, height) {\n  const { fontSize, lineHeight, textPadding } = constants;\n  return (\n    <>\n      <Stack\n        sx={{\n          height: textHeight,\n          backgroundColor: alpha('#1c1c1c', 0.7),\n          position: 'absolute',\n          top: position,\n          width: '100%',\n        }}\n      />\n      {\n        // eslint-disable-next-line react/destructuring-assignment\n        textArray.map((chunk) => (\n          <Typography\n            key={chunk[2]}\n            sx={{\n              width: '100%',\n              position: 'absolute',\n              top: position + chunk[2] + textPadding * height,\n              paddingX: 1,\n              color: 'button.main',\n              textAlign: 'center',\n              fontFamily: 'Arial',\n              fontSize: `${fontSize}px`,\n              lineHeight: `${lineHeight}px`,\n              letterSpacing: 'normal',\n            }}\n          >\n            {chunk[0]}\n          </Typography>\n        ))\n      }\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\n\nexport default function CollageImage({\n  title,\n  width,\n  onLoad,\n  padding,\n  borderRadius,\n  left,\n  top,\n  src,\n}) {\n  return (\n    <Box\n      key={title}\n      component=\"img\"\n      title={title}\n      alt={title}\n      width={width}\n      onLoad={onLoad}\n      src={src}\n      sx={{\n        position: 'absolute',\n        padding: `${padding}px`,\n        borderRadius: `${borderRadius}px`,\n        left,\n        top,\n        // filter: 'grayscale(100%)',\n        // filter: 'invert(100%)',\n        // filter: 'sepia(100%)',\n        // filter: 'saturate(50%)',\n        // filter: 'opacity(70%)',\n        // filter: 'hue-rotate(180deg)',\n        // filter: 'blur(10px)',\n        // filter: 'brightness(150%)',\n        // filter: 'contrast(70%)',\n        // filter: 'drop-shadow(5px 5px 2px gray)',\n        // backgroundImage:\n        //   'radial-gradient(ellipse, #0000, #0007), linear-gradient(0deg, #9725, #9725), url(https://i.ibb.co/vJt5HSh/noisy-texture-300x300-o10-d10-c-a82851-t1.png), url(https://i.ibb.co/m4sGRmK/pexels-pixabay-247431.jpg)',\n        // backgroundSize: 'auto, auto, auto, cover',\n        // backgroundRepeat: 'repeat',\n        // backgroundPosition: 'center',\n        // filter: 'blur(0.05em) saturate(0.7) contrast(1.2) brightness(1.2)',\n      }}\n    />\n  );\n}\n\nCollageImage.propTypes = {\n  title: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  onLoad: PropTypes.func.isRequired,\n  padding: PropTypes.number.isRequired,\n  borderRadius: PropTypes.number.isRequired,\n  left: PropTypes.number.isRequired,\n  top: PropTypes.number.isRequired,\n  src: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Tooltip from '@mui/material/Tooltip';\nimport { alpha } from '@mui/material/styles';\n\nexport default function DeleteImageButton({ top, left, onClick }) {\n  return (\n    <Tooltip title=\"Remove Image\">\n      <IconButton\n        size=\"medium\"\n        sx={{\n          color: alpha('#000', 0.7),\n          bgcolor: alpha('#fff', 0.5),\n          position: 'absolute',\n          top,\n          left,\n          padding: 1,\n          borderRadius: '0 5px 0 5px',\n          transform: 'translate(-100%, 0)',\n        }}\n        onClick={onClick}\n      >\n        <DeleteIcon size=\"medium\" />\n      </IconButton>\n    </Tooltip>\n  );\n}\n\nDeleteImageButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  left: PropTypes.number.isRequired,\n  top: PropTypes.number.isRequired,\n};\n","// import Box from '@mui/material/Box';\nimport helpers from 'components/collage/helpers';\nimport CollageImage from 'components/collage/CollageImage';\nimport DeleteImageButton from 'components/collage/DeleteImageButton';\n\nexport default class Node {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n\n  fromObject(obj) {\n    if (obj != null) {\n      this.value = obj.value;\n      if (obj.left != null) {\n        this.left = new Node(obj.left.value);\n        this.left.fromObject(obj.left);\n      }\n      if (obj.right != null) {\n        this.right = new Node(obj.right.value);\n        this.right.fromObject(obj.right);\n      }\n      return this;\n    }\n    return null;\n  }\n\n  getScore() {\n    if ('cut' in this.value) {\n      return [...this.left.getScore(), ...this.right.getScore()];\n    }\n\n    return [this.value.width + this.value.height];\n  }\n\n  display() {\n    let output = [];\n    const { cut, title, aspectRatio } = this.value;\n    if (this === null) return null;\n    if ('cut' in this.value) output.push([cut, aspectRatio]);\n    if ('title' in this.value) output.push([title, aspectRatio]);\n    if (this.left !== null) output = output.concat(this.left.display());\n    if (this.right !== null) output = output.concat(this.right.display());\n    return output;\n  }\n\n  copy() {\n    if (this === null) return null;\n    const copyNode = new Node({ ...this.value });\n    if (this.left != null) copyNode.left = this.left.copy();\n    if (this.right != null) copyNode.right = this.right.copy();\n    return copyNode;\n  }\n\n  replaceImages(newImages) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const findIndex = newImages.findIndex((elem) => elem.title === this.value.title);\n        const origImage = newImages[findIndex];\n        this.value.src = origImage.src;\n      }\n      if (this.left != null) this.left.replaceImages(newImages);\n      if (this.right != null) this.right.replaceImages(newImages);\n    }\n  }\n\n  removeImageData() {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const { src, ...rest } = this.value;\n        this.value = rest;\n      }\n      if (this.left != null) this.left.removeImageData();\n      if (this.right != null) this.right.removeImageData();\n    }\n  }\n\n  addImageData(imageData) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const image = imageData.find((elem) => elem.title === this.value.title);\n        this.value.src = image.src;\n      }\n      if (this.left != null) this.left.addImageData(imageData);\n      if (this.right != null) this.right.addImageData(imageData);\n    }\n  }\n\n  RenderImage(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    const { width, title, src, x, y } = this.value;\n\n    const newX = x + xOffset;\n    const newY = y + yOffset;\n    return (\n      <>\n        <CollageImage\n          title={title}\n          width={width}\n          onLoad={handleCollageImageLoad}\n          src={src}\n          padding={padding}\n          borderRadius={borderRadius}\n          left={newX}\n          top={newY}\n        />\n        {delImg === true ? (\n          <DeleteImageButton\n            top={newY + padding}\n            left={newX + width - padding}\n            onClick={() => handleRemoveImage(title)}\n          />\n        ) : null}\n      </>\n    );\n  }\n\n  DOMDisplay(\n    pd, // padding\n    br, // borderRadius\n    di, // deleteImage\n    hri, // handleRemoveImage\n    yo, // yOffset\n    xo, // xOffset\n    hcil // handleCollageImageLoad\n  ) {\n    const { cut } = this.value;\n    if (this === null) return null;\n    if (cut) {\n      return (\n        <>\n          {this.left != null ? this.left.DOMDisplay(pd, br, di, hri, yo, xo, hcil) : null}\n          {this.right != null ? this.right.DOMDisplay(pd, br, di, hri, yo, xo, hcil) : null}\n        </>\n      );\n    }\n    if ('title' in this.value) return this.RenderImage(pd, br, di, hri, yo, xo, hcil);\n    return null;\n  }\n\n  ResizeImage(image) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = this.value.naturalWidth;\n    tempCanvas.height = this.value.naturalHeight;\n    const tempCtx = tempCanvas.getContext('2d');\n    let width = this.value.naturalWidth;\n    let height = this.value.naturalHeight;\n    let newWidth;\n    let newHeight;\n    const scaleFactor = Math.floor(Math.log2(this.value.naturalWidth / this.value.width));\n    if (scaleFactor === 0) {\n      tempCtx.drawImage(image, 0, 0, width, height, 0, 0, this.value.width, this.value.height);\n    } else {\n      for (let i = 0; i < scaleFactor; i += 1) {\n        newWidth = width >> 1; // eslint-disable-line no-bitwise\n        newHeight = newWidth / this.value.aspectRatio; // eslint-disable-line no-bitwise\n        if (i === 0) {\n          // eslint-disable-next-line\n          tempCtx.drawImage(image, 0, 0, width, height, 0, 0, newWidth, newHeight);\n        } else {\n          tempCtx.drawImage(tempCanvas, 0, 0, width, height, 0, 0, newWidth, newHeight);\n        }\n        width = newWidth;\n        height = newHeight;\n      }\n\n      tempCtx.drawImage(tempCanvas, 0, 0, width, height, 0, 0, this.value.width, this.value.height);\n    }\n    return tempCanvas;\n  }\n\n  ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset) {\n    const x = this.value.x + padding + xOffset;\n    const y = this.value.y + padding + yOffset;\n    const clipwidth = this.value.width - 2 * padding;\n    const clipheight = clipwidth / this.value.aspectRatio;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + clipwidth - radius, y);\n    ctx.quadraticCurveTo(x + clipwidth, y, x + clipwidth, y + radius);\n    ctx.lineTo(x + clipwidth, y + clipheight - radius);\n    ctx.quadraticCurveTo(x + clipwidth, y + clipheight, x + clipwidth - radius, y + clipheight);\n    ctx.lineTo(x + radius, y + clipheight);\n    ctx.quadraticCurveTo(x, y + clipheight, x, y + clipheight - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.clip();\n\n    ctx.drawImage(\n      tempCanvas,\n      0,\n      0,\n      this.value.width,\n      this.value.height,\n      x,\n      y,\n      clipwidth,\n      clipheight\n    );\n    ctx.restore();\n  }\n\n  CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset) {\n    if ('cut' in this.value) {\n      this.left.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n      this.right.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n    }\n\n    if ('title' in this.value) {\n      const ctx = canvasElement.getContext('2d');\n      const newImg = new Image();\n      newImg.onload = () => {\n        const tempCanvas = this.ResizeImage(newImg);\n        const tempCtx = tempCanvas.getContext('2d');\n        this.ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset);\n        tempCtx.clearRect(0, 0, tempCanvas.width, tempCanvas.height);\n      };\n      newImg.src = this.value.src;\n    }\n  }\n\n  // generate(images, tar, imageCount) {\n  //   const targetAspectRatioArr = images.map((image) => image.naturalWidth / image.naturalHeight);\n  //   if (imageCount < 1) return [];\n  //   if (imageCount === 1) {\n  //     const closestIndex = helpers.findClosest(targetAspectRatioArr, tar);\n  //     this.value = images[closestIndex];\n  //     this.left = null;\n  //     this.right = null;\n  //     return [...images.slice(0, closestIndex), ...images.slice(closestIndex + 1)];\n  //   }\n  //\n  //   const cut = helpers.getCut();\n  //   this.value = { cut, targetAspectRatio: tar };\n  //   if (imageCount === 2) {\n  //     const [leftIndex, rightIndex] = helpers.findImgPair(targetAspectRatioArr, tar);\n  //     this.value.aspectRatio = helpers.getAspectRatio(\n  //       this.value.cut,\n  //       images[leftIndex].aspectRatio,\n  //       images[rightIndex].aspectRatio\n  //     );\n  //     this.left = new Node(images[leftIndex]);\n  //     this.right = new Node(images[rightIndex]);\n  //     return images.filter((item, index) => ![leftIndex, rightIndex].includes(index));\n  //   }\n  //\n  //   let restImages;\n  //   let targetAspectRatio;\n  //   this.left = new Node({ cut: helpers.getCut() });\n  //   //  this.right = new Node({ cut: helpers.getCut() });\n  //   this.right = new Node({ cut: this.left.value.cut === 'v' ? 'h' : 'v' });\n  //\n  //   targetAspectRatio = tar / 2;\n  //   if (cut === 'v') {\n  //     targetAspectRatio = tar * 2;\n  //   }\n  //\n  //   const randomNumber = Math.round(Math.random());\n  //   const [first, second] = randomNumber ? ['left', 'right'] : ['right', 'left'];\n  //   restImages = this[first].generate(\n  //     images,\n  //     targetAspectRatio,\n  //     imageCount - Math.floor(imageCount / 2)\n  //   );\n  //   restImages = this[second].generate(restImages, targetAspectRatio, Math.floor(imageCount / 2));\n  //\n  //   this.value.aspectRatio = helpers.getAspectRatio(\n  //     this.value.cut,\n  //     this.left.value.aspectRatio,\n  //     this.right.value.aspectRatio\n  //   );\n  //\n  //   return restImages;\n  // }\n\n  generate(images, tar, imageCount) {\n    if (imageCount < 1) return [];\n    if (imageCount === 1) {\n      const closestIndex = 0;\n      this.value = images[closestIndex];\n      this.left = null;\n      this.right = null;\n      return images.slice(1);\n    }\n\n    const cut = helpers.getCut();\n    this.value = { cut, targetAspectRatio: tar };\n    if (imageCount === 2) {\n      const [leftIndex, rightIndex] = [0, 1];\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        images[leftIndex].aspectRatio,\n        images[rightIndex].aspectRatio\n      );\n      this.left = new Node(images[leftIndex]);\n      this.right = new Node(images[rightIndex]);\n      return images.filter((item, index) => ![leftIndex, rightIndex].includes(index));\n    }\n\n    let restImages;\n    let targetAspectRatio;\n    this.left = new Node({ cut: helpers.getCut() });\n    this.right = new Node({ cut: this.left.value.cut === 'v' ? 'h' : 'v' });\n\n    targetAspectRatio = tar / 2;\n    if (cut === 'v') {\n      targetAspectRatio = tar * 2;\n    }\n\n    const randomNumber = Math.round(Math.random());\n    const [first, second] = randomNumber ? ['left', 'right'] : ['right', 'left'];\n    restImages = this[first].generate(\n      images,\n      targetAspectRatio,\n      imageCount - Math.floor(imageCount / 2)\n    );\n    restImages = this[second].generate(restImages, targetAspectRatio, Math.floor(imageCount / 2));\n\n    this.value.aspectRatio = helpers.getAspectRatio(\n      this.value.cut,\n      this.left.value.aspectRatio,\n      this.right.value.aspectRatio\n    );\n\n    return restImages;\n  }\n\n  adjust(th) {\n    let adjustments = 0;\n    if (this === null) return adjustments;\n\n    if (this.left !== null && this.right !== null) {\n      if (this.value.aspectRatio > this.value.targetAspectRatio * th) {\n        this.value.cut = 'h';\n        adjustments += 1;\n      }\n      if (this.value.aspectRatio < this.value.targetAspectRatio / th) {\n        this.value.cut = 'v';\n        adjustments += 1;\n      }\n\n      if (this.value.cut === 'v') {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n      } else {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n      }\n      adjustments += this.left.adjust(th) + this.right.adjust(th);\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        this.left.value.aspectRatio,\n        this.right.value.aspectRatio\n      );\n    }\n\n    return adjustments;\n  }\n\n  addSize(parentWidth, parentHeight, parentX, parentY, parentCut, nodeType) {\n    if (parentCut === 'v') {\n      this.value.height = parentHeight;\n      this.value.width = this.value.height * this.value.aspectRatio;\n    } else {\n      this.value.width = parentWidth;\n      this.value.height = this.value.width / this.value.aspectRatio;\n    }\n\n    if (nodeType === 'left') {\n      this.value.x = parentX;\n      this.value.y = parentY;\n    } else if (parentCut === 'h') {\n      this.value.y = parentY + parentHeight - this.value.height;\n      this.value.x = parentX;\n    } else {\n      this.value.x = parentX + parentWidth - this.value.width;\n      this.value.y = parentY;\n    }\n\n    const { width, height, x, y, cut } = this.value;\n\n    if (this.left !== null) {\n      this.left.addSize(width, height, x, y, cut, 'left');\n    }\n    if (this.right !== null) {\n      this.right.addSize(width, height, x, y, cut, 'right');\n    }\n  }\n\n  validateAddSize() {\n    if ('cut' in this.value) {\n      const [lV, lPN] = this.left.validateAddSize();\n      const [rV, rPN] = this.right.validateAddSize();\n      return [lV && rV, lPN.concat(rPN)];\n    }\n    if ('title' in this.value) {\n      const valid =\n        this.value.width <= this.value.naturalWidth &&\n        this.value.height <= this.value.naturalHeight;\n      return valid ? [valid, []] : [valid, [{ ...this }]];\n    }\n    return false;\n  }\n}\n","import Box from '@mui/material/Box';\nimport TextDisplay from 'components/collage/TextDisplay';\nimport constants from 'static/config/collage';\nimport Node from './node';\nimport helpers from './helpers';\n\nexport default class BinaryTree {\n  constructor(value) {\n    if (this.root === undefined) {\n      this.root = new Node(value);\n      return this;\n    }\n  }\n\n  addOptions(options) {\n    this.root.options = { ...options };\n  }\n\n  display() {\n    if (this.root !== null) {\n      return this.root.display();\n    }\n    return null;\n  }\n\n  replaceImages(newImages) {\n    if (this.root !== null) this.root.replaceImages(newImages);\n  }\n\n  fromObject(obj) {\n    if (obj.root != null) this.root.fromObject(obj.root);\n    return this;\n  }\n\n  removeImageData() {\n    const tempTree = this.copy();\n    if (this.root !== null) {\n      tempTree.root.removeImageData();\n    }\n    return tempTree;\n  }\n\n  addImageData(imageData) {\n    if (this.root !== null) this.root.addImageData(imageData);\n  }\n\n  DOMDisplay(canvasWidth, canvasHeight, delImg, handleRemoveImage, handleCollageImageLoad) {\n    const { fontSize, lineHeight, textPadding } = constants;\n    const { width, height } = this.root.value;\n    const { text, topText, padding, borderRadius, color } = this.root.options;\n    const lA = helpers.wrapText(text, 0, 0, canvasWidth, fontSize, lineHeight);\n    const textHeight = text.length ? lA.length * lineHeight + 2 * textPadding * height : 0;\n    let yOffset = (canvasHeight - textHeight - height) / 2;\n    const xOffset = (canvasWidth - width) / 2;\n    let position = canvasHeight - textHeight;\n    if (topText && text.length > 0) {\n      yOffset += textHeight;\n      position = 0;\n    }\n\n    if (this.root !== null) {\n      return (\n        <Box sx={{ backgroundColor: 'white' }}>\n          <Box\n            width={canvasWidth}\n            height={canvasHeight}\n            sx={{\n              position: 'relative',\n              backgroundColor: helpers.convertToRGBA(color),\n            }}\n          >\n            {this.root.DOMDisplay(\n              padding,\n              borderRadius,\n              delImg,\n              handleRemoveImage,\n              yOffset,\n              xOffset,\n              handleCollageImageLoad\n            )}\n            {text.length ? TextDisplay(lA, position, textHeight, height) : null}\n          </Box>\n        </Box>\n      );\n    }\n    return null;\n  }\n\n  CanvasDisplay(canvasWidth, canvasHeight, canvasElement, scaleFactor) {\n    const { fontSize, lineHeight, textPadding } = constants;\n    if (this.root !== null) {\n      const { text, topText, padding, borderRadius, color } = this.root.options;\n      const { width, height } = this.root.value;\n      const lA = helpers.wrapText(\n        text,\n        0,\n        0,\n        canvasWidth,\n        fontSize * scaleFactor,\n        lineHeight * scaleFactor\n      );\n      const textHeight = text.length\n        ? lA.length * lineHeight * scaleFactor + 2 * textPadding * canvasHeight\n        : 0;\n      let yOffset = (canvasHeight - textHeight - height) / 2;\n      const xOffset = (canvasWidth - width) / 2;\n      let position = canvasHeight - textHeight;\n      if (topText && text.length > 0) {\n        yOffset += textHeight;\n        position = 0;\n      }\n      const ctx = canvasElement.getContext('2d');\n      ctx.fillStyle = 'white';\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      ctx.fillStyle = helpers.convertToRGBA(color);\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      this.root.CanvasDisplay(\n        canvasElement,\n        padding * scaleFactor,\n        borderRadius * scaleFactor,\n        yOffset,\n        xOffset\n      );\n      helpers.textCanvasDraw(ctx, lA, position, scaleFactor, canvasWidth, canvasHeight, textHeight);\n    }\n  }\n\n  generateScore() {\n    const score = this.root.getScore();\n    return Math.min(...score);\n  }\n\n  generateCollageTree(images, tar) {\n    this.root.generate(images, tar, images.length);\n  }\n\n  adjust(th) {\n    let trys = 0;\n    let bestAdjust = this.copy();\n    let bestAspectRatio = this.root.value.aspectRatio;\n    const tolerableDifference = this.root.value.targetAspectRatio * (1 - th);\n    let ajstCnt = 1000;\n    while (trys < 100 && ajstCnt > 0) {\n      ajstCnt = this.root.adjust(th);\n      trys += 1;\n      const diff = this.root.value.aspectRatio - this.root.value.targetAspectRatio;\n      if (Math.abs(diff) < Math.abs(bestAspectRatio - this.root.value.targetAspectRatio)) {\n        bestAspectRatio = this.root.value.aspectRatio;\n        bestAdjust = this.copy();\n      }\n      if ((diff > 0 && diff < tolerableDifference) || diff === 0) break;\n    }\n\n    return [bestAspectRatio, bestAdjust];\n  }\n\n  copy() {\n    const copyTree = new BinaryTree({});\n    copyTree.root = this.root.copy();\n    copyTree.root.options = { ...this.root.options };\n    return copyTree;\n  }\n\n  addSize(canvasWidth, canvasHeight, aspectRatio) {\n    const [maxW, maxH] = helpers.getCollageDimension(canvasWidth, canvasHeight, aspectRatio);\n    this.root.value.width = maxW;\n    this.root.value.height = maxH;\n    this.root.value.x = 0;\n    this.root.value.y = 0;\n    const { width, height, x, y, cut } = this.root.value;\n    if (this.root.left !== null) this.root.left.addSize(width, height, x, y, cut, 'left');\n    if (this.root.right !== null) this.root.right.addSize(width, height, x, y, cut, 'right');\n  }\n\n  validateAddSize() {\n    return this.root.validateAddSize();\n  }\n}\n","import BinaryTree from './binaryTree';\nimport helpers from './helpers';\n\n/* Randomize array in-place using Durstenfeld shuffle algorithm */\nfunction shuffleArray(array) {\n  const tempArray = array;\n  for (let i = tempArray.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    tempArray[i] = tempArray[j];\n    tempArray[j] = temp;\n  }\n  return tempArray;\n}\n\nfunction findBestAdjustTree(images, tolerance, imageWidth, imageHeight) {\n  const randPermuteImages = shuffleArray(images);\n  const collageArray = [];\n  for (let i = 0; i < 100; i += 1) {\n    const imgTree = new BinaryTree({ cut: helpers.getCut() });\n    imgTree.generateCollageTree(randPermuteImages, imageWidth / imageHeight);\n\n    collageArray.push(imgTree.adjust(1 - tolerance));\n  }\n\n  collageArray.sort((a, b) => {\n    const aspR = imageWidth / imageHeight;\n    const diffA = Math.abs(a[0] - aspR);\n    const diffB = Math.abs(b[0] - aspR);\n    return diffA - diffB;\n  });\n\n  const bAR = collageArray.filter((elem) => elem[0].toFixed(1) === collageArray[0][0].toFixed(1));\n  let maxScore = 0;\n  let maxElem = {};\n  bAR.forEach((element) => {\n    element[1].addSize(1000 * (imageWidth / imageHeight), 1000, imageWidth / imageHeight);\n    const score = element[1].generateScore();\n    if (score > maxScore) {\n      maxScore = score;\n      maxElem = element;\n    }\n  });\n  return maxElem;\n}\n\nexport default { findBestAdjustTree };\n","import collageapi from 'api/collage';\n\nfunction verifyPromises(uploadPromises) {\n  let status;\n  for (let i = 0; i < uploadPromises.length; i += 1) {\n    if (uploadPromises[i].status === 'fulfilled' || uploadPromises[i].value.ok === true) {\n      status = true;\n    } else {\n      status = false;\n      break;\n    }\n  }\n  return status;\n}\n\nfunction uploadCollageImages(thumbnailCanvas, imageURLS, uploadCallback, images, collageID) {\n  const imagePromises = Object.keys(imageURLS).map(async (item) => {\n    // Upload thumbnail\n    const thumbnailKey = `thumbnail-${collageID}.jpg`;\n    if (item === thumbnailKey) {\n      return thumbnailCanvas.toBlob(async (blob) =>\n        collageapi.upload(imageURLS[thumbnailKey], blob)\n      );\n    }\n\n    // Upload Images\n    const url = imageURLS[item];\n    const Img = images.find((img) => img.title === item);\n    return collageapi.upload(url, Img.file).then((resp) => {\n      uploadCallback(); // Increase image upload count\n      return resp;\n    });\n  });\n\n  return imagePromises;\n}\n\nexport default { uploadCollageImages, verifyPromises };\n","import { useEffect, useState /* , useLayoutEffect */ } from 'react';\nimport useDimensions from 'hooks/collage/dimensions';\nimport useOptions from 'hooks/collage/options';\nimport useActions from 'hooks/collage/actions';\nimport useImages from 'hooks/collage/images';\nimport useTree from 'hooks/collage/tree';\n\nimport helpers from 'components/collage/helpers';\nimport apiHelpers from 'components/collage/apiHelpers';\nimport collageapi from 'api/collage';\nimport constants from 'static/config/collage';\n\nexport default function useBase(initialValue) {\n  const {\n    defaultCollageName,\n    defaultCollageType,\n    paperSizes,\n    tolerance,\n    thumbnailHeight,\n    fontSize,\n    lineHeight,\n    textPadding,\n  } = constants;\n\n  const [details, setDetails] = useState(initialValue);\n  const [collageName, setCollageName] = useState(defaultCollageName);\n  const [collageType, setCollageType] = useState(defaultCollageType);\n  const [uploadedImages, setUploadedImages] = useState(0);\n  const dimensions = useDimensions();\n  const options = useOptions();\n  const actions = useActions();\n  const images = useImages(details);\n  const treeState = useTree(details, options.setOptions);\n  const [thumbnail, setThumbnail] = useState({});\n\n  const initialStatus = () => ({\n    details: {\n      text: 'Saving Details',\n      status: 'pending',\n    },\n    images: {\n      text: `Saving Images (${uploadedImages} / ${images.images.length})`,\n      status: 'pending',\n    },\n    finalizing: {\n      text: 'Finalizing Collage',\n      status: 'pending',\n    },\n  });\n\n  const [saveStatus, setSaveStatus] = useState(initialStatus);\n\n  const collageID =\n    'details' in initialValue && 'collage_id' in initialValue.details\n      ? initialValue.details.collage_id\n      : Date.now();\n\n  const collageCallback = () => {};\n  const handleCollageTypeChange = (ct) => setCollageType(ct);\n  const getAspectRatio = () => paperSizes[collageType].width / paperSizes[collageType].height;\n\n  const handleNameChange = (newName) => setCollageName(newName);\n  const uploadCallback = () => setUploadedImages((cnt) => cnt + 1);\n\n  const updateStatus = (key, status) => {\n    const value = { ...saveStatus[key], status };\n    setSaveStatus((st) => ({ ...st, [key]: value }));\n  };\n\n  const updateImagesStatus = () => {\n    const imagesText = `Saving Images (${uploadedImages} / ${images.imgCount})`;\n    let value = { ...saveStatus.images, text: imagesText };\n    if (uploadedImages === images.imgCount && images.imgCount > 0) {\n      value = { ...value, status: 'done' };\n    }\n    setSaveStatus((st) => ({ ...st, images: value }));\n  };\n\n  const handleClear = () => {\n    treeState.clear();\n    images.clear();\n    options.clear();\n  };\n\n  const handleRemoveImage = (imgTitle) => {\n    const newImagesArr = images.remove(imgTitle);\n    treeState.reAdjust(\n      newImagesArr,\n      tolerance,\n      dimensions.imageWidth,\n      dimensions.imageHeight,\n      options.options\n    );\n  };\n\n  const generateThumbnail = () => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    const thumbnailWidth = thumbnailHeight * ar;\n    const thumbnailCanvas = document.createElement('canvas');\n    const thumbnailTree = treeState.tree.copy();\n    thumbnailTree.root.options.text = '';\n    thumbnailTree.addSize(thumbnailWidth, thumbnailHeight, ar);\n    thumbnailCanvas.width = thumbnailWidth;\n    thumbnailCanvas.height = thumbnailHeight;\n    thumbnailTree.CanvasDisplay(\n      thumbnailWidth,\n      thumbnailHeight,\n      thumbnailCanvas,\n      thumbnailWidth / dimensions.width\n    );\n\n    // create and update details\n    const thumbnailDetails = {\n      title: `thumbnail-${collageID}.png`,\n      src: '',\n      naturalHeight: thumbnailHeight,\n      naturalWidth: thumbnailWidth,\n      aspectRatio: ar,\n      type: 'image/png',\n    };\n    setThumbnail(thumbnailDetails);\n    return [thumbnailDetails, thumbnailCanvas];\n  };\n\n  const getDetails = (name, thumbnailDetails) => {\n    setCollageName(name);\n    return {\n      collage_id: collageID.toString(),\n      name,\n      collage_type: collageType,\n      created_at: '2021-02-18T21:54:42.123Z',\n      last_updated_at: '2021-02-18T21:54:45.123Z',\n      images: images.getImageData(images.images),\n      tree: treeState.tree.removeImageData(),\n      thumbnail: thumbnailDetails,\n    };\n  };\n\n  const updateCollage = async (name, getURLS) => {\n    const [thumbDets, thumbnailCanvas] = generateThumbnail();\n\n    // Upload collage details\n    updateStatus('details', 'running');\n    const getURLSResp = await getURLS(collageID, getDetails(name, thumbDets));\n    if ('status' in getURLSResp && getURLSResp.status === 'error') {\n      updateStatus('details', 'failed');\n      return false;\n    }\n\n    updateStatus('details', 'done');\n\n    // Image Upload start\n    updateStatus('images', 'running');\n    const uploadPromises = await Promise.allSettled(\n      apiHelpers.uploadCollageImages(\n        thumbnailCanvas,\n        getURLSResp,\n        uploadCallback,\n        images.images,\n        collageID\n      )\n    );\n    updateStatus('images', 'done');\n\n    // Verify upload promises\n    updateStatus('finalizing', 'running');\n    const valid = apiHelpers.verifyPromises(uploadPromises);\n    updateStatus('finalizing', valid === true ? 'done' : 'failed');\n    return valid;\n  };\n\n  const newCollage = async (name) => updateCollage(name, collageapi.newCollage);\n  const saveCollage = async (name) => updateCollage(name, collageapi.saveCollage);\n\n  const isEmptyTree = () => Object.keys(treeState.tree).length === 0;\n\n  const updateTreeAspectRatio = () => {\n    const ar = getAspectRatio();\n    if (\n      !isEmptyTree() &&\n      'aspectRatio' in treeState.tree.root.value &&\n      treeState.tree.root.value.aspectRatio !== ar\n    ) {\n      const tempTree = treeState.tree.copy();\n      tempTree.value = { ...tempTree.value, aspectRatio: ar };\n      tempTree.root.value = { ...tempTree.root.value, targetAspectRatio: ar };\n      treeState.setTree(tempTree);\n      if (images.images.length > 1) actions.setRefresh(true);\n    }\n  };\n\n  const handleInitialValue = () => {\n    setDetails(initialValue);\n    if ('details' in initialValue) {\n      const iDets = initialValue.details;\n      if ('name' in iDets && collageName === defaultCollageName) {\n        setCollageName(iDets.name);\n      }\n      if ('collage_type' in iDets && collageType === defaultCollageType) {\n        setCollageType(initialValue.details.collage_type);\n      }\n    }\n  };\n\n  const rearrangeCollage = () => {\n    if (\n      (images.newImgCount > 0 && images.newImgCount === images.newImagesLoaded) ||\n      actions.refresh\n    ) {\n      images.setNewImageCount(0);\n      images.setNewImagesLoaded(0);\n      treeState.reAdjust(\n        images.images,\n        tolerance,\n        dimensions.width,\n        dimensions.height - dimensions.textHeight,\n        options.options\n      );\n      actions.setRefresh(false);\n    }\n  };\n\n  const setCollageDimensions = () => {\n    const ar = getAspectRatio();\n    const { maxWidth, maxHeight } = dimensions;\n    const [w, h] = helpers.getCollageDimension(maxWidth, maxHeight, ar);\n    dimensions.setWidth(w);\n    dimensions.setHeight(h);\n  };\n\n  const updateCollageWithTextDimensions = () => {\n    const { width, height, setTextHeight, setImageWidth, setImageHeight } = dimensions;\n    const { text } = options.options;\n    if (!isEmptyTree()) {\n      const tH = helpers.wrapText(text, 0, 0, width, fontSize, lineHeight);\n      const totalTextHeight =\n        text.length > 0 ? tH.length * lineHeight + 2 * textPadding * height : 0;\n      const [w, h] = helpers.getCollageDimension(\n        width,\n        height - totalTextHeight,\n        treeState.tree.root.value.aspectRatio\n      );\n      setTextHeight(totalTextHeight);\n      setImageWidth(w);\n      setImageHeight(h);\n    }\n  };\n\n  useEffect(updateImagesStatus, [uploadedImages, images.imgCount]);\n  useEffect(handleInitialValue, [initialValue]);\n\n  useEffect(updateCollageWithTextDimensions, [\n    dimensions.width,\n    dimensions.height,\n    treeState.tree,\n    options.options.text,\n  ]);\n\n  useEffect(updateTreeAspectRatio, [collageType]);\n  useEffect(setCollageDimensions, [dimensions.maxWidth, dimensions.maxHeight, collageType]);\n\n  useEffect(rearrangeCollage, [images.newImgCount, images.newImagesLoaded, actions.refresh]);\n\n  return [\n    collageType,\n    getDetails,\n    collageName,\n    thumbnail,\n    collageID,\n    dimensions,\n    options,\n    actions,\n    images,\n    treeState,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n    handleCollageTypeChange,\n    handleNameChange,\n  ];\n}\n","import { useRef, useState, useEffect } from 'react';\n\nexport default function useDimensions() {\n  const headerRef = useRef();\n  const actionsRef = useRef();\n  const footerRef = useRef();\n  const collageMetaRef = useRef();\n  const addImageRef = useRef();\n\n  const [height, setHeight] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [imageWidth, setImageWidth] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [maxHeight, setMaxHeight] = useState(0);\n  const [maxWidth, setMaxWidth] = useState(0);\n  const [textHeight, setTextHeight] = useState(0);\n\n  const setDimensions = () => {\n    const isMobile = window.innerWidth < window.innerHeight;\n    const headerHeight = headerRef.current ? headerRef.current.offsetHeight : 0;\n    const collageMetaHeight = collageMetaRef.current ? collageMetaRef.current.offsetHeight : 0;\n    if (isMobile === true) {\n      const actionsHeight = actionsRef.current ? actionsRef.current.offsetHeight : 0;\n      const footerHeight = footerRef.current ? footerRef.current.offsetHeight : 0;\n      const otherHeight = headerHeight + actionsHeight + footerHeight + collageMetaHeight;\n      setMaxWidth(Math.min(window.innerWidth, window.screen.availWidth));\n      setMaxHeight(Math.min(window.innerHeight, window.screen.availHeight) - otherHeight - 10);\n    } else {\n      const actionsWidth = actionsRef.current ? actionsRef.current.offsetWidth : 0;\n      const footerWidth = footerRef.current ? footerRef.current.offsetWidth : 0;\n      setMaxWidth(window.innerWidth - (footerWidth + actionsWidth) - 10);\n      setMaxHeight(window.innerHeight - headerHeight - collageMetaHeight);\n    }\n  };\n\n  const handleImageAddClick = () => {\n    if (addImageRef.current) addImageRef.current.click();\n  };\n\n  useEffect(() => {\n    setDimensions();\n  }, [headerRef.current, actionsRef.current, footerRef.current]);\n\n  useEffect(() => {\n    setDimensions();\n\n    window.addEventListener('resize', setDimensions);\n\n    return () => window.removeEventListener('resize', setDimensions);\n  }, []);\n\n  return {\n    addImageRef,\n    actionsRef,\n    headerRef,\n    footerRef,\n    collageMetaRef,\n    width,\n    height,\n    imageHeight,\n    imageWidth,\n    setImageWidth,\n    setImageHeight,\n    maxHeight,\n    maxWidth,\n    handleImageAddClick,\n    textHeight,\n    setTextHeight,\n    setWidth,\n    setHeight,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useOptions() {\n  const optionsInitValue = {\n    padding: 2,\n    borderRadius: 5,\n    color: {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1,\n    },\n    text: '',\n    topText: true,\n  };\n\n  const [options, setOptions] = useState(optionsInitValue);\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n  const [editControl, setEditControl] = useState(null);\n  const [editOptionsValue, setEditOptionsValue] = useState('');\n\n  const clear = () => setOptions(optionsInitValue);\n  const handlePaddingChange = (e) => setOptions((opts) => ({ ...opts, padding: e.target.value }));\n  const handleRadiusChange = (e) => {\n    setOptions((opts) => ({ ...opts, borderRadius: e.target.value }));\n  };\n\n  const handleColorClick = () => setDisplayColorPicker((dcp) => !dcp);\n  const handleColorClose = () => setDisplayColorPicker(false);\n  const handleColorChange = (clr) => setOptions((opts) => ({ ...opts, color: clr.rgb }));\n  const handlePositionChange = (value) => setOptions((opts) => ({ ...opts, topText: value }));\n\n  const handleTextChange = (e) => {\n    const { target } = e;\n    setOptions((opts) => ({ ...opts, text: target.value }));\n  };\n\n  const handleTextSubmit = (e) => {\n    handleTextChange(e);\n    setEditControl(null);\n    setEditOptionsValue(null);\n  };\n\n  return {\n    options,\n    setOptions,\n    clear,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClick,\n    handleColorClose,\n    handleColorChange,\n    handlePositionChange,\n    handleTextChange,\n    displayColorPicker,\n    editControl,\n    setEditControl,\n    editOptionsValue,\n    setEditOptionsValue,\n    handleTextSubmit,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useActions() {\n  const [open, setOpen] = useState(false);\n  const [saveOpen, setSaveOpen] = useState(false);\n  const [saveStart, setSaveStart] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [generate, setGenerate] = useState(false);\n  const [removeImage, setRemoveImage] = useState(false);\n  const [printOptions, setPrintOptions] = useState({\n    paperWidth: 0,\n    paperHeight: 0,\n  });\n\n  const onRefresh = () => setRefresh(true);\n  const handleDownload = () => setOpen(true);\n  const handleSave = () => {\n    setSaveOpen(true);\n  };\n  const onDownloadClose = () => setOpen(false);\n  const onSaveClose = () => setSaveOpen(false);\n  const clearDelete = () => setRemoveImage(false);\n  const onDelete = () => setRemoveImage((ri) => !ri);\n\n  const onDownloadClick = (w, h) => {\n    setPrintOptions({ paperWidth: w, paperHeight: h });\n    setGenerate(true);\n    setOpen(false);\n  };\n\n  const onSaveClick = () => {\n    setSaveStart(true);\n    setSaveOpen(false);\n  };\n  const handleGenerateCallback = () => {\n    setGenerate(false);\n    setPrintOptions({ paperWidth: 0, paperHeight: 0 });\n  };\n\n  return {\n    clearDelete,\n    generate,\n    handleDownload,\n    handleGenerateCallback,\n    onDelete,\n    onDownloadClick,\n    onDownloadClose,\n    onRefresh,\n    open,\n    printOptions,\n    refresh,\n    setGenerate,\n    setOpen,\n    setPrintOptions,\n    setRefresh,\n    removeImage,\n    setRemoveImage,\n    saveOpen,\n    setSaveOpen,\n    onSaveClose,\n    onSaveClick,\n    handleSave,\n    saveStart,\n    setSaveStart,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport helpers from 'components/collage/helpers';\nimport constants from 'static/config/collage';\n// import utils from 'utils';\n\nexport default function useImages(initialValue) {\n  const [newImgCount, setNewImageCount] = useState(0);\n  const [newImagesLoaded, setNewImagesLoaded] = useState(0);\n  const [imgCount, setImageCount] = useState(0);\n  const [loaded, setLoaded] = useState(0);\n  const [images, setImages] = useState([]);\n  const [imageCountMaxError, setImageCountMaxError] = useState('');\n  const [imageCountMinError, setImageCountMinError] = useState('');\n\n  useEffect(() => {\n    if ('images' in initialValue) {\n      setImages(initialValue.images);\n      if (imgCount === 0) setImageCount(initialValue.images.length);\n    }\n  }, [initialValue]);\n\n  const getImageData = (imageArr) => {\n    const tempImgArr = [...imageArr];\n    return tempImgArr.map((img) => {\n      const { file, src, ...rest } = img;\n      return rest;\n    });\n  };\n\n  const removeImageData = (imageArr) => {\n    const tempImgArr = [...imageArr];\n    return tempImgArr.map((img) => {\n      const { file, src, ...rest } = img;\n      return rest;\n    });\n  };\n\n  const incrementNewImageCount = () => {\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleImageData = async (imageDetail) => {\n    setImages((arr) => arr.concat([imageDetail]));\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleImageCount = (totalImages) => {\n    if (totalImages === 0) {\n      setImageCountMinError('');\n      return true;\n    }\n    if (totalImages > 0) {\n      if (totalImages < constants.minImages) {\n        setImageCountMinError(\n          `Image Count Error: Need atleast ${constants.minImages} images to create a collage`\n        );\n        setImageCountMaxError('');\n        return false;\n      }\n      if (totalImages > constants.maxImages) {\n        setImageCountMaxError(\n          `Image Count Error: Maximum images allowed in collage is ${constants.maxImages}`\n        );\n        setImageCountMinError('');\n        return false;\n      }\n      if (totalImages >= constants.minImages && totalImages <= constants.maxImages) {\n        setImageCountMaxError('');\n        setImageCountMinError('');\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const handleLoad = async (event) => {\n    const totalImages = event.target.files.length + imgCount;\n    // eslint-disable-next-line\n    const valid = handleImageCount(totalImages);\n    if (valid === true) {\n      await helpers.handleImageLoad(event, setImageCount, setNewImageCount, handleImageData);\n    }\n  };\n\n  const clear = () => {\n    setImages([]);\n    setImageCount(0);\n    setLoaded(0);\n    setNewImagesLoaded(0);\n  };\n\n  const remove = (title) => {\n    const removeIndex = images.findIndex((elem) => elem.title === title);\n    const newImagesArr = [...images.slice(0, removeIndex), ...images.slice(removeIndex + 1)];\n    setImages(newImagesArr);\n    setImageCount((cnt) => cnt - 1);\n    return newImagesArr;\n  };\n\n  return {\n    clear,\n    handleImageData,\n    handleLoad,\n    images,\n    imgCount,\n    loaded,\n    newImagesLoaded,\n    newImgCount,\n    remove,\n    setImageCount,\n    setImages,\n    setLoaded,\n    setNewImageCount,\n    setNewImagesLoaded,\n    getImageData,\n    removeImageData,\n    incrementNewImageCount,\n    imageCountMinError,\n    setImageCountMinError,\n    imageCountMaxError,\n    setImageCountMaxError,\n    handleImageCount,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport treeUtils from 'components/collage/treeUtils';\nimport BinaryTree from 'components/collage/binaryTree';\n\nexport default function useTree(initialValue, loadingCallback = () => {}) {\n  const [tree, setTree] = useState(new BinaryTree({}));\n\n  useEffect(() => {\n    const newTree = new BinaryTree({});\n    if ('details' in initialValue && Object.keys(initialValue.details).length > 0) {\n      newTree.fromObject(initialValue.details.tree);\n      if ('options' in initialValue.details.tree.root) {\n        loadingCallback((opts) => ({\n          ...opts,\n          ...initialValue.details.tree.root.options,\n        }));\n      }\n      setTree(newTree);\n    }\n  }, [initialValue]);\n\n  const clear = () => setTree({});\n\n  const reAdjust = (imagesArr, tolerance, imageWidth, imageHeight, options) => {\n    const [, bestAspectRatioTree] = treeUtils.findBestAdjustTree(\n      imagesArr,\n      tolerance,\n      imageWidth,\n      imageHeight\n    );\n    bestAspectRatioTree.addOptions(options);\n    setTree(bestAspectRatioTree);\n  };\n\n  return { tree, setTree, clear, reAdjust };\n}\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Typography from '@mui/material/Typography';\n\nexport default function HandleError({ errors, children, handleClose }) {\n  const [open, setOpen] = useState(false);\n  useEffect(() => setOpen(true), []);\n  return errors.length > 0 ? (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center', color: 'red', fontWeight: 'bold' }}>\n        Error(s)\n      </DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <DialogContentText sx={{ display: 'inline', pr: 1 }}>\n          <Typography sx={{ fontWeight: 'bold' }}>Please fix the following errors</Typography>\n          <List sx={{ px: 2 }}>\n            {errors.map((err) => (\n              <ListItem sx={{ display: 'list-item', listStyleType: 'disc' }}>{err}</ListItem>\n            ))}\n          </List>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          onClick={() => {\n            handleClose();\n            setOpen(false);\n          }}\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  ) : (\n    children\n  );\n}\n\nHandleError.propTypes = {\n  errors: PropTypes.arrayOf(PropTypes.string).isRequired,\n  children: PropTypes.node.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport constants from 'static/config/collage';\nimport helpers from './helpers';\n\nexport default function Collage({\n  dimensionProps,\n  imageProps,\n  actionProps,\n  collageCallback,\n  handleRemoveImage,\n  options,\n  tree,\n}) {\n  const [collage, setCollage] = useState(null);\n  const { images, setLoaded } = imageProps;\n  const { generate, handleGenerateCallback, printOptions, removeImage } = actionProps;\n  const { height, width, imageHeight, imageWidth } = dimensionProps;\n  const { fontSize, lineHeight } = constants;\n\n  const handleCollageImageLoad = () => setLoaded((cnt) => cnt + 1);\n  const isEmpty = (t) => Object.keys(t).length === 0;\n  const createCollage = () => {\n    tree.addSize(imageWidth, imageHeight, tree.root.value.aspectRatio);\n    tree.addOptions(options);\n    if (images.length > 0) {\n      tree.addImageData(images);\n      const collageElem = tree.DOMDisplay(\n        width,\n        height,\n        removeImage,\n        handleRemoveImage,\n        handleCollageImageLoad\n      );\n      setCollage(collageElem);\n      collageCallback(tree);\n    }\n  };\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      createCollage();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      createCollage();\n    } else {\n      setCollage(null);\n    }\n  }, [tree, options, imageWidth, imageHeight, removeImage, images]);\n\n  const downloadCollage = (canvas, pW, pH) => {\n    canvas.toBlob((blob) => {\n      const link = document.createElement('a');\n      link.download = `collage-${pW.toFixed(2)}X${pH.toFixed(2)}-${Date.now()}.jpg`;\n      link.href = URL.createObjectURL(blob);\n      link.click();\n      URL.revokeObjectURL(link.href);\n      link.href = null;\n      handleGenerateCallback();\n    }, 'image/jpeg');\n  };\n\n  const getCanvasTree = () => {\n    const canvasTree = tree.copy();\n    canvasTree.replaceImages(images);\n    return canvasTree;\n  };\n\n  const getCanvas = (pw, ph) => {\n    const canvasElement = document.createElement('canvas');\n    canvasElement.width = pw;\n    canvasElement.height = ph;\n    return canvasElement;\n  };\n\n  const generateCollageTree = (pw, ph) => {\n    const canvasTree = getCanvasTree();\n    const ar = tree.root.value.aspectRatio;\n    const scaleFactor = pw / width;\n    const [imgPW, imgPH] = helpers.getImageDimensions(\n      pw,\n      ph,\n      options.text,\n      0,\n      0,\n      fontSize,\n      lineHeight,\n      scaleFactor,\n      tree.root.value.aspectRatio\n    );\n    canvasTree.addSize(imgPW, imgPH, ar);\n    return canvasTree;\n  };\n\n  const generateCollage = (ctree, pw, ph) => {\n    const scaleFactor = pw / width;\n    const canvasElement = getCanvas(pw, ph);\n    ctree.CanvasDisplay(pw, ph, canvasElement, scaleFactor);\n\n    setTimeout(() => downloadCollage(canvasElement, pw, ph), '5000');\n  };\n\n  useEffect(() => {\n    if (generate === true) {\n      const { paperWidth: pw, paperHeight: ph } = printOptions;\n      const canvasTree = generateCollageTree(pw, ph);\n      const [valid, probNodes] = canvasTree.validateAddSize();\n      if (valid) {\n        generateCollage(canvasTree, pw, ph);\n      } else {\n        const [newPW, newPH] = helpers.optimizeDimensions(pw, ph, probNodes);\n        const newCanvasTree = generateCollageTree(newPW, newPH);\n        const [newValid, newProbNodes] = newCanvasTree.validateAddSize();\n        if (newValid) {\n          generateCollage(newCanvasTree, newPW, newPH);\n        } else {\n          // eslint-disable-next-line\n          console.log('unable to generate collage', newProbNodes);\n        }\n      }\n    }\n  }, [generate]);\n\n  return collage;\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\n\nexport default function DownloadDialog({ open, onClick, onClose, sizes, collageType }) {\n  const [value, setValue] = useState('');\n  const handleDownload = () => {\n    onClick(sizes[value].width, sizes[value].height);\n    setValue('');\n  };\n\n  const handleClose = () => {\n    setValue('');\n    onClose();\n  };\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Download Collage</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <DialogContentText sx={{ display: 'inline', pr: 1 }}>Choose collage size</DialogContentText>\n        <FormControl fullWidth sx={{ maxWidth: '60%' }}>\n          <InputLabel id=\"demo-simple-select-label\">Download Size</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            defaultValue=\"A4\"\n            value={value}\n            label=\"Download Size\"\n            onChange={(event) => setValue(event.target.value)}\n            inputProps={{\n              sx: {\n                fontWeight: 'bold',\n                color: 'gray',\n                alignItems: 'end',\n                display: 'flex',\n              },\n            }}\n          >\n            {'downloadSizes' in sizes[collageType] ? (\n              sizes[collageType].downloadSizes.map((sz) => (\n                <MenuItem key={sizes[sz].text} value={sz}>\n                  {sizes[sz].icon}\n                  {sizes[sz].text}\n                </MenuItem>\n              ))\n            ) : (\n              <MenuItem key={sizes[collageType].text} value={collageType}>\n                {sizes[collageType].icon}\n                {sizes[collageType].text}\n              </MenuItem>\n            )}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" disabled={value.length === 0} onClick={handleDownload}>\n          Download\n        </Button>\n        <Button variant=\"text\" onClick={handleClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nDownloadDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      icon: PropTypes.node.isRequired,\n      downloadSizes: PropTypes.arrayOf(PropTypes.string),\n    })\n  ).isRequired,\n  collageType: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport TextField from '@mui/material/TextField';\n\nexport default function SaveDialog({ collageName, open, onClick, onClose }) {\n  const [name, setName] = useState(collageName);\n  const [nameError] = useState('');\n  const handleSave = () => {\n    onClick(name);\n  };\n\n  const handleNameChange = (e) => {\n    const { target } = e;\n    setName(target.value);\n  };\n\n  const handleClose = () => {\n    setName('');\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <TextField\n          variant=\"outlined\"\n          label=\"Set Collage Name\"\n          defaultValue={name}\n          onChange={handleNameChange}\n          size=\"small\"\n          sx={{ width: '100%', mb: 1 }}\n          InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n          helperText={nameError}\n          error={!!nameError}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" disabled={name.length === 0} onClick={handleSave}>\n          Save\n        </Button>\n        <Button variant=\"text\" onClick={handleClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nSaveDialog.propTypes = {\n  collageName: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport PendingIcon from '@mui/icons-material/Pending';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CloseIcon from '@mui/icons-material/Close';\n\nfunction FailedIcon() {\n  return (\n    <CloseIcon\n      color=\"error\"\n      size=\"0.875rem\"\n      sx={{ border: '2px solid red', borderRadius: '50%' }}\n    />\n  );\n}\n\nfunction StatusIndicator({ status }) {\n  if (status === 'running') {\n    return <CircularProgress color=\"info\" size=\"1rem\" />;\n  }\n  if (status === 'pending') {\n    return <PendingIcon color=\"disabled\" size=\"0.875rem\" />;\n  }\n  if (status === 'done') {\n    return <CheckCircleOutlineIcon color=\"success\" size=\"0.875rem\" />;\n  }\n  if (status === 'failed') {\n    return <FailedIcon />;\n  }\n}\n\nStatusIndicator.propTypes = {\n  status: PropTypes.string.isRequired,\n};\n\nfunction Status({ text, status }) {\n  const color = {\n    pending: alpha('#000', 0.26),\n    done: 'black',\n    running: 'black',\n    failed: 'red',\n  };\n\n  return (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n      <Typography sx={{ fontWeight: 'bold', fontSize: '1rem', color: color[status] }}>\n        {text}\n      </Typography>\n      <StatusIndicator status={status} />\n    </Stack>\n  );\n}\n\nStatus.propTypes = {\n  text: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nfunction OverAllStatus({ status, counter }) {\n  if (status === 'failed') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <FailedIcon />\n        <Typography>Collage creation failed</Typography>\n      </Stack>\n    );\n  }\n\n  if (status === 'running' || status === 'pending') return null;\n\n  if (status === 'success') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <CheckCircleOutlineIcon color=\"success\" sx={{ fontSize: '2rem' }} />\n        <Typography>\n          Collage creation successful. Navigation to collages in {counter} seconds...\n        </Typography>\n      </Stack>\n    );\n  }\n\n  return null;\n}\n\nOverAllStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  counter: PropTypes.number.isRequired,\n};\n\nexport default function SaveStatusDialog({ open, status }) {\n  let overAllStatus = 'pending';\n  const [counter, setCounter] = useState(-1);\n  useEffect(() => {\n    let timerId;\n    if (counter > 0 && overAllStatus === 'success') {\n      timerId = setTimeout(() => setCounter(counter - 1), 1000);\n    }\n    return () => clearTimeout(timerId);\n  }, [counter, overAllStatus]);\n\n  const statusArr = Object.values(status).map((val) => val.status);\n  if (statusArr.includes('failed')) {\n    overAllStatus = 'failed';\n  } else if (statusArr.includes('running')) {\n    overAllStatus = 'running';\n  } else if (!statusArr.includes('pending')) {\n    if (counter === -1) {\n      setCounter(3);\n    }\n    overAllStatus = 'success';\n  }\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent dividers>\n        <Stack direction=\"column\" justifyContent=\"center\" spacing={2}>\n          {Object.values(status).map((st) => (\n            <Status key={st.text} text={st.text} status={st.status} />\n          ))}\n        </Stack>\n      </DialogContent>\n      <OverAllStatus status={overAllStatus} counter={counter} />\n    </Dialog>\n  );\n}\n\nSaveStatusDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  status: PropTypes.objectOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      status: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { alpha } from '@mui/material/styles';\n\nimport * as yup from 'yup';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport { Typography, Box, Link } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ProfileLink from 'components/profile';\nimport { Branding, BrandLogo } from 'components/brand';\nimport constants from 'static/config/collage';\nimport utils from 'utils';\n\nfunction HeaderNameSection({ name, handleChange, nameError, handleNameError }) {\n  const [editable, setEditable] = useState(false);\n  const [inputWidth, setInputWidth] = useState(\n    Math.min((name.length + 1) * 8, (constants.maxNameLength + 1) * 8)\n  );\n  const handleClick = () => setEditable(true);\n  const nameSchema = yup\n    .object({\n      name: yup\n        .string()\n        .max(constants.maxNameLength, `Max allowed length is ${constants.maxNameLength}`),\n    })\n    .required();\n\n  const isValid = async () => {\n    const nameValid = await utils.isFieldValid('name', name, handleNameError, nameSchema);\n    return nameValid;\n  };\n\n  const handleNameChange = (e) => {\n    setInputWidth(Math.min((e.target.value.length + 1) * 8, (constants.maxNameLength + 1) * 8));\n    handleChange(e.target.value);\n  };\n\n  const handleBlur = async (e) => {\n    if (e.target.value === '') {\n      handleChange('Untitled');\n    } else {\n      handleChange(e.target.value);\n      const valid = await isValid();\n      if (valid === false) {\n        return;\n      }\n    }\n    setEditable(false);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      handleBlur(e);\n    }\n  };\n\n  useEffect(() => isValid(), [name]);\n\n  return editable === true ? (\n    <TextField\n      className=\"collageName\"\n      margin=\"dense\"\n      variant=\"standard\"\n      defaultValue={name}\n      autoFocus\n      size=\"small\"\n      onChange={handleNameChange}\n      onBlur={handleBlur}\n      onKeyDown={handleKeyDown}\n      InputLabelProps={{\n        color: 'secondary',\n        focused: true,\n      }}\n      inputProps={{\n        style: {\n          textAlign: 'center',\n          color: 'gray',\n          backgroundColor: alpha('#000', 0.3),\n          width: `${inputWidth}px`,\n          marginX: '8px',\n        },\n      }}\n      helperText={\n        <Typography\n          variant=\"body\"\n          sx={{\n            fontWeight: 'bold',\n            color: 'secondary.main',\n            textAlign: 'center',\n          }}\n        >\n          {nameError}\n        </Typography>\n      }\n      error={!!nameError}\n      sx={{\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n        cursor: 'text',\n      }}\n    />\n  ) : (\n    <Typography\n      variant=\"h5\"\n      onClick={handleClick}\n      className=\"collageName\"\n      sx={{\n        color: 'gray',\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n        m: 2,\n      }}\n    >\n      {name}\n    </Typography>\n  );\n}\n\nHeaderNameSection.propTypes = {\n  name: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  nameError: PropTypes.string.isRequired,\n  handleNameError: PropTypes.func.isRequired,\n};\n\nexport default function Header({ headerRef, name, handleNameChange, nameError, handleNameError }) {\n  const belowmd = useMediaQuery((theme) => theme.breakpoints.down('md'));\n  return (\n    <Paper\n      ref={headerRef}\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        p: 1,\n        backgroundColor: 'primary.main',\n        borderRadius: 0,\n      }}\n      elevation={0}\n    >\n      <Box sx={{ postion: 'absolute', left: '5px' }}>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n          <Link href=\"/collages\" color=\"white\" underline=\"none\">\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <ArrowBackIcon fontSize=\"medium\" />\n            </Box>\n          </Link>\n          {belowmd ? (\n            <Link href=\"/\" color=\"white\" underline=\"none\">\n              <BrandLogo width=\"50px\" height=\"50px\" />\n            </Link>\n          ) : (\n            <Link href=\"/\" color=\"white\" underline=\"none\">\n              <Branding width=\"50px\" height=\"50px\" />\n            </Link>\n          )}\n        </Stack>\n      </Box>\n      <HeaderNameSection\n        name={name}\n        handleChange={handleNameChange}\n        nameError={nameError}\n        handleNameError={handleNameError}\n      />\n      <ProfileLink />\n    </Paper>\n  );\n}\n\nHeader.propTypes = {\n  name: PropTypes.string.isRequired,\n  headerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  handleNameChange: PropTypes.func.isRequired,\n  nameError: PropTypes.string.isRequired,\n  handleNameError: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n// import Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport collageBack from 'static/images/collage_back1.webp';\n\nexport default function EmptyCollage({ width, height, loadComponent }) {\n  return (\n    <Box\n      sx={{\n        backgroundImage: `url(${collageBack})`,\n        backgroundSize: width,\n        objectFit: 'fill',\n        width,\n        height,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {loadComponent}\n    </Box>\n  );\n}\n\nEmptyCollage.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  loadComponent: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport constants from 'static/config/collage';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport EmptyCollage from 'components/collage/EmptyCollage';\nimport Loading from 'components/Loading';\nimport AddPhotos from 'components/AddPhotos';\n\nexport default function View({\n  open,\n  saveOpen,\n  saveStatusOpen,\n  status,\n  dimensionProps,\n  imageProps,\n  header,\n  actions,\n  downloadDialog,\n  saveDialog,\n  saveStatusDialog,\n  collage,\n  controls,\n  collageMetaInfo,\n}) {\n  const { width, height, maxWidth, maxHeight, collageMetaRef } = dimensionProps;\n  const metaHeight = collageMetaRef.current ? collageMetaRef.current.offsetHeight : 0;\n  let showControls = false;\n  const { images, imgCount, handleLoad } = imageProps;\n  if (images.length > 0) {\n    showControls = true;\n  }\n  let content;\n  if (status === 'fetching') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={<Loading title=\"Fetching collage...\" />}\n      />\n    );\n  }\n\n  if (status === 'preparing') {\n    content = (\n      <>\n        {collage}\n        <Loading title=\"Preparing collage...\" />\n      </>\n    );\n  }\n\n  if (status === 'loading') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          <>\n            <Loading title={`Loading (${imageProps.newImagesLoaded} / ${imgCount}) images...`} />\n            {collage}\n          </>\n        }\n      />\n    );\n  }\n\n  if (status === 'empty') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          width ? (\n            <Stack direction=\"column\" spacing={2} justifyContent=\"space-around\">\n              <Box className=\"first-element\" justifyContent=\"center\" sx={{ display: 'flex' }}>\n                <AddPhotos handleChange={handleLoad} />\n              </Box>\n              <Typography\n                sx={{\n                  backgroundColor: 'faded.black',\n                  p: 0.5,\n                  color: 'form.stepper',\n                  fontWeight: 'bold',\n                  fontSize: '0.7rem',\n                  textAlign: 'center',\n                }}\n              >\n                Tip: Select {constants.minImages} - {constants.maxImages} images\n              </Typography>\n              <Typography\n                sx={{\n                  backgroundColor: 'faded.black',\n                  p: 0.5,\n                  color: 'form.stepper',\n                  fontWeight: 'bold',\n                  fontSize: '0.7rem',\n                }}\n              >\n                Note: Images with size {'>'} {constants.maxImageSize}MB will be resized\n              </Typography>\n            </Stack>\n          ) : (\n            <div />\n          )\n        }\n      />\n    );\n  }\n\n  if (status === 'ready') {\n    content = collage;\n  }\n  const leftPos = (Math.min(window.innerWidth, window.screen.availWidth) - maxWidth) / 2;\n\n  return (\n    <Box\n      component=\"div\"\n      sx={{\n        position: 'relative',\n      }}\n    >\n      {header}\n      {showControls ? actions : null}\n      {open ? downloadDialog : null}\n      {saveOpen ? saveDialog : null}\n      {saveStatusOpen ? saveStatusDialog : null}\n      <Stack\n        direction=\"column\"\n        width={maxWidth}\n        height={maxHeight + metaHeight}\n        sx={{\n          position: 'absolute',\n          left: leftPos,\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'gray',\n        }}\n      >\n        {collageMetaInfo}\n        {content}\n      </Stack>\n      {showControls ? controls : null}\n    </Box>\n  );\n}\n\nView.propTypes = {\n  dimensionProps: PropTypes.shape({\n    maxWidth: PropTypes.number.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    imageHeight: PropTypes.number.isRequired,\n    collageMetaRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n\n    headerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n    actionsRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n    footerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n  imageProps: PropTypes.shape({\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        src: PropTypes.string.isRequired,\n        naturalHeight: PropTypes.number.isRequired,\n        naturalWidth: PropTypes.number.isRequired,\n        aspectRatio: PropTypes.number.isRequired,\n        type: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    imgCount: PropTypes.number.isRequired,\n    handleLoad: PropTypes.func.isRequired,\n    loaded: PropTypes.number.isRequired,\n    newImagesLoaded: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  saveOpen: PropTypes.bool.isRequired,\n  saveStatusOpen: PropTypes.bool.isRequired,\n  status: PropTypes.string.isRequired,\n  header: PropTypes.node.isRequired,\n  actions: PropTypes.node.isRequired,\n  collage: PropTypes.node.isRequired,\n  controls: PropTypes.node.isRequired,\n  downloadDialog: PropTypes.node.isRequired,\n  saveDialog: PropTypes.node.isRequired,\n  saveStatusDialog: PropTypes.node.isRequired,\n  collageMetaInfo: PropTypes.node.isRequired,\n};\n","import { useContext, useEffect } from 'react';\nimport { ShepherdTour, ShepherdTourContext } from 'react-shepherd';\nimport 'shepherd.js/dist/css/shepherd.css';\nimport './intro.css';\n\nconst tourOptions = {\n  defaultStepOptions: {\n    cancelIcon: {\n      enabled: true,\n    },\n    highlightClass: 'highlight',\n    beforeShowPromise: () =>\n      new Promise((resolve) => {\n        setTimeout(() => {\n          window.scrollTo(0, 0);\n          resolve();\n        }, 500);\n      }),\n    scrollTo: false,\n  },\n  useModalOverlay: true,\n};\n\nconst defaultStep = {\n  buttons: [\n    { classes: 'shepherd-button-secondary', text: 'Exit', type: 'cancel' },\n    { classes: 'shepherd-button-primary', text: 'Back', type: 'back' },\n    { classes: 'shepherd-button-primary', text: 'Next', type: 'next' },\n  ],\n};\n\nconst steps = [\n  {\n    ...defaultStep,\n    id: 'collageName',\n    attachTo: { element: '.collageName', on: 'right' },\n    text: ['Collage Name'],\n  },\n  {\n    ...defaultStep,\n    id: 'intro',\n    attachTo: { element: '.first-element', on: 'top' },\n    title: 'Welcome to Collage Maker',\n    text: ['React-Shepherd is a JavaScript library for guiding users through your React app.'],\n  },\n  {\n    ...defaultStep,\n    id: 'collageType',\n    attachTo: { element: '.collageType', on: 'right' },\n    text: ['Collage Type'],\n  },\n];\n\nfunction TourInstance() {\n  const tour = useContext(ShepherdTourContext);\n\n  useEffect(() => {\n    if (tour) tour.start();\n  }, [tour]);\n\n  return <></>;\n}\n\nexport default function CollageIntro() {\n  return (\n    <ShepherdTour steps={steps} tourOptions={tourOptions}>\n      <TourInstance />\n    </ShepherdTour>\n  );\n}\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      icon={icon}\n      sx={{\n        py: 1,\n        fontWeight: 'bold',\n        color: 'gray',\n        outline: 'none',\n        '&:focus': {\n          color: 'white',\n          outline: 'none',\n        },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\nDBNA.defaultProps = {\n  handleChange: () => {},\n};\n\nDBNA.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Drawer from '@mui/material/Drawer';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopDrawer({ anchor, children, innerRef }) {\n  return (\n    <Drawer\n      anchor={anchor}\n      variant=\"permanent\"\n      PaperProps={{\n        ref: innerRef,\n        sx: {\n          height: 'fit-content',\n          top: '50%',\n          backgroundColor: 'transparent',\n          color: 'gray',\n          fontWeight: 'bold',\n          borderRadius: anchor === 'left' ? '0 10px 10px 0' : '10px 0 0 10px',\n          transform: 'translate(0, -50%)',\n          border: 0,\n        },\n      }}\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nDesktopDrawer.defaultProps = {\n  innerRef: () => {},\n};\n\nDesktopDrawer.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n  anchor: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Divider from '@mui/material/Divider';\n\nexport default function ControlsDivider() {\n  return <Divider sx={{ backgroundColor: 'gray', my: 1 }} variant=\"middle\" />;\n}\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport List from '@mui/material/List';\n// import { alpha } from '@mui/material/styles';\n\nimport DBNA from 'components/collage/DesktopActionItem';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport ControlsDivider from 'components/collage/ControlsDivider';\n\nexport default function DesktopActions({ actionsRef, onDownload, onSave }) {\n  const handleChange = (newValue) => {\n    if (newValue === 'download') {\n      onDownload();\n    }\n    if (newValue === 'save') {\n      onSave();\n    }\n  };\n\n  return (\n    <DesktopDrawer anchor=\"right\" innerRef={actionsRef}>\n      <List sx={{ backgroundColor: 'black' }}>\n        <DBNA label=\"Save\" icon={<SaveIcon />} handleChange={() => handleChange('save')} />\n        <ControlsDivider />\n        <DBNA\n          label=\"Download\"\n          icon={<DownloadIcon />}\n          handleChange={() => handleChange('download')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label={\n            <>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>Order</Typography>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>Print(s)</Typography>\n            </>\n          }\n          icon={<PrintIcon />}\n          handleChange={() => handleChange('print')}\n        />\n      </List>\n    </DesktopDrawer>\n  );\n}\n\nDesktopActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\n\nexport default function ClearCollageDialog({ open, onSubmit, onCancel, saveType }) {\n  return (\n    <Dialog open={open}>\n      <DialogTitle\n        sx={{\n          textAlign: 'center',\n          fontWeight: 'bold',\n          color: alpha('#000', 0.8),\n        }}\n      >\n        {saveType === 'new' ? 'Clear' : 'Delete'} Collage\n      </DialogTitle>\n      <DialogContent dividers>\n        <DialogContentText sx={{ fontWeight: 'bold', color: 'gray', pb: 1 }}>\n          Do you want to {saveType === 'new' ? 'clear' : 'delete'} this collage?\n        </DialogContentText>\n        <Typography variant=\"subtitle2\" sx={{ color: 'red', fontWeight: 'bold' }} noWrap>\n          Note:\n        </Typography>\n        <Typography sx={{ fontSize: '0.8rem', color: 'gray', fontWeight: 'bold' }}>\n          This change is not reversible\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onSubmit} sx={{ color: 'red' }}>\n          {saveType === 'new' ? 'Clear' : 'Delete'}\n        </Button>\n        <Button variant=\"outlined\" onClick={onCancel}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nClearCollageDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useRef, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\n// import { alpha } from '@mui/material/styles';\n\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function DesktopControls({\n  innerRef,\n  onRefresh,\n  photosComp,\n  editComp,\n  handleClear,\n  clearDelete,\n  saveType,\n}) {\n  const [imageOptionsOpen, setImageOptionsOpen] = useState(false);\n  const [editOptionsOpen, setEditOptionsOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const editRef = useRef(null);\n\n  const closeAll = () => {\n    clearDelete();\n    setImageOptionsOpen(false);\n    setEditOptionsOpen(false);\n    setClearOpen(false);\n  };\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (editRef.current && !editRef.current.contains(event.target)) {\n        closeAll();\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [editRef]);\n\n  const handlePhotosClick = () => {\n    const ioo = imageOptionsOpen;\n    setImageOptionsOpen((io) => !io);\n    if (ioo === true) closeAll();\n    // closeAll();\n    // if (imageOptionsOpen) {\n    //   setImageOptionsOpen((io) => !io);\n    //   closeAll();\n    // } else {\n    //   closeAll();\n    //   setImageOptionsOpen(true);\n    // }\n  };\n\n  const handleEditClick = () => {\n    if (editOptionsOpen) {\n      setEditOptionsOpen(false);\n    } else {\n      closeAll();\n      setEditOptionsOpen(true);\n    }\n  };\n  const handleRearrange = () => {\n    closeAll();\n    onRefresh();\n  };\n\n  const handleClearClick = () => {\n    if (clearOpen) {\n      setClearOpen(false);\n    } else {\n      closeAll();\n      setClearOpen(true);\n    }\n  };\n\n  const handleClearClose = () => setClearOpen(false);\n  const handleClearSubmit = () => {\n    handleClearClose();\n    handleClear();\n  };\n\n  return (\n    <DesktopDrawer anchor=\"left\">\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\" ref={innerRef}>\n        <List\n          sx={{\n            backgroundColor: 'black',\n            borderRadius: '0 10px 10px 0',\n          }}\n        >\n          <DBNA label=\"Rearrange\" icon={<AutoAwesomeMosaicIcon />} handleChange={handleRearrange} />\n          <ControlsDivider />\n          <DBNA label=\"Photos\" icon={<PhotoIcon />} handleChange={handlePhotosClick} />\n          <ControlsDivider />\n          <DBNA label=\"Edit\" icon={<EditIcon />} handleChange={handleEditClick} />\n          <ControlsDivider />\n          <DBNA\n            label={saveType === 'new' ? 'Clear' : 'Delete'}\n            icon={saveType === 'new' ? <RefreshIcon /> : <DeleteIcon />}\n            handleChange={handleClearClick}\n          />\n        </List>\n        {imageOptionsOpen ? photosComp : null}\n        {editOptionsOpen ? <div ref={editRef}>{editComp}</div> : null}\n        <ClearCollageDialog\n          open={clearOpen}\n          onSubmit={handleClearSubmit}\n          onCancel={handleClearClose}\n          saveType={saveType}\n        />\n      </Stack>\n    </DesktopDrawer>\n  );\n}\n\nDesktopControls.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  photosComp: PropTypes.node.isRequired,\n  editComp: PropTypes.node.isRequired,\n  handleClear: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopImageOptions({ onDelete, onAdd, clearDelete }) {\n  const handleAdd = () => {\n    clearDelete();\n    onAdd();\n  };\n\n  return (\n    <List\n      sx={{\n        backgroundColor: 'black',\n        borderRadius: '10px 10px 10px 10px',\n        height: 'fit-content',\n      }}\n    >\n      <DBNA label=\"Add\" icon={<AddPhotoAlternateIcon />} handleChange={handleAdd} />\n      <ControlsDivider />\n      <DBNA label=\"Delete\" icon={<DeleteIcon />} handleChange={onDelete} />\n    </List>\n  );\n}\n\nDesktopImageOptions.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\n\nexport default function EditControl({ paddingControl, radiusControl, colorControl, textControl }) {\n  return (\n    <Stack\n      direction=\"column\"\n      spacing={4}\n      sx={{\n        p: 3,\n        backgroundColor: 'black',\n        borderRadius: '10px 10px 10px 10px',\n        boxShadow: '0 0 10px inset rgba(255, 0, 0, 0.3)',\n      }}\n    >\n      {paddingControl}\n      {radiusControl}\n      {colorControl}\n      {textControl}\n    </Stack>\n  );\n}\n\nEditControl.propTypes = {\n  paddingControl: PropTypes.node.isRequired,\n  radiusControl: PropTypes.node.isRequired,\n  colorControl: PropTypes.node.isRequired,\n  textControl: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n\nexport default function MBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      value={label.toLowerCase()}\n      icon={icon}\n      sx={{\n        fontWeight: 'bold',\n        color: 'gray',\n        '&.Mui-selected': { color: 'white', outline: 'none' },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\n\nMBNA.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function MobileActions({ actionsRef, onDownload, onSave }) {\n  return (\n    <BottomNavigation\n      ref={actionsRef}\n      showLabels\n      sx={{ py: 1, fontWeight: 'bold', backgroundColor: alpha('#000', 0.6) }}\n    >\n      <MBNA label=\"Save\" icon={<SaveIcon />} handleChange={onSave} />\n      <MBNA label=\"Download\" icon={<DownloadIcon />} handleChange={onDownload} />\n      <MBNA label=\"Order Print(s)\" icon={<PrintIcon />} handleChange={() => {}} />\n    </BottomNavigation>\n  );\n}\n\nMobileActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { alpha } from '@mui/material/styles';\n\nexport default function MainControls({ value, handleChange, saveType }) {\n  return (\n    <BottomNavigation\n      showLabels\n      value={value}\n      onChange={handleChange}\n      sx={{\n        fontWeight: 'bold',\n        backgroundColor: alpha('#fff', 0.2),\n        '&.Mui-selected': { color: 'white' },\n      }}\n    >\n      <BottomNavigationAction\n        label=\"Rearrange\"\n        value=\"rearrange\"\n        icon={<AutoAwesomeMosaicIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Photos\"\n        value=\"photo\"\n        icon={<PhotoIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Edit\"\n        value=\"edit\"\n        icon={<EditIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label={saveType === 'new' ? 'Clear' : 'Delete'}\n        value=\"clear\"\n        icon={saveType === 'new' ? <RefreshIcon /> : <DeleteIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n    </BottomNavigation>\n  );\n}\n\nMainControls.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport Typography from '@mui/material/Typography';\nimport PaddingIcon from '@mui/icons-material/Padding';\nimport CropFreeIcon from '@mui/icons-material/CropFree';\nimport SquareIcon from '@mui/icons-material/Square';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TitleIcon from '@mui/icons-material/Title';\nimport { alpha } from '@mui/material/styles';\n\nexport default function EditOptions({\n  color,\n  editOptionsValue,\n  open,\n  handleOptionsClose,\n  handleEditOptionsClick,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={editOptionsValue}\n        onChange={handleEditOptionsClick}\n        sx={{\n          display: 'flex',\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          position: 'relative',\n          alignItems: 'center',\n        }}\n      >\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Padding\n            </Typography>\n          }\n          value=\"padding\"\n          icon={<PaddingIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Corner\n            </Typography>\n          }\n          value=\"border radius\"\n          icon={<CropFreeIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Color\n            </Typography>\n          }\n          value=\"color\"\n          icon={\n            <SquareIcon\n              sx={{\n                fill: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n                borderRadius: '5px',\n              }}\n            />\n          }\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label=\"Text\"\n          value=\"text\"\n          icon={<TitleIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nEditOptions.propTypes = {\n  editOptionsValue: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleEditOptionsClick: PropTypes.func.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function ImageOptions({ open, value, handleOptionsClose, handleDelete, handleAdd }) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={value}\n        sx={{\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          '&.Mui-selected': { color: 'white' },\n        }}\n      >\n        <MBNA label=\"Delete\" icon={<DeleteIcon />} handleChange={handleDelete} />\n        <MBNA label=\"Add\" icon={<AddPhotoAlternateIcon />} handleChange={handleAdd} />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nImageOptions.propTypes = {\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect, useRef } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport { alpha } from '@mui/material/styles';\n\nimport MainControls from 'components/collage/MainControls';\nimport EditOptions from 'components/collage/EditOptions';\nimport ImageOptions from 'components/collage/ImageOptions';\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function MobileControls({\n  optionProps,\n  actionProps,\n  dimensionProps,\n  handleClear,\n  saveType,\n  paddingControl,\n  radiusControl,\n  colorControl,\n  textControl,\n  editControl,\n  handleEditControl,\n  editOptionsValue,\n  handleEditOptionsValue,\n}) {\n  const { options, handleColorClick, displayColorPicker } = optionProps;\n  const { onRefresh, onDelete, clearDelete } = actionProps;\n  const { footerRef, handleImageAddClick } = dimensionProps;\n\n  const [mainOpen, setMainOpen] = useState(true);\n  const [value, setValue] = useState('');\n  const [editOpen, setEditOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageValue, setImageValue] = useState('');\n  const editRef = useRef(null);\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (editRef.current && !editRef.current.contains(event.target)) {\n        handleEditControl(null);\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [editRef]);\n\n  const handleImageOptionsClose = () => {\n    setImageOpen(false);\n    setImageValue('');\n    setMainOpen(true);\n    clearDelete();\n    setValue('');\n  };\n\n  const handleEditOptionsClose = () => {\n    setEditOpen(false);\n    handleEditControl(null);\n    handleEditOptionsValue('');\n    setMainOpen(true);\n    setValue('');\n  };\n\n  const handleEditOptionsClick = (e, nV) => {\n    handleEditOptionsValue(nV);\n    if (nV === 'padding') {\n      handleEditControl(paddingControl);\n    } else if (nV === 'border radius') {\n      handleEditControl(radiusControl);\n    } else if (nV === 'color') {\n      handleColorClick();\n    } else if (nV === 'text') {\n      handleEditControl(textControl);\n    }\n  };\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'padding') {\n      handleEditControl(paddingControl);\n    }\n  }, [options.padding, editOpen]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'border radius') {\n      handleEditControl(radiusControl);\n    }\n  }, [options.borderRadius, editOpen]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'color' && !!displayColorPicker) {\n      handleEditControl(colorControl);\n    }\n  }, [options.color, editOpen, displayColorPicker]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'text') {\n      handleEditControl(textControl);\n    }\n  }, [options.text, editOpen, options.topText]);\n\n  const handleImageClose = () => {\n    setImageValue('');\n    setImageOpen(false);\n    setMainOpen(true);\n  };\n\n  const handleChange = (event, newValue) => {\n    clearDelete();\n    handleImageClose();\n    handleEditOptionsClose();\n    setValue(newValue);\n    if (newValue === 'rearrange') {\n      onRefresh();\n    } else if (newValue === 'photo') {\n      setMainOpen(false);\n      setImageOpen(true);\n    } else if (newValue === 'edit') {\n      setMainOpen(false);\n      setEditOpen(true);\n    } else if (newValue === 'clear') {\n      setClearOpen(true);\n    }\n  };\n\n  const handleImageAdd = () => {\n    clearDelete();\n    handleImageAddClick();\n  };\n\n  const handleClearSubmit = () => {\n    handleClear();\n    setClearOpen(false);\n    setValue('');\n  };\n\n  const handleClearCancel = () => {\n    setClearOpen(false);\n    setValue('');\n  };\n\n  return (\n    <Paper\n      ref={footerRef}\n      sx={{\n        position: 'fixed',\n        top: Math.min(window.innerHeight, window.screen.availHeight),\n        backgroundColor: 'black',\n        borderRadius: 0,\n        width: Math.min(window.innerWidth, window.screen.availWidth),\n        transform: 'translate(0, -100%)',\n      }}\n      elevation={4}\n    >\n      <ClearCollageDialog\n        open={clearOpen}\n        onSubmit={handleClearSubmit}\n        onCancel={handleClearCancel}\n        saveType={saveType}\n      />\n      {editControl !== null ? (\n        <Box\n          ref={editRef}\n          sx={{\n            backgroundColor: alpha('#fff', 0.15),\n            p: 1,\n          }}\n        >\n          {editControl}\n        </Box>\n      ) : null}\n      <ImageOptions\n        open={imageOpen}\n        value={imageValue}\n        handleDelete={onDelete}\n        handleAdd={handleImageAdd}\n        handleOptionsClose={handleImageOptionsClose}\n      />\n      <EditOptions\n        color={options.color}\n        editOptionsValue={editOptionsValue}\n        open={editOpen}\n        handleOptionsClose={handleEditOptionsClose}\n        handleEditOptionsClick={handleEditOptionsClick}\n      />\n      {mainOpen ? (\n        <MainControls value={value} handleChange={handleChange} saveType={saveType} />\n      ) : null}\n    </Paper>\n  );\n}\n\nMobileControls.defaultProps = {\n  editControl: null,\n};\n\nMobileControls.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n  }).isRequired,\n  actionProps: PropTypes.shape({\n    onRefresh: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    clearDelete: PropTypes.func.isRequired,\n  }).isRequired,\n  handleClear: PropTypes.func.isRequired,\n  dimensionProps: PropTypes.shape({\n    handleImageAddClick: PropTypes.func.isRequired,\n    footerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n  paddingControl: PropTypes.node.isRequired,\n  radiusControl: PropTypes.node.isRequired,\n  colorControl: PropTypes.node.isRequired,\n  textControl: PropTypes.node.isRequired,\n  editControl: PropTypes.node,\n  handleEditControl: PropTypes.func.isRequired,\n  editOptionsValue: PropTypes.node.isRequired,\n  handleEditOptionsValue: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\n\nexport default function CollageType({ type, handleChange, sizes }) {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n      <Typography\n        sx={{\n          color: 'form.input',\n          fontSize: '0.87rem',\n          fontWeight: 'bold',\n        }}\n      >\n        Type:{' '}\n      </Typography>\n      <FormControl\n        variant=\"standard\"\n        size=\"small\"\n        margin=\"none\"\n        hiddenLabel\n        sx={{ alignItems: 'center' }}\n      >\n        <Select\n          className=\"collageType\"\n          id=\"demo-simple-select-standard\"\n          value={type}\n          onChange={handleChange}\n          label=\"CollageType\"\n          disableUnderline\n          inputProps={{\n            sx: {\n              p: 0,\n              fontWeight: 'bold',\n              fontSize: '0.82rem',\n              color: 'primary.main',\n              pl: 1,\n              minWidth: '40px',\n              alignItems: 'end',\n              display: 'flex',\n              minHeight: '30px',\n            },\n          }}\n        >\n          {Object.keys(sizes).map((key) => {\n            if (sizes[key].display === true) {\n              return (\n                <MenuItem\n                  divider\n                  key={key}\n                  value={key}\n                  sx={{\n                    alignItems: 'center',\n                    px: 1,\n                    minHeight: '35px',\n                    fontSize: '0.87rem',\n                    fontWeight: 'bold',\n                    color: 'gray',\n                  }}\n                >\n                  {sizes[key].icon}\n                  {sizes[key].text}\n                </MenuItem>\n              );\n            }\n            return null;\n          })}\n        </Select>\n      </FormControl>\n    </Stack>\n  );\n}\n\nCollageType.propTypes = {\n  type: PropTypes.string.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      icon: PropTypes.node,\n      display: PropTypes.bool.isRequired,\n    })\n  ).isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\n\nexport default function CollageImageCount({ count }) {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n      <Typography\n        sx={{\n          color: 'form.input',\n          fontSize: '0.87rem',\n          fontWeight: 'bold',\n          px: 1,\n        }}\n      >\n        Images:\n      </Typography>\n      <Typography\n        sx={{\n          color: 'primary.main',\n          fontSize: '0.87rem',\n          fontWeight: 'bold',\n          p: 0,\n        }}\n      >\n        {count}\n      </Typography>\n    </Stack>\n  );\n}\n\nCollageImageCount.propTypes = {\n  count: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport CollageType from 'components/collage/CollageType';\nimport CollageImageCount from 'components/collage/CollageImageCount';\n\nexport default function CollageMetaInfo({\n  collageMetaRef,\n  collageType,\n  width,\n  sizes,\n  handleTypeChange,\n  imageCount,\n}) {\n  const handleChange = (event) => {\n    const ct = event.target.value;\n    handleTypeChange(ct);\n  };\n\n  return (\n    <Stack\n      ref={collageMetaRef}\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-around\"\n      sx={{\n        width,\n        textAlign: 'middle',\n        px: 1,\n      }}\n    >\n      <CollageType type={collageType} sizes={sizes} handleChange={handleChange} />\n      <CollageImageCount count={imageCount} />\n    </Stack>\n  );\n}\n\nCollageMetaInfo.propTypes = {\n  collageType: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      icon: PropTypes.node,\n    })\n  ).isRequired,\n  handleTypeChange: PropTypes.func.isRequired,\n  imageCount: PropTypes.number.isRequired,\n  collageMetaRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function PaddingControl({ padding, handlePaddingChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n          mixBlendMode: 'difference',\n        }}\n      >\n        Padding\n      </Typography>\n      <Slider\n        aria-label=\"Padding\"\n        defaultValue={0}\n        value={padding}\n        valueLabelDisplay=\"auto\"\n        step={0.1}\n        min={0}\n        max={10}\n        onChange={handlePaddingChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nPaddingControl.propTypes = {\n  padding: PropTypes.number.isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function RadiusControl({ radius, handleRadiusChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n        }}\n      >\n        Corner Radius\n      </Typography>\n      <Slider\n        aria-label=\"Corner Radius\"\n        defaultValue={0}\n        value={radius}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        min={0}\n        max={40}\n        onChange={handleRadiusChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nRadiusControl.propTypes = {\n  radius: PropTypes.number.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport * as yup from 'yup';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport constants from 'static/config/collage';\nimport utils from 'utils';\n\nexport default function TextControl({\n  text,\n  handleTextChange,\n  topText,\n  handlePositionChange,\n  handleTextSubmit,\n  textError,\n  handleTextError,\n}) {\n  const textSchema = yup\n    .object({\n      text: yup\n        .string()\n        .max(\n          constants.maxColllageTextLength,\n          `Max allowed length is ${constants.maxColllageTextLength}`\n        ),\n    })\n    .required();\n\n  const isValid = async () => {\n    const textValid = await utils.isFieldValid('text', text, handleTextError, textSchema);\n    return textValid;\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      handleTextSubmit(e);\n    }\n  };\n\n  useEffect(() => isValid(), [text]);\n\n  return (\n    <Stack\n      sx={{\n        backgroundColor: 'transparent',\n      }}\n    >\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={2}>\n        <Typography sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}>\n          Collage Text\n        </Typography>\n        <FormGroup row>\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === false}\n                onChange={() => handlePositionChange(false)}\n                sx={{ color: 'white', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Bottom\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold' }}\n          />\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === true}\n                onChange={() => handlePositionChange(true)}\n                sx={{ color: 'gray', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Top\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold', fontSize: '0.8rem' }}\n          />\n        </FormGroup>\n      </Stack>\n      <TextField\n        variant=\"outlined\"\n        label=\"\"\n        defaultValue={text}\n        onKeyDown={handleKeyDown}\n        size=\"small\"\n        sx={{ width: '100%', mb: 1 }}\n        onChange={handleTextChange}\n        InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n        helperText={<Typography sx={{ fontSize: '0.75rem' }}>{textError}</Typography>}\n        error={!!textError}\n      />\n    </Stack>\n  );\n}\n\nTextControl.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  handlePositionChange: PropTypes.func.isRequired,\n  handleTextSubmit: PropTypes.func.isRequired,\n  textError: PropTypes.string.isRequired,\n  handleTextError: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { ChromePicker } from 'react-color';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function ColorControl({\n  color,\n  displayColorPicker,\n  handleClick,\n  handleClose,\n  handleChange,\n}) {\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      spacing={2}\n      sx={{ my: 2 }}\n    >\n      <Typography sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}>\n        Background Color\n      </Typography>\n      <Box\n        component=\"div\"\n        sx={{\n          padding: '2px',\n          background: '#fff',\n          borderRadius: '5px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        }}\n        onClick={handleClick}\n      >\n        <Box\n          component=\"div\"\n          sx={{\n            width: '70px',\n            height: '30px',\n            borderRadius: '18px',\n            background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n          }}\n        />\n      </Box>\n      <ColorPicker\n        open={displayColorPicker}\n        color={color}\n        handleClose={handleClose}\n        handleChange={handleChange}\n      />\n    </Stack>\n  );\n}\n\nColorControl.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport function ColorPicker({ open, color, handleClose, handleChange }) {\n  return open ? (\n    <>\n      <Box\n        component=\"div\"\n        sx={{\n          position: 'absolute',\n          zIndex: 3,\n          bottom: 10,\n        }}\n      >\n        <IconButton\n          sx={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            zIndex: 2,\n            backgroundColor: 'button.main',\n            p: 0,\n            transform: 'translate(0, -110%)',\n            border: '2px solid black',\n          }}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n        <ChromePicker color={color} onChange={handleChange} />\n      </Box>\n    </>\n  ) : null;\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\n\nexport default function CommonDialog({ open, message, progress, onClose }) {\n  return (\n    <Dialog open={open}>\n      {progress !== true ? (\n        <DialogTitle sx={{ textAlign: 'center', color: 'info', fontWeight: 'bold' }}>\n          Info\n        </DialogTitle>\n      ) : null}\n      <DialogContent dividers={progress !== true}>\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={2}>\n          {progress === true ? <CircularProgress /> : null}\n          <Typography variant=\"h6\">{message}</Typography>\n        </Stack>\n      </DialogContent>\n      {progress === false ? (\n        <DialogActions>\n          <Button variant=\"text\" onClick={onClose}>\n            Close\n          </Button>\n        </DialogActions>\n      ) : null}\n    </Dialog>\n  );\n}\n\nCommonDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  message: PropTypes.string.isRequired,\n  progress: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport useBase from 'hooks/collage/base';\nimport { useNavigate } from 'react-router-dom';\nimport constants from 'static/config/collage';\nimport HandleError from 'hocs/handle-error';\nimport Box from '@mui/material/Box';\n\nimport Collage from 'components/collage/Collage';\nimport DownloadDialog from 'components/collage/DownloadDialog';\nimport SaveDialog from 'components/collage/SaveDialog';\nimport SaveStatusDialog from 'components/collage/SaveStatusDialog';\nimport Header from 'components/collage/Header';\nimport Loading from 'components/Loading';\nimport View from 'components/collage/View';\nimport CollageIntro from 'components/collage/intro';\n\nimport DesktopActions from 'components/collage/DesktopActions';\nimport DesktopControls from 'components/collage/DesktopControls';\nimport DesktopImageOptions from 'components/collage/DesktopImageOptions';\nimport EditControl from 'components/collage/EditControl';\nimport MobileActions from 'components/collage/MobileActions';\nimport MobileControls from 'components/collage/MobileControls';\nimport CollageMetaInfo from 'components/collage/CollageMetaInfo';\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport TextControl from 'components/collage/TextControl';\nimport ColorControl, { ColorPicker } from 'components/collage/ColorControl';\nimport CommonDialog from 'components/collage/CommonDialog';\nimport COLLAGE_URLS from './urls';\n\nexport default function BaseCollage({ getCollage, clearCollage, saveType }) {\n  const { paperSizes } = constants;\n  const navigate = useNavigate();\n  const [details, setDetails] = useState({});\n  const [status, setStatus] = useState('fetching');\n  const [commonOpen, setCommonOpen] = useState(false);\n  const [commonMessage, setCommonMessage] = useState('');\n  const [commonProgress, setCommonProgress] = useState(false);\n  const [nameError, setNameError] = useState('');\n  const [textError, setTextError] = useState('');\n\n  const [\n    collageType,\n    ,\n    collageName,\n    ,\n    ,\n    dimensionProps,\n    optionProps,\n    actionProps,\n    imageProps,\n    treeProps,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n    handleCollageTypeChange,\n    handleNameChange,\n  ] = useBase(details);\n\n  const openCommonDialog = (message, progress) => {\n    if (message !== '') {\n      setCommonMessage(message);\n      setCommonProgress(progress);\n      setCommonOpen(true);\n    }\n  };\n\n  const closeCommonDialog = () => {\n    if (imageProps.imageCountMinError !== '') {\n      handleClear();\n      imageProps.setImageCountMinError('');\n    }\n    if (imageProps.imageCountMaxError !== '') {\n      imageProps.setImageCountMaxError('');\n    }\n    setCommonProgress(false);\n    setCommonMessage('');\n    setCommonOpen(false);\n  };\n\n  useEffect(() => imageProps.handleImageCount(imageProps.imgCount), [imageProps.imgCount]);\n\n  useEffect(() => {\n    if (imageProps.imageCountMinError !== '') {\n      openCommonDialog(imageProps.imageCountMinError, false);\n    }\n    if (imageProps.imageCountMinError !== '') {\n      openCommonDialog(imageProps.imageCountMaxError, false);\n    }\n  }, [imageProps.imageCountMinError, imageProps.imageCountMaxError]);\n\n  if (imageProps.imgCount === constants.minImages && actionProps.removeImage === true) {\n    actionProps.setRemoveImage(false);\n    openCommonDialog(`Need atleast ${constants.minImages} images for collage`, false);\n  }\n\n  const errors = [\n    nameError,\n    textError,\n    imageProps.imageCountMaxError,\n    imageProps.imageCountMinError,\n  ].filter((el) => el !== '');\n\n  const {\n    options,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClose,\n    handleColorClick,\n    handleColorChange,\n    handleTextChange,\n    handlePositionChange,\n    displayColorPicker,\n    editControl,\n    setEditControl,\n    editOptionsValue,\n    setEditOptionsValue,\n    handleTextSubmit,\n  } = optionProps;\n\n  useEffect(async () => {\n    if (Object.keys(details).length === 0) {\n      if (saveType === 'existing') {\n        const collageDetails = await getCollage(\n          imageProps.setImageCount,\n          imageProps.incrementNewImageCount\n        );\n        setDetails(collageDetails);\n      }\n      setStatus('fetch end');\n    }\n  }, []);\n\n  useEffect(() => {\n    let st = status;\n    if (st === 'fetching' && saveType === 'new') st = 'empty';\n    if (imageProps.imgCount === 0 && st === 'ready') {\n      st = 'empty';\n    }\n    if (imageProps.imgCount === 0 && Object.keys(details).length === 0 && st === 'fetch end') {\n      st = 'empty';\n    }\n    if (imageProps.images.length > 0 && imageProps.images.length === imageProps.imgCount) {\n      st = 'preparing';\n    }\n    if (imageProps.loaded >= imageProps.imgCount && imageProps.imgCount > 0) {\n      st = 'ready';\n    }\n    if (\n      imageProps.imgCount >= constants.minImages &&\n      imageProps.images.length < imageProps.imgCount\n    ) {\n      st = 'loading';\n    }\n    if (imageProps.imageCountMinError !== '') {\n      st = 'empty';\n      openCommonDialog(imageProps.imageCountMinError, false);\n    }\n    if (imageProps.imageCountMaxError !== '') {\n      if (imageProps.imgCount === 0) {\n        st = 'empty';\n      } else {\n        st = 'ready';\n      }\n      openCommonDialog(imageProps.imageCountMaxError, false);\n    }\n    setStatus(st);\n  }, [imageProps]);\n\n  const clearAll = async () => {\n    openCommonDialog('Deleting Collage', true);\n    setDetails({});\n    handleClear();\n    await clearCollage();\n    setStatus('fetch end');\n    closeCommonDialog();\n    if (saveType === 'existing') {\n      openCommonDialog('Navigating to collages page', true);\n      setTimeout(() => {\n        closeCommonDialog();\n        navigate(COLLAGE_URLS.COLLAGE_LIST_URL);\n      }, 3000);\n    }\n  };\n\n  const handleSave = async (name) => {\n    actionProps.onSaveClick();\n    const res = saveType === 'new' ? await newCollage(name) : await saveCollage(name);\n    if (res) {\n      setTimeout(() => {\n        if (saveType === 'new') clearAll();\n        actionProps.setSaveStart(false);\n        navigate(COLLAGE_URLS.COLLAGE_LIST_URL);\n      }, 3000);\n    }\n  };\n\n  const downloadDialog = (\n    <HandleError errors={errors} handleClose={actionProps.onDownloadClose}>\n      <DownloadDialog\n        open={actionProps.open}\n        onClick={actionProps.onDownloadClick}\n        onClose={actionProps.onDownloadClose}\n        sizes={paperSizes}\n        collageType={collageType}\n      />\n    </HandleError>\n  );\n\n  const saveDialog = (\n    <HandleError errors={errors} handleClose={actionProps.onSaveClose}>\n      <SaveDialog\n        collageName={collageName}\n        open={actionProps.saveOpen}\n        onClick={handleSave}\n        onClose={actionProps.onSaveClose}\n      />\n    </HandleError>\n  );\n\n  const saveStatusDialog = <SaveStatusDialog open={actionProps.saveStart} status={saveStatus} />;\n\n  const collage = (\n    <Collage\n      dimensionProps={dimensionProps}\n      imageProps={imageProps}\n      actionProps={actionProps}\n      collageCallback={collageCallback}\n      handleRemoveImage={handleRemoveImage}\n      options={optionProps.options}\n      tree={treeProps.tree}\n    />\n  );\n\n  const paddingControl = (\n    <PaddingControl padding={options.padding} handlePaddingChange={handlePaddingChange} />\n  );\n\n  const radiusControl = (\n    <RadiusControl radius={options.borderRadius} handleRadiusChange={handleRadiusChange} />\n  );\n\n  const colorControl = (\n    <ColorPicker\n      open={displayColorPicker}\n      color={options.color}\n      handleChange={handleColorChange}\n      handleClose={() => {\n        setEditControl(null);\n        handleColorClose();\n      }}\n    />\n  );\n\n  const desktopColorControl = (\n    <ColorControl\n      color={options.color}\n      displayColorPicker={displayColorPicker}\n      handleChange={handleColorChange}\n      handleClose={handleColorClose}\n      handleClick={handleColorClick}\n    />\n  );\n\n  const textControl = (\n    <TextControl\n      text={options.text}\n      handleTextChange={handleTextChange}\n      topText={options.topText}\n      handlePositionChange={handlePositionChange}\n      handleTextSubmit={handleTextSubmit}\n      textError={textError}\n      handleTextError={setTextError}\n    />\n  );\n\n  const mobileControls = (\n    <MobileControls\n      optionProps={optionProps}\n      actionProps={actionProps}\n      dimensionProps={dimensionProps}\n      handleClear={clearAll}\n      saveType={saveType}\n      paddingControl={paddingControl}\n      radiusControl={radiusControl}\n      colorControl={colorControl}\n      textControl={textControl}\n      editControl={editControl}\n      handleEditControl={setEditControl}\n      editOptionsValue={editOptionsValue}\n      handleEditOptionsValue={setEditOptionsValue}\n    />\n  );\n\n  const header = (\n    <Header\n      headerRef={dimensionProps.headerRef}\n      name={collageName}\n      handleNameChange={handleNameChange}\n      nameError={nameError}\n      handleNameError={setNameError}\n    />\n  );\n\n  const desktopPhotosComp = (\n    <DesktopImageOptions\n      onDelete={actionProps.onDelete}\n      onAdd={dimensionProps.handleImageAddClick}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n\n  const desktopEditComp = (\n    <EditControl\n      paddingControl={paddingControl}\n      radiusControl={radiusControl}\n      colorControl={desktopColorControl}\n      textControl={textControl}\n    />\n  );\n\n  const desktopControls = (\n    <DesktopControls\n      innerRef={dimensionProps.footerRef}\n      onRefresh={actionProps.onRefresh}\n      photosComp={desktopPhotosComp}\n      editComp={desktopEditComp}\n      handleClear={clearAll}\n      clearDelete={actionProps.clearDelete}\n      saveType={saveType}\n    />\n  );\n\n  const isMobile = window.innerWidth < window.innerHeight;\n  const controls = isMobile ? mobileControls : desktopControls;\n\n  const onSave = async () => actionProps.handleSave();\n\n  const actionsComp = isMobile ? (\n    <MobileActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={onSave}\n    />\n  ) : (\n    <DesktopActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={onSave}\n    />\n  );\n\n  const collageMetaInfo = (\n    <CollageMetaInfo\n      collageMetaRef={dimensionProps.collageMetaRef}\n      collageType={collageType}\n      width={dimensionProps.width}\n      sizes={paperSizes}\n      handleTypeChange={handleCollageTypeChange}\n      imageCount={imageProps.imgCount}\n    />\n  );\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'gray',\n        height: Math.min(window.innerHeight, window.screen.availHeight),\n        overflow: 'hidden',\n      }}\n    >\n      <CollageIntro />\n      <View\n        open={actionProps.open}\n        saveOpen={actionProps.saveOpen}\n        saveStatusOpen={actionProps.saveStart}\n        dimensionProps={dimensionProps}\n        imageProps={imageProps}\n        header={header}\n        actions={actionsComp}\n        downloadDialog={downloadDialog}\n        saveDialog={saveDialog}\n        saveStatusDialog={saveStatusDialog}\n        collage={collage}\n        controls={controls}\n        status={status}\n        saveType={saveType}\n        collageMetaInfo={collageMetaInfo}\n      />\n      <input\n        ref={dimensionProps.addImageRef}\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={imageProps.handleLoad}\n      />\n      {actionProps.generate ? <Loading title=\"Creating collage ...\" /> : null}\n      <CommonDialog\n        open={commonOpen}\n        message={commonMessage}\n        progress={commonProgress}\n        onClose={closeCommonDialog}\n      />\n    </Box>\n  );\n}\n\nBaseCollage.defaultProps = {\n  getCollage: () => {},\n  clearCollage: () => {},\n};\n\nBaseCollage.propTypes = {\n  getCollage: PropTypes.func,\n  clearCollage: PropTypes.func,\n  saveType: PropTypes.string.isRequired,\n};\n"],"names":["url","body","params","method","fetch","then","response","resp","console","log","newCollage","collageID","collageDetails","collage_id","helpers","process","JSON","stringify","error","saveCollage","upload","listCollages","nextToken","next_token","getThumbnail","collageId","getCollage","deleteCollage","checkOptimizeStatus","get","path","newUrl","options","credentials","headers","Headers","URLSearchParams","toString","ok","status","document","cookie","json","post","apiUrl","deleteMethod","OptionsButton","children","onClick","name","Button","id","variant","component","sx","color","borderRadius","backgroundColor","padding","defaultProps","AddPhotos","handleChange","type","hidden","multiple","accept","onChange","fontSize","Typography","fontWeight","defaultCollageName","defaultCollageType","tolerance","resizeImageWidth","lineHeight","textPadding","thumbnailHeight","maxNameLength","maxColllageTextLength","minImages","maxImages","maxImageSize","paperSizes","A4","display","width","height","text","icon","Description","mr","fill","downloadSizes","A3","A4LandScape","transform","A3LandScape","FBCoverDesktop","Facebook","FBCoverMobile","FBPost","WhatsappStatus","WhatsApp","InstaStory","Instagram","background","InstaPostSquare","resizeImageSlowly","image","origWidth","origHeight","reqWidth","reqHeight","tempCanvas","createElement","newWidth","newHeight","ctx","getContext","aspectRatio","scaleFactor","Math","floor","log2","drawImage","i","reqCanv","getClosest","arr","index1","index2","target","optimizeImage","origSize","maxSize","fileType","downScaleFactor","sqrt","resizedCanvas","Promise","resolve","toBlob","optimizedFile","optimizedSRC","URL","createObjectURL","imageOnLoad","e","file","detailsCallBack","naturalWidth","naturalHeight","src","title","Date","now","size","utils","imageDetail","targetAspectRatio","constants","time","newFile","newSRC","timeEnd","event","handleImageCount","handleNewImageCount","handleImageData","files","cnt","length","Array","from","map","Image","onload","revokeObjectURL","getCollageDimension","maxW","maxH","a","origAR","wrapText","x","y","maxWidth","textCanvas","font","textAlign","tempX","tempY","words","split","line","testLine","lineArray","n","measureText","push","getTextHeight","getCut","round","random","findClosest","start","end","mid","findImgPair","j","minMatchingCost","abs","getAspectRatio","cut","ar1","ar2","handleImageLoad","convertToRGBA","value","r","g","b","textCanvasDraw","textArray","position","canvasWidth","canvasHeight","textHeight","textBaseline","fillStyle","fillRect","chunk","textPart","fillText","parseInt","getImageDimensions","paperWidth","paperHeight","optimizeDimensions","maxPrintWidth","maxPrintHeight","problematicNodes","ar","optimumTreeSizes","pn","newRootWidth","newRootHeight","sort","TextDisplay","Stack","alpha","top","paddingX","fontFamily","letterSpacing","CollageImage","onLoad","left","Box","alt","DeleteImageButton","Tooltip","IconButton","bgcolor","Delete","Node","this","right","obj","fromObject","getScore","output","concat","copyNode","copy","newImages","findIndex","elem","origImage","replaceImages","rest","removeImageData","imageData","find","addImageData","delImg","handleRemoveImage","yOffset","xOffset","handleCollageImageLoad","newX","newY","pd","br","di","hri","yo","xo","hcil","DOMDisplay","RenderImage","tempCtx","radius","clipwidth","clipheight","save","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","canvasElement","CanvasDisplay","newImg","ResizeImage","ImageStyling","clearRect","images","tar","imageCount","slice","restImages","leftIndex","rightIndex","filter","item","index","includes","first","second","generate","th","adjustments","adjust","parentWidth","parentHeight","parentX","parentY","parentCut","nodeType","addSize","validateAddSize","lV","lPN","rV","rPN","valid","BinaryTree","undefined","root","tempTree","topText","lA","score","min","trys","bestAdjust","bestAspectRatio","tolerableDifference","ajstCnt","diff","copyTree","findBestAdjustTree","imageWidth","imageHeight","randPermuteImages","array","tempArray","temp","shuffleArray","collageArray","imgTree","generateCollageTree","aspR","bAR","toFixed","maxScore","maxElem","forEach","element","generateScore","uploadCollageImages","thumbnailCanvas","imageURLS","uploadCallback","imagePromises","Object","keys","thumbnailKey","blob","collageapi","Img","img","verifyPromises","uploadPromises","useBase","initialValue","useState","details","setDetails","collageName","setCollageName","collageType","setCollageType","uploadedImages","setUploadedImages","dimensions","headerRef","useRef","actionsRef","footerRef","collageMetaRef","addImageRef","setHeight","setImageHeight","setImageWidth","setWidth","maxHeight","setMaxHeight","setMaxWidth","setTextHeight","setDimensions","isMobile","window","innerWidth","innerHeight","headerHeight","current","offsetHeight","collageMetaHeight","otherHeight","screen","availWidth","availHeight","actionsWidth","offsetWidth","footerWidth","useEffect","addEventListener","removeEventListener","handleImageAddClick","click","useDimensions","optionsInitValue","setOptions","displayColorPicker","setDisplayColorPicker","editControl","setEditControl","editOptionsValue","setEditOptionsValue","handleTextChange","opts","clear","handlePaddingChange","handleRadiusChange","handleColorClick","dcp","handleColorClose","handleColorChange","clr","rgb","handlePositionChange","handleTextSubmit","useOptions","actions","open","setOpen","saveOpen","setSaveOpen","saveStart","setSaveStart","refresh","setRefresh","setGenerate","removeImage","setRemoveImage","printOptions","setPrintOptions","clearDelete","handleDownload","handleGenerateCallback","onDelete","ri","onDownloadClick","w","h","onDownloadClose","onRefresh","onSaveClose","onSaveClick","handleSave","useActions","newImgCount","setNewImageCount","newImagesLoaded","setNewImagesLoaded","imgCount","setImageCount","loaded","setLoaded","setImages","imageCountMaxError","setImageCountMaxError","imageCountMinError","setImageCountMinError","totalImages","handleLoad","remove","removeIndex","newImagesArr","getImageData","imageArr","incrementNewImageCount","useImages","treeState","loadingCallback","tree","setTree","newTree","reAdjust","imagesArr","treeUtils","bestAspectRatioTree","addOptions","useTree","thumbnail","setThumbnail","finalizing","saveStatus","setSaveStatus","updateStatus","key","st","generateThumbnail","thumbnailWidth","thumbnailTree","thumbnailDetails","getDetails","collage_type","created_at","last_updated_at","updateCollage","getURLS","thumbDets","getURLSResp","allSettled","apiHelpers","isEmptyTree","imagesText","iDets","tH","totalTextHeight","imgTitle","ct","newName","HandleError","errors","handleClose","Dialog","fullWidth","DialogTitle","DialogContent","dividers","alignItems","justifyContent","DialogContentText","pr","List","px","err","ListItem","listStyleType","DialogActions","Collage","dimensionProps","imageProps","actionProps","collageCallback","collage","setCollage","isEmpty","t","createCollage","collageElem","pw","ph","canvasTree","getCanvasTree","imgPW","imgPH","generateCollage","ctree","getCanvas","setTimeout","pW","pH","link","download","href","probNodes","newPW","newPH","newCanvasTree","newValid","newProbNodes","DownloadDialog","onClose","sizes","setValue","FormControl","InputLabel","Select","labelId","defaultValue","label","inputProps","sz","MenuItem","disabled","SaveDialog","setName","nameError","TextField","mb","InputProps","helperText","FailedIcon","Close","border","StatusIndicator","CircularProgress","Pending","CheckCircleOutline","Status","pending","done","running","failed","direction","OverAllStatus","counter","spacing","p","SaveStatusDialog","overAllStatus","setCounter","timerId","clearTimeout","statusArr","values","val","HeaderNameSection","handleNameError","editable","setEditable","inputWidth","setInputWidth","nameSchema","yup","max","required","isValid","nameValid","handleBlur","className","margin","autoFocus","onBlur","onKeyDown","keyCode","shiftKey","InputLabelProps","focused","style","marginX","cursor","m","Header","handleNameChange","belowmd","useMediaQuery","theme","breakpoints","down","Paper","ref","elevation","postion","Link","underline","ArrowBack","EmptyCollage","loadComponent","backgroundImage","collageBack","backgroundSize","objectFit","View","content","saveStatusOpen","header","downloadDialog","saveDialog","saveStatusDialog","controls","collageMetaInfo","metaHeight","showControls","Loading","leftPos","tourOptions","defaultStepOptions","cancelIcon","enabled","highlightClass","beforeShowPromise","scrollTo","useModalOverlay","defaultStep","buttons","classes","steps","attachTo","on","TourInstance","tour","useContext","ShepherdTourContext","CollageIntro","DBNA","BottomNavigationAction","showLabel","py","outline","DesktopDrawer","anchor","innerRef","Drawer","PaperProps","ControlsDivider","Divider","my","DesktopActions","onDownload","onSave","newValue","Save","Download","Print","ClearCollageDialog","onSubmit","onCancel","saveType","pb","noWrap","DesktopControls","photosComp","editComp","handleClear","imageOptionsOpen","setImageOptionsOpen","editOptionsOpen","setEditOptionsOpen","clearOpen","setClearOpen","editRef","closeAll","handleClickOutside","contains","handleClearClose","AutoAwesomeMosaic","Photo","ioo","io","Edit","Refresh","DesktopImageOptions","onAdd","AddPhotoAlternate","EditControl","paddingControl","radiusControl","colorControl","textControl","boxShadow","MBNA","toLowerCase","MobileActions","BottomNavigation","showLabels","MainControls","EditOptions","handleOptionsClose","handleEditOptionsClick","borderTop","Padding","CropFree","Square","Title","ImageOptions","handleDelete","handleAdd","MobileControls","optionProps","handleEditControl","handleEditOptionsValue","mainOpen","setMainOpen","editOpen","setEditOpen","imageOpen","setImageOpen","imageValue","setImageValue","handleEditOptionsClose","nV","CollageType","hiddenLabel","disableUnderline","pl","minWidth","minHeight","divider","CollageImageCount","count","CollageMetaInfo","handleTypeChange","PaddingControl","mixBlendMode","Slider","valueLabelDisplay","step","RadiusControl","TextControl","textError","handleTextError","textSchema","textValid","FormGroup","row","FormControlLabel","disableTypography","control","Checkbox","checked","ColorControl","handleClick","ColorPicker","zIndex","bottom","CommonDialog","message","progress","BaseCollage","clearCollage","navigate","useNavigate","setStatus","commonOpen","setCommonOpen","commonMessage","setCommonMessage","commonProgress","setCommonProgress","setNameError","setTextError","treeProps","handleCollageTypeChange","openCommonDialog","closeCommonDialog","el","clearAll","COLLAGE_URLS","desktopColorControl","mobileControls","desktopPhotosComp","desktopEditComp","desktopControls","actionsComp","overflow"],"sourceRoot":""}