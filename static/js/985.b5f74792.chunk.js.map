{"version":3,"file":"static/js/985.b5f74792.chunk.js","mappings":"iJA2BqB,aAUpB,OAVoB,0BAArB,WAAsBA,EAAKC,GAAI,8EAEW,OAFX,SAErBC,EAAS,CAAED,KAAAA,EAAME,OAAQ,OAAQ,EAAD,OACnBC,MAAMJ,EAAKE,GAAQG,MAAK,SAACC,GAAQ,OAAKA,CAAQ,IAAE,KAAD,EAAxD,OAAJC,EAAI,yBACHA,GAAI,OAGQ,OAHR,yBAGXC,QAAQC,IAAI,EAAD,IAAQ,kFAGtB,sBAkED,KACEC,WAtGF,SAAoBC,EAAWC,GAC7B,IACE,IACMV,EAAS,CAAEW,WAAYF,GAE7B,OAAOG,EAAAA,EAAAA,KADSC,oCAFH,mBAGsBb,EAAQc,KAAKC,UAAUL,GAK5D,CAJE,MAAOM,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EA4FEC,YA1FF,SAAqBR,EAAWC,GAC9B,IACE,IACMV,EAAS,CAAEW,WAAYF,GAE7B,OAAOG,EAAAA,EAAAA,KADSC,oCAFH,oBAGsBb,EAAQc,KAAKC,UAAUL,GAK5D,CAJE,MAAOM,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EAgFEE,OAhFD,SACqB,EAAD,mCAgFnBC,aApEF,SAAsBC,GACpB,IACE,IACMpB,EAAS,CAAEqB,WAAYD,GAE7B,OAAOR,EAAAA,EAAAA,IADSC,oCAFH,oBAGqBb,EAKpC,CAJE,MAAOgB,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EA0DEM,aAxDF,SAAsBC,GACpB,IACE,IACMvB,EAAS,CAAEW,WAAYY,GAE7B,OAAOX,EAAAA,EAAAA,IADSC,oCAFH,yBAGqBb,EAKpC,CAJE,MAAOgB,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EA8CEQ,WA5CF,SAAoBD,GAClB,IACE,IACMvB,EAAS,CAAEW,WAAYY,GAE7B,OAAOX,EAAAA,EAAAA,IADSC,oCAFH,mBAGqBb,EAKpC,CAJE,MAAOgB,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EAkCES,cAhCF,SAAuBF,GACrB,IACE,IACMvB,EAAS,CAAEW,WAAYY,GAE7B,OAAOX,EAAAA,EAAAA,aADSC,oCAFH,sBAG8Bb,EAK7C,CAJE,MAAOgB,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EAsBEU,oBApBF,SAA6BH,GAC3B,IACE,IACMvB,EAAS,CAAEW,WAAYY,GAE7B,OAAOX,EAAAA,EAAAA,IADSC,oCAFH,6BAGqBb,EAKpC,CAJE,MAAOgB,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,E,kDCtGMW,EAAG,yCAAG,WAAO7B,EAAK8B,GAAI,8FAO6B,OAP3B5B,EAAM,+BAAG,CAAC,EAClC6B,EAAM,kBAAc/B,GAAG,OAAG8B,GACxBE,EAAU,CACd7B,OAAQ,MACR8B,YAAa,UACbC,QAAS,IAAIC,QAAQ,CAAE,eAAgB,sBAEzCJ,GAAM,WAAQ,IAAIK,gBAAgBlC,GAAQmC,YAAa,SACpCjC,MAAM2B,EAAQC,GAAS,KAAD,EAA/B,IAAJzB,EAAI,QACA+B,GAAG,CAAD,mBACU,MAAhB/B,EAAKgC,OAAc,iBAEyC,OAD9DC,SAASC,OACP,4DAA4D,kBACvD,CAAEF,OAAQ,oBAAmB,WAElB,MAAhBhC,EAAKgC,OAAc,0CACd,CAAEA,OAAQ,cAAa,iCAI3BhC,EAAKmC,QAAM,4CACnB,gBArBQ,wCAuBHC,EAAI,yCAAG,WAAO3C,EAAK8B,EAAM5B,EAAQD,GAAI,8EAQvC,OAPE2C,EAAM,kBAAc5C,GAAG,OAAG8B,GAC9Bc,GAAM,WAAQ,IAAIR,gBAAgBlC,GAAQmC,YACpCL,EAAU,CACd7B,OAAQ,OACR8B,YAAa,UACbC,QAAS,IAAIC,QAAQ,CAAE,eAAgB,qBACvClC,KAAAA,GACD,kBACMG,MAAMwC,EAAQZ,GAAS3B,MAAK,SAACC,GAClC,OAAKA,EAASgC,GAGPhC,EAASoC,OAFP,CAAEH,OAAQ,QAGrB,KAAE,2CACH,gBAfS,4CAiBJM,EAAY,yCAAG,WAAO7C,EAAK8B,EAAM5B,GAAM,8EAOzC,OANE0C,EAAM,kBAAc5C,GAAG,OAAG8B,GAC9Bc,GAAM,WAAQ,IAAIR,gBAAgBlC,GAAQmC,YACpCL,EAAU,CACd7B,OAAQ,SACR8B,YAAa,UACbC,QAAS,IAAIC,QAAQ,CAAE,eAAgB,sBACxC,kBACM/B,MAAMwC,EAAQZ,GAAS3B,MAAK,SAACC,GAClC,OAAKA,EAASgC,GAGPhC,EAASoC,OAFP,CAAEH,OAAQ,QAGrB,KAAE,2CACH,gBAdiB,0CAelB,KAAiBV,IAAAA,EAAKc,KAAAA,EAAME,aAAAA,E,6FCnDb,SAASC,EAAc,GAA8B,IAA5BC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KACzD,OACE,SAACC,EAAA,EAAM,CACLC,GAAIF,EACJG,QAAQ,YACRC,UAAU,QACVL,QAASA,EACTM,GAAI,CACFC,MAAO,aACPC,aAAc,GACdC,gBAAiB,cACjBC,QAAS,UACT,UAAW,CACTH,MAAO,aACPE,gBAAiB,gBAEnB,SAEDV,GAGP,CAEAD,EAAca,aAAe,CAC3BX,QAAS,WAAO,G,eCvBH,SAASY,EAAU,GAAmB,IAAjBC,EAAY,EAAZA,aAClC,OACE,UAACf,EAAa,CAACG,KAAK,MAAK,WACvB,kBACEa,KAAK,OACLC,QAAM,EACNC,UAAQ,EACRC,OAAO,UACPC,SAAUL,KAEZ,SAAC,IAAY,CAACP,GAAI,CAAEa,SAAU,WAC9B,SAACC,EAAA,EAAU,CAACd,GAAI,CAAEe,WAAY,QAAS,SAAC,iBAG9C,C,6FCde,SAASC,EAAY,GAAoB,IAAlBC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KACvCxE,EACK,KAATwE,EAAW,kBACID,EAAO,kCAA0BC,GAAI,kBACrCD,EAAO,qBACxB,OACE,cACEE,KAAMzE,EACN0E,OAAO,QACPC,MAAO,CAAEC,eAAgB,OAAQrB,MAAO,SAAU,UAElD,SAAC,IAAM,CACLO,KAAK,SACLV,QAAQ,WACRE,GAAI,CACFE,aAAc,MACdqB,YAAa,QACbR,WAAY,OACZd,MAAO,QACP,UAAW,CACTA,MAAO,QACPsB,YAAa,QACbpB,iBAAiBqB,EAAAA,EAAAA,IAAM,OAAQ,MAEjC,SACH,WAKP,C,6DCnCoB,SAELC,EAAQ,GAAD,4CAIrB,OAJqB,0BAAtB,WAAuBC,GAAS,4FACXC,EAAAA,EAAAA,UAAaD,GAAWE,UAAU,KAAD,EAA1C,KAAJC,EAAI,QACDC,OAAO,CAAD,wCAASD,GAAI,gCACrB,IAAE,4CACV,sBAED,SAASE,EAAUL,GACjB,OAAOC,EAAAA,EAAAA,UAAaD,GAAWM,OACjC,CAAC,SAEcC,IAAiB,4CAK/B,OAL+B,0BAAhC,yGACqBR,EAAQ,WAAW,KAAD,EACO,GADtCI,EAAI,OACV3E,QAAQC,IAAI,yBAA0B0E,IAClCA,EAAKC,OAAO,CAAD,wCAASD,EAAK,IAAE,gCACxB,CAAC,GAAC,4CACV,sBAE4B,aAI5B,OAJ4B,0BAA7B,2GACwBI,IAAoB,KAAD,EAA5B,OAAPC,EAAO,gBACQT,EAAQ,UAAU,KAAD,EAA1B,OAANU,EAAM,yBACL,CAAED,QAAAA,EAASC,OAAAA,IAAQ,4CAC3B,sBAOkB,aAElB,OAFkB,0BAAnB,WAAoBC,EAAMV,GAAS,+FAC1BU,EAAKC,KAAI,SAACC,GAAE,OAAKX,EAAAA,EAAAA,UAAaD,GAAWa,IAAID,EAAG,KAAC,4CACzD,sBAED,KAAiBE,eAjBhB,WAE4B,gCAeIC,iBATjC,WACEV,EAAU,WACVA,EAAU,SACZ,EAMmDW,KANlD,SAEmB,EAAD,mC,mFCPnB,SAASC,EAAWC,EAAKC,EAAQC,EAAQ1B,GACvC,OAAIA,EAASwB,EAAIC,IAAWD,EAAIE,GAAU1B,EAAe0B,EAClDD,CACT,CA0EA,SAASE,EAAeC,EAAOC,EAAUC,EAAWC,GAClD,IAAMC,EAASlE,SAASmE,cAAc,UAKtC,OAJAD,EAAOE,MAAQL,EACfG,EAAOG,OAASL,EACJE,EAAOI,WAAW,MAC1BC,UAAUT,EAAO,EAAG,EAAGC,EAAUC,GAC9BE,EAAOM,UAAUP,EAC1B,CAWA,SAASQ,EAAcX,EAAOC,EAAUC,GACtC,IAAME,EAASlE,SAASmE,cAAc,UAKtC,OAJAD,EAAOE,MAAQL,EACfG,EAAOG,OAASL,EACJE,EAAOI,WAAW,MAC1BC,UAAUT,EAAO,EAAG,EAAGC,EAAUC,GAC9BE,EAAOM,UAAU,aAAc,GACxC,CAiCA,SAASE,EAAcC,GAErB,OADA3G,QAAQC,IAAI,iBAAkB0G,GACvB,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcN,GACzBI,EAAWG,OAAS,WAClBL,EAAQE,EAAWI,OACrB,EACAJ,EAAWK,QAAU,SAAC1G,GACpBoG,EAAOpG,EACT,CACF,GACF,CAc8B,aAsC7B,OAtC6B,0BAA9B,WACE2G,EACAC,EACAC,EACAC,GAAe,sEAEXH,EAAMnD,OAAOuD,QACfH,GAAiB,SAACI,GAAG,OAAKA,EAAML,EAAMnD,OAAOuD,MAAM7C,MAAM,IACzD2C,EAAoBF,EAAMnD,OAAOuD,MAAM7C,QACzB+C,MAAMC,KAAKP,EAAMnD,OAAOuD,OAChCtC,IAAG,yCAAC,WAAOwB,GAAI,4EAwBjB,OAvBIb,EAAQ,IAAI+B,OACZX,OAAS,SAACY,GACd,MAA6CA,EAAE5D,OAAvC6D,EAAY,EAAZA,aAAcC,EAAa,EAAbA,cAAeC,EAAG,EAAHA,IAC/BC,EAAK,UAAMC,KAAKC,MAAK,YAAIzB,EAAKlE,MACpCzC,QAAQC,IAAI,oBAAqBiI,GACjC,IAAMG,EAAcN,EAAeC,EACnChI,QAAQsI,KAAK,6BAA8BJ,GAC3C,IAAMK,EAAe9B,EAAcX,EAAO,KAAM,KAAOuC,GACvDrI,QAAQwI,QAAQ,6BAA8BN,GAC9ClI,QAAQC,IAAI,aAAciI,EAAOvB,EAAK8B,KAAMF,EAAa3D,QACzD,IAAM8D,EAAc,CAClBR,MAAAA,EACAD,IAAKM,EACLI,YAAaV,EACbW,eAAgBZ,EAChBa,cAAed,EACfC,cAAe,KAAOK,EACtBN,aAAc,KACdM,YAAAA,EACA/E,KAAMqD,EAAKrD,KACXqD,KAAAA,GAEFa,EAAgBkB,EAClB,EAAE,SACgBhC,EAAcC,GAAM,KAAD,EAArCb,EAAMmC,IAAG,kDACV,mDA1BQ,KA2BV,2CACF,wBAED,SAASa,EAAoBC,EAAMC,EAAMC,GACvC,IAAMC,EAASH,EAAOC,EACtB,OAAIE,EAASD,EAAU,CAACF,EAAMA,EAAOE,GACjCC,EAASD,EAAU,CAACD,EAAOC,EAAGD,GAC3B,CAACD,EAAMC,EAChB,CAEA,SAASG,EAASC,EAAMC,EAAGC,EAAGC,EAAU5F,EAAU6F,GAGhD,GAAoB,IAAhBJ,EAAKxE,OAAc,MAAO,GAC9B,IACM6E,EAAazH,SAASmE,cAAc,UAC1CsD,EAAWrD,MAAQmD,EAAW,GAC9BE,EAAWpD,OAAS,IACpB,IAAMqD,EAAMD,EAAWnD,WAAW,MAClCoD,EAAIC,KAAI,UAAMhG,EAAQ,YACtB+F,EAAIE,UAAY,SAShB,IARA,IAAMC,EAAQR,EACVS,EAAQR,EACNS,EAAQX,EAAKY,MAAM,KACrBC,EAAO,GACPC,EAAW,GACTC,EAAY,GAGTC,EAAI,EAAGA,EAAIL,EAAMnF,OAAQwF,GAAK,EAAG,CAExCF,GAAQ,UAAOH,EAAMK,GAAE,KACvB,IACMC,EADUX,EAAIY,YAAYJ,GACN9D,MAC1BpG,QAAQC,IACN,aACAgK,EACAC,EACAG,EACAZ,EAAWrD,MACXsD,EAAIa,eAGFF,EAAYZ,EAAWrD,OAASgE,EAAI,GAEtCD,EAAUK,KAAK,CAACP,EAAMJ,EAAOC,IAE7BA,GAASN,EAETS,EAAI,UAAMF,EAAMK,GAAE,KAClBF,EAAQ,UAAMH,EAAMK,GAAE,MAGtBH,GAAI,UAAOF,EAAMK,GAAE,KAIjBA,IAAML,EAAMnF,OAAS,GACvBuF,EAAUK,KAAK,CAACP,EAAMJ,EAAOC,GAEjC,CAEA,OAAOK,CACT,CAEA,SAASM,EACPrB,EACAC,EACAC,EACAC,EACA5F,EACA6F,EACAkB,GAUA,OARkBvB,EAChBC,EACAC,EACAC,EACAC,EACA5F,EAAW+G,EACXlB,EAAakB,GAEE9F,OAAS4E,EAAakB,CACzC,CAiDA,KACEC,OA1SF,WAEE,MADe,CAAC,IAAK,KACPC,KAAKC,MAAMD,KAAKE,UAChC,EAwSEC,YAvUF,SAAqBrF,EAAKxB,GACxB,IAAMkG,EAAI1E,EAAId,OAEd,GAAIV,GAAUwB,EAAI,GAAI,OAAO,EAC7B,GAAIxB,GAAUwB,EAAI0E,EAAI,GAAI,OAAOA,EAAI,EAKrC,IAHA,IAAIY,EAAQ,EACRC,EAAMb,EACNc,EAAM,EACHF,EAAQC,GAAK,CAGlB,GAAIvF,EAFJwF,GAAOF,EAAQC,GAAO,KAEL/G,EAAQ,OAAOgH,EAEhC,GAAIhH,EAASwB,EAAIwF,GAAM,CACrB,GAAIA,EAAM,GAAKhH,EAASwB,EAAIwF,EAAM,GAChC,OAAOzF,EAAWC,EAAKwF,EAAM,EAAGA,EAAKhH,GACvC+G,EAAMC,CACR,KAAO,CACL,GAAIA,EAAMd,EAAI,GAAKlG,EAASwB,EAAIwF,EAAM,GACpC,OAAOzF,EAAWC,EAAKwF,EAAKA,EAAM,EAAGhH,GACvC8G,EAAQE,EAAM,CAChB,CACF,CAEA,OAAOA,CACT,EA8SEC,YAvSF,SAAqBzF,EAAKxB,GAMxB,IALA,IAAI8G,EAAQ,EACRC,EAAMvF,EAAId,OAAS,EACnBwG,EAAIJ,EACJK,EAAIJ,EACJK,EAAkBV,KAAKW,IAAI7F,EAAIsF,GAAStF,EAAIuF,GAAO/G,GAChD8G,GAASC,GACd,GAAIvF,EAAIsF,GAAStF,EAAIuF,GAAO/G,EACtB0G,KAAKW,IAAI7F,EAAIsF,GAAStF,EAAIuF,GAAO/G,GAAUoH,IAE7CA,EAAkBV,KAAKW,IAAI7F,EAAIsF,GAAStF,EAAIuF,GAAO/G,GACnDkH,EAAIJ,EACJK,EAAIJ,GAENA,GAAO,MACF,MAAIvF,EAAIsF,GAAStF,EAAIuF,IAAQ/G,GAO7B,CAELkH,EAAIJ,EACJK,EAAIJ,EACJ,KACF,CAXML,KAAKW,IAAI7F,EAAIsF,GAAStF,EAAIuF,GAAO/G,GAAUoH,IAC7CA,EAAkBV,KAAKW,IAAI7F,EAAIsF,GAAStF,EAAIuF,GAAO/G,GACnDkH,EAAIJ,EACJK,EAAIJ,GAEND,GAAS,CAMX,CAGF,OADqBJ,KAAKC,MAAMD,KAAKE,UACZ,CAACM,EAAGC,GACtB,CAACA,EAAGD,EACb,EAwQEI,eAtQF,SAAwBC,EAAKC,EAAKC,GAChC,MAAY,MAARF,EAAoBC,EAAMC,EACtBD,EAAMC,GAAQD,EAAMC,EAC9B,EAoQEC,gBA/KD,SAC8B,EAAD,uCA+K5BC,aAxOF,SAAsBC,EAAgBvC,EAAUwC,EAAcC,GAC5D,IAAMC,EAAa,GACnBH,EAAeI,SAAQ,SAACC,GACtB,IAAMrG,EAAQ,IAAI+B,MAClB/B,EAAMoB,OAAS,WACb,IAAQgB,EAA6BiE,EAA7BjE,MAAOG,EAAsB8D,EAAtB9D,YAAa/E,EAAS6I,EAAT7I,KAOtB8I,EAAY,CAChBlE,MAAAA,EACAD,IARcpC,EACdC,EACAyD,EACAA,EAAWlB,EACX8D,EAAU7I,MAKV0E,cAAeuB,EAAWlB,EAC1BN,aAAcwB,EACdlB,YAAAA,EACA/E,KAAAA,GAEF2I,EAAWzB,KAAK4B,GAChBL,GAAa,SAACM,GACZ,IAAMC,EAAMD,EAAKE,WAAU,SAACC,GAAI,OAAKA,EAAKtE,QAAUiE,EAAUjE,KAAK,IACnE,MAAM,GAAN,eAAWmE,EAAKI,MAAM,EAAGH,IAAI,CAAEF,IAAS,OAAKC,EAAKI,MAAMH,EAAM,IAChE,IACAN,EAAcI,EAChB,EACAtG,EAAMmC,IAAMkE,EAAUlE,GACxB,GACF,EA4MEkB,SAAAA,EACAuD,cAhCoB,SAACC,GAAK,qBAClBA,EAAMC,EAAC,aAAKD,EAAME,EAAC,aAAKF,EAAMG,EAAC,aAAKH,EAAM1D,EAAC,MAgCnDH,oBAAAA,EACAjD,eAAAA,EACAa,cAAAA,EACAqG,oBAjMF,SAA6BpG,GAC3B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAa,IAAIC,WACvBD,EAAWiG,QAAQ,IAAIC,KAAKtG,IAC5BI,EAAWG,OAAS,WAClBL,EAAQE,EAAWI,OACrB,EACAJ,EAAWK,QAAU,SAAC1G,GACpBoG,EAAOpG,EACT,CACF,GACF,EAuLEwM,eA9WF,SACExD,EACAyD,EACAC,EACA1C,EACA2C,EACAC,GAEA5D,EAAIC,KAAI,UAAoB,GAAde,EAAgB,YAC9BhB,EAAIE,UAAY,SAChBF,EAAI6D,aAAe,MACnB7D,EAAI8D,UAAY,YAChB9D,EAAI+D,SAAS,EAAGL,EAAUC,EAAaD,EAAWE,GAClD5D,EAAI8D,UAAY,QAEhBxN,QAAQC,IAAI,aAAckN,EAAWG,GACrC,IAC6B,EAD7B,UACoBH,GAAS,IAA7B,2BAA+B,CAAC,IAArBO,EAAK,QACd,UAAwBA,EAAK,GAAtBC,EAAQ,KAAIrE,EAAC,KACpBI,EAAIkE,SAASD,EAAUN,EAAc,EAAG/D,EAAI8D,EAAW,IAAM1C,EAC/D,CAAC,+BACH,EA0VED,cAAAA,EACAoD,mBA9DF,SACEC,EACAC,EACA3E,EACAC,EACAC,EACA3F,EACA6F,EACAkB,EACArC,GAWA,OAAOS,EAAoBgF,EAAYC,EATpBtD,EACjBrB,EACAC,EACAC,EACAwE,EACAnK,EACA6F,EACAkB,GAE+DrC,EACnE,EA0CE2F,mBArCF,SAA4BC,EAAeC,EAAgBC,GACzD,IAAMC,EAAKH,EAAgBC,EACrBG,EAAmBF,EAAiBhJ,KAAI,SAACmJ,GAC7C,IAAMC,EACHN,EAAgBK,EAAG3B,MAAM5E,aAAgBuG,EAAG3B,MAAMvG,MAC/CoI,EAAgBD,EAAeH,EAGrC,MAAO,CADOH,EAAgBM,EAAeL,EAAiBM,EAC/C,CAACD,EAAcC,GAChC,IASA,OARAH,EAAiBI,MAAK,SAACxF,EAAG6D,GAAC,OAAKA,EAAE,GAAK7D,EAAE,EAAE,IAC3CjJ,QAAQC,IACN,qBACAoO,EACAF,EACAF,EACAC,GAEKG,EAAiB,GAAG,EAC7B,EAmBE5H,cAAAA,E,kSC/VK,SAASiI,EAAc,GAA2B,IAAzBjM,EAAI,EAAJA,KAAMkM,EAAO,EAAPA,QAASC,EAAK,EAALA,MACvCC,EAAWlH,MAAMC,KAAKgH,GAAO,GAAGE,cACtC,OACE,SAAC,IAAM,CACLhM,GAAI,CACFE,aAAc,MAEdqB,aAAaC,EAAAA,EAAAA,IAAM,OAAQ,IAC3ByK,eAAgB,eAElBC,IAAKvM,EACLwF,IAAK0G,EAAQ,SAEZE,GAGP,CAEA,SAASI,EAAY,GAA6C,IAA3CxM,EAAI,EAAJA,KAAMmM,EAAK,EAALA,MAAOM,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OACrD,OACE,SAAC,IAAG,CACFtM,GAAI,CACFuM,QAAS,OACTC,WAAY,SACZ1F,UAAW,SACX2F,YAAa,QACb,UAEF,SAAC,IAAO,CACNrH,OACE,iCACE,SAAC,IAAU,UAAEzF,KACb,SAAC,IAAU,UAAEmM,OAEhB,UAED,SAAC,IAAU,CACTpM,QAAS2M,EACT1G,KAAK,QACL,gBAAeyG,EAAO,oBAAiBM,EACvC,gBAAc,OACd,gBAAeN,EAAO,YAASM,EAC/B1M,GAAI,CAAE2M,GAAI,GAAI,SAEbL,OAKX,CAEA,SAASM,EAAY,GAAuD,IAArDjN,EAAI,EAAJA,KAAMyM,EAAI,EAAJA,KAAMS,EAAW,EAAXA,YAAaC,EAAQ,EAARA,SAAUR,EAAM,EAANA,OAAQR,EAAK,EAALA,MAC1DiB,EAAoBpN,GAAQmM,EAElC,OACE,UAAC,IAAI,CACHgB,SAAUA,EACVjN,GAAG,eACHuM,KAAMA,EACNY,QAASH,EACTnN,QAASmN,EACTI,WAAY,CACVC,UAAW,EACXlN,GAAI,CACFmN,OAAQ,4CACRC,GAAI,IACJ,oBAAqB,CACnB9J,MAAO,GACPC,OAAQ,GACRoJ,IAAK,GACLU,GAAI,GAEN,WAAY,CACVC,QAAS,KACTf,QAAS,QACTjC,SAAU,WACViD,IAAK,EACLC,MAAO,GACPlK,MAAO,GACPC,OAAQ,GACRkK,QAAS,mBACTC,UAAW,iCACXC,OAAQ,KAIdC,gBAAiB,CAAEC,WAAY,QAASC,SAAU,OAClDC,aAAc,CAAEF,WAAY,QAASC,SAAU,UAAW,WAE1D,UAAC,IAAQ,WACNxB,GACD,SAAC,IAAY,UAAES,QAEjB,SAAC,IAAO,KACR,SAAC,IAAI,CACH5L,KAAI,kBA1CM1D,oCA0Cc,kBACxBuQ,UAAU,OACVhO,GAAI,CAAEwM,WAAY,SAAUD,QAAS,QAAS,UAE9C,UAAC,IAAQ,YACP,SAAC,IAAY,WACX,SAAC,IAAM,CAAC1L,SAAS,aAEnB,SAAC,IAAU,CAACb,GAAI,CAAEC,MAAO,cAAe,SAAC,kBAKnD,CAEA,SAASgO,IACP,MAAgCC,EAAAA,SAAe,MAAK,eAA7CpB,EAAQ,KAAEqB,EAAW,KACtB/B,EAAOgC,QAAQtB,GACfuB,EAAWC,EAAAA,EAAAA,cAGXC,GACJ,SAAC3C,EAAa,CACZjM,KAAM0O,EAAS1O,KACfkM,QAASwC,EAASxC,QAClBC,MAAOuC,EAASvC,QAIpB,OACE,iCACE,SAACK,EAAW,CACVG,OAAQiC,EACRnC,KAAMA,EACNN,MAAOuC,EAASvC,MAChBO,YAfc,SAAC9H,GAAK,OAAK4J,EAAY5J,EAAMiK,cAAe,EAgB1D7O,KAAM0O,EAAS1O,QAEjB,SAACiN,EAAW,CACVE,SAAUA,EACVR,OAAQiC,EACR1B,YAtBc,WAAH,OAASsB,EAAY,KAAM,EAuBtCxO,KAAM0O,EAAS1O,KACfmM,MAAOuC,EAASvC,MAChBM,KAAMA,MAId,CAEe,SAASqC,IAEtB,OACE,SAAC,KAAI,CAACC,MAAI,EAAC1O,GAAI,CAAE2O,WAAY,UAAW,UACtC,SAAC,IAAY,WACX,SAACV,EAAO,OAIhB,CAUArB,EAAYvM,aAAe,CACzByM,SAAU,G,4BCtLN8B,EAAY,I,SAAIC,IAAM,WAE5BD,EAAUE,QAAQ,GAAGC,OAAO,CAC1B5M,OACE,2HACFD,QAAS,kBAGX,KAAiB0M,UAAAA,E,wICAjB,SAASI,EAAW,GAAoB,IAAlB5C,EAAI,EAAJA,KAAM6C,EAAO,EAAPA,QAE1B,OADA/R,QAAQC,IAAI,cAAeiP,IAEzB,UAAC,IAAM,CAACA,KAAMA,EAAM8C,WAAS,aAC3B,SAAC,IAAW,CAAClP,GAAI,CAAE8G,UAAW,UAAW,SAAC,WAC1C,SAAC,IAAa,CACZqI,UAAQ,EACRnP,GAAI,CACFuM,QAAS,OACTC,WAAY,SACZ4C,eAAgB,iBAChB,SACH,0DAGD,SAAC,IAAa,WACZ,SAAC,IAAM,CACLtP,QAAQ,WACRJ,QAASuP,EACTjP,GAAI,CAAEC,MAAO,UAAWc,WAAY,QAAS,SAC9C,cAMT,CAMA,SAASsO,EAAa,GAAyB,IAAvB5P,EAAQ,EAARA,SAAU6P,EAAQ,EAARA,SAChC,GAAwBC,EAAAA,EAAAA,WAAS,GAAK,eAA/BnD,EAAI,KAAEoD,EAAO,KAEdC,GAAWC,EAAAA,EAAAA,MAEXC,EAA6B,KADfrB,EAAAA,EAAAA,cAIpB,GADApR,QAAQC,IAAI,OAAQiP,IACD,IAAfuD,EACF,OAAOlQ,EAQT,OAAI6P,GACK,SAAC,KAAQ,CAACM,GAAIN,EAAUO,SAAO,KAItC,SAACb,EAAU,CACT5C,KAAMA,EACN6C,QAZoB,WACtB,IAAMzQ,EAAI,kBAXIf,oCAWiB,kCAA0BgS,EAASK,UAAQ,OAAGL,EAASM,QACtFC,OAAOP,SAASI,QAAQrR,EAC1B,EAUIwO,QAAS,kBAAMwC,GAAQ,EAAM,GAGnC,CAEAH,EAAahP,aAAe,CAC1BiP,SAAU,IAQZ,K,2UC9Ee,SAASW,EAAY5F,EAAWC,GAC7C,OACE,8BAGID,EAAUhI,KAAI,SAACuI,GAAK,OAClB,SAAC9J,EAAA,EAAU,CAETd,GAAI,CACFsD,MAAO,OACPgH,SAAU,WACViD,IAAKjD,EAAWM,EAAM,GACtB6C,SAASjM,EAAAA,EAAAA,IAAM,UAAW,IAC1B0O,SAAU,EACVjQ,MAAO,cACP6G,UAAW,SACXqJ,WAAY,QACZtP,SAAU,OACV6F,WAAY,OACZe,cAAe,UACf,SAEDmD,EAAM,IAfFA,EAAM,GAgBA,KAKvB,C,6DCxBqBwF,EAAI,WACvB,WAAYvG,IAAQ,eAClBwG,KAAKxG,MAAQA,EACbwG,KAAKC,KAAO,KACZD,KAAK7C,MAAQ,IACf,CAifC,OAjfA,kCAED,SAAW+C,GACT,OAAW,MAAPA,GACFF,KAAKxG,MAAQ0G,EAAI1G,MACD,MAAZ0G,EAAID,OACND,KAAKC,KAAO,IAAIF,EAAKG,EAAID,KAAKzG,OAC9BwG,KAAKC,KAAKE,WAAWD,EAAID,OAEV,MAAbC,EAAI/C,QACN6C,KAAK7C,MAAQ,IAAI4C,EAAKG,EAAI/C,MAAM3D,OAChCwG,KAAK7C,MAAMgD,WAAWD,EAAI/C,QAErB6C,MAEF,IACT,GAAC,sBAED,WACE,MAAI,QAASA,KAAKxG,MACV,GAAN,eAAWwG,KAAKC,KAAKG,aAAU,OAAKJ,KAAK7C,MAAMiD,aAG1C,CAACJ,KAAKxG,MAAMvG,MAAQ+M,KAAKxG,MAAMtG,OACxC,GAAC,qBAED,WACE,IAAImN,EAAS,GACb,EAAoCL,KAAKxG,MAAjClB,EAAG,EAAHA,IAAKvD,EAAK,EAALA,MAAOG,EAAW,EAAXA,YACpB,OAAa,OAAT8K,KAAsB,MACtB,QAASA,KAAKxG,OAAO6G,EAAOhJ,KAAK,CAACiB,EAAKpD,IACvC,UAAW8K,KAAKxG,OAAO6G,EAAOhJ,KAAK,CAACtC,EAAOG,IAC7B,OAAd8K,KAAKC,OAAeI,EAASA,EAAOC,OAAON,KAAKC,KAAK/D,YACtC,OAAf8D,KAAK7C,QAAgBkD,EAASA,EAAOC,OAAON,KAAK7C,MAAMjB,YACpDmE,EACT,GAAC,kBAED,WACE,GAAa,OAATL,KAAe,OAAO,KAC1B,IAAMO,EAAW,IAAIR,GAAK,UAAKC,KAAKxG,QAGpC,OAFiB,MAAbwG,KAAKC,OAAcM,EAASN,KAAOD,KAAKC,KAAKO,QAC/B,MAAdR,KAAK7C,QAAeoD,EAASpD,MAAQ6C,KAAK7C,MAAMqD,QAC7CD,CACT,GAAC,2BAED,SAAcE,GAAY,IAAD,OACvB,GAAa,OAATT,KAAe,CACjB,GAAI,UAAWA,KAAKxG,MAAO,CACzB,IAAMJ,EAAYqH,EAAUrH,WAC1B,SAACC,GAAI,OAAKA,EAAKtE,QAAU,EAAKyE,MAAMzE,KAAK,IAErCiE,EAAYyH,EAAUrH,GAC5B4G,KAAKxG,MAAM1E,IAAMkE,EAAUxD,YAC3BwK,KAAKxG,MAAM5E,aAAeoE,EAAUtD,cACpCsK,KAAKxG,MAAM3E,cAAgBmE,EAAUvD,cACvC,CACiB,MAAbuK,KAAKC,MAAcD,KAAKC,KAAKS,cAAcD,GAC7B,MAAdT,KAAK7C,OAAe6C,KAAK7C,MAAMuD,cAAcD,EACnD,CACF,GAAC,6BAED,WACE,GAAa,OAATT,KAAe,CACjB,GAAI,UAAWA,KAAKxG,MAAO,CACzB,MAAsCwG,KAAKxG,MAAdmH,GAAlB,EAAH7L,IAAgB,EAAXU,aAAoB,aACjCwK,KAAKxG,MAAQmH,CACf,CACiB,MAAbX,KAAKC,MAAcD,KAAKC,KAAKW,kBACf,MAAdZ,KAAK7C,OAAe6C,KAAK7C,MAAMyD,iBACrC,CACF,GAAC,0BAED,SAAaC,GAAY,IAAD,OACtB,GAAa,OAATb,KAAe,CACjB,GAAI,UAAWA,KAAKxG,MAAO,CACzB,IAAM7G,EAAQkO,EAAUC,MAAK,SAACzH,GAAI,OAAKA,EAAKtE,QAAU,EAAKyE,MAAMzE,KAAK,IACtEiL,KAAKxG,MAAM1E,IAAMnC,EAAMmC,GACzB,CACiB,MAAbkL,KAAKC,MAAcD,KAAKC,KAAKc,aAAaF,GAC5B,MAAdb,KAAK7C,OAAe6C,KAAK7C,MAAM4D,aAAaF,EAClD,CACF,GAAC,yBAED,SACE9Q,EACAF,EACAmR,EACAC,EACAC,EACAC,EACAC,GAEA,MAAoCpB,KAAKxG,MAAjCvG,EAAK,EAALA,MAAO8B,EAAK,EAALA,MAAOD,EAAG,EAAHA,IAEhBuM,EAFsB,EAADnL,EAEViL,EACXG,EAHyB,EAADnL,EAGb+K,EAEjB,OADArU,QAAQC,IAAI,kBAAmBiI,IAE7B,iCACE,SAACwM,EAAA,EAAG,CAEF7R,UAAU,MACVqF,MAAOA,EACP8G,IAAK9G,EACL9B,MAAOA,EACPuO,OAAQ,WACNJ,IACAvU,QAAQC,IAAI,SAAUiI,EACxB,EACAD,IAAKA,EACLnF,GAAI,CACFsK,SAAU,WACVlK,QAAQ,GAAD,OAAKA,EAAO,MACnBF,aAAa,GAAD,OAAKA,EAAY,MAC7BoQ,KAAMD,KAAKxG,MAAMtD,EAAIiL,EACrBjE,IAAK8C,KAAKxG,MAAMrD,EAAI+K,IAfjBnM,IAkBK,IAAXiM,GACC,SAACS,EAAA,EAAO,CAAC1M,MAAM,eAAc,UAC3B,SAAC2M,EAAA,EAAU,CACTpM,KAAK,SACL3F,GAAI,CACFC,OAAOuB,EAAAA,EAAAA,IAAM,OAAQ,IACrBiM,SAASjM,EAAAA,EAAAA,IAAM,OAAQ,IACvB8I,SAAU,WACViD,IAAKoE,EAAOvR,EACZkQ,KAAMoB,EAAOtR,EACbA,QAAQ,GAAD,OAAKA,EAAO,MACnBF,aAAc,aAEhBR,QAAS,kBAAM4R,EAAkBlM,EAAM,EAAC,UAExC,SAAC4M,EAAA,EAAU,CAACrM,KAAK,eAGnB,OAGV,GAAC,wBAED,SACEvF,EACAF,EACAmR,EACAC,EACAC,EACAC,EACAC,GAEAvU,QAAQC,IACN,mBACAiD,EACAF,EACAmR,EACAC,EACAC,EACAC,EACAnB,KAAKxG,MAAMzE,OAEb,IAAQuD,EAAQ0H,KAAKxG,MAAblB,IACR,OAAa,OAAT0H,KAAsB,KACtB1H,GACFzL,QAAQC,IAAIkT,KAAK7C,MAAO6C,KAAKC,OAE3B,gCACgB,MAAbD,KAAKC,KACFD,KAAKC,KAAK2B,WACR7R,EACAF,EACAmR,EACAC,EACAC,EACAC,EACAC,GAEF,KACW,MAAdpB,KAAK7C,MACF6C,KAAK7C,MAAMyE,WACT7R,EACAF,EACAmR,EACAC,EACAC,EACAC,EACAC,GAEF,SAIN,UAAWpB,KAAKxG,MACXwG,KAAK6B,YACV9R,EACAF,EACAmR,EACAC,EACAC,EACAC,EACAC,GAEG,IACT,GAAC,yBAED,SAAYzO,GACV,IAAMmP,EAAajT,SAASmE,cAAc,UAC1C8O,EAAW7O,MAAQ+M,KAAKxG,MAAM5E,aAC9BkN,EAAW5O,OAAS8M,KAAKxG,MAAM3E,cAC/B,IAGIjC,EACAC,EAJEkP,EAAUD,EAAW3O,WAAW,MAClCF,EAAQ+M,KAAKxG,MAAM5E,aACnB1B,EAAS8M,KAAKxG,MAAM3E,cAGlB0C,EAAcE,KAAKuK,MACvBvK,KAAKwK,KAAKjC,KAAKxG,MAAM5E,aAAeoL,KAAKxG,MAAMvG,QAEjD,GAAoB,IAAhBsE,EACFwK,EAAQ3O,UACNT,EACA,EACA,EACAM,EACAC,EACA,EACA,EACA8M,KAAKxG,MAAMvG,MACX+M,KAAKxG,MAAMtG,YAER,CACL,IAAK,IAAI+E,EAAI,EAAGA,EAAIV,EAAaU,GAAK,EAEpCpF,GADAD,EAAWK,GAAS,GACG+M,KAAKxG,MAAMtE,YACxB,IAAN+C,EACF8J,EAAQ3O,UACNT,EACA,EACA,EACAM,EACAC,EACA,EACA,EACAN,EACAC,GAGFkP,EAAQ3O,UACN0O,EACA,EACA,EACA7O,EACAC,EACA,EACA,EACAN,EACAC,GAGJI,EAAQL,EACRM,EAASL,EAGXkP,EAAQ3O,UACN0O,EACA,EACA,EACA7O,EACAC,EACA,EACA,EACA8M,KAAKxG,MAAMvG,MACX+M,KAAKxG,MAAMtG,OAEf,CACA,OAAO4O,CACT,GAAC,0BAED,SAAavL,EAAKuL,EAAY/R,EAASmS,EAAQhB,EAASC,GACtD,IAAMjL,EAAI8J,KAAKxG,MAAMtD,EAAInG,EAAUoR,EAC7BhL,EAAI6J,KAAKxG,MAAMrD,EAAIpG,EAAUmR,EAC7BiB,EAAYnC,KAAKxG,MAAMvG,MAAQ,EAAIlD,EACnCqS,EAAaD,EAAYnC,KAAKxG,MAAMtE,YAE1CqB,EAAIlE,OACJkE,EAAI8L,YACJ9L,EAAI+L,OAAOpM,EAAIgM,EAAQ/L,GACvBI,EAAIgM,OAAOrM,EAAIiM,EAAYD,EAAQ/L,GACnCI,EAAIiM,iBAAiBtM,EAAIiM,EAAWhM,EAAGD,EAAIiM,EAAWhM,EAAI+L,GAC1D3L,EAAIgM,OAAOrM,EAAIiM,EAAWhM,EAAIiM,EAAaF,GAC3C3L,EAAIiM,iBACFtM,EAAIiM,EACJhM,EAAIiM,EACJlM,EAAIiM,EAAYD,EAChB/L,EAAIiM,GAEN7L,EAAIgM,OAAOrM,EAAIgM,EAAQ/L,EAAIiM,GAC3B7L,EAAIiM,iBAAiBtM,EAAGC,EAAIiM,EAAYlM,EAAGC,EAAIiM,EAAaF,GAC5D3L,EAAIgM,OAAOrM,EAAGC,EAAI+L,GAClB3L,EAAIiM,iBAAiBtM,EAAGC,EAAGD,EAAIgM,EAAQ/L,GACvCI,EAAIkM,YACJlM,EAAImM,OAEJnM,EAAInD,UACF0O,EACA,EACA,EACA9B,KAAKxG,MAAMvG,MACX+M,KAAKxG,MAAMtG,OACXgD,EACAC,EACAgM,EACAC,GAEF7L,EAAIoM,SACN,GAAC,2BAED,SAAcC,EAAe7S,EAASmS,EAAQhB,EAASC,GAAU,IAAD,OAY9D,GAXI,QAASnB,KAAKxG,QAChBwG,KAAKC,KAAK4C,cAAcD,EAAe7S,EAASmS,EAAQhB,EAASC,GACjEnB,KAAK7C,MAAM0F,cACTD,EACA7S,EACAmS,EACAhB,EACAC,IAIA,UAAWnB,KAAKxG,MAAO,CACzB,IAAMjD,EAAMqM,EAAczP,WAAW,MAC/B2P,EAAS,IAAIpO,MACnBoO,EAAO/O,OAAS,WACd,IAAM+N,EAAa,EAAKiB,YAAYD,GAC9Bf,EAAUD,EAAW3O,WAAW,MACtC,EAAK6P,aAAazM,EAAKuL,EAAY/R,EAASmS,EAAQhB,EAASC,GAC7DY,EAAQkB,UAAU,EAAG,EAAGnB,EAAW7O,MAAO6O,EAAW5O,OACvD,EACA4P,EAAOhO,IAAMkL,KAAKxG,MAAM1E,GAC1B,CACF,GAAC,sBAED,SAAShD,EAAQoR,EAAKC,GACpB,IAAMC,EAAuBtR,EAAOE,KAClC,SAACW,GAAK,OAAKA,EAAMiC,aAAejC,EAAMkC,aAAa,IAErD,GAAIsO,EAAa,EAAG,MAAO,GAC3B,GAAmB,IAAfA,EAAkB,CACpB,IAAME,EAAelW,EAAAA,EAAAA,YAAoBiW,EAAsBF,GAI/D,OAHAlD,KAAKxG,MAAQ1H,EAAOuR,GACpBrD,KAAKC,KAAO,KACZD,KAAK7C,MAAQ,KACP,GAAN,eACKrL,EAAOwH,MAAM,EAAG+J,KAAa,OAC7BvR,EAAOwH,MAAM+J,EAAe,IAEnC,CAEA,IAmBIC,EACAC,EApBEjL,EAAMnL,EAAAA,EAAAA,SAEZ,GADA6S,KAAKxG,MAAQ,CAAElB,IAAAA,EAAKiL,kBAAmBL,GACpB,IAAfC,EAAkB,CACpB,MAAgChW,EAAAA,EAAAA,YAC9BiW,EACAF,GACD,eAHMM,EAAS,KAAEC,EAAU,KAW5B,OAPAzD,KAAKxG,MAAMtE,YAAc/H,EAAAA,EAAAA,eACvB6S,KAAKxG,MAAMlB,IACXxG,EAAO0R,GAAWtO,YAClBpD,EAAO2R,GAAYvO,aAErB8K,KAAKC,KAAO,IAAIF,EAAKjO,EAAO0R,IAC5BxD,KAAK7C,MAAQ,IAAI4C,EAAKjO,EAAO2R,IACtB3R,EAAOgL,QACZ,SAACuB,EAAMqF,GAAK,OAAM,CAACF,EAAWC,GAAYE,SAASD,EAAM,GAE7D,CAIA1D,KAAKC,KAAO,IAAIF,EAAK,CAAEzH,IAAKnL,EAAAA,EAAAA,WAE5B6S,KAAK7C,MAAQ,IAAI4C,EAAK,CAAEzH,IAA6B,MAAxB0H,KAAKC,KAAKzG,MAAMlB,IAAc,IAAM,MAEjEiL,EAAoBL,EAAM,EACd,MAAR5K,IACFiL,EAA0B,EAANL,GAGtB,IACA,EADqBzL,KAAKC,MAAMD,KAAKE,UAEjC,CAAC,OAAQ,SACT,CAAC,QAAS,QAAO,eAFdiM,EAAK,KAAEC,EAAM,KAoBpB,OAjBAP,EAAatD,KAAK4D,GAAOE,SACvBhS,EACAyR,EACAJ,EAAa1L,KAAKuK,MAAMmB,EAAa,IAEvCG,EAAatD,KAAK6D,GAAQC,SACxBR,EACAC,EACA9L,KAAKuK,MAAMmB,EAAa,IAG1BnD,KAAKxG,MAAMtE,YAAc/H,EAAAA,EAAAA,eACvB6S,KAAKxG,MAAMlB,IACX0H,KAAKC,KAAKzG,MAAMtE,YAChB8K,KAAK7C,MAAM3D,MAAMtE,aAGZoO,CACT,GAAC,oBAED,SAAOS,GACL,IAAIC,EAAc,EAClB,OAAa,OAAThE,MAEc,OAAdA,KAAKC,MAAgC,OAAfD,KAAK7C,QACzB6C,KAAKxG,MAAMtE,YAAc8K,KAAKxG,MAAM+J,kBAAoBQ,IAC1D/D,KAAKxG,MAAMlB,IAAM,IACjB0L,GAAe,GAEbhE,KAAKxG,MAAMtE,YAAc8K,KAAKxG,MAAM+J,kBAAoBQ,IAC1D/D,KAAKxG,MAAMlB,IAAM,IACjB0L,GAAe,GAGM,MAAnBhE,KAAKxG,MAAMlB,KACb0H,KAAKC,KAAKzG,MAAM+J,kBAAoBvD,KAAKxG,MAAM+J,kBAAoB,EACnEvD,KAAK7C,MAAM3D,MAAM+J,kBAAoBvD,KAAKxG,MAAM+J,kBAAoB,IAEpEvD,KAAKC,KAAKzG,MAAM+J,kBAAmD,EAA/BvD,KAAKxG,MAAM+J,kBAC/CvD,KAAK7C,MAAM3D,MAAM+J,kBAAmD,EAA/BvD,KAAKxG,MAAM+J,mBAElDS,GAAehE,KAAKC,KAAKgE,OAAOF,GAAM/D,KAAK7C,MAAM8G,OAAOF,GACxD/D,KAAKxG,MAAMtE,YAAc/H,EAAAA,EAAAA,eACvB6S,KAAKxG,MAAMlB,IACX0H,KAAKC,KAAKzG,MAAMtE,YAChB8K,KAAK7C,MAAM3D,MAAMtE,cAvBK8O,CA4B5B,GAAC,qBAED,SAAQE,EAAaC,EAAcC,EAASC,EAASC,EAAWC,GAC5C,MAAdD,GACFtE,KAAKxG,MAAMtG,OAASiR,EACpBnE,KAAKxG,MAAMvG,MAAQ+M,KAAKxG,MAAMtG,OAAS8M,KAAKxG,MAAMtE,cAElD8K,KAAKxG,MAAMvG,MAAQiR,EACnBlE,KAAKxG,MAAMtG,OAAS8M,KAAKxG,MAAMvG,MAAQ+M,KAAKxG,MAAMtE,aAGnC,SAAbqP,GACFvE,KAAKxG,MAAMtD,EAAIkO,EACfpE,KAAKxG,MAAMrD,EAAIkO,GACQ,MAAdC,GACTtE,KAAKxG,MAAMrD,EAAIkO,EAAUF,EAAenE,KAAKxG,MAAMtG,OACnD8M,KAAKxG,MAAMtD,EAAIkO,IAEfpE,KAAKxG,MAAMtD,EAAIkO,EAAUF,EAAclE,KAAKxG,MAAMvG,MAClD+M,KAAKxG,MAAMrD,EAAIkO,GAGC,OAAdrE,KAAKC,MACPD,KAAKC,KAAKuE,QACRxE,KAAKxG,MAAMvG,MACX+M,KAAKxG,MAAMtG,OACX8M,KAAKxG,MAAMtD,EACX8J,KAAKxG,MAAMrD,EACX6J,KAAKxG,MAAMlB,IACX,QAGe,OAAf0H,KAAK7C,OACP6C,KAAK7C,MAAMqH,QACTxE,KAAKxG,MAAMvG,MACX+M,KAAKxG,MAAMtG,OACX8M,KAAKxG,MAAMtD,EACX8J,KAAKxG,MAAMrD,EACX6J,KAAKxG,MAAMlB,IACX,QAGN,GAAC,6BAED,WACE,GAAI,QAAS0H,KAAKxG,MAAO,CACvB,MAAkBwG,KAAKC,KAAKwE,kBAAiB,eAAtCC,EAAE,KAAEC,EAAG,KACd,EAAkB3E,KAAK7C,MAAMsH,kBAAiB,eAAvCG,EAAE,KAAEC,EAAG,KACd,MAAO,CAACH,GAAME,EAAID,EAAIrE,OAAOuE,GAC/B,CACA,GAAI,UAAW7E,KAAKxG,MAAO,CACzB,IAAMsL,EACJ9E,KAAKxG,MAAMvG,OAAS+M,KAAKxG,MAAM5E,cAC/BoL,KAAKxG,MAAMtG,QAAU8M,KAAKxG,MAAM3E,cAClC,OAAOiQ,EAAQ,CAACA,EAAO,IAAM,CAACA,EAAO,EAAC,UAAK9E,OAC7C,CACA,OAAO,CACT,KAAC,EAtfsB,GCFJ+E,EAAU,WAC7B,WAAYvL,GACV,IADkB,oBACA6C,IAAd2D,KAAKgF,KAEP,OADAhF,KAAKgF,KAAO,IAAIjF,EAAKvG,GACdwG,IAEX,CAwMC,OAxMA,kCAED,SAAW3R,GACT2R,KAAKgF,KAAK3W,SAAO,UAAQA,EAC3B,GAAC,qBAED,WACE,OAAkB,OAAd2R,KAAKgF,KACAhF,KAAKgF,KAAK9I,UAEZ,IACT,GAAC,2BAED,SAAcuE,GACM,OAAdT,KAAKgF,MACPhF,KAAKgF,KAAKtE,cAAcD,EAE5B,GAAC,wBAED,SAAWP,GAET,OADgB,MAAZA,EAAI8E,MAAchF,KAAKgF,KAAK7E,WAAWD,EAAI8E,MACxChF,IACT,GAAC,6BAED,WACE,IAAMiF,EAAWjF,KAAKQ,OAItB,OAHkB,OAAdR,KAAKgF,MACPC,EAASD,KAAKpE,kBAETqE,CACT,GAAC,0BAED,SAAapE,GACO,OAAdb,KAAKgF,MACPhF,KAAKgF,KAAKjE,aAAaF,EAE3B,GAAC,wBAED,SACE3G,EACAgL,EACAlE,EACAC,EACAG,GAEA,MAAwDpB,KAAKgF,KAAK3W,QAA1D4H,EAAI,EAAJA,KAAMkP,EAAO,EAAPA,QAASpV,EAAO,EAAPA,QAASF,EAAY,EAAZA,aAAcD,EAAK,EAALA,MAC9C,EAA0BoQ,KAAKgF,KAAKxL,MAA5BvG,EAAK,EAALA,MAAOC,EAAM,EAANA,OACTkS,EAAKjY,EAAAA,EAAAA,SAAiB8I,EAAM,EAAG,EAAGiE,EAAa,GAAI,IACnDC,EAAalE,EAAKxE,OAAqB,GAAZ2T,EAAG3T,OAAc,EAC9CyP,GAAWgE,EAAe/K,EAAajH,GAAU,EAC/CiO,GAAWjH,EAAcjH,GAAS,EACpCgH,EAAWiL,EAAe/K,EAmB9B,OAlBIgL,GAAWlP,EAAKxE,OAAS,IAC3ByP,GAAW/G,EACXF,EAAW,GAGbpN,QAAQC,IACN,mBACAoN,EACAgL,EACAhS,EACA8M,KAAKgF,KAAK3W,QACV8L,EACA+G,EACAC,EACAlO,EACA+M,KACAoF,GAEgB,OAAdpF,KAAKgF,MAEL,SAACzD,EAAA,EAAG,CAAC5R,GAAI,CAAEG,gBAAiB,SAAU,UACpC,UAACyR,EAAA,EAAG,CACFtO,MAAOiH,EACPhH,OAAQgS,EACRvV,GAAI,CACFsK,SAAU,WACVnK,gBAAiB3C,EAAAA,EAAAA,cAAsByC,IACvC,UAEDoQ,KAAKgF,KAAKpD,WACT7R,EACAF,EACAmR,EACAC,EACAC,EACAC,EACAC,GAEDnL,EAAKxE,OAASmO,EAAYwF,EAAInL,GAAY,UAK5C,IACT,GAAC,2BAED,SAAcC,EAAagL,EAActC,EAAerL,GACtD,GAAkB,OAAdyI,KAAKgF,KAAe,CACtB,MAAwDhF,KAAKgF,KAAK3W,QAA1D4H,EAAI,EAAJA,KAAMkP,EAAO,EAAPA,QAASpV,EAAO,EAAPA,QAASF,EAAY,EAAZA,aAAcD,EAAK,EAALA,MAC9C,EAA0BoQ,KAAKgF,KAAKxL,MAA5BvG,EAAK,EAALA,MAAOC,EAAM,EAANA,OACTkS,EAAKjY,EAAAA,EAAAA,SACT8I,EACA,EACA,EACAiE,EACA,GAAK3C,EACL,GAAKA,GAED4C,EAAalE,EAAKxE,OAAqB,GAAZ2T,EAAG3T,OAAc8F,EAAc,EAC5D2J,GAAWgE,EAAe/K,EAAajH,GAAU,EAC/CiO,GAAWjH,EAAcjH,GAAS,EACpCgH,EAAWiL,EAAe/K,EAC1BgL,GAAWlP,EAAKxE,OAAS,IAC3ByP,GAAW/G,EACXF,EAAW,GAEb,IAAM1D,EAAMqM,EAAczP,WAAW,MACrCoD,EAAI8D,UAAYlN,EAAAA,EAAAA,cAAsByC,GACtC2G,EAAI+D,SAAS,EAAG,EAAGsI,EAAc3P,MAAO2P,EAAc1P,QACtD8M,KAAKgF,KAAKnC,cACRD,EACA7S,EAAUwH,EACV1H,EAAe0H,EACf2J,EACAC,GAEFhU,EAAAA,EAAAA,eACEoJ,EACA6O,EACAnL,EACA1C,EACA2C,EACAC,EAEJ,CACF,GAAC,2BAED,WACE,IAAMkL,EAAQrF,KAAKgF,KAAK5E,WAExB,OAAO3I,KAAK6N,IAAG,MAAR7N,MAAI,OAAQ4N,GACrB,GAAC,iCAED,SAAoBvT,EAAQoR,GAC1BlD,KAAKgF,KAAKlB,SAAShS,EAAQoR,EAAKpR,EAAOL,OACzC,GAAC,oBAED,SAAOsS,GAML,IALA,IAAIwB,EAAO,EACPC,EAAaxF,KAAKQ,OAClBiF,EAAkBzF,KAAKgF,KAAKxL,MAAMtE,YAChCwQ,EAAsB1F,KAAKgF,KAAKxL,MAAM+J,mBAAqB,EAAIQ,GACjE4B,EAAU,IACPJ,EAAO,KAAOI,EAAU,GAAG,CAChCA,EAAU3F,KAAKgF,KAAKf,OAAOF,GAC3BwB,GAAQ,EACR,IAAMK,EACJ5F,KAAKgF,KAAKxL,MAAMtE,YAAc8K,KAAKgF,KAAKxL,MAAM+J,kBAQhD,GANE9L,KAAKW,IAAIwN,GACTnO,KAAKW,IAAIqN,EAAkBzF,KAAKgF,KAAKxL,MAAM+J,qBAE3CkC,EAAkBzF,KAAKgF,KAAKxL,MAAMtE,YAClCsQ,EAAaxF,KAAKQ,QAEfoF,EAAO,GAAKA,EAAOF,GAAiC,IAATE,EAAY,KAC9D,CAEA,MAAO,CAACH,EAAiBD,EAC3B,GAAC,kBAED,WACE,IAAMK,EAAW,IAAId,EAAW,CAAC,GAGjC,OAFAc,EAASb,KAAOhF,KAAKgF,KAAKxE,OAC1BqF,EAASb,KAAK3W,SAAO,UAAQ2R,KAAKgF,KAAK3W,SAChCwX,CACT,GAAC,qBAED,SAAQ3L,EAAagL,EAAchQ,GACjC,MAAqB/H,EAAAA,EAAAA,oBACnB+M,EACAgL,EACAhQ,GACD,eAJMU,EAAI,KAAEC,EAAI,KAKjBmK,KAAKgF,KAAKxL,MAAMvG,MAAQ2C,EACxBoK,KAAKgF,KAAKxL,MAAMtG,OAAS2C,EACzBhJ,QAAQC,IAAI,WAAYkT,KAAKgF,KAAKxL,MAAMvG,MAAO+M,KAAKgF,KAAKxL,MAAMtG,QAC/D8M,KAAKgF,KAAKxL,MAAMtD,EAAI,EACpB8J,KAAKgF,KAAKxL,MAAMrD,EAAI,EACpB,MAAqC6J,KAAKgF,KAAKxL,MAAvCvG,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAQgD,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAGmC,EAAG,EAAHA,IACN,OAAnB0H,KAAKgF,KAAK/E,MACZD,KAAKgF,KAAK/E,KAAKuE,QAAQvR,EAAOC,EAAQgD,EAAGC,EAAGmC,EAAK,QAC3B,OAApB0H,KAAKgF,KAAK7H,OACZ6C,KAAKgF,KAAK7H,MAAMqH,QAAQvR,EAAOC,EAAQgD,EAAGC,EAAGmC,EAAK,QACtD,GAAC,6BAED,WACE,OAAO0H,KAAKgF,KAAKP,iBACnB,KAAC,EA9M4B,GCmD/B,OAAiBqB,mBArDjB,SAA4BhU,EAAQiU,EAAWC,EAAYC,GAKzD,IAJA,IAAMC,EAAepU,EAAOwJ,MAAK,SAACxF,EAAG6D,GAAC,OACpC7D,EAAEZ,aAAeyE,EAAEzE,YAAc,GAAK,CAAC,IAEnCiR,EAAe,GACZlO,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAAG,CAC/B,IAAMmO,EAAU,IAAIrB,EAAW,CAAEzM,IAAKnL,EAAAA,EAAAA,WACtCiZ,EAAQC,oBAAoBH,EAAcF,EAAaC,GAEvDE,EAAa9O,KAAK+O,EAAQnC,OAAO,EAAI8B,GACvC,CAEAI,EAAa7K,MAAK,SAACxF,EAAG6D,GACpB,IAAM2M,EAAON,EAAaC,EAG1B,OAFcxO,KAAKW,IAAItC,EAAE,GAAKwQ,GAChB7O,KAAKW,IAAIuB,EAAE,GAAK2M,EAEhC,IAEA,IAAMC,EAAMJ,EAAarJ,QACvB,SAACzD,GAAI,OAAKA,EAAK,GAAGmN,QAAQ,KAAOL,EAAa,GAAG,GAAGK,QAAQ,EAAE,IAEhE3Z,QAAQC,IAAI,WAAYyZ,GACxB,IAAIE,EAAW,EACXC,EAAU,CAAC,EAef,OAdAH,EAAIxN,SAAQ,SAAC4N,GACXA,EAAQ,GAAGnC,QACDwB,EAAaC,EAArB,IACA,IACAD,EAAaC,GAEf,IAAMZ,EAAQsB,EAAQ,GAAGC,gBAErBvB,EAAQoB,IACVA,EAAWpB,EACXqB,EAAUC,EAEd,IAEOD,CAYT,G,eC5Ce,SAASG,EAAQC,GAC9Bja,QAAQC,IAAI,WAAYga,GACxB,OAA8B5H,EAAAA,EAAAA,UAAS4H,GAAa,eAA7CjV,EAAO,KAAEkV,EAAU,KAC1B,GAAsC7H,EAAAA,EAAAA,UAAS,YAAW,eAAnD8H,EAAW,KAAEC,EAAc,KAC5BC,EAAY,CAChBnB,UAAW,GACXoB,iBAAkB,KAClBjS,YAAa,GACb1E,SAAU,GACV6F,WAAY,GACZ+Q,WAAY,CACVC,KAAM,CAAEpU,MAAO,IAAKC,OAAQ,IAAK+C,KAAM,uBACvCqR,GAAI,CAAErU,MAAO,KAAMC,OAAQ,KAAM+C,KAAM,iBACvCsR,GAAI,CAAEtU,MAAO,KAAMC,OAAQ,KAAM+C,KAAM,kBACvCuR,YAAa,CAAEtU,OAAQ,KAAMD,MAAO,KAAMgD,KAAM,iBAChDwR,YAAa,CAAEvU,OAAQ,KAAMD,MAAO,KAAMgD,KAAM,kBAChDyR,eAAgB,CAAExU,OAAQ,IAAKD,MAAO,IAAMgD,KAAM,oBAClD0R,eAAgB,CAAEzU,OAAQ,KAAMD,MAAO,KAAMgD,KAAM,qBAGvD,GAA4CiJ,EAAAA,EAAAA,UAAS,GAAE,eAAhD0I,EAAc,KAAEC,EAAiB,KAClCC,EC5BO,SAAuBZ,GACpC,IAAQhS,EAAsCgS,EAAtChS,YAAa1E,EAAyB0W,EAAzB1W,SAAU6F,EAAe6Q,EAAf7Q,WACzB0R,GAAYC,EAAAA,EAAAA,UACZC,GAAaD,EAAAA,EAAAA,UACbE,GAAYF,EAAAA,EAAAA,UACZG,GAAcH,EAAAA,EAAAA,UAEpB,GAA4B9I,EAAAA,EAAAA,UAAS,GAAE,eAAhChM,EAAM,KAAEkV,EAAS,KACxB,GAAsClJ,EAAAA,EAAAA,UAAS,GAAE,eAA1C+G,EAAW,KAAEoC,EAAc,KAClC,GAAoCnJ,EAAAA,EAAAA,UAAS,GAAE,eAAxC8G,EAAU,KAAEsC,EAAa,KAChC,GAA0BpJ,EAAAA,EAAAA,UAAS,GAAE,eAA9BjM,EAAK,KAAEsV,EAAQ,KACtB,GAAkCrJ,EAAAA,EAAAA,UAAS,GAAE,eAAtCsJ,EAAS,KAAEC,EAAY,KAC9B,GAAgCvJ,EAAAA,EAAAA,UAAS,GAAE,eAApC9I,EAAQ,KAAEsS,EAAW,KAC5B,GAAoCxJ,EAAAA,EAAAA,UAAS,GAAE,eAAxC/E,EAAU,KAAEwO,EAAa,KAE1BC,EAAgB,WAEpB,IAAiB,IADAjJ,OAAOkJ,WAAalJ,OAAOmJ,YACrB,CACrB,IASMC,GATehB,EAAUiB,QAC3BjB,EAAUiB,QAAQC,aAClB,IACkBhB,EAAWe,QAC7Bf,EAAWe,QAAQC,aACnB,IACiBf,EAAUc,QAC3Bd,EAAUc,QAAQC,aAClB,GAEJP,EAAY/I,OAAOkJ,YACnBJ,EAAa9I,OAAOmJ,YAAcC,GAClC,MAAe5b,EAAAA,EAAAA,oBACbwS,OAAOkJ,WAAa,GACpBlJ,OAAOmJ,YAAcC,EAAc,GACnC7T,GACD,eAJMgU,EAAC,KAAEC,EAAC,KAKXtc,QAAQC,IAAI,eAAgBic,GAC5BR,EAASW,GACTd,EAAUe,EACZ,KAAO,CACL,IAAMC,EAAerB,EAAUiB,QAC3BjB,EAAUiB,QAAQC,aAClB,EACEI,EAAepB,EAAWe,QAC5Bf,EAAWe,QAAQM,YACnB,EACEC,EAAcrB,EAAUc,QAAUd,EAAUc,QAAQM,YAAc,EACxEZ,EAAY/I,OAAOkJ,YAAcU,EAAcF,IAC/CZ,EAAa9I,OAAOmJ,YAAcM,GAClC,MAAejc,EAAAA,EAAAA,oBACbwS,OAAOkJ,YAAcU,EAAcF,GAAgB,GACnD1J,OAAOmJ,YAAcM,EAAe,GACpClU,GACD,eAJMgU,EAAC,KAAEC,EAAC,KAKXtc,QAAQC,IACN,eACAsc,EACA,cACAG,EAAcF,EACdE,EACAF,EACApB,GAEFM,EAASW,GACTd,EAAUe,EACZ,CACF,EAwBA,OAlBAK,EAAAA,EAAAA,YAAU,WACR3c,QAAQC,IAAI,sBACZ8b,GACF,GAAG,CACDjJ,OAAOmJ,YACPnJ,OAAOkJ,WACPd,EAAUiB,QACVf,EAAWe,QACXd,EAAUc,WAGZQ,EAAAA,EAAAA,YAAU,WAIR,OAHAZ,IACAjJ,OAAO8J,iBAAiB,SAAUb,GAE3B,kBAAMjJ,OAAO+J,oBAAoB,SAAUd,EAAe,CACnE,GAAG,IAEI,CACLT,YAAAA,EACAF,WAAAA,EACAF,UAAAA,EACAG,UAAAA,EACAjV,MAAAA,EACAC,OAAAA,EACA+S,YAAAA,EACAD,WAAAA,EACAsC,cAAAA,EACAD,eAAAA,EACAG,UAAAA,EACApS,SAAAA,EACAuT,oBAnC0B,WACtBxB,EAAYa,SAASb,EAAYa,QAAQY,OAC/C,EAkCEzP,WAAAA,EACAwO,cAAAA,EACAnY,SAAAA,EACA6F,WAAAA,EAEJ,CDhFqBwT,CAAc3C,GAC3B7Y,EE9BO,WACb,IAAMyb,EAAmB,CACvB/Z,QAAS,EACTF,aAAc,EACdD,MAAO,CACL6J,EAAG,IACHC,EAAG,IACHC,EAAG,IACH7D,EAAG,GAELG,KAAM,GACNkP,SAAS,GAGX,GAA8BjG,EAAAA,EAAAA,UAAS4K,GAAiB,eAAjDzb,EAAO,KAAE0b,EAAU,KAC1B,GAAoD7K,EAAAA,EAAAA,WAAS,GAAM,eAA5D8K,EAAkB,KAAEC,EAAqB,KAqBhD,MAAO,CACL5b,QAAAA,EACA0b,WAAAA,EACApY,MAtBY,WAAH,OAASoY,EAAWD,EAAkB,EAuB/CI,oBAtB0B,SAACvV,GAAC,OAC5BoV,GAAW,SAACI,GAAI,yBAAWA,GAAI,IAAEpa,QAAS4E,EAAE5D,OAAOyI,OAAK,GAAK,EAsB7D4Q,mBArByB,SAACzV,GAC1BoV,GAAW,SAACI,GAAI,yBAAWA,GAAI,IAAEta,aAAc8E,EAAE5D,OAAOyI,OAAK,GAC/D,EAoBE6Q,iBAlBuB,WAAH,OAASJ,GAAsB,SAACK,GAAG,OAAMA,CAAG,GAAE,EAmBlEC,iBAlBuB,WAAH,OAASN,GAAsB,EAAO,EAmB1DO,kBAlBwB,SAACC,GAAG,OAC5BV,GAAW,SAACI,GAAI,yBAAWA,GAAI,IAAEva,MAAO6a,EAAIC,KAAG,GAAK,EAkBpDC,qBAjB2B,SAACnR,GAAK,OACjCuQ,GAAW,SAACI,GAAI,yBAAWA,GAAI,IAAEhF,QAAS3L,GAAK,GAAK,EAiBpDoR,iBAfuB,SAACjW,GACxB,IAAQ5D,EAAW4D,EAAX5D,OACRgZ,GAAW,SAACI,GAAI,yBAAWA,GAAI,IAAElU,KAAMlF,EAAOyI,OAAK,GACrD,EAaEwQ,mBAAAA,EAEJ,CFnBkBa,GACVC,EG/BO,WACb,OAAwB5L,EAAAA,EAAAA,WAAS,GAAM,eAAhCnD,EAAI,KAAEoD,EAAO,KACpB,GAAgCD,EAAAA,EAAAA,WAAS,GAAM,eAAxC6L,EAAQ,KAAEC,EAAW,KAC5B,GAAkC9L,EAAAA,EAAAA,WAAS,GAAM,eAA1C+L,EAAS,KAAEC,EAAY,KAC9B,GAA8BhM,EAAAA,EAAAA,WAAS,GAAM,eAAtCiM,EAAO,KAAEC,EAAU,KAC1B,GAAgClM,EAAAA,EAAAA,WAAS,GAAM,eAAxC4E,EAAQ,KAAEuH,EAAW,KAC5B,GAAsCnM,EAAAA,EAAAA,WAAS,GAAM,eAA9CoM,EAAW,KAAEC,EAAc,KAClC,GAAwCrM,EAAAA,EAAAA,UAAS,CAC/CvE,WAAY,EACZC,YAAa,IACb,eAHK4Q,EAAY,KAAEC,EAAe,KA8BpC,MAAO,CACLC,YAnBkB,WAAH,OAASH,GAAe,EAAO,EAoB9CzH,SAAAA,EACA6H,eA3BqB,WAAH,OAASxM,GAAQ,EAAM,EA4BzCyM,uBAT6B,WAC7BP,GAAY,GACZI,EAAgB,CAAE9Q,WAAY,EAAGC,YAAa,GAChD,EAOEiR,SAtBe,WAAH,OAASN,GAAe,SAACO,GAAE,OAAMA,CAAE,GAAE,EAuBjDC,gBArBsB,SAAC7C,EAAGC,GAC1BsC,EAAgB,CAAE9Q,WAAYuO,EAAGtO,YAAauO,IAC9CkC,GAAY,GACZlM,GAAQ,EACV,EAkBE6M,gBA3BsB,WAAH,OAAS7M,GAAQ,EAAO,EA4B3C8M,UAjCgB,WAAH,OAASb,GAAW,EAAM,EAkCvCrP,KAAAA,EACAyP,aAAAA,EACAL,QAAAA,EACAE,YAAAA,EACAlM,QAAAA,EACAsM,gBAAAA,EACAL,WAAAA,EACAE,YAAAA,EACAC,eAAAA,EACAR,SAAAA,EACAC,YAAAA,EACAkB,YAvCkB,WAAH,OAASlB,GAAY,EAAO,EAwC3CmB,YA9BkB,WAClBjB,GAAa,GACbF,GAAY,EACd,EA4BEoB,WA7CiB,WACjBpB,GAAY,EACd,EA4CEC,UAAAA,EACAC,aAAAA,EAEJ,CHhCkBmB,GACVva,EI/BO,SAAmBgV,GAChCja,QAAQC,IAAI,aAAcga,GAC1B,OAAwC5H,EAAAA,EAAAA,UAAS,GAAE,eAA5CoN,EAAW,KAAEC,EAAgB,KACpC,GAA8CrN,EAAAA,EAAAA,UAAS,GAAE,eAAlDsN,EAAe,KAAEC,EAAkB,KAC1C,GAAkCvN,EAAAA,EAAAA,UAAS,GAAE,eAAtCwN,EAAQ,KAAEC,EAAa,KAC9B,GAA4BzN,EAAAA,EAAAA,UAAS,GAAE,eAAhC0N,EAAM,KAAEC,EAAS,KACxB,GAA4B3N,EAAAA,EAAAA,UAAS,IAAG,eAAjCpN,EAAM,KAAEgb,EAAS,MAExBtD,EAAAA,EAAAA,YAAU,WACR3c,QAAQC,IAAI,kBACR,WAAYga,IACdgG,EAAUhG,EAAahV,QACN,IAAb4a,GAAgBC,EAAc7F,EAAahV,OAAOL,QAE1D,GAAG,CAACqV,IAEJ,IAYMzS,EAAkB,SAACkB,GACvBuX,GAAU,SAACva,GAAG,OAAKA,EAAI+N,OAAO,CAAC/K,GAAa,IAC5CkX,GAAmB,SAAClY,GAAG,OAAKA,EAAM,CAAC,GACrC,EA6BA,MAAO,CACL5C,MAnBY,WACZmb,EAAU,IACVH,EAAc,GACdE,EAAU,GACVJ,EAAmB,EACrB,EAeEpY,gBAAAA,EACA0Y,WA9BiB,SAAC7Y,GAClB/G,EAAAA,EAAAA,gBACE+G,EACAyY,EACAJ,EACAlY,EAEJ,EAwBEvC,OAAAA,EACA4a,SAAAA,EACAE,OAAAA,EACAJ,gBAAAA,EACAF,YAAAA,EACAU,OApBa,SAACjY,GACd,IAAMkY,EAAcnb,EAAOsH,WAAU,SAACC,GAAI,OAAKA,EAAKtE,QAAUA,CAAK,IAC7DmY,EAAY,kBACbpb,EAAOwH,MAAM,EAAG2T,KAAY,OAC5Bnb,EAAOwH,MAAM2T,EAAc,KAIhC,OAFAH,EAAUI,GACVP,GAAc,SAACpY,GAAG,OAAKA,EAAM,CAAC,IACvB2Y,CACT,EAYEP,cAAAA,EACAG,UAAAA,EACAD,UAAAA,EACAN,iBAAAA,EACAE,mBAAAA,EACAU,aA3DmB,SAACC,GAEpB,OADgB,OAAOA,GACLpb,KAAI,SAACqb,GAEnBA,EADM7Z,KACN6Z,EADYvY,IACZuY,EADiB7X,YAAnB,IAAgCE,EAC9B2X,EAD8B3X,cAAeD,EAC7C4X,EAD6C5X,eAAmBkL,GAAI,OACpE0M,EAAG,GAIL,OAHA1M,EAAK/L,aAAec,EACpBiL,EAAK9L,cAAgBY,EACrB5I,QAAQC,IAAI,iBAAkBugB,EAAK1M,GAC5BA,CACT,GACF,EAmDF,CJ9CiB2M,CAAUzb,GAEnB0b,EKhCO,SAAiBzG,GAA2C,IAA7B0G,EAAe,uDAAG,WAAO,EACrE3gB,QAAQC,IAAI,WAAYga,GACxB,OAAwB5H,EAAAA,EAAAA,UAAS,IAAI6F,EAAW,CAAC,IAAG,eAA7C0I,EAAI,KAAEC,EAAO,MAEpBlE,EAAAA,EAAAA,YAAU,WACR3c,QAAQC,IAAI,sBACZ,IAAM6gB,EAAU,IAAI5I,EAAW,CAAC,GAE9B,YAAa+B,GACb8G,OAAOC,KAAK/G,EAAajV,SAASJ,OAAS,IAE3C5E,QAAQC,IAAI,wBAAyBga,GACrC6G,EAAQxN,WAAW2G,EAAajV,QAAQ4b,MACpC,YAAa3G,EAAajV,QAAQ4b,KAAKzI,MACzCwI,GAAgB,SAACrD,GAAI,yBAChBA,GACArD,EAAajV,QAAQ4b,KAAKzI,KAAK3W,QAAO,IAG7CxB,QAAQC,IAAI,gBACZ4gB,EAAQC,GAEZ,GAAG,CAAC7G,IAEJ,IAAMnV,EAAQ,WAAH,OAAS+b,EAAQ,CAAC,EAAG,EAE1BI,EAAW,SAACC,EAAWhI,EAAWC,EAAYC,EAAa5X,GAC/D,MAAgC2f,EAAUlI,mBACxCiI,EACAhI,EACAC,EACAC,GAJOgI,GAKR,YAL2B,GAM5BA,EAAoBC,WAAW7f,GAC/Bqf,EAAQO,EACV,EAEA,MAAO,CAAER,KAAAA,EAAMC,QAAAA,EAAS/b,MAAAA,EAAOmc,SAAAA,EACjC,CLNoBK,CAAQtc,EAASxD,EAAQ0b,YAC3C,GAAkC7K,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAvCkP,EAAS,KAAEC,EAAY,KACxBrhB,EACJ,YAAa8Z,GAAgB,eAAgBA,EAAajV,QACtDiV,EAAajV,QAAQ3E,WACrB8H,KAAKC,OAEXuU,EAAAA,EAAAA,YAAU,WACRzC,EAAWD,GAET,YAAaA,GACb,SAAUA,EAAajV,SACP,aAAhBmV,IAEAna,QAAQC,IAAI,uBAAwBga,EAAajV,QAAQvC,MACzD2X,EAAeH,EAAajV,QAAQvC,MAExC,GAAG,CAACwX,IAEJ,IAcA,GAAoC5H,EAAAA,EAAAA,WAdd,WAAH,MAAU,CAC3BrN,QAAS,CACPoE,KAAM,iBACNrH,OAAQ,WAEVkD,OAAQ,CACNmE,KAAK,kBAAD,OAAoB2R,EAAc,cAAM9V,EAAOA,OAAOL,OAAM,KAChE7C,OAAQ,WAEV0f,WAAY,CACVrY,KAAM,qBACNrH,OAAQ,WAEX,IAC0D,eAApD2f,EAAU,KAAEC,EAAa,KAE1BC,EAAe,SAACC,EAAK9f,GACzB,IAAM4K,GAAK,kBAAQ+U,EAAWG,IAAI,IAAE9f,OAAAA,IACpC4f,GAAc,SAACG,GAAE,yBAAWA,GAAE,cAAGD,EAAMlV,GAAK,GAC9C,GAWAgQ,EAAAA,EAAAA,YAAU,WACR3c,QAAQC,IAAI,eAVa,WACzB,IAAM8hB,EAAU,yBAAqBhH,EAAc,cAAM9V,EAAO4a,SAAQ,KACpElT,GAAK,kBAAQ+U,EAAWzc,QAAM,IAAEmE,KAAM2Y,IACtChH,IAAmB9V,EAAO4a,UAAY5a,EAAO4a,SAAW,IAC1DlT,GAAK,kBAAQA,GAAK,IAAE5K,OAAQ,UAE9B4f,GAAc,SAACG,GAAE,yBAAWA,GAAE,IAAE7c,OAAQ0H,GAAK,GAC/C,CAIEqV,EACF,GAAG,CAACjH,EAAgB9V,EAAO4a,WAE3B,IAAMoC,EAAW,yCAAG,2GACUrb,QAAQsb,WAAW,CAC7CxB,EAAU5b,QACVG,EAAOH,QACPtD,EAAQsD,UACP,KAAD,EAJIqd,EAAa,OAMV/W,EAAI,EAAE,KAAD,OAAEA,EAAI+W,EAAcvd,QAAM,oBAER,cAA5Bud,EAAc/W,GAAGrJ,SACa,IAA9BogB,EAAc/W,GAAGuB,MAAM7K,GAAW,0CAE3B,GAAI,OAL2BsJ,GAAK,EAAC,iDAQzC,GAAK,4CACb,kBAhBgB,oCAkBjBuR,EAAAA,EAAAA,YAAU,WACR3c,QAAQC,IAAI,gBAETgF,EAAOwa,YAAc,GACpBxa,EAAOwa,cAAgBxa,EAAO0a,iBAChC1B,EAAQK,WAERrZ,EAAOya,iBAAiB,GACxBza,EAAO2a,mBAAmB,GAC1Bc,EAAUO,SACRhc,EAAOA,OACPoV,EAAUnB,UACV+B,EAAW7U,MACX6U,EAAW5U,OAAS4U,EAAW3N,WAC/B9L,EAAQA,SAEVyc,EAAQM,YAAW,GAEvB,GAAG,CAACtZ,EAAOwa,YAAaxa,EAAO0a,gBAAiB1B,EAAQK,UAExD,IAaM8D,EAAoB,WACxB,IAAMhU,EAAKsS,EAAUE,KAAKzI,KAAKxL,MAAMtE,YAC/Bga,EAAkBrgB,SAASmE,cAAc,UACzCmc,EAAgB5B,EAAUE,KAAKjN,OACrC2O,EAAc3K,QAAQ,IAAMvJ,EAAI,IAAKA,GACrCiU,EAAgBjc,MAAQ,IAAMgI,EAC9BiU,EAAgBhc,OAAS,IACzBic,EAActM,cACZ,IAAM5H,EACN,IACAiU,EACC,IAAMjU,EAAM6M,EAAW7U,OAI1B,IAAMmc,EAAmB,CACvBra,MAAM,aAAD,OAAe/H,EAAS,QAC7B8H,IAAK,GACLD,cAAe,IACfD,aAAc,IAAMqG,EACpB/F,YAAa+F,EACb9K,KAAM,aAGR,OADAke,EAAae,GACN,CAACA,EAAkBF,EAC5B,EAEMG,EAAuB,SAACD,EAAkB9f,GAC9C,IAAMggB,EAAO,CACXpiB,WAAYF,EAAU0B,WACtBY,KAAAA,EACAigB,WAAY,2BACZC,gBAAiB,2BACjB1d,OAAQA,EAAOqb,aAAarb,EAAOA,QACnC2b,KAAMF,EAAUE,KAAK7M,kBACrBwN,UAAWgB,GAIb,OADAviB,QAAQC,IAAIwiB,GACLG,EAAAA,EAAAA,WAAsBziB,EAAWsiB,EAC1C,EAOMI,EAAsB,SAACR,EAAiBS,GAC5C,IAAMC,EAAgBhC,OAAOC,KAAK8B,GAAW3d,IAAG,yCAAC,WAAOqM,GAAI,oFACf,GAArCwR,EAAY,oBAAgB7iB,EAAS,QACvCqR,IAASwR,EAAY,gBAIpB,OAHGC,EAAmBZ,EAAgBa,OAAM,yCAAC,WAAOC,GAAI,sEACtC,OAAnB3B,EAAa2B,GAAM,kBACZP,EAAAA,EAAAA,OAAkBE,EAAUE,GAAeG,IAAK,2CACxD,mDAH8C,IAG7C,kBACKF,GAAgB,OAIkC,OADrDzjB,EAAMsjB,EAAUtR,GAChB4R,EAAMne,EAAOA,OAAOgP,MAAK,SAACuM,GAAG,OAAKA,EAAItY,QAAUsJ,CAAI,IAAE,EAAD,OACxCoR,EAAAA,EAAAA,OAAkBpjB,EAAK4jB,EAAIzc,MAAM,KAAD,EAEZ,OAFjC5G,EAAI,OAjBZC,QAAQC,IAAI,8BAA+B8a,EAAiB,GAC5DC,GAAkB,SAACtT,GAAG,OAAKA,EAAM,CAAC,IAkBhC1H,QAAQC,IAAI,oBAAqBF,GAAM,kBAChCA,GAAI,4CACZ,mDAhB+C,IAkBhD,OAAOgjB,CACT,EAEM7iB,EAAU,yCAAG,WAAOuC,GAAI,8FAIO,OAH7B2L,EAAKsS,EAAUE,KAAKzI,KAAKxL,MAAMtE,YACrCrI,QAAQC,IAAI,wBAAyBmO,EAAI,IAAMA,EAAI,KAAK,EACZgU,IAAmB,eAAxDG,EAAgB,KAAEF,EAAe,KACxCT,EAAa,UAAW,WAAW,SACXY,EAAqBD,EAAkB9f,GAAM,KAAD,EAGC,OAH/DqgB,EAAS,OACflB,EAAa,UAAW,QACxBA,EAAa,SAAU,WACjBmB,EAAgBF,EAAoBR,EAAiBS,GAAW,EAAD,QACxClc,QAAQsb,WAAWa,GAAe,KAAD,GAAxDM,EAAc,OAEpBzB,EAAa,aAAc,WAElBxW,EAAI,EAAE,KAAD,QAAEA,EAAIiY,EAAeze,QAAM,oBAER,cAA7Bye,EAAejY,GAAGrJ,SACa,IAA/BshB,EAAejY,GAAGuB,MAAM7K,GAAW,iBAEnCwhB,GAAe,EACf1B,EAAa,aAAc,QAAQ,wBAGE,OADrC0B,GAAe,EACf1B,EAAa,aAAc,UAAU,6BATExW,GAAK,EAAC,iDAa1CkY,GAAY,4CACpB,gBA3Be,uCA6BhB3G,EAAAA,EAAAA,YAAU,WAER,GADA3c,QAAQC,IAAI,eAEVuB,EAAQA,QAAQ4H,KAAKxE,OAAS,GAC9Bmc,OAAOC,KAAKN,EAAUE,MAAMhc,OAAS,EACrC,CACA,IAAM2e,EAAKjjB,EAAAA,EAAAA,SACTkB,EAAQA,QAAQ4H,KAChB,EACA,EACA6R,EAAW7U,MACX,GACA,IAEF6U,EAAWa,cAA0B,GAAZyH,EAAG3e,QAC5B,MAAetE,EAAAA,EAAAA,oBACb2a,EAAW7U,MACX6U,EAAW5U,OAAqB,GAAZkd,EAAG3e,OACvB8b,EAAUE,KAAKzI,KAAKxL,MAAMtE,aAC3B,eAJMgU,EAAC,KAAEC,EAAC,KAKXrB,EAAWQ,cAAcY,GACzBpB,EAAWO,eAAec,EAC5B,MACErB,EAAWa,cAAc,GACzBta,EAAQsc,sBAAqB,GAC7B7C,EAAWQ,cAAcR,EAAW7U,OACpC6U,EAAWO,eAAeP,EAAW5U,OAEzC,GAAG,CACD4U,EAAW7U,MACX6U,EAAW5U,OACXqa,EAAUE,KACVpf,EAAQA,QAAQ4H,OAGlB,IAAMoa,EAAa,SAAC/gB,EAAM8f,GAExB,OADAnI,EAAe3X,GACR,CACLpC,WAAYF,EAAU0B,WACtBY,KAAAA,EACAigB,WAAY,2BACZC,gBAAiB,2BACjB1d,OAAQA,EAAOqb,aAAarb,EAAOA,QACnC2b,KAAMF,EAAUE,KAAK7M,kBACrBwN,UAAWgB,EAEf,EAEM5hB,EAAW,yCAAG,WAAO8B,GAAI,8FAIM,OAH7B2L,EAAKsS,EAAUE,KAAKzI,KAAKxL,MAAMtE,YACrCrI,QAAQC,IAAI,wBAAyBmO,EAAI,IAAMA,EAAI,KAAK,EACZgU,IAAmB,eAAxDG,EAAgB,KAAEF,EAAe,KACxCT,EAAa,UAAW,WAAW,SACXgB,EAAAA,EAAAA,YACtBziB,EACAqjB,EAAW/gB,EAAM8f,IACjB,KAAD,EAIoE,OAP/DO,EAAS,OAIf9iB,QAAQC,IAAI,yBAA0B6iB,GACtClB,EAAa,UAAW,QACxBA,EAAa,SAAU,WACjBmB,EAAgBF,EAAoBR,EAAiBS,GAAW,EAAD,QACxClc,QAAQsb,WAAWa,GAAe,KAAD,GAAxDM,EAAc,OAEpBzB,EAAa,aAAc,WAElBxW,EAAI,EAAE,KAAD,QAAEA,EAAIiY,EAAeze,QAAM,oBAER,cAA7Bye,EAAejY,GAAGrJ,SACa,IAA/BshB,EAAejY,GAAGuB,MAAM7K,GAAW,iBAEnCwhB,GAAe,EACf1B,EAAa,aAAc,QAAQ,wBAGE,OADrC0B,GAAe,EACf1B,EAAa,aAAc,UAAU,6BATExW,GAAK,EAAC,iDAa1CkY,GAAY,4CACpB,gBA/BgB,sCAkCjB,OADAtjB,QAAQC,IAAI,aAAcyhB,GACnB,CACL8B,EACArJ,EACAoH,EACAphB,EACAka,EACAY,EACAzZ,EACAyc,EACAhZ,EACAyb,EACAuB,EA5MsB,WAAO,EAEL,SAACwB,GACzB,IAAMpD,EAAepb,EAAOkb,OAAOsD,GACnC/C,EAAUO,SACRZ,EACAhG,EAAUnB,UACV+B,EAAW9B,WACX8B,EAAW7B,YACX5X,EAAQA,QAEZ,EAoMEtB,EACAwhB,EACA/gB,EAEJ,C,+EMhVe,SAAS+iB,EAAQ,GAQ5B,IAPFC,EAAc,EAAdA,eACAC,EAAU,EAAVA,WACAC,EAAW,EAAXA,YACAC,EAAe,EAAfA,gBACA1P,EAAiB,EAAjBA,kBACA5S,EAAO,EAAPA,QACAof,EAAI,EAAJA,KAEA,GAA8BvO,EAAAA,EAAAA,UAAS,MAAK,eAArC0R,EAAO,KAAEC,EAAU,KAClB/e,EAAsB2e,EAAtB3e,OAAQ+a,EAAc4D,EAAd5D,UACR/I,EACN4M,EADM5M,SAAU8H,EAChB8E,EADgB9E,uBAAwBJ,EACxCkF,EADwClF,aAAcF,EACtDoF,EADsDpF,YAEhDpY,EACNsd,EADMtd,OAAQD,EACdud,EADcvd,MAAOgT,EACrBuK,EADqBvK,YAAaD,EAClCwK,EADkCxK,WAAYxV,EAC9CggB,EAD8ChgB,SAAU6F,EACxDma,EADwDna,WAGpD+K,EAAyB,WAAH,OAASyL,GAAU,SAACtY,GAAG,OAAKA,EAAM,CAAC,GAAE,EAC3Duc,EAAU,SAACC,GAAC,OAA+B,IAA1BnD,OAAOC,KAAKkD,GAAGtf,MAAa,EAC7Cuf,EAAgB,WAMpB,GALAnkB,QAAQC,IAAI,0BAA2B2gB,GACvCA,EAAKjJ,QAAQwB,EAAYC,EAAawH,EAAKzI,KAAKxL,MAAMtE,aACtDrI,QAAQC,IAAI,sBACZ2gB,EAAKS,WAAW7f,GAChBxB,QAAQC,IAAI,wBAAyBgF,EAAOL,QACxCK,EAAOL,OAAS,EAAG,CACrBgc,EAAK1M,aAAajP,GAClBjF,QAAQC,IAAI,4BACZ,IAAMmkB,EAAcxD,EAAK7L,WACvB3O,EACAC,EACAoY,EACArK,EACAG,GAEFvU,QAAQC,IAAI,6BACZ+jB,EAAWI,GACXN,EAAgBlD,EAClB,CACF,GAEAjE,EAAAA,EAAAA,YAAU,WACHsH,EAAQrD,IAA2B,MAAlBA,EAAKzI,KAAK/E,OAC9BpT,QAAQC,IAAI,8BACZkkB,IAEJ,GAAG,KAEHxH,EAAAA,EAAAA,YAAU,WACHsH,EAAQrD,IAA2B,MAAlBA,EAAKzI,KAAK/E,KAI9B4Q,EAAW,OAHXhkB,QAAQC,IAAI,gCACZkkB,IAIJ,GAAG,CAACvD,EAAMpf,EAAS2X,EAAYC,EAAaqF,EAAaxZ,IAEzD,IA2BMuU,EAAsB,SAAC6K,EAAIC,GAC/B,IAAMC,EAdc,WACpB,IAAMA,EAAa3D,EAAKjN,OAExB,OADA4Q,EAAW1Q,cAAc5O,GAClBsf,CACT,CAUqBC,GACbpW,EAAKwS,EAAKzI,KAAKxL,MAAMtE,YACrBqC,EAAc2Z,EAAKje,EACzB,EAAuB9F,EAAAA,EAAAA,mBACrB+jB,EACAC,EACA9iB,EAAQ4H,KACR,EACA,EACAzF,EACA6F,EACAkB,EACAkW,EAAKzI,KAAKxL,MAAMtE,aACjB,eAVMoc,EAAK,KAAEC,EAAK,KAYnB,OADAH,EAAW5M,QAAQ8M,EAAOC,EAAOtW,GAC1BmW,CACT,EAEMI,EAAkB,SAACC,EAAOP,EAAIC,GAClC,IAAM5Z,EAAc2Z,EAAKje,EACnB2P,EA5BU,SAACsO,EAAIC,GACrB,IAAMvO,EAAgB/T,SAASmE,cAAc,UAG7C,OAFA4P,EAAc3P,MAAQie,EACtBtO,EAAc1P,OAASie,EAChBvO,CACT,CAuBwB8O,CAAUR,EAAIC,GACpCM,EAAM5O,cAAcqO,EAAIC,EAAIvO,EAAerL,GAE3Coa,YAAW,kBAnDoBC,EAmDiBV,EAnDbW,EAmDiBV,OAAnBvO,EAlD1BmN,QAAO,SAACC,GACb,IAAM8B,EAAOjjB,SAASmE,cAAc,KACpC8e,EAAKC,SAAQ,kBAAcH,EAAGpL,QAAQ,GAAE,YAAIqL,EAAGrL,QAC7C,GACD,YAAIxR,KAAKC,MAAK,QACf6c,EAAKhhB,KAAOkhB,IAAIC,gBAAgBjC,GAChC8B,EAAKlI,QACLoI,IAAIE,gBAAgBJ,EAAKhhB,MACzBghB,EAAKhhB,KAAO,KACZ8a,GACF,GAAG,cAXmB,IAASgG,EAAIC,CAmDoB,GAAE,OAC3D,EAsBA,OApBArI,EAAAA,EAAAA,YAAU,WACR,IAAiB,IAAb1F,EAAmB,CACrB,IAAoBoN,EAAwB1F,EAApC7Q,WAA6BwW,EAAO3F,EAApB5Q,YAClBwW,EAAa/K,EAAoB6K,EAAIC,GAC3C,EAA2BC,EAAW3M,kBAAiB,eAAhDK,EAAK,KAAEqN,EAAS,KACvB,GAAIrN,EACF0M,EAAgBJ,EAAYF,EAAIC,OAC3B,CACL,MAAuBhkB,EAAAA,EAAAA,mBAA2B+jB,EAAIC,EAAIgB,GAAU,eAA7DC,EAAK,KAAEC,EAAK,KACbC,EAAgBjM,EAAoB+L,EAAOC,GACjD,EAAiCC,EAAc7N,kBAAiB,eAAzD8N,EAAQ,KAAEC,EAAY,KACzBD,EACFf,EAAgBc,EAAeF,EAAOC,GAEtCxlB,QAAQC,IAAI,6BAA8B0lB,EAE9C,CACF,CACF,GAAG,CAAC1O,IAEG8M,CACT,C,4FCxHe,SAAS6B,EAAe,GAAoC,IAAlC1W,EAAI,EAAJA,KAAM1M,EAAO,EAAPA,QAASsN,EAAO,EAAPA,QAAS+V,EAAK,EAALA,MAC/D,GAA0BxT,EAAAA,EAAAA,UAAS,IAAG,eAA/B1F,EAAK,KAAEmZ,EAAQ,KAYtB,OACE,SAAC,IAAY,WACX,UAACC,EAAA,EAAM,CAAC7W,KAAMA,EAAM8C,WAAS,aAC3B,SAACgU,EAAA,EAAW,CAACljB,GAAI,CAAE8G,UAAW,UAAW,SAAC,sBAC1C,UAACqc,EAAA,EAAa,CACZhU,UAAQ,EACRnP,GAAI,CACFuM,QAAS,OACTC,WAAY,SACZ4C,eAAgB,iBAChB,WAEF,SAACgU,EAAA,EAAiB,CAACpjB,GAAI,CAAEuM,QAAS,SAAU8W,GAAI,GAAI,SAAC,yBAGrD,UAACC,EAAA,EAAW,CAACpU,WAAS,EAAClP,GAAI,CAAEyG,SAAU,OAAQ,WAC7C,SAAC8c,EAAA,EAAU,CAAC1jB,GAAG,2BAA0B,SAAC,mBAC1C,SAAC2jB,EAAA,EAAM,CACLC,QAAQ,2BACR5jB,GAAG,qBACH6jB,aAAa,KACb7Z,MAAOA,EACP8Z,MAAM,gBACN/iB,SAAU,SAAC2D,GAAK,OAAKye,EAASze,EAAMnD,OAAOyI,MAAM,EAAC,SAEjDoU,OAAOC,KAAK6E,GAAO1gB,KAAI,SAAC0c,GAAG,OAC1B,SAAC6E,EAAA,EAAQ,CAAuB/Z,MAAOkV,EAAI,SACxCgE,EAAMhE,GAAKzY,MADCyc,EAAMhE,GAAKzY,KAEf,aAKnB,UAACud,EAAA,EAAa,YACZ,SAACjkB,EAAA,EAAM,CACLE,QAAQ,WACRgkB,SAA2B,IAAjBja,EAAM/H,OAChBpC,QAhDa,WACrBxC,QAAQC,IAAI4lB,EAAMlZ,GAAOvG,MAAOyf,EAAMlZ,GAAOtG,OAAQ7D,GACrDA,EAAQqjB,EAAMlZ,GAAOvG,MAAOyf,EAAMlZ,GAAOtG,QACzCyf,EAAS,GACX,EA4CkC,SACzB,cAGD,SAACpjB,EAAA,EAAM,CAACE,QAAQ,OAAOJ,QA9CX,WAClBsjB,EAAS,IACThW,GACF,EA2CoD,SAAC,kBAOvD,C,eC/De,SAAS+W,EAAW,GAA6B,IAA3B3X,EAAI,EAAJA,KAAM1M,EAAO,EAAPA,QAASsN,EAAO,EAAPA,QAClD,GAAwBuC,EAAAA,EAAAA,UAAS,IAAG,eAA7B5P,EAAI,KAAEqkB,EAAO,KACpB,GAAoBzU,EAAAA,EAAAA,UAAS,IAAtB0U,GAAyB,YAAhB,GAchB,OACE,UAAChB,EAAA,EAAM,CAAC7W,KAAMA,EAAM8C,WAAS,aAC3B,SAACgU,EAAA,EAAW,CAACljB,GAAI,CAAE8G,UAAW,UAAW,SAAC,kBAC1C,SAACqc,EAAA,EAAa,CACZhU,UAAQ,EACRnP,GAAI,CACFuM,QAAS,OACTC,WAAY,SACZ4C,eAAgB,iBAChB,UAEF,SAAC8U,EAAA,EAAS,CACRpkB,QAAQ,WACR6jB,MAAM,mBACND,aAAc/jB,EACdiB,SAxBiB,SAACoE,GACxB,IAAQ5D,EAAW4D,EAAX5D,OACR4iB,EAAQ5iB,EAAOyI,MACjB,EAsBQlE,KAAK,QACL3F,GAAI,CAAEsD,MAAO,OAAQ6gB,GAAI,GACzBC,WAAY,CAAEpkB,GAAI,CAAEG,iBAAiBqB,EAAAA,EAAAA,IAAM,OAAQ,MACnD6iB,WAAYJ,EACZrmB,QAASqmB,OAGb,UAACJ,EAAA,EAAa,YACZ,SAACjkB,EAAA,EAAM,CACLE,QAAQ,WACRgkB,SAA0B,IAAhBnkB,EAAKmC,OACfpC,QAxCW,WACjBA,EAAQC,EACV,EAsC4B,SACrB,UAGD,SAACC,EAAA,EAAM,CAACE,QAAQ,OAAOJ,QApCT,WAClBskB,EAAQ,IACRhX,GACF,EAiCkD,SAAC,gBAMrD,C,oCCpDA,SAASsX,EAAgB,GAAa,IAAXrlB,EAAM,EAANA,OACzB,MAAe,YAAXA,GACK,SAACslB,EAAA,EAAgB,CAACtkB,MAAM,OAAO0F,KAAK,SAE9B,YAAX1G,GACK,SAACulB,EAAA,EAAW,CAACvkB,MAAM,WAAW0F,KAAK,aAE7B,SAAX1G,GACK,SAACwlB,EAAA,EAAsB,CAACxkB,MAAM,UAAU0F,KAAK,aAEvC,WAAX1G,GACK,SAACylB,EAAA,EAAS,CAACzkB,MAAM,QAAQ0F,KAAK,kBADvC,CAGF,CAMA,SAASgf,GAAO,GAAmB,IAAjBre,EAAI,EAAJA,KAAMrH,EAAM,EAANA,OAChBgB,EAAQ,CACZ2kB,SAASpjB,EAAAA,EAAAA,IAAM,OAAQ,KACvBqjB,KAAM,QACNC,QAAS,QACTC,OAAQ,OAGV,OACE,UAACC,EAAA,EAAK,CAACC,UAAU,MAAM7V,eAAe,gBAAe,WACnD,SAACtO,EAAA,EAAU,CACTd,GAAI,CAAEe,WAAY,OAAQF,SAAU,OAAQZ,MAAOA,EAAMhB,IAAU,SAElEqH,KAEH,SAACge,EAAe,CAACrlB,OAAQA,MAG/B,CAOA,SAASimB,GAAc,GAAsB,IAApBjmB,EAAM,EAANA,OAAQkmB,EAAO,EAAPA,QAC/B,MAAe,WAAXlmB,GAEA,UAAC+lB,EAAA,EAAK,CACJC,UAAU,MACVG,QAAS,EACThW,eAAe,SACf5C,WAAW,SACXxM,GAAI,CAAEsD,MAAO,OAAQ+hB,EAAG,GAAI,WAE5B,SAACX,EAAA,EAAS,CAACzkB,MAAM,WACjB,SAACa,EAAA,EAAU,UAAC,+BAKH,YAAX7B,GAAmC,YAAXA,EAA6B,KAE1C,YAAXA,GAEA,UAAC+lB,EAAA,EAAK,CACJC,UAAU,MACVG,QAAS,EACThW,eAAe,SACf5C,WAAW,SACXxM,GAAI,CAAEsD,MAAO,OAAQ+hB,EAAG,GAAI,WAE5B,SAACZ,EAAA,EAAsB,CAACxkB,MAAM,UAAUD,GAAI,CAAEa,SAAU,WACxD,UAACC,EAAA,EAAU,WAAC,0DAC8CqkB,EAAS,IAAI,mBAOtE,IACT,CAOe,SAASG,GAAiB,GAAmB,IAAjBlZ,EAAI,EAAJA,KAAMnN,EAAM,EAANA,OAC3CsmB,EAAgB,UACpB,GAA8BhW,EAAAA,EAAAA,WAAU,GAAE,eAAnC4V,EAAO,KAAEK,EAAU,MAC1B3L,EAAAA,EAAAA,YAAU,WACR,IAAI4L,EAIJ,OAHIN,EAAU,GAAuB,YAAlBI,IACjBE,EAAUzD,YAAW,kBAAMwD,EAAWL,EAAU,EAAE,GAAE,MAE/C,kBAAMO,aAAaD,EAAS,CACrC,GAAG,CAACN,EAASI,IAEb,IAAMI,EAAY1H,OAAO2H,OAAO3mB,GAAQoD,KAAI,SAACwjB,GAAG,OAAKA,EAAI5mB,MAAM,IAa/D,OAZI0mB,EAAU3R,SAAS,UACrBuR,EAAgB,SACPI,EAAU3R,SAAS,WAC5BuR,EAAgB,UACNI,EAAU3R,SAAS,aAC7B9W,QAAQC,IAAI,kBAAmBgoB,EAASlmB,IACvB,IAAbkmB,GACFK,EAAW,GAEbD,EAAgB,YAIhB,UAACtC,EAAA,EAAM,CAAC7W,KAAMA,EAAM8C,WAAS,aAC3B,SAACgU,EAAA,EAAW,CAACljB,GAAI,CAAE8G,UAAW,UAAW,SAAC,kBAC1C,SAACqc,EAAA,EAAa,CAAChU,UAAQ,YACrB,SAAC6V,EAAA,EAAK,CAACC,UAAU,SAAS7V,eAAe,SAASgW,QAAS,EAAE,SAC1DnH,OAAO2H,OAAO3mB,GAAQoD,KAAI,SAAC2c,GAAE,OAC5B,SAAC2F,GAAM,CAAere,KAAM0Y,EAAG1Y,KAAMrH,OAAQ+f,EAAG/f,QAAnC+f,EAAG1Y,KAA0C,SAIhE,SAAC4e,GAAa,CAACjmB,OAAQsmB,EAAeJ,QAASA,MAGrD,C,gEChIe,SAASW,GAAO,GAAsB,IAApB1N,EAAS,EAATA,UAAWzY,EAAI,EAAJA,KAC1CzC,QAAQC,IAAI,oBAAqBwC,GACjC,IACMgQ,EAA6B,KADfrB,EAAAA,EAAAA,cAEpB,OACE,UAACyX,GAAA,EAAK,CACJC,IAAK5N,EACLpY,GAAI,CACFuM,QAAS,OACTC,WAAY,SACZ4C,eAAgB,gBAChBiW,EAAG,EACHllB,iBAAiBqB,EAAAA,EAAAA,IAAM,OAAQ,IAC/BtB,aAAc,GAEhBgN,UAAW,EAAE,WAEb,SAAC0E,EAAA,EAAG,CAAC5R,GAAI,CAAEimB,QAAS,WAAY3V,KAAM,OAAQ,UAC5C,SAAC4V,GAAA,EAAI,CAAC/kB,KAAK,YAAYlB,MAAM,aAAa+N,UAAU,OAAM,UACxD,SAAC4D,EAAA,EAAG,CAAC5R,GAAI,CAAEuM,QAAS,OAAQC,WAAY,UAAW,UACjD,SAAC2Z,GAAA,EAAa,WAIpB,SAACrlB,EAAA,EAAU,CACThB,QAAQ,KACRC,UAAU,KACVC,GAAI,CAAEC,OAAOuB,EAAAA,EAAAA,IAAM,OAAQ,KAAO,SAEjC7B,KAEa,IAAfgQ,GACC,SAAC,KAAW,KAEZ,SAAC3O,GAAA,EAAW,CACVC,QAASxD,oCACTyD,KAAK,qBAKf,C,2BC9Ce,SAASklB,GAAa,GAAmC,IAAjC9iB,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAQ8iB,EAAa,EAAbA,cAEpD,OADAnpB,QAAQC,IAAImG,EAAOC,IAEjB,SAACqO,EAAA,EAAG,CACF5R,GAAI,CACFsmB,gBAAgB,OAAD,OAASC,GAAW,KACnCC,eAAgBljB,EAChBmjB,UAAW,OACXnjB,MAAAA,EACAC,OAAAA,EACAgJ,QAAS,OACT6C,eAAgB,SAChB5C,WAAY,UACZ,SAED6Z,GAGP,C,gBChBe,SAASK,GAAK,GAezB,IA2BEpZ,EAzCJlB,EAAI,EAAJA,KACAgP,EAAQ,EAARA,SACAuL,EAAc,EAAdA,eACA1nB,EAAM,EAANA,OACA4hB,EAAc,EAAdA,eACAC,EAAU,EAAVA,WACA8F,EAAM,EAANA,OACAzL,EAAO,EAAPA,QACA0L,EAAc,EAAdA,eACAC,EAAU,EAAVA,WACAC,EAAgB,EAAhBA,iBACA9F,EAAO,EAAPA,QACA+F,EAAQ,EAARA,SACAC,EAAQ,EAARA,SAGE3jB,EAOEud,EAPFvd,MACAC,EAMEsd,EANFtd,OACAkD,EAKEoa,EALFpa,SACAoS,EAIEgI,EAJFhI,UACAvC,EAGEuK,EAHFvK,YACA8B,EAEEyI,EAFFzI,UACAE,EACEuI,EADFvI,WAEI4O,EAAWlX,OAAOkJ,WAAalJ,OAAOmJ,YACpChX,EAAiC2e,EAAjC3e,OAAQ4a,EAAyB+D,EAAzB/D,SAAUK,EAAe0D,EAAf1D,WACpB3D,EAAerB,EAAUiB,QAAUjB,EAAUiB,QAAQC,aAAe,EACpE6N,EAAgB7O,EAAWe,QAC7Bf,EAAWe,QAAQC,aACnB,EACEA,EAAe4N,EAAQ,qBACXzN,EAAY,cAAM0N,EAAa,2BAC9B1N,EAAY,KA2D/B,OA1DAvc,QAAQC,IACN,YACAgF,EAAOL,OACPib,EACAzG,EACA2K,EACAhiB,GAGa,aAAXA,IACFqO,GACE,SAAC8Y,GAAY,CACX9iB,MAAOA,EACPC,OAAQA,EACR8iB,eAAe,SAACe,GAAA,EAAO,CAAChiB,MAAM,0CAKrB,cAAXnG,IACFqO,GACE,gCACG2T,GACD,SAACmG,GAAA,EAAO,CAAChiB,MAAM,6BAKN,YAAXnG,IACFqO,GACE,SAAC8Y,GAAY,CACX9iB,MAAOA,EACPC,OAAQA,EACR8iB,eACE,SAACe,GAAA,EAAO,CACNhiB,MAAK,mBAAcjD,EAAOL,OAAM,cAAMib,EAAQ,oBAOzC,UAAX9d,IACFqO,GACE,SAAC8Y,GAAY,CACX9iB,MAAOA,EACPC,OAAQA,EACR8iB,cACE/iB,GAAQ,SAAChD,GAAA,EAAS,CAACC,aAAc6c,KAAiB,sBAM3C,UAAXne,IACFqO,EAAU2T,GAGQ,QAAbgG,GACL,UAACrV,EAAA,EAAG,CACF7R,UAAU,MACVC,GAAI,CACFG,gBAAiB,QACjBmK,SAAU,YACV,UAEDsc,EACAzL,EACA/O,EAAOya,EAAiB,KACxBzL,EAAW0L,EAAa,KACxBH,EAAiBI,EAAmB,MACrC,SAACnV,EAAA,EAAG,CACFtO,MAAOmD,EACPlD,OAAQsV,EACR7Y,GAAI,CACFsK,SAAU,WACViD,IAAK+L,EACLhJ,KAAM,MACN5C,UAAW,qBACXnB,QAAS,OACTC,WAAY,SACZ4C,eAAgB,SAChBjP,gBAAiB,cACjBknB,YAAa,UACb,SAED/Z,IAEF0Z,MAGH,UAACpV,EAAA,EAAG,CAAC7R,UAAU,MAAMC,GAAI,CAAEG,gBAAiB,SAAU,UACnDymB,GACD,UAAC,IAAY,WACVzL,EACA/O,EAAOya,EAAiB,KACxBzL,EAAW0L,EAAa,KACxBH,EAAiBI,EAAmB,MACrC,SAACnV,EAAA,EAAG,CACFtO,MAAOmD,EACPlD,OAAQsV,EACR7Y,GAAI,CACFsK,SAAU,WACViD,IAAK+L,EACLhJ,KAAM,MACN5C,UAAW,qBACXnB,QAAS,OACTC,WAAY,SACZ4C,eAAgB,SAChBjP,gBAAiB,QACjBknB,YAAa,UACb,SAED/Z,IAEF0Z,OAIT,C,gEC5Je,SAASM,GAAK,GAAgC,IAA9B3D,EAAK,EAALA,MAAO4D,EAAI,EAAJA,KAAMhnB,EAAY,EAAZA,aAC1C,OACE,SAACinB,GAAA,EAAsB,CACrBC,WAAS,EACT9D,MAAOA,EACP4D,KAAMA,EACNvnB,GAAI,CACF0nB,GAAI,EACJ3mB,WAAY,OACZd,MAAO,OACP0nB,QAAS,OACT,UAAW,CACT1nB,OAAOuB,EAAAA,EAAAA,IAAM,OAAQ,IACrBmmB,QAAS,SAGbjoB,QAASa,GAGf,CACA+mB,GAAKjnB,aAAe,CAClBE,aAAc,WAAO,G,eCrBR,SAASqnB,GAAc,GAAiC,IAA/BC,EAAM,EAANA,OAAQpoB,EAAQ,EAARA,SAAUqoB,EAAQ,EAARA,SACxD,OACE,SAACC,GAAA,GAAM,CACLF,OAAQA,EACR/nB,QAAQ,YACRmN,WAAY,CACV+Y,IAAK8B,EACL9nB,GAAI,CACFuD,OAAQ,cACRgK,IAAK,MACLpN,gBAAiB,cACjBF,MAAO,OACPc,WAAY,OACZb,aAAyB,SAAX2nB,EAAoB,gBAAkB,gBACpDna,UAAW,uBAEb,SAEDjO,GAGP,CAEAmoB,GAAcvnB,aAAe,CAC3BynB,SAAU,WAAO,G,gBC1BJ,SAASE,KACtB,OAAO,SAACC,GAAA,EAAO,CAACjoB,GAAI,CAAEG,gBAAiB,OAAQ+nB,GAAI,GAAKpoB,QAAQ,UAClE,CCQe,SAASqoB,GAAe,GAAqC,IAAnC7P,EAAU,EAAVA,WAAY8P,EAAU,EAAVA,WAAYC,EAAM,EAANA,OACzD9nB,EAAe,SAAC+nB,GACpBprB,QAAQC,IAAImrB,GACK,aAAbA,GACFF,IAEe,SAAbE,EACFD,IAEAnrB,QAAQC,IAAI,qBAAsBmrB,EAAU,sBAEhD,EAEA,OACE,SAACV,GAAa,CAACC,OAAO,QAAQC,SAAUxP,EAAW,UACjD,UAACiQ,GAAA,EAAI,CAACvoB,GAAI,CAAEG,iBAAiBqB,EAAAA,EAAAA,IAAM,OAAQ,KAAO,WAChD,SAAC8lB,GAAI,CACH3D,MAAM,OACN4D,MAAM,SAACiB,GAAA,EAAQ,IACfjoB,aAAc,kBAAMA,EAAa,OAAO,KAE1C,SAACynB,GAAe,KAChB,SAACV,GAAI,CACH3D,MAAM,WACN4D,MAAM,SAACkB,GAAA,EAAY,IACnBloB,aAAc,kBAAMA,EAAa,WAAW,KAE9C,SAACynB,GAAe,KAChB,SAACV,GAAI,CACH3D,OACE,iCACE,SAAC7iB,EAAA,EAAU,CAACd,GAAI,CAAEa,SAAU,UAAWE,WAAY,QAAS,SAAC,WAG7D,SAACD,EAAA,EAAU,CAACd,GAAI,CAAEa,SAAU,UAAWE,WAAY,QAAS,SAAC,gBAKjEwmB,MAAM,SAACmB,GAAA,EAAS,IAChBnoB,aAAc,kBAAMA,EAAa,QAAQ,QAKnD,C,oDC/Ce,SAASooB,GAAmB,GAA+B,IAA7Bvc,EAAI,EAAJA,KAAMwc,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAC3D,OACE,UAAC5F,EAAA,EAAM,CAAC7W,KAAMA,EAAK,WACjB,SAAC8W,EAAA,EAAW,CACVljB,GAAI,CACF8G,UAAW,SACX/F,WAAY,OACZd,OAAOuB,EAAAA,EAAAA,IAAM,OAAQ,KACrB,SACH,mBAGD,UAAC2hB,EAAA,EAAa,CAAChU,UAAQ,aACrB,SAACiU,EAAA,EAAiB,CAACpjB,GAAI,CAAEe,WAAY,OAAQd,MAAO,QAAS,SAAC,mCAG9D,SAACa,EAAA,EAAU,CACThB,QAAQ,YACRE,GAAI,CAAEC,MAAO,MAAOc,WAAY,QAChC+nB,QAAM,WACP,WAGD,SAAChoB,EAAA,EAAU,CAACd,GAAI,CAAEa,SAAU,SAAUZ,MAAO,QAAS,SAAC,sCAIzD,UAAC4jB,EAAA,EAAa,YACZ,UAACjkB,EAAA,EAAM,CAACF,QAASkpB,EAAU5oB,GAAI,CAAEC,MAAO,OAAQ,UAC7C,IAAI,QACC,QAER,UAACL,EAAA,EAAM,CAACE,QAAQ,WAAWJ,QAASmpB,EAAS,UAC1C,IAAI,SACE,YAKjB,CClCe,SAASE,GAAgB,GAOpC,IANFjB,EAAQ,EAARA,SACAxL,EAAS,EAATA,UACA0M,EAAU,EAAVA,WACAC,EAAQ,EAARA,SACA9J,EAAW,EAAXA,YACApD,EAAW,EAAXA,YAEA,GAAgDxM,EAAAA,EAAAA,WAAS,GAAM,eAAxD2Z,EAAgB,KAAEC,EAAmB,KAC5C,GAA8C5Z,EAAAA,EAAAA,WAAS,GAAM,eAAtD6Z,EAAe,KAAEC,EAAkB,KAC1C,GAAkC9Z,EAAAA,EAAAA,WAAS,GAAM,eAA1C+Z,EAAS,KAAEC,EAAY,KACxBC,EAAW,WACfzN,IACAoN,GAAoB,GACpBE,GAAmB,GACnBE,GAAa,EACf,EAiCME,EAAmB,WAAH,OAASF,GAAa,EAAO,EAQnD,OAFArsB,QAAQC,IAAI,aAAcmsB,GAC1BpsB,QAAQC,IAAI,+BAEV,SAACyqB,GAAa,CAACC,OAAO,OAAM,UAC1B,UAAC7C,EAAA,EAAK,CAACC,UAAU,MAAMG,QAAS,EAAG5Y,WAAW,SAASwZ,IAAK8B,EAAS,WACnE,UAACS,GAAA,EAAI,CACHvoB,GAAI,CACFG,iBAAiBqB,EAAAA,EAAAA,IAAM,OAAQ,IAC/BtB,aAAc,iBACd,WAEF,SAAConB,GAAI,CACH3D,MAAM,YACN4D,MAAM,SAACmC,GAAA,EAAqB,IAC5BnpB,aAnCc,WACtBipB,IACAlN,GACF,KAkCQ,SAAC0L,GAAe,KAChB,SAACV,GAAI,CACH3D,MAAM,SACN4D,MAAM,SAACoC,GAAA,EAAS,IAChBppB,aA1DgB,WACpB2oB,EACFC,GAAoB,IAEpBK,IACAL,GAAoB,GAExB,KAqDQ,SAACnB,GAAe,KAChB,SAACV,GAAI,CACH3D,MAAM,OACN4D,MAAM,SAACqC,GAAA,EAAQ,IACfrpB,aAvDc,WAClB6oB,EACFC,GAAmB,IAEnBG,IACAH,GAAmB,GAEvB,KAkDQ,SAACrB,GAAe,KAChB,SAACV,GAAI,CACH3D,MAAM,QACN4D,MAAM,SAACsC,GAAA,EAAW,IAClBtpB,aAhDe,WACvBrD,QAAQC,IAAI,aAAcmsB,GACtBA,EACFC,GAAa,IAEbC,IACAD,GAAa,GAEjB,OA2COL,EAAmBF,EAAa,KAChCI,EAAkBH,EAAW,MAC9B,SAACN,GAAkB,CACjBvc,KAAMkd,EACNV,SA5CkB,WACxBa,IACAtK,GACF,EA0CQ0J,SAAUY,QAKpB,C,gBC3Ge,SAASK,GAAoB,GAAmC,IAAjC5N,EAAQ,EAARA,SAAU6N,EAAK,EAALA,MAAOhO,EAAW,EAAXA,YAM7D,OACE,UAACwM,GAAA,EAAI,CACHvoB,GAAI,CACFG,iBAAiBqB,EAAAA,EAAAA,IAAM,OAAQ,KAC/BtB,aAAc,sBACdqD,OAAQ,eACR,WAEF,SAAC+jB,GAAI,CACH3D,MAAM,MACN4D,MAAM,SAACyC,GAAA,EAAqB,IAC5BzpB,aAhBY,WAChBwb,IACAgO,GACF,KAeI,SAAC/B,GAAe,KAChB,SAACV,GAAI,CAAC3D,MAAM,SAAS4D,MAAM,SAACvV,EAAA,EAAU,IAAKzR,aAAc2b,MAG/D,C,gBCzBe,SAAS+N,GAAe,GAAmC,IAAjC7pB,EAAO,EAAPA,QAASma,EAAmB,EAAnBA,oBAChD,OACE,UAACyK,EAAA,EAAK,CACJC,UAAU,SACV7V,eAAe,SACf5C,WAAW,QACXxM,GAAI,CAAEG,gBAAiB,eAAgB,WAEvC,SAACW,EAAA,EAAU,CACTd,GAAI,CACFe,WAAY,OACZd,MAAO,OACPY,SAAU,UACVqpB,aAAc,cACd,SACH,aAGD,SAACC,GAAA,GAAM,CACL,aAAW,UACXzG,aAAc,EACd7Z,MAAOzJ,EACPgqB,kBAAkB,OAClBC,KAAM,GACN1U,IAAK,EACL2U,IAAK,GACL1pB,SAAU2Z,EACVva,GAAI,CAAEC,MAAO,aAIrB,CC/Be,SAASsqB,GAAc,GAAiC,IAA/BhY,EAAM,EAANA,OAAQkI,EAAkB,EAAlBA,mBAC9C,OACE,UAACuK,EAAA,EAAK,CACJC,UAAU,SACV7V,eAAe,SACf5C,WAAW,QACXxM,GAAI,CAAEG,gBAAiB,eAAgB,WAEvC,SAACW,EAAA,EAAU,CACTd,GAAI,CACFe,WAAY,OACZd,MAAO,OACPY,SAAU,WACV,SACH,mBAGD,SAACspB,GAAA,GAAM,CACL,aAAW,gBACXzG,aAAc,EACd7Z,MAAO0I,EACP6X,kBAAkB,OAClBC,KAAM,EACN1U,IAAK,EACL2U,IAAK,GACL1pB,SAAU6Z,EACVza,GAAI,CAAEC,MAAO,aAIrB,C,gBC5Be,SAASuqB,GAAa,GAMjC,IALFvqB,EAAK,EAALA,MACAoa,EAAkB,EAAlBA,mBACAhO,EAAW,EAAXA,YACAQ,EAAW,EAAXA,YACAtM,EAAY,EAAZA,aAGA,OADArD,QAAQC,IAAI,gBAAiB8C,EAAOoa,IAElC,UAAC2K,EAAA,EAAK,CACJC,UAAU,MACVzY,WAAW,SACX4C,eAAe,gBACfgW,QAAS,EACTplB,GAAI,CAAEkoB,GAAI,GAAI,WAEd,SAACpnB,EAAA,EAAU,CACTd,GAAI,CAAEe,WAAY,OAAQd,MAAO,OAAQY,SAAU,WAAY,SAChE,sBAGD,SAAC+Q,EAAA,EAAG,CACF7R,UAAU,MACVC,GAAI,CACFI,QAAS,MACTqqB,WAAY,OACZvqB,aAAc,MACdwqB,UAAW,2BACXne,QAAS,eACToe,OAAQ,WAEVjrB,QAAS2M,EAAY,UAErB,SAACuF,EAAA,EAAG,CACF7R,UAAU,MACVC,GAAI,CACFsD,MAAO,OACPC,OAAQ,OACRrD,aAAc,OACduqB,WAAW,QAAD,OAAUxqB,EAAM6J,EAAC,aAAK7J,EAAM8J,EAAC,aAAK9J,EAAM+J,EAAC,aAAK/J,EAAMkG,EAAC,WAIrE,SAACykB,GAAW,CACVxe,KAAMiO,EACNpa,MAAOA,EACP4M,YAAaA,EACbtM,aAAcA,MAItB,CAeO,SAASqqB,GAAY,GAA6C,IAA3Cxe,EAAI,EAAJA,KAAMnM,EAAK,EAALA,MAAO4M,EAAW,EAAXA,YAAatM,EAAY,EAAZA,aAEtD,OADArD,QAAQC,IAAI0P,GACLT,GACL,+BACE,UAACwF,EAAA,EAAG,CACF7R,UAAU,MACVC,GAAI,CACFsK,SAAU,WACVqD,OAAQ,EACRkd,OAAQ,IACR,WAEF,SAAC9Y,EAAA,EAAU,CACT/R,GAAI,CACFsK,SAAU,WACViD,IAAK,EACLC,MAAO,EACPG,OAAQ,EACRxN,gBAAiB,cACjBklB,EAAG,EACH3X,UAAW,sBACXod,OAAQ,mBAEVprB,QAASmN,EAAY,UAErB,SAAC6X,EAAA,EAAS,OAEZ,SAAC,MAAY,CAACzkB,MAAOA,EAAOW,SAAUL,SAGxC,IACN,C,wCC9Fe,SAASwqB,GAAY,GAKhC,IAJFzkB,EAAI,EAAJA,KACA2U,EAAgB,EAAhBA,iBACAzF,EAAO,EAAPA,QACAwF,EAAoB,EAApBA,qBAEA,GAA2BzL,EAAAA,EAAAA,UAAS,IAA7Byb,GAAgC,YAAhB,GACvB,OACE,UAAChG,EAAA,EAAK,CACJhlB,GAAI,CACFG,gBAAiB,eACjB,WAEF,UAAC6kB,EAAA,EAAK,CACJC,UAAU,MACVzY,WAAW,SACX4C,eAAe,gBACfgW,QAAS,EAAE,WAEX,SAACtkB,EAAA,EAAU,CACTd,GAAI,CAAEe,WAAY,OAAQd,MAAO,OAAQY,SAAU,WAAY,SAChE,kBAGD,UAACoqB,GAAA,EAAS,CAACC,KAAG,aACZ,SAACC,GAAA,EAAgB,CACfC,mBAAiB,EACjBC,SACE,SAACC,GAAA,EAAQ,CACP3lB,KAAK,QACL4lB,SAAqB,IAAZ/V,EACT5U,SAAU,kBAAMoa,GAAqB,EAAM,EAC3Chb,GAAI,CAAEC,MAAO,QAAS,gBAAiB,CAAEA,MAAO,YAGpD0jB,OACE,SAAC7iB,EAAA,EAAU,CAACD,SAAS,SAASE,WAAW,OAAM,SAAC,WAIlDf,GAAI,CAAEC,MAAO,OAAQc,WAAY,WAEnC,SAACoqB,GAAA,EAAgB,CACfC,mBAAiB,EACjBC,SACE,SAACC,GAAA,EAAQ,CACP3lB,KAAK,QACL4lB,SAAqB,IAAZ/V,EACT5U,SAAU,kBAAMoa,GAAqB,EAAK,EAC1Chb,GAAI,CAAEC,MAAO,OAAQ,gBAAiB,CAAEA,MAAO,YAGnD0jB,OACE,SAAC7iB,EAAA,EAAU,CAACD,SAAS,SAASE,WAAW,OAAM,SAAC,QAIlDf,GAAI,CAAEC,MAAO,OAAQc,WAAY,OAAQF,SAAU,mBAIzD,SAACqjB,EAAA,EAAS,CACRpkB,QAAQ,WACR6jB,MAAM,GACND,aAAcpd,EACd1F,SAAUqa,EACVtV,KAAK,QACL3F,GAAI,CAAEsD,MAAO,OAAQ6gB,GAAI,GACzBC,WAAY,CAAEpkB,GAAI,CAAEG,iBAAiBqB,EAAAA,EAAAA,IAAM,OAAQ,MACnD6iB,YACE,SAACvjB,EAAA,EAAU,CAACd,GAAI,CAAEC,MAAO,OAAQY,SAAU,WAAY,SACpDmqB,IAGLptB,QAASotB,MAIjB,CCjFe,SAASQ,GAAY,GAAkB,IAAhBC,EAAW,EAAXA,YAElC/sB,EASE+sB,EATF/sB,QACA6b,EAQEkR,EARFlR,oBACAF,EAOEoR,EAPFpR,mBACAQ,EAME4Q,EANF5Q,kBACAD,EAKE6Q,EALF7Q,iBACAF,EAIE+Q,EAJF/Q,iBACAD,EAGEgR,EAHFhR,mBACAQ,EAEEwQ,EAFFxQ,iBACAD,EACEyQ,EADFzQ,qBAGF,OACE,UAACgK,EAAA,EAAK,CACJC,UAAU,SACVG,QAAS,EACTplB,GAAI,CACFqlB,EAAG,EACHllB,iBAAiBqB,EAAAA,EAAAA,IAAM,OAAQ,IAC/BtB,aAAc,sBACdwqB,UAAW,2CACX,WAEF,SAACT,GAAc,CACb7pB,QAAS1B,EAAQ0B,QACjBma,oBAAqBA,KAEvB,SAACgQ,GAAa,CACZhY,OAAQ7T,EAAQwB,aAChBua,mBAAoBA,KAEtB,SAAC+P,GAAY,CACXvqB,MAAOvB,EAAQuB,MACfoa,mBAAoBA,EACpB9Z,aAAcsa,EACdhO,YAAa+N,EACbvO,YAAaqO,KAEf,SAACqQ,GAAW,CACVzkB,KAAM5H,EAAQ4H,KACdkP,QAAS9W,EAAQ8W,QACjByF,iBAAkBA,EAClBD,qBAAsBA,MAI9B,C,gBCpDe,SAAS0Q,GAAK,GAAgC,IAA9B/H,EAAK,EAALA,MAAO4D,EAAI,EAAJA,KAAMhnB,EAAY,EAAZA,aAC1C,OACE,SAACinB,GAAA,EAAsB,CACrBC,WAAS,EACT9D,MAAOA,EACP9Z,MAAO8Z,EAAMgI,cACbpE,KAAMA,EACNvnB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS0nB,QAAS,SAE/CjoB,QAASa,GAGf,CCVe,SAASqrB,GAAc,GAAqC,IAAnCtT,EAAU,EAAVA,WAAY8P,EAAU,EAAVA,WAAYC,EAAM,EAANA,OAC9D,OACE,UAACwD,GAAA,EAAgB,CACf7F,IAAK1N,EACLwT,YAAU,EACV9rB,GAAI,CAAE0nB,GAAI,EAAG3mB,WAAY,OAAQZ,iBAAiBqB,EAAAA,EAAAA,IAAM,OAAQ,KAAO,WAEvE,SAACkqB,GAAI,CAAC/H,MAAM,OAAO4D,MAAM,SAACiB,GAAA,EAAQ,IAAKjoB,aAAc8nB,KACrD,SAACqD,GAAI,CACH/H,MAAM,WACN4D,MAAM,SAACkB,GAAA,EAAY,IACnBloB,aAAc6nB,KAEhB,SAACsD,GAAI,CAAC/H,MAAM,QAAQ4D,MAAM,SAACmB,GAAA,EAAS,IAAKnoB,aAAc,WAAO,MAGpE,CCfe,SAASwrB,GAAa,GAA0B,IAAxBliB,EAAK,EAALA,MAAOtJ,EAAY,EAAZA,aAC5C,OACE,UAACsrB,GAAA,EAAgB,CACfC,YAAU,EACVjiB,MAAOA,EACPjJ,SAAUL,EACVP,GAAI,CACFe,WAAY,OACZZ,iBAAiBqB,EAAAA,EAAAA,IAAM,OAAQ,IAC/B,iBAAkB,CAAEvB,MAAO,UAC3B,WAEF,SAACunB,GAAA,EAAsB,CACrB7D,MAAM,YACN9Z,MAAM,YACN0d,MAAM,SAACmC,GAAA,EAAqB,IAC5B1pB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS0nB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrB7D,MAAM,SACN9Z,MAAM,QACN0d,MAAM,SAACoC,GAAA,EAAS,IAChB3pB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS0nB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrB7D,MAAM,OACN9Z,MAAM,OACN0d,MAAM,SAACqC,GAAA,EAAQ,IACf5pB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS0nB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrB7D,MAAM,QACN9Z,MAAM,QACN0d,MAAM,SAACsC,GAAA,EAAW,IAClB7pB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS0nB,QAAS,aAKvD,C,mDCnDe,SAASqE,GAAY,GAMhC,IALF/rB,EAAK,EAALA,MACAgsB,EAAgB,EAAhBA,iBACA7f,EAAI,EAAJA,KACA8f,EAAkB,EAAlBA,mBACAC,EAAsB,EAAtBA,uBAEA,OAAO/f,GACL,UAACwF,EAAA,EAAG,CAAC5R,GAAI,CAAEsK,SAAU,YAAa,WAChC,UAACuhB,GAAA,EAAgB,CACfC,YAAU,EACVjiB,MAAOoiB,EACPrrB,SAAUurB,EACVnsB,GAAI,CACFuM,QAAS,OACTxL,WAAY,OACZZ,iBAAiBqB,EAAAA,EAAAA,IAAM,OAAQ,IAC/B4qB,UAAW,iBACX9hB,SAAU,WACVkC,WAAY,UACZ,WAEF,SAACgb,GAAA,EAAsB,CACrB7D,OACE,SAAC7iB,EAAA,EAAU,CAACD,SAAS,UAAUE,WAAW,OAAM,SAAC,YAInD8I,MAAM,UACN0d,MAAM,SAAC8E,GAAA,EAAW,IAClBrsB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS0nB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrB7D,OACE,SAAC7iB,EAAA,EAAU,CAACD,SAAS,UAAUE,WAAW,OAAM,SAAC,WAInD8I,MAAM,gBACN0d,MAAM,SAAC+E,GAAA,EAAY,IACnBtsB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS0nB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrB7D,OACE,SAAC7iB,EAAA,EAAU,CAACD,SAAS,UAAUE,WAAW,OAAM,SAAC,UAInD8I,MAAM,QACN0d,MACE,SAACgF,GAAA,EAAU,CACTvsB,GAAI,CACFwsB,KAAK,QAAD,OAAUvsB,EAAM6J,EAAC,aAAK7J,EAAM8J,EAAC,aAAK9J,EAAM+J,EAAC,aAAK/J,EAAMkG,EAAC,KACzDjG,aAAc,SAIpBF,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS0nB,QAAS,YAGjD,SAACH,GAAA,EAAsB,CACrB7D,MAAM,OACN9Z,MAAM,OACN0d,MAAM,SAACkF,GAAA,EAAS,IAChBzsB,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS0nB,QAAS,eAInD,SAACjD,EAAA,EAAS,CACR7jB,SAAS,OACTb,GAAI,CACFsK,SAAU,WACViD,IAAK,EACLC,MAAO,EACPgf,KAAM,QACNrsB,gBAAiB,OACjBD,aAAc,MACdE,QAAS,OAEXV,QAASwsB,OAGX,IACN,CCpGe,SAASQ,GAAa,GAMjC,IALFtgB,EAAI,EAAJA,KACAvC,EAAK,EAALA,MACAqiB,EAAkB,EAAlBA,mBACAS,EAAY,EAAZA,aACAC,EAAS,EAATA,UAEA,OAAOxgB,GACL,UAACwF,EAAA,EAAG,CAAC5R,GAAI,CAAEsK,SAAU,YAAa,WAChC,UAACuhB,GAAA,EAAgB,CACfC,YAAU,EACVjiB,MAAOA,EACP7J,GAAI,CACFe,WAAY,OACZZ,iBAAiBqB,EAAAA,EAAAA,IAAM,OAAQ,IAC/B4qB,UAAW,iBACX,iBAAkB,CAAEnsB,MAAO,UAC3B,WAEF,SAACyrB,GAAI,CACH/H,MAAM,SACN4D,MAAM,SAACvV,EAAA,EAAU,IACjBzR,aAAcosB,KAEhB,SAACjB,GAAI,CACH/H,MAAM,MACN4D,MAAM,SAACyC,GAAA,EAAqB,IAC5BzpB,aAAcqsB,QAGlB,SAAClI,EAAA,EAAS,CACR7jB,SAAS,OACTb,GAAI,CACFsK,SAAU,WACViD,IAAK,EACLC,MAAO,EACPgf,KAAM,QACNrsB,gBAAiB,OACjBD,aAAc,MACdE,QAAS,OAEXV,QAASwsB,OAGX,IACN,CCtCe,SAASW,GAAe,GAKnC,IAJFpB,EAAW,EAAXA,YACA1K,EAAW,EAAXA,YACAF,EAAc,EAAdA,eACA1B,EAAW,EAAXA,YAGEzgB,EASE+sB,EATF/sB,QACA6b,EAQEkR,EARFlR,oBACAE,EAOEgR,EAPFhR,mBACAG,EAME6Q,EANF7Q,iBACAF,EAKE+Q,EALF/Q,iBACAG,EAIE4Q,EAJF5Q,kBACAI,EAGEwQ,EAHFxQ,iBACAD,EAEEyQ,EAFFzQ,qBACAX,EACEoR,EADFpR,mBAGMiC,EAAqCyE,EAArCzE,UAAWJ,EAA0B6E,EAA1B7E,SAAUH,EAAgBgF,EAAhBhF,YACrBxD,EAAmCsI,EAAnCtI,UAAWyB,EAAwB6G,EAAxB7G,oBAEnB,GAAgCzK,EAAAA,EAAAA,WAAS,GAAK,eAAvCud,EAAQ,KAAEC,EAAW,KAC5B,GAA0Bxd,EAAAA,EAAAA,UAAS,IAAG,eAA/B1F,EAAK,KAAEmZ,EAAQ,KACtB,GAAgCzT,EAAAA,EAAAA,WAAS,GAAM,eAAxCyd,EAAQ,KAAEC,EAAW,KAC5B,GAAkC1d,EAAAA,EAAAA,WAAS,GAAM,eAA1C+Z,EAAS,KAAEC,EAAY,KAC9B,GAAsCha,EAAAA,EAAAA,UAAS,MAAK,eAA7C2d,EAAW,KAAEC,EAAc,KAClC,GAAgD5d,EAAAA,EAAAA,UAAS,IAAG,eAArD0c,EAAgB,KAAEmB,EAAmB,KAC5C,GAAkC7d,EAAAA,EAAAA,WAAS,GAAM,eAA1C8d,EAAS,KAAEC,EAAY,KAC9B,GAAoC/d,EAAAA,EAAAA,UAAS,IAAG,gBAAzCge,GAAU,MAAEC,GAAa,MAU1BC,GAAyB,WAC7BR,GAAY,GACZE,EAAe,MACfC,EAAoB,IACpBL,GAAY,GACZ/J,EAAS,GACX,GA+CAnJ,EAAAA,EAAAA,YAAU,WACJmT,GAAiC,YAArBf,GACdkB,GACE,SAAClD,GAAc,CACb7pB,QAAS1B,EAAQ0B,QACjBma,oBAAqBA,IAI7B,GAAG,CAAC7b,EAAQ0B,QAAS4sB,KAGrBnT,EAAAA,EAAAA,YAAU,WACJmT,GAAiC,kBAArBf,GACdkB,GACE,SAAC5C,GAAa,CACZhY,OAAQ7T,EAAQwB,aAChBua,mBAAoBA,IAI5B,GAAG,CAAC/b,EAAQwB,aAAc8sB,KAG1BnT,EAAAA,EAAAA,YAAU,WACJmT,GAAiC,UAArBf,GACdkB,GACE,SAACvC,GAAW,CACVxe,KAAMiO,EACNpa,MAAOvB,EAAQuB,MACfM,aAAcsa,EACdhO,YAAa+N,IAIrB,GAAG,CAAClc,EAAQuB,MAAO+sB,EAAU3S,KAG7BR,EAAAA,EAAAA,YAAU,WACR3c,QAAQC,IAAI,0BACR6vB,GAAiC,SAArBf,GACdkB,GACE,SAACpC,GAAW,CACVzkB,KAAM5H,EAAQ4H,KACd2U,iBAAkBA,EAClBzF,QAAS9W,EAAQ8W,QACjBwF,qBAAsBA,IAI9B,GAAG,CAACtc,EAAQ4H,KAAM0mB,EAAUtuB,EAAQ8W,UA+CpC,OADAtY,QAAQC,IAAI,cAAe+vB,IAEzB,UAACnH,GAAA,EAAK,CACJC,IAAKzN,EACLvY,GAAI,CACFsK,SAAU,QACVugB,OAAQ,EACRva,KAAM,EACN9C,MAAO,EACPJ,GAAI,EACJjN,gBAAiB,QACjBD,aAAc,GAEhBgN,UAAW,EAAE,WAEb,SAACyb,GAAkB,CACjBvc,KAAMkd,EACNV,SA5BoB,WACxBzJ,IACAoK,GAAa,GACbvG,EAAS,GACX,EAyBM6F,SAvBoB,WACxBU,GAAa,GACbvG,EAAS,GACX,IAsBKkK,GACC,SAACtb,EAAA,EAAG,CACF5R,GAAI,CACFG,iBAAiBqB,EAAAA,EAAAA,IAAM,OAAQ,KAC/B6jB,EAAG,GACH,SAED6H,IAED,MACJ,SAACR,GAAY,CACXtgB,KAAMihB,EACNxjB,MAAO0jB,GACPZ,aAAczQ,EACd0Q,UAlDiB,WACrB7Q,IACA/B,GACF,EAgDMkS,mBAhM0B,WAC9BoB,GAAa,GACbE,GAAc,IACdT,GAAY,GACZhR,IACAiH,EAAS,GACX,KA4LI,SAACgJ,GAAW,CACV/rB,MAAOvB,EAAQuB,MACfgsB,iBAAkBA,EAClB7f,KAAM4gB,EACNd,mBAAoBuB,GACpBtB,uBAvLyB,SAACnnB,EAAG0oB,GACjCxwB,QAAQC,IAAI,6BACZiwB,EAAoBM,GACT,YAAPA,EACFP,GACE,SAAClD,GAAc,CACb7pB,QAAS1B,EAAQ0B,QACjBma,oBAAqBA,KAGT,kBAAPmT,EACTP,GACE,SAAC5C,GAAa,CACZhY,OAAQ7T,EAAQwB,aAChBua,mBAAoBA,KAGR,UAAPiT,GACThT,IACAyS,GACE,SAACvC,GAAW,CACVxe,KAAMiO,EACNpa,MAAOvB,EAAQuB,MACfM,aAAcsa,EACdhO,YAAa,WACXsgB,EAAe,MACfvS,GACF,MAGY,SAAP8S,GACTxwB,QAAQC,IAAIuwB,GACZP,GACE,SAACpC,GAAW,CACVzkB,KAAM5H,EAAQ4H,KACd2U,iBAAkBA,EAClBzF,QAAS9W,EAAQ8W,QACjBwF,qBAAsBA,MAI1BmS,GAAe,SAACrsB,EAAA,EAAU,CAACb,MAAM,YAAW,SAAEytB,IAElD,IA8IKZ,GACC,SAACf,GAAY,CAACliB,MAAOA,EAAOtJ,aAlFb,SAACgE,EAAO+jB,GAC3BvM,IANAyR,GAAc,IACdF,GAAa,GACbP,GAAY,GAMZU,KACAzK,EAASsF,GACQ,cAAbA,EACFhM,IACsB,UAAbgM,GACTyE,GAAY,GACZO,GAAa,IACS,SAAbhF,GACTyE,GAAY,GACZE,GAAY,IACU,UAAb3E,EACTiB,GAAa,GAGbrsB,QAAQC,IAAI,qBAAsBmrB,EAAU,sBAEhD,IAgEQ,OAGV,CC9Ne,SAASqF,GAAY,GAAyC,IAAvCvvB,EAAU,EAAVA,WAAYwvB,EAAY,EAAZA,aAAc3G,EAAQ,EAARA,SAC9D/pB,QAAQC,IAAI,eAAgB8pB,GAC5B,IAAM4G,GAAWC,EAAAA,EAAAA,MACjB,GAA8Bve,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAnCrN,EAAO,KAAEkV,EAAU,KAC1B,GAA4B7H,EAAAA,EAAAA,UAAS,YAAW,eAAzCtQ,EAAM,KAAE8uB,EAAS,KACxB,GAAoCxe,EAAAA,EAAAA,WAAS,GAAM,eAA5Cye,EAAU,KAAEC,EAAa,KAChC,GAA0C1e,EAAAA,EAAAA,UAAS,IAAG,eAA/C2e,EAAa,KAAEC,EAAgB,KAEhCC,EAAmB,SAACC,GACxBnxB,QAAQC,IAAI,qCAAsCkxB,GAClC,KAAZA,IACFF,EAAiBE,GACjBJ,GAAc,GAElB,EAEMK,EAAoB,WACxBpxB,QAAQC,IAAI,wBAAyB+wB,GACrCD,GAAc,GACdE,EAAiB,GACnB,EAEA,EAiBIjX,EAAQhV,GAAQ,gBAhBlBwe,EAAU,KACVrJ,EAAW,KAEXha,EAAS,KACTka,EAAS,KACTsJ,EAAc,KACd4K,EAAW,KACX1K,EAAW,KACXD,EAAU,KACVyN,EAAS,KACTpP,GAAW,MACX6B,GAAe,MACf1P,GAAiB,MACjBlU,GAAU,MACVwhB,GAAU,MACV/gB,GAAW,OAGbgc,EAAAA,EAAAA,YAAS,uBAAC,4FAC4B,IAAhCoE,OAAOC,KAAKhc,GAASJ,OAAY,iBACb,GAAtBisB,EAAU,YAEK,QAAb9G,EAAkB,gCACR7oB,IAAY,2DACZA,EACJ0iB,EAAW9D,cACX8D,EAAWlE,iBACXkE,EAAWpc,iBACX,KAAD,uBAPDpH,EAAc,KAQpBywB,EAAU,aACV7wB,QAAQC,IAAI,0BAA2BG,GACvC8Z,EAAW9Z,GACM,QAAb2pB,GACF2G,IACD,4CAEF,IAEH1wB,QAAQC,IACN,eACA+E,EACA4e,EAAW/D,SACX+D,EAAW7D,OACX6D,EAAW3e,OACX2e,EAAWjE,gBACXxF,EACAha,IAGFwc,EAAAA,EAAAA,YAAU,WACR,IAAImF,EAAK/f,EAGiB,IAAxB6hB,EAAW/D,UACqB,IAAhCkB,OAAOC,KAAKhc,GAASJ,QACd,cAAPkd,IAEAA,EAAK,SAGL8B,EAAW3e,OAAOL,OAAS,GAC3Bgf,EAAW3e,OAAOL,SAAWgf,EAAW/D,WAExCiC,EAAK,aAEH8B,EAAW3e,OAAOL,OAASgf,EAAW/D,WACxCiC,EAAK,WAEH8B,EAAW7D,QAAU6D,EAAW/D,UAAY+D,EAAW/D,SAAW,IACpEiC,EAAK,SAEP+O,EAAU/O,GACV9hB,QAAQC,IACN,qBACA2jB,EAAW7D,OACX6D,EAAW/D,SACX+D,EAAW3e,OAAOL,OAClBkd,EACA9c,EAEJ,GAAG,CAAC4e,IAEJ,IAAM0N,GAAQ,yCAAG,mFAGD,OAFdJ,EAAiB,oBACjBhX,EAAW,CAAC,GACZ+H,KAAc,SACRyO,IAAe,KAAD,EACpBG,EAAU,aACVO,IACiB,aAAbrH,IACFmH,EAAiB,+BACjBpM,YAAW,WACTsM,IACAT,EAAS,YACX,GAAG,MACJ,2CACF,kBAda,mCAgBRpR,GAAU,yCAAG,WAAO9c,GAAI,4EAGF,GAF1BzC,QAAQC,IAAI,iBAAkBujB,EAAW/gB,GAAOmhB,EAAW3e,QAE3D4e,EAAYvE,cAEG,QAAbyK,EAAkB,gCAAS7pB,GAAWuC,GAAK,2DAAS9B,GAAY8B,GAAM,KAAD,uBADjE8uB,EAAG,KAETvxB,QAAQC,IAAI,eAAgBsxB,EAAKpxB,GAC7BoxB,GACFzM,YAAW,WACQ,QAAbiF,GAAoBuH,KACxBzN,EAAYxF,cAAa,GACzBsS,EAAS,YACX,GAAG,KACJ,4CACF,gBAde,sCAgBVhH,IACJ,SAAC/D,EAAc,CACb1W,KAAM2U,EAAY3U,KAClB1M,QAASqhB,EAAY3E,gBACrBpP,QAAS+T,EAAY1E,gBACrB0G,MAAOxL,EAAUE,aAIfqP,IACJ,SAAC,IAAY,WACX,SAAC/C,EAAU,CACT3X,KAAM2U,EAAY3F,SAClB1b,QAAS+c,GACTzP,QAAS+T,EAAYxE,gBAKrBwK,IACJ,SAAC,IAAY,WACX,SAACzB,GAAgB,CAAClZ,KAAM2U,EAAYzF,UAAWrc,OAAQ2f,OAIrDqC,IACJ,SAACL,EAAO,CACNC,eAAgBA,EAChBC,WAAYA,EACZC,YAAaA,EACbC,gBAAiBA,GACjB1P,kBAAmBA,GACnB5S,QAAS+sB,EAAY/sB,QACrBof,KAAMyQ,EAAUzQ,OAId4Q,IACJ,SAAC7B,GAAc,CACbpB,YAAaA,EACb1K,YAAaA,EACbF,eAAgBA,EAChB1B,YAAaqP,KAIX5H,IACJ,SAACd,GAAM,CAAC1N,UAAWyI,EAAezI,UAAWzY,KAAM0X,IAG/CsX,IACJ,SAAC7E,GAAmB,CAClB5N,SAAU6E,EAAY7E,SACtB6N,MAAOlJ,EAAe7G,oBACtB+B,YAAagF,EAAYhF,cAGvB6S,IACJ,SAAC7F,GAAe,CACdjB,SAAUjH,EAAetI,UACzB+D,UAAWyE,EAAYzE,UACvB0M,WAAY2F,GACZ1F,UAAU,SAACuC,GAAW,CAACC,YAAaA,IACpCtM,YAAaqP,GACbzS,YAAagF,EAAYhF,cAIvBmL,GAAWlX,OAAOkJ,WAAalJ,OAAOmJ,YACtC6N,GAAWE,GAAWwH,GAAiBE,GAEvCvG,GAAM,yCAAG,6FAEsB,GAD7Bha,EAAWwgB,EAAAA,EAAAA,cACjB3xB,QAAQC,IAAI,YAAakR,GACR,QAAb4Y,GAAmC,KAAb5Y,EAAe,iBAER,OAD/B+f,EAAiB,0BACjBlxB,QAAQsI,KAAK,kBAAkB,SACzB7D,EAAAA,EAAAA,UAAAA,QAAAA,QAA6B,KAAD,kBAC5BA,EAAAA,EAAAA,UAAAA,OAAAA,QAA4B,KAAD,EAEI,OADrCzE,QAAQwI,QAAQ,kBAChBxI,QAAQsI,KAAK,wBAAwB,UACdspB,EAAAA,EAAAA,KACrB,CAACpO,EAAWrJ,EAAa,CAAC,IAC1B,WACA,KAAD,GAHa,OAAR0X,EAAQ,iBAISD,EAAAA,EAAAA,KAAahO,EAAW3e,OAAQ,UAAU,KAAD,GAA1D6sB,EAAQ,OACd9xB,QAAQC,IAAI,iBAAkB4xB,EAAUC,GACxC9xB,QAAQwI,QAAQ,wBAChB4oB,IAAoB,QAEtBvN,EAAYtE,aAAa,4CAC1B,kBApBW,mCAsBNwS,GAAc/H,IAClB,SAAC0E,GAAa,CACZtT,WAAYuI,EAAevI,WAC3B8P,WAAYrH,EAAY/E,eACxBqM,OAAQA,MAGV,SAACF,GAAc,CACb7P,WAAYuI,EAAevI,WAC3B8P,WAAYrH,EAAY/E,eACxBqM,OAAQA,KAIZ,OACE,UAACzW,EAAA,EAAG,CAAC5R,GAAI,CAAEG,gBAAiB,QAASoD,OAAQ,SAAU,WACrD,SAACmjB,GAAI,CACHta,KAAM2U,EAAY3U,KAClBgP,SAAU2F,EAAY3F,SACtBuL,eAAgB5F,EAAYzF,UAC5BuF,eAAgBA,EAChBC,WAAYA,EACZ8F,OAAQA,GACRzL,QAAS8T,GACTpI,eAAgBA,GAChBC,WAAYA,GACZC,iBAAkBA,GAClB9F,QAASA,GACT+F,SAAUA,GACV/nB,OAAQA,EACRgoB,SAAUA,KAEZ,kBACEjB,IAAKnF,EAAerI,YACpBhY,KAAK,OACLC,QAAM,EACNC,UAAQ,EACRC,OAAO,UACPC,SAAUkgB,EAAW1D,aAEtB2D,EAAY5M,UAAW,SAACiT,GAAA,EAAO,CAAChiB,MAAM,yBAA4B,MACnE,SAAC6d,EAAA,EAAM,CAAC7W,KAAM4hB,EAAW,UACvB,SAAC7K,EAAA,EAAa,WACZ,UAAC6B,EAAA,EAAK,CACJC,UAAU,MACV7V,eAAe,gBACf5C,WAAW,SACX4Y,QAAS,EAAE,WAEX,SAACb,EAAA,EAAgB,KACjB,SAACzjB,EAAA,EAAU,CAAChB,QAAQ,KAAI,SAAEouB,aAOtC,C,2DC7TMgB,EAAc,SAACC,GAAG,OACtBlR,OAAOmR,YAAYD,EAAIjoB,MAAM,KAAK7E,KAAI,SAAClD,GAAM,OAAKA,EAAO+H,MAAM,IAAK,EAAE,IAAG,EAoChD,aAW1B,OAX0B,0BAA3B,WAA4B6X,EAAKlV,EAAOwlB,EAAeC,GAAM,8EACvC,OAAhBC,GAAW,EAAM,EAAD,OACID,EACrBE,UAAS,UAAGzQ,EAAMlV,GAAS,CAAE4lB,YAAY,IACzCC,OAAM,SAAC9xB,GAAK,OAAKA,CAAK,IAAE,KAAD,EAKzB,OAPK+xB,EAAS,OAGfN,EAAc,IACVM,EAAUC,QACZD,EAAUC,MAAMxmB,SAAQ,SAACxL,GAAK,OAAKyxB,EAAczxB,EAAMywB,QAAQ,IAC/DkB,GAAW,GACZ,mBACOA,GAAQ,4CACjB,sBAED,KACEL,YAAAA,EACAW,YAjDF,WACE,IAAMC,EAAgBZ,EAAYhwB,SAASC,QAC3C,MAAI,aAAc2wB,EACTpyB,KAAKqyB,MAAMC,KAAKF,EAAczhB,WAEhC,EACT,EA4CE4hB,gBA1CF,SAAyBC,GACvB,OAAIA,EAAiB,IAAY,CAAEC,UAAW,GAC1CD,EAAiB,IAAY,CAAEC,UAAW,GACvC,CAAEA,UAAW,EACtB,EAuCEC,cArCF,SAAuBF,GACrB,OAAIA,EAAiB,IAAY,EAC7BA,EAAiB,IAAY,EAC1B,CACT,EAkCEG,kBAhCF,SAA2BluB,EAAQmuB,GACjC,IAAIC,EAAS,EACTC,EAAU,EACdruB,EAAOiH,SAAQ,YAAS,EAAN7F,OAAa,EAALD,MACJktB,GAAW,EAC1BD,GAAU,CACjB,IAEED,EADEC,EAASC,EACF,OAEA,UAEb,EAqBEC,aArBD,SAE2B,EAAD,uC","sources":["api/collage.jsx","api/helpers.js","components/OptionsButton.jsx","components/AddPhotos.jsx","components/LoginButton.jsx","components/collage/dbutils.js","components/collage/helpers.js","components/profile.jsx","db.js","hocs/require-authentication.jsx","components/collage/TextDisplay.jsx","components/collage/node.jsx","components/collage/binaryTree.jsx","components/collage/treeUtils.js","hooks/collage/base.jsx","hooks/collage/dimensions.jsx","hooks/collage/options.jsx","hooks/collage/actions.jsx","hooks/collage/images.jsx","hooks/collage/tree.jsx","components/collage/Collage.jsx","components/collage/DownloadDialog.jsx","components/collage/SaveDialog.jsx","components/collage/SaveStatusDialog.jsx","components/collage/Header.jsx","components/collage/EmptyCollage.jsx","components/collage/View.jsx","components/collage/DesktopActionItem.jsx","components/collage/DesktopDrawer.jsx","components/collage/ControlsDivider.jsx","components/collage/DesktopActions.jsx","components/collage/ClearCollageDialog.jsx","components/collage/DesktopControls.jsx","components/collage/DesktopImageOptions.jsx","components/collage/PaddingControl.jsx","components/collage/RadiusControl.jsx","components/collage/ColorControl.jsx","components/collage/TextControl.jsx","components/collage/EditControl.jsx","components/collage/MobileActionItem.jsx","components/collage/MobileActions.jsx","components/collage/MainControls.jsx","components/collage/EditOptions.jsx","components/collage/ImageOptions.jsx","components/collage/MobileControls.jsx","pages/collage/Base.jsx","utils.jsx"],"sourcesContent":["import helpers from 'api/helpers';\n\nfunction newCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/new';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction saveCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/save';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\nasync function upload(url, body) {\n  try {\n    const params = { body, method: 'PUT' };\n    const resp = await fetch(url, params).then((response) => response);\n    return resp;\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction listCollages(nextToken) {\n  try {\n    const path = '/api/collage/list';\n    const params = { next_token: nextToken };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getThumbnail(collageId) {\n  try {\n    const path = '/api/collage/thumbnail';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getCollage(collageId) {\n  try {\n    const path = '/api/collage/get';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction deleteCollage(collageId) {\n  try {\n    const path = '/api/collage/delete';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.deleteMethod(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction checkOptimizeStatus(collageId) {\n  try {\n    const path = '/api/collage/resized-count';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\nexport default {\n  newCollage,\n  saveCollage,\n  upload,\n  listCollages,\n  getThumbnail,\n  getCollage,\n  deleteCollage,\n  checkOptimizeStatus,\n};\n","const get = async (url, path, params = {}) => {\n  let newUrl = `https://${url}${path}`;\n  const options = {\n    method: 'GET',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  newUrl += `?${new URLSearchParams(params).toString()}`;\n  const resp = await fetch(newUrl, options);\n  if (!resp.ok) {\n    if (resp.status === 401) {\n      document.cookie =\n        'userInfo=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return { status: 'unauthenticated' };\n    }\n    if (resp.status === 403) {\n      return { status: 'forbidden' };\n    }\n  }\n\n  return resp.json();\n};\n\nconst post = async (url, path, params, body) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'POST',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body,\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\n\nconst deleteMethod = async (url, path, params) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'DELETE',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\nexport default { get, post, deleteMethod };\n","import PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\n\nexport default function OptionsButton({ children, onClick, name }) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: 'muted.main',\n        borderRadius: 15,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: 'muted.main',\n          backgroundColor: 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  //  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport OptionsButton from 'components/OptionsButton';\nimport Typography from '@mui/material/Typography';\n\nexport default function AddPhotos({ handleChange }) {\n  return (\n    <OptionsButton name=\"add\">\n      <input\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={handleChange}\n      />\n      <AddPhotoIcon sx={{ fontSize: '2rem' }} />\n      <Typography sx={{ fontWeight: 'bold' }}>Add Images</Typography>\n    </OptionsButton>\n  );\n}\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import Button from '@mui/material/Button';\n// import Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\n\nexport default function LoginButton({ authURL, next }) {\n  const url =\n    next !== ''\n      ? `https://${authURL}/oauth2/authorize?next=${next}`\n      : `https://${authURL}/oauth2/authorize`;\n  return (\n    <a\n      href={url}\n      target=\"_self\"\n      style={{ textDecoration: 'none', color: 'white' }}\n    >\n      <Button\n        type=\"submit\"\n        variant=\"outlined\"\n        sx={{\n          borderRadius: '5px',\n          borderColor: 'white',\n          fontWeight: 'bold',\n          color: 'white',\n          '&:hover': {\n            color: 'white',\n            borderColor: 'white',\n            backgroundColor: alpha('#fff', 0.1),\n          },\n        }}\n      >\n        Login\n      </Button>\n    </a>\n  );\n}\n\nLoginButton.propTypes = {\n  authURL: PropTypes.string.isRequired,\n  next: PropTypes.string.isRequired,\n};\n","import db from 'db';\n\nasync function getData(tableName) {\n  const rows = await db.collageDB[tableName].toArray();\n  if (rows.length) return rows;\n  return [];\n}\n\nfunction clearData(tableName) {\n  return db.collageDB[tableName].clear();\n}\n\nasync function getCollageDetails() {\n  const rows = await getData('details');\n  console.log('in get collage details', rows);\n  if (rows.length) return rows[0];\n  return {};\n}\n\nasync function getCollageData() {\n  const details = await getCollageDetails();\n  const images = await getData('images');\n  return { details, images };\n}\n\nfunction clearCollageData() {\n  clearData('details');\n  clearData('images');\n}\n\nasync function save(data, tableName) {\n  return data.map((dt) => db.collageDB[tableName].put(dt));\n}\n\nexport default { getCollageData, clearCollageData, save };\n","function textCanvasDraw(\n  ctx,\n  textArray,\n  position,\n  scaleFactor,\n  canvasWidth,\n  textHeight\n) {\n  ctx.font = `${scaleFactor * 20}px Arial`;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'top';\n  ctx.fillStyle = '#1c1c1cb3';\n  ctx.fillRect(0, position, canvasWidth, position + textHeight);\n  ctx.fillStyle = 'white';\n\n  console.log('text array', textArray, textHeight);\n  // eslint-disable-next-line no-restricted-syntax\n  for (const chunk of textArray) {\n    const [textPart, , y] = chunk;\n    ctx.fillText(textPart, canvasWidth / 2, y + position + 2.5 * scaleFactor);\n  }\n}\n\nfunction getClosest(arr, index1, index2, target) {\n  if (target - arr[index1] >= arr[index2] - target) return index2;\n  return index1;\n}\n\nfunction findClosest(arr, target) {\n  const n = arr.length;\n\n  if (target <= arr[0]) return 0;\n  if (target >= arr[n - 1]) return n - 1;\n\n  let start = 0;\n  let end = n;\n  let mid = 0;\n  while (start < end) {\n    mid = (start + end) / 2;\n\n    if (arr[mid] === target) return mid;\n\n    if (target < arr[mid]) {\n      if (mid > 0 && target > arr[mid - 1])\n        return getClosest(arr, mid - 1, mid, target);\n      end = mid;\n    } else {\n      if (mid < n - 1 && target < arr[mid + 1])\n        return getClosest(arr, mid, mid + 1, target);\n      start = mid + 1;\n    }\n  }\n\n  return mid;\n}\n\nfunction getCut() {\n  const cutArr = ['v', 'h'];\n  return cutArr[Math.round(Math.random())];\n}\n\nfunction findImgPair(arr, target) {\n  let start = 0;\n  let end = arr.length - 1;\n  let i = start;\n  let j = end;\n  let minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n  while (start <= end) {\n    if (arr[start] + arr[end] > target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        // update fetched pair and matching cost\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      end -= 1;\n    } else if (arr[start] + arr[end] <= target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      start += 1;\n    } else {\n      // best pair (m === 0) found\n      i = start;\n      j = end;\n      break;\n    }\n  }\n  const randomNumber = Math.round(Math.random());\n  if (randomNumber) return [i, j];\n  return [j, i];\n}\n\nfunction getAspectRatio(cut, ar1, ar2) {\n  if (cut === 'v') return ar1 + ar2;\n  return (ar1 * ar2) / (ar1 + ar2);\n}\n\nfunction downscaleImage(image, newWidth, newHeight, fileType) {\n  const canvas = document.createElement('canvas');\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, newWidth, newHeight);\n  return canvas.toDataURL(fileType);\n}\n\n// function convertImage(image, newWidth, newHeight) {\n//   const canvas = document.createElement('canvas');\n//   canvas.width = newWidth;\n//   canvas.height = newHeight;\n//   const ctx = canvas.getContext('2d');\n//   ctx.drawImage(image, 0, 0, newWidth, newHeight);\n//   return canvas.toDataURL('image/webp');\n// }\n\nfunction optimizeImage(image, newWidth, newHeight) {\n  const canvas = document.createElement('canvas');\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, newWidth, newHeight);\n  return canvas.toDataURL('image/webp', 0.3);\n}\n\nfunction resizeImages(originalImages, maxWidth, handleImages, addImagesToDB) {\n  const tempImages = [];\n  originalImages.forEach((origImage) => {\n    const image = new Image();\n    image.onload = () => {\n      const { title, aspectRatio, type } = origImage;\n      const dataurl = downscaleImage(\n        image,\n        maxWidth,\n        maxWidth / aspectRatio,\n        origImage.type\n      );\n      const tempImage = {\n        title,\n        src: dataurl,\n        naturalHeight: maxWidth / aspectRatio,\n        naturalWidth: maxWidth,\n        aspectRatio,\n        type,\n      };\n      tempImages.push(tempImage);\n      handleImages((imgs) => {\n        const ind = imgs.findIndex((elem) => elem.title === origImage.title);\n        return [...imgs.slice(0, ind), tempImage, ...imgs.slice(ind + 1)];\n      });\n      addImagesToDB(tempImage);\n    };\n    image.src = origImage.src;\n  });\n}\n\nfunction convertBase64(file) {\n  console.log('convert base64', file);\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\n\nfunction convertBase64String(file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsD(new Blob(file));\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\nasync function handleImageLoad(\n  event,\n  handleImageCount,\n  handleNewImageCount,\n  handleImageData\n) {\n  if (event.target.files) {\n    handleImageCount((cnt) => cnt + event.target.files.length);\n    handleNewImageCount(event.target.files.length);\n    const files = Array.from(event.target.files);\n    files.map(async (file) => {\n      const image = new Image();\n      image.onload = (e) => {\n        const { naturalWidth, naturalHeight, src } = e.target;\n        const title = `${Date.now()}-${file.name}`;\n        console.log('handle image load', title);\n        const aspectRatio = naturalWidth / naturalHeight;\n        console.time('handle image load optimize', title);\n        const optimizedSRC = optimizeImage(image, 1500, 1500 / aspectRatio);\n        console.timeEnd('handle image load optimize', title);\n        console.log('image size', title, file.size, optimizedSRC.length);\n        const imageDetail = {\n          title,\n          src: optimizedSRC,\n          originalSRC: src,\n          originalHeight: naturalHeight,\n          originalWidth: naturalWidth,\n          naturalHeight: 1500 / aspectRatio,\n          naturalWidth: 1500,\n          aspectRatio,\n          type: file.type,\n          file,\n        };\n        handleImageData(imageDetail);\n      };\n      image.src = await convertBase64(file);\n    });\n  }\n}\n\nfunction getCollageDimension(maxW, maxH, a) {\n  const origAR = maxW / maxH;\n  if (origAR < a) return [maxW, maxW / a];\n  if (origAR > a) return [maxH * a, maxH];\n  return [maxW, maxH];\n}\n\nfunction wrapText(text, x, y, maxWidth, fontSize, lineHeight) {\n  // First, start by splitting all of our text into words,\n  // but splitting it into an array split by spaces\n  if (text.length === 0) return [];\n  const paddingX = 1; // 8px on both sided\n  const textCanvas = document.createElement('canvas');\n  textCanvas.width = maxWidth - 2 * paddingX * 8;\n  textCanvas.height = 1000;\n  const ctx = textCanvas.getContext('2d');\n  ctx.font = `${fontSize}px Arial`;\n  ctx.textAlign = 'center';\n  const tempX = x;\n  let tempY = y;\n  const words = text.split(' ');\n  let line = ''; // This will store the text of the current line\n  let testLine = ''; // This will store the text when we add a word, to test if it's too long\n  const lineArray = []; // This is an array of lines, which the function will return\n\n  // Lets iterate over each word\n  for (let n = 0; n < words.length; n += 1) {\n    // Create a test line, and measure it..\n    testLine += `${words[n]} `;\n    const metrics = ctx.measureText(testLine);\n    const testWidth = metrics.width;\n    console.log(\n      'wrap text ',\n      line,\n      testLine,\n      testWidth,\n      textCanvas.width,\n      ctx.letterSpacing\n    );\n    // If the width of this test line is more than the max width\n    if (testWidth > textCanvas.width && n > 0) {\n      // Then the line is finished, push the current line into \"lineArray\"\n      lineArray.push([line, tempX, tempY]);\n      // Increase the line height, so a new line is started\n      tempY += lineHeight;\n      // Update line and test line to use this word as the first word on the next line\n      line = `${words[n]} `;\n      testLine = `${words[n]} `;\n    } else {\n      // If the test line is still less than the max width, then add the word to the current line\n      line += `${words[n]} `;\n    }\n    // If we never reach the full max width, then there is only one line..\n    // so push it into the lineArray so we return something\n    if (n === words.length - 1) {\n      lineArray.push([line, tempX, tempY]);\n    }\n  }\n  // Return the line array\n  return lineArray;\n}\n\nfunction getTextHeight(\n  text,\n  x,\n  y,\n  maxWidth,\n  fontSize,\n  lineHeight,\n  scaleFactor\n) {\n  const lineArray = wrapText(\n    text,\n    x,\n    y,\n    maxWidth,\n    fontSize * scaleFactor,\n    lineHeight * scaleFactor\n  );\n  return lineArray.length * lineHeight * scaleFactor;\n}\n\nfunction getImageDimensions(\n  paperWidth,\n  paperHeight,\n  text,\n  x,\n  y,\n  fontSize,\n  lineHeight,\n  scaleFactor,\n  aspectRatio\n) {\n  const textHeight = getTextHeight(\n    text,\n    x,\n    y,\n    paperWidth,\n    fontSize,\n    lineHeight,\n    scaleFactor\n  );\n  return getCollageDimension(paperWidth, paperHeight - textHeight, aspectRatio);\n}\n\nconst convertToRGBA = (value) =>\n  `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nfunction optimizeDimensions(maxPrintWidth, maxPrintHeight, problematicNodes) {\n  const ar = maxPrintWidth / maxPrintHeight;\n  const optimumTreeSizes = problematicNodes.map((pn) => {\n    const newRootWidth =\n      (maxPrintWidth * pn.value.naturalWidth) / pn.value.width;\n    const newRootHeight = newRootWidth / ar;\n    // node with highest score needs smalles tree. smallest tree will satisfy all constraints\n    const score = maxPrintWidth - newRootWidth + maxPrintHeight - newRootHeight;\n    return [score, [newRootWidth, newRootHeight]];\n  });\n  optimumTreeSizes.sort((a, b) => b[0] - a[0]);\n  console.log(\n    'optimun tree sizes',\n    optimumTreeSizes,\n    problematicNodes,\n    maxPrintWidth,\n    maxPrintHeight\n  );\n  return optimumTreeSizes[0][1];\n}\n\nexport default {\n  getCut,\n  findClosest,\n  findImgPair,\n  getAspectRatio,\n  handleImageLoad,\n  resizeImages,\n  wrapText,\n  convertToRGBA,\n  getCollageDimension,\n  downscaleImage,\n  convertBase64,\n  convertBase64String,\n  textCanvasDraw,\n  getTextHeight,\n  getImageDimensions,\n  optimizeDimensions,\n  optimizeImage,\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport Logout from '@mui/icons-material/Logout';\nimport Typography from '@mui/material/Typography';\nimport ListItemText from '@mui/material/ListItemText';\nimport Link from '@mui/material/Link';\nimport { alpha } from '@mui/material/styles';\nimport Authenticate from '../hocs/require-authentication';\nimport commonUtils from '../utils';\n\nexport function ProfileAvatar({ name, picture, email }) {\n  const initials = Array.from(email)[0].toUpperCase();\n  return (\n    <Avatar\n      sx={{\n        borderRadius: '50%',\n        // border: 3,\n        borderColor: alpha('#fff', 0.8),\n        referrerPolicy: 'no-referrer',\n      }}\n      alt={name}\n      src={picture}\n    >\n      {initials}\n    </Avatar>\n  );\n}\n\nfunction ProfileIcon({ name, email, open, handleClick, avatar }) {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        textAlign: 'center',\n        marginRight: '10px',\n      }}\n    >\n      <Tooltip\n        title={\n          <>\n            <Typography>{name}</Typography>\n            <Typography>{email}</Typography>\n          </>\n        }\n      >\n        <IconButton\n          onClick={handleClick}\n          size=\"small\"\n          aria-controls={open ? 'account-menu' : undefined}\n          aria-haspopup=\"true\"\n          aria-expanded={open ? 'true' : undefined}\n          sx={{ ml: 2 }}\n        >\n          {avatar}\n        </IconButton>\n      </Tooltip>\n    </Box>\n  );\n}\n\nfunction ProfileMenu({ name, open, handleClose, anchorEl, avatar, email }) {\n  const profileIdentifier = name || email;\n  const authURL = process.env.REACT_APP_AUTH_URL;\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      id=\"account-menu\"\n      open={open}\n      onClose={handleClose}\n      onClick={handleClose}\n      PaperProps={{\n        elevation: 0,\n        sx: {\n          filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n          mt: 1.5,\n          '& .MuiAvatar-root': {\n            width: 32,\n            height: 32,\n            ml: -0.5,\n            mr: 1,\n          },\n          '&:before': {\n            content: '\"\"',\n            display: 'block',\n            position: 'absolute',\n            top: 0,\n            right: 14,\n            width: 10,\n            height: 10,\n            bgcolor: 'background.paper',\n            transform: 'translateY(-50%) rotate(45deg)',\n            zIndex: 0,\n          },\n        },\n      }}\n      transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n      anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n    >\n      <MenuItem>\n        {avatar}\n        <ListItemText>{profileIdentifier}</ListItemText>\n      </MenuItem>\n      <Divider />\n      <Link\n        href={`https://${authURL}/oauth2/logout`}\n        underline=\"none\"\n        sx={{ alignItems: 'center', display: 'flex' }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <Logout fontSize=\"small\" />\n          </ListItemIcon>\n          <Typography sx={{ color: 'muted.main' }}>Logout</Typography>\n        </MenuItem>\n      </Link>\n    </Menu>\n  );\n}\n\nfunction Profile() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const userInfo = commonUtils.getUserInfo();\n  const handleClose = () => setAnchorEl(null);\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const userAvatar = (\n    <ProfileAvatar\n      name={userInfo.name}\n      picture={userInfo.picture}\n      email={userInfo.email}\n    />\n  );\n\n  return (\n    <>\n      <ProfileIcon\n        avatar={userAvatar}\n        open={open}\n        email={userInfo.email}\n        handleClick={handleClick}\n        name={userInfo.name}\n      />\n      <ProfileMenu\n        anchorEl={anchorEl}\n        avatar={userAvatar}\n        handleClose={handleClose}\n        name={userInfo.name}\n        email={userInfo.email}\n        open={open}\n      />\n    </>\n  );\n}\n\nexport default function ProfileLink() {\n  //  const ProfileButton = Authenticate(Profile);\n  return (\n    <Grid item sx={{ paddingTop: '0.3rem' }}>\n      <Authenticate>\n        <Profile />\n      </Authenticate>\n    </Grid>\n  );\n}\n\nProfileIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  avatar: PropTypes.node.isRequired,\n};\n\nProfileMenu.defaultProps = {\n  anchorEl: '',\n};\n\nProfileMenu.propTypes = {\n  name: PropTypes.string.isRequired,\n  anchorEl: PropTypes.node,\n  handleClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  avatar: PropTypes.node.isRequired,\n  email: PropTypes.string.isRequired,\n};\n\nProfileAvatar.propTypes = {\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n};\n","import Dexie from 'dexie';\n\nconst collageDB = new Dexie('collage');\n\ncollageDB.version(1).stores({\n  images:\n    'title, src,originalSRC,originalHeight, originalWidth, naturalWidth,naturalHeight,aspectRatio,type,targetAspectRatio,file', // Primary key and indexed props\n  details: '++id, details',\n});\n\nexport default { collageDB };\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport Button from '@mui/material/Button';\nimport commonUtils from '../utils';\n\nfunction AuthDialog({ open, onLogin }) {\n  console.log('auth dialog', open);\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Login</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        Please login to your account to complete this action\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          onClick={onLogin}\n          sx={{ color: 'primary', fontWeight: 'bold' }}\n        >\n          Login\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\nAuthDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onLogin: PropTypes.func.isRequired,\n};\n\nfunction Authenticate({ children, nextPath }) {\n  const [open, setOpen] = useState(true);\n  const authURL = process.env.REACT_APP_AUTH_URL;\n  const location = useLocation();\n  const cookieValue = commonUtils.getUserInfo();\n  const isLoggedIn = cookieValue !== '';\n\n  console.log('auth', open);\n  if (isLoggedIn === true) {\n    return children;\n  }\n\n  const redirectToLogin = () => {\n    const path = `https://${authURL}/oauth2/authorize?next=${location.pathname}${location.search}`;\n    window.location.replace(path);\n  };\n\n  if (nextPath) {\n    return <Navigate to={nextPath} replace />;\n  }\n\n  return (\n    <AuthDialog\n      open={open}\n      onLogin={redirectToLogin}\n      onClose={() => setOpen(false)}\n    />\n  );\n}\n\nAuthenticate.defaultProps = {\n  nextPath: '',\n};\n\nAuthenticate.propTypes = {\n  children: PropTypes.node.isRequired,\n  nextPath: PropTypes.string,\n};\n\nexport default Authenticate;\n","import Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\n\nexport default function TextDisplay(textArray, position) {\n  return (\n    <>\n      {\n        // eslint-disable-next-line react/destructuring-assignment\n        textArray.map((chunk) => (\n          <Typography\n            key={chunk[2]}\n            sx={{\n              width: '100%',\n              position: 'absolute',\n              top: position + chunk[2],\n              bgcolor: alpha('#1c1c1c', 0.7),\n              paddingX: 1,\n              color: 'button.main',\n              textAlign: 'center',\n              fontFamily: 'Arial',\n              fontSize: '20px',\n              lineHeight: '25px',\n              letterSpacing: 'normal',\n            }}\n          >\n            {chunk[0]}\n          </Typography>\n        ))\n      }\n    </>\n  );\n}\n","import Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Tooltip from '@mui/material/Tooltip';\nimport { alpha } from '@mui/material/styles';\nimport helpers from 'components/collage/helpers';\n\nexport default class Node {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n\n  fromObject(obj) {\n    if (obj != null) {\n      this.value = obj.value;\n      if (obj.left != null) {\n        this.left = new Node(obj.left.value);\n        this.left.fromObject(obj.left);\n      }\n      if (obj.right != null) {\n        this.right = new Node(obj.right.value);\n        this.right.fromObject(obj.right);\n      }\n      return this;\n    }\n    return null;\n  }\n\n  getScore() {\n    if ('cut' in this.value) {\n      return [...this.left.getScore(), ...this.right.getScore()];\n    }\n\n    return [this.value.width + this.value.height];\n  }\n\n  display() {\n    let output = [];\n    const { cut, title, aspectRatio } = this.value;\n    if (this === null) return null;\n    if ('cut' in this.value) output.push([cut, aspectRatio]);\n    if ('title' in this.value) output.push([title, aspectRatio]);\n    if (this.left !== null) output = output.concat(this.left.display());\n    if (this.right !== null) output = output.concat(this.right.display());\n    return output;\n  }\n\n  copy() {\n    if (this === null) return null;\n    const copyNode = new Node({ ...this.value });\n    if (this.left != null) copyNode.left = this.left.copy();\n    if (this.right != null) copyNode.right = this.right.copy();\n    return copyNode;\n  }\n\n  replaceImages(newImages) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const findIndex = newImages.findIndex(\n          (elem) => elem.title === this.value.title\n        );\n        const origImage = newImages[findIndex];\n        this.value.src = origImage.originalSRC;\n        this.value.naturalWidth = origImage.originalWidth;\n        this.value.naturalHeight = origImage.originalHeight;\n      }\n      if (this.left != null) this.left.replaceImages(newImages);\n      if (this.right != null) this.right.replaceImages(newImages);\n    }\n  }\n\n  removeImageData() {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const { src, originalSRC, ...rest } = this.value;\n        this.value = rest;\n      }\n      if (this.left != null) this.left.removeImageData();\n      if (this.right != null) this.right.removeImageData();\n    }\n  }\n\n  addImageData(imageData) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const image = imageData.find((elem) => elem.title === this.value.title);\n        this.value.src = image.src;\n      }\n      if (this.left != null) this.left.addImageData(imageData);\n      if (this.right != null) this.right.addImageData(imageData);\n    }\n  }\n\n  RenderImage(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    const { width, title, src, x, y } = this.value;\n\n    const newX = x + xOffset;\n    const newY = y + yOffset;\n    console.log('rendering image', title);\n    return (\n      <>\n        <Box\n          key={title}\n          component=\"img\"\n          title={title}\n          alt={title}\n          width={width}\n          onLoad={() => {\n            handleCollageImageLoad();\n            console.log('loaded', title);\n          }}\n          src={src}\n          sx={{\n            position: 'absolute',\n            padding: `${padding}px`,\n            borderRadius: `${borderRadius}px`,\n            left: this.value.x + xOffset,\n            top: this.value.y + yOffset,\n          }}\n        />\n        {delImg === true ? (\n          <Tooltip title=\"Remove Image\">\n            <IconButton\n              size=\"medium\"\n              sx={{\n                color: alpha('#000', 0.7),\n                bgcolor: alpha('#fff', 0.5),\n                position: 'absolute',\n                top: newY + padding,\n                left: newX + padding,\n                padding: `${padding}px`,\n                borderRadius: '0 0 5px 0',\n              }}\n              onClick={() => handleRemoveImage(title)}\n            >\n              <DeleteIcon size=\"medium\" />\n            </IconButton>\n          </Tooltip>\n        ) : null}\n      </>\n    );\n  }\n\n  DOMDisplay(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    console.log(\n      'node dom display',\n      padding,\n      borderRadius,\n      delImg,\n      handleRemoveImage,\n      yOffset,\n      xOffset,\n      this.value.title\n    );\n    const { cut } = this.value;\n    if (this === null) return null;\n    if (cut) {\n      console.log(this.right, this.left);\n      return (\n        <>\n          {this.left != null\n            ? this.left.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n          {this.right != null\n            ? this.right.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n        </>\n      );\n    }\n    if ('title' in this.value)\n      return this.RenderImage(\n        padding,\n        borderRadius,\n        delImg,\n        handleRemoveImage,\n        yOffset,\n        xOffset,\n        handleCollageImageLoad\n      );\n    return null;\n  }\n\n  ResizeImage(image) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = this.value.naturalWidth;\n    tempCanvas.height = this.value.naturalHeight;\n    const tempCtx = tempCanvas.getContext('2d');\n    let width = this.value.naturalWidth;\n    let height = this.value.naturalHeight;\n    let newWidth;\n    let newHeight;\n    const scaleFactor = Math.floor(\n      Math.log2(this.value.naturalWidth / this.value.width)\n    );\n    if (scaleFactor === 0) {\n      tempCtx.drawImage(\n        image,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    } else {\n      for (let i = 0; i < scaleFactor; i += 1) {\n        newWidth = width >> 1; // eslint-disable-line no-bitwise\n        newHeight = newWidth / this.value.aspectRatio; // eslint-disable-line no-bitwise\n        if (i === 0) {\n          tempCtx.drawImage(\n            image,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        } else {\n          tempCtx.drawImage(\n            tempCanvas,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        }\n        width = newWidth;\n        height = newHeight;\n      }\n\n      tempCtx.drawImage(\n        tempCanvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    }\n    return tempCanvas;\n  }\n\n  ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset) {\n    const x = this.value.x + padding + xOffset;\n    const y = this.value.y + padding + yOffset;\n    const clipwidth = this.value.width - 2 * padding;\n    const clipheight = clipwidth / this.value.aspectRatio;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + clipwidth - radius, y);\n    ctx.quadraticCurveTo(x + clipwidth, y, x + clipwidth, y + radius);\n    ctx.lineTo(x + clipwidth, y + clipheight - radius);\n    ctx.quadraticCurveTo(\n      x + clipwidth,\n      y + clipheight,\n      x + clipwidth - radius,\n      y + clipheight\n    );\n    ctx.lineTo(x + radius, y + clipheight);\n    ctx.quadraticCurveTo(x, y + clipheight, x, y + clipheight - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.clip();\n\n    ctx.drawImage(\n      tempCanvas,\n      0,\n      0,\n      this.value.width,\n      this.value.height,\n      x,\n      y,\n      clipwidth,\n      clipheight\n    );\n    ctx.restore();\n  }\n\n  CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset) {\n    if ('cut' in this.value) {\n      this.left.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n      this.right.CanvasDisplay(\n        canvasElement,\n        padding,\n        radius,\n        yOffset,\n        xOffset\n      );\n    }\n\n    if ('title' in this.value) {\n      const ctx = canvasElement.getContext('2d');\n      const newImg = new Image();\n      newImg.onload = () => {\n        const tempCanvas = this.ResizeImage(newImg);\n        const tempCtx = tempCanvas.getContext('2d');\n        this.ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset);\n        tempCtx.clearRect(0, 0, tempCanvas.width, tempCanvas.height);\n      };\n      newImg.src = this.value.src;\n    }\n  }\n\n  generate(images, tar, imageCount) {\n    const targetAspectRatioArr = images.map(\n      (image) => image.naturalWidth / image.naturalHeight\n    );\n    if (imageCount < 1) return [];\n    if (imageCount === 1) {\n      const closestIndex = helpers.findClosest(targetAspectRatioArr, tar);\n      this.value = images[closestIndex];\n      this.left = null;\n      this.right = null;\n      return [\n        ...images.slice(0, closestIndex),\n        ...images.slice(closestIndex + 1),\n      ];\n    }\n\n    const cut = helpers.getCut();\n    this.value = { cut, targetAspectRatio: tar };\n    if (imageCount === 2) {\n      const [leftIndex, rightIndex] = helpers.findImgPair(\n        targetAspectRatioArr,\n        tar\n      );\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        images[leftIndex].aspectRatio,\n        images[rightIndex].aspectRatio\n      );\n      this.left = new Node(images[leftIndex]);\n      this.right = new Node(images[rightIndex]);\n      return images.filter(\n        (item, index) => ![leftIndex, rightIndex].includes(index)\n      );\n    }\n\n    let restImages;\n    let targetAspectRatio;\n    this.left = new Node({ cut: helpers.getCut() });\n    //  this.right = new Node({ cut: helpers.getCut() });\n    this.right = new Node({ cut: this.left.value.cut === 'v' ? 'h' : 'v' });\n\n    targetAspectRatio = tar / 2;\n    if (cut === 'v') {\n      targetAspectRatio = tar * 2;\n    }\n\n    const randomNumber = Math.round(Math.random());\n    const [first, second] = randomNumber\n      ? ['left', 'right']\n      : ['right', 'left'];\n    restImages = this[first].generate(\n      images,\n      targetAspectRatio,\n      imageCount - Math.floor(imageCount / 2)\n    );\n    restImages = this[second].generate(\n      restImages,\n      targetAspectRatio,\n      Math.floor(imageCount / 2)\n    );\n\n    this.value.aspectRatio = helpers.getAspectRatio(\n      this.value.cut,\n      this.left.value.aspectRatio,\n      this.right.value.aspectRatio\n    );\n\n    return restImages;\n  }\n\n  adjust(th) {\n    let adjustments = 0;\n    if (this === null) return adjustments;\n\n    if (this.left !== null && this.right !== null) {\n      if (this.value.aspectRatio > this.value.targetAspectRatio * th) {\n        this.value.cut = 'h';\n        adjustments += 1;\n      }\n      if (this.value.aspectRatio < this.value.targetAspectRatio / th) {\n        this.value.cut = 'v';\n        adjustments += 1;\n      }\n\n      if (this.value.cut === 'v') {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n      } else {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n      }\n      adjustments += this.left.adjust(th) + this.right.adjust(th);\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        this.left.value.aspectRatio,\n        this.right.value.aspectRatio\n      );\n    }\n\n    return adjustments;\n  }\n\n  addSize(parentWidth, parentHeight, parentX, parentY, parentCut, nodeType) {\n    if (parentCut === 'v') {\n      this.value.height = parentHeight;\n      this.value.width = this.value.height * this.value.aspectRatio;\n    } else {\n      this.value.width = parentWidth;\n      this.value.height = this.value.width / this.value.aspectRatio;\n    }\n\n    if (nodeType === 'left') {\n      this.value.x = parentX;\n      this.value.y = parentY;\n    } else if (parentCut === 'h') {\n      this.value.y = parentY + parentHeight - this.value.height;\n      this.value.x = parentX;\n    } else {\n      this.value.x = parentX + parentWidth - this.value.width;\n      this.value.y = parentY;\n    }\n\n    if (this.left !== null) {\n      this.left.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'left'\n      );\n    }\n    if (this.right !== null) {\n      this.right.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'right'\n      );\n    }\n  }\n\n  validateAddSize() {\n    if ('cut' in this.value) {\n      const [lV, lPN] = this.left.validateAddSize();\n      const [rV, rPN] = this.right.validateAddSize();\n      return [lV && rV, lPN.concat(rPN)];\n    }\n    if ('title' in this.value) {\n      const valid =\n        this.value.width <= this.value.naturalWidth &&\n        this.value.height <= this.value.naturalHeight;\n      return valid ? [valid, []] : [valid, [{ ...this }]];\n    }\n    return false;\n  }\n}\n","import Box from '@mui/material/Box';\nimport TextDisplay from 'components/collage/TextDisplay';\nimport Node from './node';\nimport helpers from './helpers';\n\nexport default class BinaryTree {\n  constructor(value) {\n    if (this.root === undefined) {\n      this.root = new Node(value);\n      return this;\n    }\n  }\n\n  addOptions(options) {\n    this.root.options = { ...options };\n  }\n\n  display() {\n    if (this.root !== null) {\n      return this.root.display();\n    }\n    return null;\n  }\n\n  replaceImages(newImages) {\n    if (this.root !== null) {\n      this.root.replaceImages(newImages);\n    }\n  }\n\n  fromObject(obj) {\n    if (obj.root != null) this.root.fromObject(obj.root);\n    return this;\n  }\n\n  removeImageData() {\n    const tempTree = this.copy();\n    if (this.root !== null) {\n      tempTree.root.removeImageData();\n    }\n    return tempTree;\n  }\n\n  addImageData(imageData) {\n    if (this.root !== null) {\n      this.root.addImageData(imageData);\n    }\n  }\n\n  DOMDisplay(\n    canvasWidth,\n    canvasHeight,\n    delImg,\n    handleRemoveImage,\n    handleCollageImageLoad\n  ) {\n    const { text, topText, padding, borderRadius, color } = this.root.options;\n    const { width, height } = this.root.value;\n    const lA = helpers.wrapText(text, 0, 0, canvasWidth, 20, 25);\n    const textHeight = text.length ? lA.length * 25 : 0;\n    let yOffset = (canvasHeight - textHeight - height) / 2;\n    const xOffset = (canvasWidth - width) / 2;\n    let position = canvasHeight - textHeight;\n    if (topText && text.length > 0) {\n      yOffset += textHeight;\n      position = 0;\n    }\n\n    console.log(\n      'tree dom display',\n      canvasWidth,\n      canvasHeight,\n      height,\n      this.root.options,\n      textHeight,\n      yOffset,\n      xOffset,\n      width,\n      this,\n      lA\n    );\n    if (this.root !== null) {\n      return (\n        <Box sx={{ backgroundColor: 'white' }}>\n          <Box\n            width={canvasWidth}\n            height={canvasHeight}\n            sx={{\n              position: 'relative',\n              backgroundColor: helpers.convertToRGBA(color),\n            }}\n          >\n            {this.root.DOMDisplay(\n              padding,\n              borderRadius,\n              delImg,\n              handleRemoveImage,\n              yOffset,\n              xOffset,\n              handleCollageImageLoad\n            )}\n            {text.length ? TextDisplay(lA, position) : null}\n          </Box>\n        </Box>\n      );\n    }\n    return null;\n  }\n\n  CanvasDisplay(canvasWidth, canvasHeight, canvasElement, scaleFactor) {\n    if (this.root !== null) {\n      const { text, topText, padding, borderRadius, color } = this.root.options;\n      const { width, height } = this.root.value;\n      const lA = helpers.wrapText(\n        text,\n        0,\n        0,\n        canvasWidth,\n        20 * scaleFactor,\n        25 * scaleFactor\n      );\n      const textHeight = text.length ? lA.length * 25 * scaleFactor : 0;\n      let yOffset = (canvasHeight - textHeight - height) / 2;\n      const xOffset = (canvasWidth - width) / 2;\n      let position = canvasHeight - textHeight;\n      if (topText && text.length > 0) {\n        yOffset += textHeight;\n        position = 0;\n      }\n      const ctx = canvasElement.getContext('2d');\n      ctx.fillStyle = helpers.convertToRGBA(color);\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      this.root.CanvasDisplay(\n        canvasElement,\n        padding * scaleFactor,\n        borderRadius * scaleFactor,\n        yOffset,\n        xOffset\n      );\n      helpers.textCanvasDraw(\n        ctx,\n        lA,\n        position,\n        scaleFactor,\n        canvasWidth,\n        textHeight\n      );\n    }\n  }\n\n  generateScore() {\n    const score = this.root.getScore();\n    // console.log('from', ...score);\n    return Math.min(...score);\n  }\n\n  generateCollageTree(images, tar) {\n    this.root.generate(images, tar, images.length);\n  }\n\n  adjust(th) {\n    let trys = 0;\n    let bestAdjust = this.copy();\n    let bestAspectRatio = this.root.value.aspectRatio;\n    const tolerableDifference = this.root.value.targetAspectRatio * (1 - th);\n    let ajstCnt = 1000;\n    while (trys < 100 && ajstCnt > 0) {\n      ajstCnt = this.root.adjust(th);\n      trys += 1;\n      const diff =\n        this.root.value.aspectRatio - this.root.value.targetAspectRatio;\n      if (\n        Math.abs(diff) <\n        Math.abs(bestAspectRatio - this.root.value.targetAspectRatio)\n      ) {\n        bestAspectRatio = this.root.value.aspectRatio;\n        bestAdjust = this.copy();\n      }\n      if ((diff > 0 && diff < tolerableDifference) || diff === 0) break;\n    }\n\n    return [bestAspectRatio, bestAdjust];\n  }\n\n  copy() {\n    const copyTree = new BinaryTree({});\n    copyTree.root = this.root.copy();\n    copyTree.root.options = { ...this.root.options };\n    return copyTree;\n  }\n\n  addSize(canvasWidth, canvasHeight, aspectRatio) {\n    const [maxW, maxH] = helpers.getCollageDimension(\n      canvasWidth,\n      canvasHeight,\n      aspectRatio\n    );\n    this.root.value.width = maxW;\n    this.root.value.height = maxH;\n    console.log('add size', this.root.value.width, this.root.value.height);\n    this.root.value.x = 0;\n    this.root.value.y = 0;\n    const { width, height, x, y, cut } = this.root.value;\n    if (this.root.left !== null)\n      this.root.left.addSize(width, height, x, y, cut, 'left');\n    if (this.root.right !== null)\n      this.root.right.addSize(width, height, x, y, cut, 'right');\n  }\n\n  validateAddSize() {\n    return this.root.validateAddSize();\n  }\n}\n","import BinaryTree from './binaryTree';\nimport helpers from './helpers';\n\nfunction findBestAdjustTree(images, tolerance, imageWidth, imageHeight) {\n  const sortedImages = images.sort((a, b) =>\n    a.aspectRatio <= b.aspectRatio ? 1 : -1\n  );\n  const collageArray = [];\n  for (let i = 0; i < 100; i += 1) {\n    const imgTree = new BinaryTree({ cut: helpers.getCut() });\n    imgTree.generateCollageTree(sortedImages, imageWidth / imageHeight);\n\n    collageArray.push(imgTree.adjust(1 - tolerance));\n  }\n\n  collageArray.sort((a, b) => {\n    const aspR = imageWidth / imageHeight;\n    const diffA = Math.abs(a[0] - aspR);\n    const diffB = Math.abs(b[0] - aspR);\n    return diffA - diffB;\n  });\n\n  const bAR = collageArray.filter(\n    (elem) => elem[0].toFixed(1) === collageArray[0][0].toFixed(1)\n  );\n  console.log('from bar', bAR);\n  let maxScore = 0;\n  let maxElem = {};\n  bAR.forEach((element) => {\n    element[1].addSize(\n      1000 * (imageWidth / imageHeight),\n      1000,\n      imageWidth / imageHeight\n    );\n    const score = element[1].generateScore();\n    // console.log('from bar all matching', score);\n    if (score > maxScore) {\n      maxScore = score;\n      maxElem = element;\n    }\n  });\n  // console.log('from returning', maxElem, maxScore);\n  return maxElem;\n  // collageArray[0][1].addSize(\n  //   1000 * (imageWidth / imageHeight),\n  //   1000,\n  //   imageWidth / imageHeight\n  // );\n  // console.log(\n  //   'from best adjust tree',\n  //   collageArray[0][0],\n  //   collageArray[0][1].generateScore()\n  // );\n  // return collageArray[0];\n}\n\nexport default { findBestAdjustTree };\n","import { useEffect, useState } from 'react';\nimport useDimensions from 'hooks/collage/dimensions';\nimport useOptions from 'hooks/collage/options';\nimport useActions from 'hooks/collage/actions';\nimport useImages from 'hooks/collage/images';\nimport useTree from 'hooks/collage/tree';\n\nimport helpers from 'components/collage/helpers';\nimport collageapi from 'api/collage';\n\nexport default function useBase(initialValue) {\n  console.log('use base', initialValue);\n  const [details, setDetails] = useState(initialValue);\n  const [collageName, setCollageName] = useState('Untitled');\n  const constants = {\n    tolerance: 0.1,\n    resizeImageWidth: 1500,\n    aspectRatio: 0.7,\n    fontSize: 20,\n    lineHeight: 25,\n    paperSizes: {\n      A472: { width: 595, height: 842, text: '8 X 11 inches 72DPI' },\n      A4: { width: 2480, height: 3508, text: '8 X 11 inches' },\n      A3: { width: 3508, height: 4961, text: '11 X 16 inches' },\n      A4LandScape: { height: 2480, width: 3508, text: '11 X 8 inches' },\n      A3LandScape: { height: 3508, width: 4961, text: '16 X 11 inches' },\n      FBCoverDesktop: { height: 740, width: 2000, text: 'FB Cover Desktop' },\n      WhatsappStatus: { height: 1920, width: 1080, text: 'Whatsapp Status' },\n    },\n  };\n  const [uploadedImages, setUploadedImages] = useState(0);\n  const dimensions = useDimensions(constants);\n  const options = useOptions();\n  const actions = useActions();\n  const images = useImages(details, constants.resizeImageWidth);\n\n  const treeState = useTree(details, options.setOptions);\n  const [thumbnail, setThumbnail] = useState({});\n  const collageID =\n    'details' in initialValue && 'collage_id' in initialValue.details\n      ? initialValue.details.collage_id\n      : Date.now();\n\n  useEffect(() => {\n    setDetails(initialValue);\n    if (\n      'details' in initialValue &&\n      'name' in initialValue.details &&\n      collageName === 'Untitled'\n    ) {\n      console.log('setting collage name', initialValue.details.name);\n      setCollageName(initialValue.details.name);\n    }\n  }, [initialValue]);\n\n  const initialStatus = () => ({\n    details: {\n      text: 'Saving Details',\n      status: 'pending',\n    },\n    images: {\n      text: `Saving Images (${uploadedImages} / ${images.images.length})`,\n      status: 'pending',\n    },\n    finalizing: {\n      text: 'Finalizing Collage',\n      status: 'pending',\n    },\n  });\n  const [saveStatus, setSaveStatus] = useState(initialStatus);\n\n  const updateStatus = (key, status) => {\n    const value = { ...saveStatus[key], status };\n    setSaveStatus((st) => ({ ...st, [key]: value }));\n  };\n\n  const updateImagesStatus = () => {\n    const imagesText = `Saving Images (${uploadedImages} / ${images.imgCount})`;\n    let value = { ...saveStatus.images, text: imagesText };\n    if (uploadedImages === images.imgCount && images.imgCount > 0) {\n      value = { ...value, status: 'done' };\n    }\n    setSaveStatus((st) => ({ ...st, images: value }));\n  };\n\n  useEffect(() => {\n    console.log('useeffect 3');\n    updateImagesStatus();\n  }, [uploadedImages, images.imgCount]);\n\n  const handleClear = async () => {\n    const clearPromises = await Promise.allSettled([\n      treeState.clear(),\n      images.clear(),\n      options.clear(),\n    ]);\n\n    for (let i = 0; i < clearPromises.length; i += 1) {\n      if (\n        clearPromises[i].status === 'fulfilled' ||\n        clearPromises[i].value.ok === true\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    console.log('useeffect 2');\n    if (\n      (images.newImgCount > 0 &&\n        images.newImgCount === images.newImagesLoaded) ||\n      actions.refresh\n    ) {\n      images.setNewImageCount(0);\n      images.setNewImagesLoaded(0);\n      treeState.reAdjust(\n        images.images,\n        constants.tolerance,\n        dimensions.width,\n        dimensions.height - dimensions.textHeight,\n        options.options\n      );\n      actions.setRefresh(false);\n    }\n  }, [images.newImgCount, images.newImagesLoaded, actions.refresh]);\n\n  const collageCallback = () => {};\n\n  const handleRemoveImage = (imgTitle) => {\n    const newImagesArr = images.remove(imgTitle);\n    treeState.reAdjust(\n      newImagesArr,\n      constants.tolerance,\n      dimensions.imageWidth,\n      dimensions.imageHeight,\n      options.options\n    );\n  };\n\n  const generateThumbnail = () => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    const thumbnailCanvas = document.createElement('canvas');\n    const thumbnailTree = treeState.tree.copy();\n    thumbnailTree.addSize(500 * ar, 500, ar);\n    thumbnailCanvas.width = 500 * ar;\n    thumbnailCanvas.height = 500;\n    thumbnailTree.CanvasDisplay(\n      500 * ar,\n      500,\n      thumbnailCanvas,\n      (500 * ar) / dimensions.width\n    );\n\n    // create and update details\n    const thumbnailDetails = {\n      title: `thumbnail-${collageID}.png`,\n      src: '',\n      naturalHeight: 500,\n      naturalWidth: 500 * ar,\n      aspectRatio: ar,\n      type: 'image/png',\n    };\n    setThumbnail(thumbnailDetails);\n    return [thumbnailDetails, thumbnailCanvas];\n  };\n\n  const uploadCollageDetails = (thumbnailDetails, name) => {\n    const dets = {\n      collage_id: collageID.toString(),\n      name,\n      created_at: '2021-02-18T21:54:42.123Z',\n      last_updated_at: '2021-02-18T21:54:45.123Z',\n      images: images.getImageData(images.images),\n      tree: treeState.tree.removeImageData(),\n      thumbnail: thumbnailDetails,\n    };\n    // TODO [33] Validate collageDetails\n    console.log(dets);\n    return collageapi.newCollage(collageID, dets);\n  };\n\n  const uploadCallback = () => {\n    console.log('Setting uploaded images to ', uploadedImages + 1);\n    setUploadedImages((cnt) => cnt + 1);\n  };\n\n  const uploadCollageImages = (thumbnailCanvas, imageURLS) => {\n    const imagePromises = Object.keys(imageURLS).map(async (item) => {\n      const thumbnailKey = `thumbnail-${collageID}.jpg`;\n      if (item === thumbnailKey) {\n        const thumbnailPromise = thumbnailCanvas.toBlob(async (blob) => {\n          setThumbnail(blob);\n          return collageapi.upload(imageURLS[thumbnailKey], blob);\n        });\n        return thumbnailPromise;\n      }\n\n      const url = imageURLS[item];\n      const Img = images.images.find((img) => img.title === item);\n      const resp = await collageapi.upload(url, Img.file);\n      uploadCallback();\n      console.log('image upload resp', resp);\n      return resp;\n    });\n\n    return imagePromises;\n  };\n\n  const newCollage = async (name) => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    console.log('in generate thumbnail', ar, 500 * ar, 500);\n    const [thumbnailDetails, thumbnailCanvas] = generateThumbnail();\n    updateStatus('details', 'running');\n    const imageURLS = await uploadCollageDetails(thumbnailDetails, name);\n    updateStatus('details', 'done');\n    updateStatus('images', 'running');\n    const imagePromises = uploadCollageImages(thumbnailCanvas, imageURLS);\n    const uploadPromises = await Promise.allSettled(imagePromises);\n    // updateStatus('images', 'done');\n    updateStatus('finalizing', 'running');\n    let uploadStatus;\n    for (let i = 0; i < uploadPromises.length; i += 1) {\n      if (\n        uploadPromises[i].status === 'fulfilled' ||\n        uploadPromises[i].value.ok === true\n      ) {\n        uploadStatus = true;\n        updateStatus('finalizing', 'done');\n      } else {\n        uploadStatus = false;\n        updateStatus('finalizing', 'failed');\n        break;\n      }\n    }\n    return uploadStatus;\n  };\n\n  useEffect(() => {\n    console.log('useeffect 1');\n    if (\n      options.options.text.length > 0 &&\n      Object.keys(treeState.tree).length > 0\n    ) {\n      const tH = helpers.wrapText(\n        options.options.text,\n        0,\n        0,\n        dimensions.width,\n        20,\n        25\n      );\n      dimensions.setTextHeight(tH.length * 25);\n      const [w, h] = helpers.getCollageDimension(\n        dimensions.width,\n        dimensions.height - tH.length * 25,\n        treeState.tree.root.value.aspectRatio\n      );\n      dimensions.setImageWidth(w);\n      dimensions.setImageHeight(h);\n    } else {\n      dimensions.setTextHeight(0);\n      options.handlePositionChange(true);\n      dimensions.setImageWidth(dimensions.width);\n      dimensions.setImageHeight(dimensions.height);\n    }\n  }, [\n    dimensions.width,\n    dimensions.height,\n    treeState.tree,\n    options.options.text,\n  ]);\n\n  const getDetails = (name, thumbnailDetails) => {\n    setCollageName(name);\n    return {\n      collage_id: collageID.toString(),\n      name,\n      created_at: '2021-02-18T21:54:42.123Z',\n      last_updated_at: '2021-02-18T21:54:45.123Z',\n      images: images.getImageData(images.images),\n      tree: treeState.tree.removeImageData(),\n      thumbnail: thumbnailDetails,\n    };\n  };\n\n  const saveCollage = async (name) => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    console.log('in generate thumbnail', ar, 500 * ar, 500);\n    const [thumbnailDetails, thumbnailCanvas] = generateThumbnail();\n    updateStatus('details', 'running');\n    const imageURLS = await collageapi.saveCollage(\n      collageID,\n      getDetails(name, thumbnailDetails)\n    );\n    console.log('save collage imageurls', imageURLS);\n    updateStatus('details', 'done');\n    updateStatus('images', 'running');\n    const imagePromises = uploadCollageImages(thumbnailCanvas, imageURLS);\n    const uploadPromises = await Promise.allSettled(imagePromises);\n    // updateStatus('images', 'done');\n    updateStatus('finalizing', 'running');\n    let uploadStatus;\n    for (let i = 0; i < uploadPromises.length; i += 1) {\n      if (\n        uploadPromises[i].status === 'fulfilled' ||\n        uploadPromises[i].value.ok === true\n      ) {\n        uploadStatus = true;\n        updateStatus('finalizing', 'done');\n      } else {\n        uploadStatus = false;\n        updateStatus('finalizing', 'failed');\n        break;\n      }\n    }\n    return uploadStatus;\n  };\n\n  console.log('saveStatus', saveStatus);\n  return [\n    getDetails,\n    collageName,\n    thumbnail,\n    collageID,\n    constants,\n    dimensions,\n    options,\n    actions,\n    images,\n    treeState,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n  ];\n}\n","import { useRef, useState, useEffect } from 'react';\nimport helpers from 'components/collage/helpers';\n\nexport default function useDimensions(constants) {\n  const { aspectRatio, fontSize, lineHeight } = constants;\n  const headerRef = useRef();\n  const actionsRef = useRef();\n  const footerRef = useRef();\n  const addImageRef = useRef();\n\n  const [height, setHeight] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [imageWidth, setImageWidth] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [maxHeight, setMaxHeight] = useState(0);\n  const [maxWidth, setMaxWidth] = useState(0);\n  const [textHeight, setTextHeight] = useState(0);\n\n  const setDimensions = () => {\n    const isMobile = window.innerWidth < window.innerHeight;\n    if (isMobile === true) {\n      const headerHeight = headerRef.current\n        ? headerRef.current.offsetHeight\n        : 0;\n      const actionsHeight = actionsRef.current\n        ? actionsRef.current.offsetHeight\n        : 0;\n      const footerHeight = footerRef.current\n        ? footerRef.current.offsetHeight\n        : 0;\n      const otherHeight = headerHeight + actionsHeight + footerHeight;\n      setMaxWidth(window.innerWidth);\n      setMaxHeight(window.innerHeight - otherHeight);\n      const [w, h] = helpers.getCollageDimension(\n        window.innerWidth - 10,\n        window.innerHeight - otherHeight - 10,\n        aspectRatio\n      );\n      console.log('other height', otherHeight);\n      setWidth(w);\n      setHeight(h);\n    } else {\n      const headerHeight = headerRef.current\n        ? headerRef.current.offsetHeight\n        : 0;\n      const actionsWidth = actionsRef.current\n        ? actionsRef.current.offsetWidth\n        : 0;\n      const footerWidth = footerRef.current ? footerRef.current.offsetWidth : 0;\n      setMaxWidth(window.innerWidth - (footerWidth + actionsWidth));\n      setMaxHeight(window.innerHeight - headerHeight);\n      const [w, h] = helpers.getCollageDimension(\n        window.innerWidth - (footerWidth + actionsWidth) - 10,\n        window.innerHeight - headerHeight - 10,\n        aspectRatio\n      );\n      console.log(\n        'other height',\n        headerHeight,\n        'other width',\n        footerWidth + actionsWidth,\n        footerWidth,\n        actionsWidth,\n        actionsRef\n      );\n      setWidth(w);\n      setHeight(h);\n    }\n  };\n\n  const handleImageAddClick = () => {\n    if (addImageRef.current) addImageRef.current.click();\n  };\n\n  useEffect(() => {\n    console.log('dimensions changed');\n    setDimensions();\n  }, [\n    window.innerHeight,\n    window.innerWidth,\n    headerRef.current,\n    actionsRef.current,\n    footerRef.current,\n  ]);\n\n  useEffect(() => {\n    setDimensions();\n    window.addEventListener('resize', setDimensions);\n\n    return () => window.removeEventListener('resize', setDimensions);\n  }, []);\n\n  return {\n    addImageRef,\n    actionsRef,\n    headerRef,\n    footerRef,\n    width,\n    height,\n    imageHeight,\n    imageWidth,\n    setImageWidth,\n    setImageHeight,\n    maxHeight,\n    maxWidth,\n    handleImageAddClick,\n    textHeight,\n    setTextHeight,\n    fontSize,\n    lineHeight,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useOptions() {\n  const optionsInitValue = {\n    padding: 2,\n    borderRadius: 5,\n    color: {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1,\n    },\n    text: '',\n    topText: true,\n  };\n\n  const [options, setOptions] = useState(optionsInitValue);\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n  const clear = () => setOptions(optionsInitValue);\n  const handlePaddingChange = (e) =>\n    setOptions((opts) => ({ ...opts, padding: e.target.value }));\n  const handleRadiusChange = (e) => {\n    setOptions((opts) => ({ ...opts, borderRadius: e.target.value }));\n  };\n\n  const handleColorClick = () => setDisplayColorPicker((dcp) => !dcp);\n  const handleColorClose = () => setDisplayColorPicker(false);\n  const handleColorChange = (clr) =>\n    setOptions((opts) => ({ ...opts, color: clr.rgb }));\n  const handlePositionChange = (value) =>\n    setOptions((opts) => ({ ...opts, topText: value }));\n\n  const handleTextChange = (e) => {\n    const { target } = e;\n    setOptions((opts) => ({ ...opts, text: target.value }));\n  };\n\n  return {\n    options,\n    setOptions,\n    clear,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClick,\n    handleColorClose,\n    handleColorChange,\n    handlePositionChange,\n    handleTextChange,\n    displayColorPicker,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useActions() {\n  const [open, setOpen] = useState(false);\n  const [saveOpen, setSaveOpen] = useState(false);\n  const [saveStart, setSaveStart] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [generate, setGenerate] = useState(false);\n  const [removeImage, setRemoveImage] = useState(false);\n  const [printOptions, setPrintOptions] = useState({\n    paperWidth: 0,\n    paperHeight: 0,\n  });\n\n  const onRefresh = () => setRefresh(true);\n  const handleDownload = () => setOpen(true);\n  const handleSave = () => {\n    setSaveOpen(true);\n  };\n  const onDownloadClose = () => setOpen(false);\n  const onSaveClose = () => setSaveOpen(false);\n  const clearDelete = () => setRemoveImage(false);\n  const onDelete = () => setRemoveImage((ri) => !ri);\n\n  const onDownloadClick = (w, h) => {\n    setPrintOptions({ paperWidth: w, paperHeight: h });\n    setGenerate(true);\n    setOpen(false);\n  };\n\n  const onSaveClick = () => {\n    setSaveStart(true);\n    setSaveOpen(false);\n  };\n  const handleGenerateCallback = () => {\n    setGenerate(false);\n    setPrintOptions({ paperWidth: 0, paperHeight: 0 });\n  };\n\n  return {\n    clearDelete,\n    generate,\n    handleDownload,\n    handleGenerateCallback,\n    onDelete,\n    onDownloadClick,\n    onDownloadClose,\n    onRefresh,\n    open,\n    printOptions,\n    refresh,\n    setGenerate,\n    setOpen,\n    setPrintOptions,\n    setRefresh,\n    removeImage,\n    setRemoveImage,\n    saveOpen,\n    setSaveOpen,\n    onSaveClose,\n    onSaveClick,\n    handleSave,\n    saveStart,\n    setSaveStart,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport helpers from 'components/collage/helpers';\n\nexport default function useImages(initialValue) {\n  console.log('use images', initialValue);\n  const [newImgCount, setNewImageCount] = useState(0);\n  const [newImagesLoaded, setNewImagesLoaded] = useState(0);\n  const [imgCount, setImageCount] = useState(0);\n  const [loaded, setLoaded] = useState(0);\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    console.log('setting images');\n    if ('images' in initialValue) {\n      setImages(initialValue.images);\n      if (imgCount === 0) setImageCount(initialValue.images.length);\n    }\n  }, [initialValue]);\n\n  const getImageData = (imageArr) => {\n    const tempImgArr = [...imageArr];\n    return tempImgArr.map((img) => {\n      const { file, src, originalSRC, originalWidth, originalHeight, ...rest } =\n        img;\n      rest.naturalWidth = originalWidth;\n      rest.naturalHeight = originalHeight;\n      console.log('get image data', img, rest);\n      return rest;\n    });\n  };\n\n  const handleImageData = (imageDetail) => {\n    setImages((arr) => arr.concat([imageDetail]));\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleLoad = (event) => {\n    helpers.handleImageLoad(\n      event,\n      setImageCount,\n      setNewImageCount,\n      handleImageData\n    );\n  };\n\n  const clear = () => {\n    setImages([]);\n    setImageCount(0);\n    setLoaded(0);\n    setNewImagesLoaded(0);\n  };\n\n  const remove = (title) => {\n    const removeIndex = images.findIndex((elem) => elem.title === title);\n    const newImagesArr = [\n      ...images.slice(0, removeIndex),\n      ...images.slice(removeIndex + 1),\n    ];\n    setImages(newImagesArr);\n    setImageCount((cnt) => cnt - 1);\n    return newImagesArr;\n  };\n\n  return {\n    clear,\n    handleImageData,\n    handleLoad,\n    images,\n    imgCount,\n    loaded,\n    newImagesLoaded,\n    newImgCount,\n    remove,\n    setImageCount,\n    setImages,\n    setLoaded,\n    setNewImageCount,\n    setNewImagesLoaded,\n    getImageData,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport treeUtils from 'components/collage/treeUtils';\nimport BinaryTree from 'components/collage/binaryTree';\n\nexport default function useTree(initialValue, loadingCallback = () => {}) {\n  console.log('use Tree', initialValue);\n  const [tree, setTree] = useState(new BinaryTree({}));\n\n  useEffect(() => {\n    console.log('use Tree useEffect');\n    const newTree = new BinaryTree({});\n    if (\n      'details' in initialValue &&\n      Object.keys(initialValue.details).length > 0\n    ) {\n      console.log('initial value in tree', initialValue);\n      newTree.fromObject(initialValue.details.tree);\n      if ('options' in initialValue.details.tree.root) {\n        loadingCallback((opts) => ({\n          ...opts,\n          ...initialValue.details.tree.root.options,\n        }));\n      }\n      console.log('setting tree');\n      setTree(newTree);\n    }\n  }, [initialValue]);\n\n  const clear = () => setTree({});\n\n  const reAdjust = (imagesArr, tolerance, imageWidth, imageHeight, options) => {\n    const [, bestAspectRatioTree] = treeUtils.findBestAdjustTree(\n      imagesArr,\n      tolerance,\n      imageWidth,\n      imageHeight\n    );\n    bestAspectRatioTree.addOptions(options);\n    setTree(bestAspectRatioTree);\n  };\n\n  return { tree, setTree, clear, reAdjust };\n}\n","import { useState, useEffect } from 'react';\nimport helpers from './helpers';\n\nexport default function Collage({\n  dimensionProps,\n  imageProps,\n  actionProps,\n  collageCallback,\n  handleRemoveImage,\n  options,\n  tree,\n}) {\n  const [collage, setCollage] = useState(null);\n  const { images, setLoaded } = imageProps;\n  const { generate, handleGenerateCallback, printOptions, removeImage } =\n    actionProps;\n  const { height, width, imageHeight, imageWidth, fontSize, lineHeight } =\n    dimensionProps;\n\n  const handleCollageImageLoad = () => setLoaded((cnt) => cnt + 1);\n  const isEmpty = (t) => Object.keys(t).length === 0;\n  const createCollage = () => {\n    console.log('started collage loading', tree);\n    tree.addSize(imageWidth, imageHeight, tree.root.value.aspectRatio);\n    console.log('collage added size');\n    tree.addOptions(options);\n    console.log('collage added options', images.length);\n    if (images.length > 0) {\n      tree.addImageData(images);\n      console.log('collage added image data');\n      const collageElem = tree.DOMDisplay(\n        width,\n        height,\n        removeImage,\n        handleRemoveImage,\n        handleCollageImageLoad\n      );\n      console.log('collage added dom display');\n      setCollage(collageElem);\n      collageCallback(tree);\n    }\n  };\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      console.log('collage, tree is not empty');\n      createCollage();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      console.log('collage, tree is not empty 1');\n      createCollage();\n    } else {\n      setCollage(null);\n    }\n  }, [tree, options, imageWidth, imageHeight, removeImage, images]);\n\n  const downloadCollage = (canvas, pW, pH) => {\n    canvas.toBlob((blob) => {\n      const link = document.createElement('a');\n      link.download = `collage-${pW.toFixed(2)}X${pH.toFixed(\n        2\n      )}-${Date.now()}.jpg`;\n      link.href = URL.createObjectURL(blob);\n      link.click();\n      URL.revokeObjectURL(link.href);\n      link.href = null;\n      handleGenerateCallback();\n    }, 'image/jpeg');\n  };\n\n  const getCanvasTree = () => {\n    const canvasTree = tree.copy();\n    canvasTree.replaceImages(images);\n    return canvasTree;\n  };\n\n  const getCanvas = (pw, ph) => {\n    const canvasElement = document.createElement('canvas');\n    canvasElement.width = pw;\n    canvasElement.height = ph;\n    return canvasElement;\n  };\n\n  const generateCollageTree = (pw, ph) => {\n    const canvasTree = getCanvasTree();\n    const ar = tree.root.value.aspectRatio;\n    const scaleFactor = pw / width;\n    const [imgPW, imgPH] = helpers.getImageDimensions(\n      pw,\n      ph,\n      options.text,\n      0,\n      0,\n      fontSize,\n      lineHeight,\n      scaleFactor,\n      tree.root.value.aspectRatio\n    );\n    canvasTree.addSize(imgPW, imgPH, ar);\n    return canvasTree;\n  };\n\n  const generateCollage = (ctree, pw, ph) => {\n    const scaleFactor = pw / width;\n    const canvasElement = getCanvas(pw, ph);\n    ctree.CanvasDisplay(pw, ph, canvasElement, scaleFactor);\n\n    setTimeout(() => downloadCollage(canvasElement, pw, ph), '5000');\n  };\n\n  useEffect(() => {\n    if (generate === true) {\n      const { paperWidth: pw, paperHeight: ph } = printOptions;\n      const canvasTree = generateCollageTree(pw, ph);\n      const [valid, probNodes] = canvasTree.validateAddSize();\n      if (valid) {\n        generateCollage(canvasTree, pw, ph);\n      } else {\n        const [newPW, newPH] = helpers.optimizeDimensions(pw, ph, probNodes);\n        const newCanvasTree = generateCollageTree(newPW, newPH);\n        const [newValid, newProbNodes] = newCanvasTree.validateAddSize();\n        if (newValid) {\n          generateCollage(newCanvasTree, newPW, newPH);\n        } else {\n          console.log('unable to generate collage', newProbNodes);\n        }\n      }\n    }\n  }, [generate]);\n\n  return collage;\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Authenticate from 'hocs/require-authentication';\n\nexport default function DownloadDialog({ open, onClick, onClose, sizes }) {\n  const [value, setValue] = useState('');\n  const handleDownload = () => {\n    console.log(sizes[value].width, sizes[value].height, onClick);\n    onClick(sizes[value].width, sizes[value].height);\n    setValue('');\n  };\n\n  const handleClose = () => {\n    setValue('');\n    onClose();\n  };\n\n  return (\n    <Authenticate>\n      <Dialog open={open} fullWidth>\n        <DialogTitle sx={{ textAlign: 'center' }}>Download Collage</DialogTitle>\n        <DialogContent\n          dividers\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <DialogContentText sx={{ display: 'inline', pr: 1 }}>\n            Choose collage size\n          </DialogContentText>\n          <FormControl fullWidth sx={{ maxWidth: '60%' }}>\n            <InputLabel id=\"demo-simple-select-label\">Download Size</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              defaultValue=\"A4\"\n              value={value}\n              label=\"Download Size\"\n              onChange={(event) => setValue(event.target.value)}\n            >\n              {Object.keys(sizes).map((key) => (\n                <MenuItem key={sizes[key].text} value={key}>\n                  {sizes[key].text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"outlined\"\n            disabled={value.length === 0}\n            onClick={handleDownload}\n          >\n            Download\n          </Button>\n          <Button variant=\"text\" onClick={handleClose}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Authenticate>\n  );\n}\n\nDownloadDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\n// import DialogContentText from '@mui/material/DialogContentText';\nimport TextField from '@mui/material/TextField';\n// import Authenticate from 'hocs/require-authentication';\n\nexport default function SaveDialog({ open, onClick, onClose }) {\n  const [name, setName] = useState('');\n  const [nameError] = useState('');\n  const handleSave = () => {\n    onClick(name);\n  };\n\n  const handleNameChange = (e) => {\n    const { target } = e;\n    setName(target.value);\n  };\n  const handleClose = () => {\n    setName('');\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <TextField\n          variant=\"outlined\"\n          label=\"Set Collage Name\"\n          defaultValue={name}\n          onChange={handleNameChange}\n          size=\"small\"\n          sx={{ width: '100%', mb: 1 }}\n          InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n          helperText={nameError}\n          error={!!nameError}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          disabled={name.length === 0}\n          onClick={handleSave}\n        >\n          Save\n        </Button>\n        <Button variant=\"text\" onClick={handleClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nSaveDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport PendingIcon from '@mui/icons-material/Pending';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CloseIcon from '@mui/icons-material/Close';\n\nfunction StatusIndicator({ status }) {\n  if (status === 'running') {\n    return <CircularProgress color=\"info\" size=\"1rem\" />;\n  }\n  if (status === 'pending') {\n    return <PendingIcon color=\"disabled\" size=\"0.875rem\" />;\n  }\n  if (status === 'done') {\n    return <CheckCircleOutlineIcon color=\"success\" size=\"0.875rem\" />;\n  }\n  if (status === 'failed') {\n    return <CloseIcon color=\"error\" size=\"0.875rem\" />;\n  }\n}\n\nStatusIndicator.propTypes = {\n  status: PropTypes.string.isRequired,\n};\n\nfunction Status({ text, status }) {\n  const color = {\n    pending: alpha('#000', 0.26),\n    done: 'black',\n    running: 'black',\n    failed: 'red',\n  };\n\n  return (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n      <Typography\n        sx={{ fontWeight: 'bold', fontSize: '1rem', color: color[status] }}\n      >\n        {text}\n      </Typography>\n      <StatusIndicator status={status} />\n    </Stack>\n  );\n}\n\nStatus.propTypes = {\n  text: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nfunction OverAllStatus({ status, counter }) {\n  if (status === 'failed') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <CloseIcon color=\"error\" />\n        <Typography>Collage creation failed</Typography>\n      </Stack>\n    );\n  }\n\n  if (status === 'running' || status === 'pending') return null;\n\n  if (status === 'success') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <CheckCircleOutlineIcon color=\"success\" sx={{ fontSize: '2rem' }} />\n        <Typography>\n          Collage creation successful. Navigation to collages in {counter}{' '}\n          seconds...\n        </Typography>\n      </Stack>\n    );\n  }\n\n  return null;\n}\n\nOverAllStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  counter: PropTypes.number.isRequired,\n};\n\nexport default function SaveStatusDialog({ open, status }) {\n  let overAllStatus = 'pending';\n  const [counter, setCounter] = useState(-1);\n  useEffect(() => {\n    let timerId;\n    if (counter > 0 && overAllStatus === 'success') {\n      timerId = setTimeout(() => setCounter(counter - 1), 1000);\n    }\n    return () => clearTimeout(timerId);\n  }, [counter, overAllStatus]);\n\n  const statusArr = Object.values(status).map((val) => val.status);\n  if (statusArr.includes('failed')) {\n    overAllStatus = 'failed';\n  } else if (statusArr.includes('running')) {\n    overAllStatus = 'running';\n  } else if (!statusArr.includes('pending')) {\n    console.log('setting counter', counter, status);\n    if (counter === -1) {\n      setCounter(3);\n    }\n    overAllStatus = 'success';\n  }\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent dividers>\n        <Stack direction=\"column\" justifyContent=\"center\" spacing={2}>\n          {Object.values(status).map((st) => (\n            <Status key={st.text} text={st.text} status={st.status} />\n          ))}\n        </Stack>\n      </DialogContent>\n      <OverAllStatus status={overAllStatus} counter={counter} />\n    </Dialog>\n  );\n}\n\nSaveStatusDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  status: PropTypes.objectOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      status: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Paper from '@mui/material/Paper';\nimport { Typography, Box, Link } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { alpha } from '@mui/material/styles';\nimport commonUtils from 'utils';\nimport ProfileLink from 'components/profile';\n\nimport LoginButton from 'components/LoginButton';\n\nexport default function Header({ headerRef, name }) {\n  console.log('in collage header', name);\n  const cookieValue = commonUtils.getUserInfo();\n  const isLoggedIn = cookieValue !== '';\n  return (\n    <Paper\n      ref={headerRef}\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        p: 1,\n        backgroundColor: alpha('#fff', 0.1),\n        borderRadius: 0,\n      }}\n      elevation={3}\n    >\n      <Box sx={{ postion: 'absolute', left: '5px' }}>\n        <Link href=\"/collages\" color=\"muted.main\" underline=\"none\">\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <ArrowBackIcon />\n          </Box>\n        </Link>\n      </Box>\n      <Typography\n        variant=\"h4\"\n        component=\"h4\"\n        sx={{ color: alpha('#fff', 0.5) }}\n      >\n        {name}\n      </Typography>\n      {isLoggedIn === true ? (\n        <ProfileLink />\n      ) : (\n        <LoginButton\n          authURL={process.env.REACT_APP_AUTH_URL}\n          next=\"collage/create\"\n        />\n      )}\n    </Paper>\n  );\n}\n\nHeader.propTypes = {\n  name: PropTypes.string.isRequired,\n  headerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n};\n","import PropTypes from 'prop-types';\n// import Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport collageBack from 'static/images/collage_back1.webp';\n\nexport default function EmptyCollage({ width, height, loadComponent }) {\n  console.log(width, height);\n  return (\n    <Box\n      sx={{\n        backgroundImage: `url(${collageBack})`,\n        backgroundSize: width,\n        objectFit: 'fill',\n        width,\n        height,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {loadComponent}\n    </Box>\n  );\n}\n\nEmptyCollage.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  loadComponent: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport EmptyCollage from 'components/collage/EmptyCollage';\nimport Loading from 'components/Loading';\nimport AddPhotos from 'components/AddPhotos';\nimport Authenticate from 'hocs/require-authentication';\n\nexport default function View({\n  open,\n  saveOpen,\n  saveStatusOpen,\n  status,\n  dimensionProps,\n  imageProps,\n  header,\n  actions,\n  downloadDialog,\n  saveDialog,\n  saveStatusDialog,\n  collage,\n  controls,\n  saveType,\n}) {\n  const {\n    width,\n    height,\n    maxWidth,\n    maxHeight,\n    imageHeight,\n    headerRef,\n    actionsRef,\n  } = dimensionProps;\n  const isMobile = window.innerWidth < window.innerHeight;\n  const { images, imgCount, handleLoad } = imageProps;\n  const headerHeight = headerRef.current ? headerRef.current.offsetHeight : 0;\n  const actionsHeight = actionsRef.current\n    ? actionsRef.current.offsetHeight\n    : 0;\n  const offsetHeight = isMobile\n    ? `calc(50% + ${headerHeight} + ${actionsHeight})`\n    : `calc(50 % + ${headerHeight})`;\n  console.log(\n    'from view',\n    images.length,\n    imgCount,\n    imageHeight,\n    collage,\n    status\n  );\n  let content;\n  if (status === 'fetching') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={<Loading title=\"Fetching existing collage data ...\" />}\n      />\n    );\n  }\n\n  if (status === 'preparing') {\n    content = (\n      <>\n        {collage}\n        <Loading title=\"Preparing collage...\" />\n      </>\n    );\n  }\n\n  if (status === 'loading') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          <Loading\n            title={`Loading (${images.length} / ${imgCount}) images...`}\n          />\n        }\n      />\n    );\n  }\n\n  if (status === 'empty') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          width ? <AddPhotos handleChange={handleLoad} /> : <div />\n        }\n      />\n    );\n  }\n\n  if (status === 'ready') {\n    content = collage;\n  }\n\n  return saveType === 'new' ? (\n    <Box\n      component=\"div\"\n      sx={{\n        backgroundColor: 'black',\n        position: 'relative',\n      }}\n    >\n      {header}\n      {actions}\n      {open ? downloadDialog : null}\n      {saveOpen ? saveDialog : null}\n      {saveStatusOpen ? saveStatusDialog : null}\n      <Box\n        width={maxWidth}\n        height={maxHeight}\n        sx={{\n          position: 'absolute',\n          top: offsetHeight,\n          left: '50%',\n          transform: 'translate(-50%, 0)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'transparent',\n          justifySelf: 'center',\n        }}\n      >\n        {content}\n      </Box>\n      {controls}\n    </Box>\n  ) : (\n    <Box component=\"div\" sx={{ backgroundColor: 'black' }}>\n      {header}\n      <Authenticate>\n        {actions}\n        {open ? downloadDialog : null}\n        {saveOpen ? saveDialog : null}\n        {saveStatusOpen ? saveStatusDialog : null}\n        <Box\n          width={maxWidth}\n          height={maxHeight}\n          sx={{\n            position: 'absolute',\n            top: offsetHeight,\n            left: '50%',\n            transform: 'translate(-50%, 0)',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: 'black',\n            justifySelf: 'center',\n          }}\n        >\n          {content}\n        </Box>\n        {controls}\n      </Authenticate>\n    </Box>\n  );\n}\n\nView.propTypes = {\n  dimensionProps: PropTypes.shape({\n    maxWidth: PropTypes.number.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    imageHeight: PropTypes.number.isRequired,\n\n    headerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n    actionsRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n  imageProps: PropTypes.shape({\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        src: PropTypes.string.isRequired,\n        naturalHeight: PropTypes.number.isRequired,\n        naturalWidth: PropTypes.number.isRequired,\n        aspectRatio: PropTypes.number.isRequired,\n        type: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    imgCount: PropTypes.number.isRequired,\n    handleLoad: PropTypes.func.isRequired,\n    loaded: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  saveOpen: PropTypes.bool.isRequired,\n  saveStatusOpen: PropTypes.bool.isRequired,\n  status: PropTypes.string.isRequired,\n  header: PropTypes.node.isRequired,\n  actions: PropTypes.node.isRequired,\n  collage: PropTypes.node.isRequired,\n  controls: PropTypes.node.isRequired,\n  downloadDialog: PropTypes.node.isRequired,\n  saveDialog: PropTypes.node.isRequired,\n  saveStatusDialog: PropTypes.node.isRequired,\n  saveType: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport { alpha } from '@mui/material/styles';\n\nexport default function DBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      icon={icon}\n      sx={{\n        py: 1,\n        fontWeight: 'bold',\n        color: 'gray',\n        outline: 'none',\n        '&:focus': {\n          color: alpha('#fff', 0.8),\n          outline: 'none',\n        },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\nDBNA.defaultProps = {\n  handleChange: () => {},\n};\n\nDBNA.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Drawer from '@mui/material/Drawer';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopDrawer({ anchor, children, innerRef }) {\n  return (\n    <Drawer\n      anchor={anchor}\n      variant=\"permanent\"\n      PaperProps={{\n        ref: innerRef,\n        sx: {\n          height: 'fit-content',\n          top: '50%',\n          backgroundColor: 'transparent',\n          color: 'gray',\n          fontWeight: 'bold',\n          borderRadius: anchor === 'left' ? '0 10px 10px 0' : '10px 0 0 10px',\n          transform: 'translate(0, -50%)',\n        },\n      }}\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nDesktopDrawer.defaultProps = {\n  innerRef: () => {},\n};\n\nDesktopDrawer.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n  anchor: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Divider from '@mui/material/Divider';\n\nexport default function ControlsDivider() {\n  return <Divider sx={{ backgroundColor: 'gray', my: 1 }} variant=\"middle\" />;\n}\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport List from '@mui/material/List';\nimport { alpha } from '@mui/material/styles';\n\nimport DBNA from 'components/collage/DesktopActionItem';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport ControlsDivider from 'components/collage/ControlsDivider';\n\nexport default function DesktopActions({ actionsRef, onDownload, onSave }) {\n  const handleChange = (newValue) => {\n    console.log(newValue);\n    if (newValue === 'download') {\n      onDownload();\n    }\n    if (newValue === 'save') {\n      onSave();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  return (\n    <DesktopDrawer anchor=\"right\" innerRef={actionsRef}>\n      <List sx={{ backgroundColor: alpha('#fff', 0.1) }}>\n        <DBNA\n          label=\"Save\"\n          icon={<SaveIcon />}\n          handleChange={() => handleChange('save')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label=\"Download\"\n          icon={<DownloadIcon />}\n          handleChange={() => handleChange('download')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label={\n            <>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Order\n              </Typography>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Print(s)\n              </Typography>\n            </>\n          }\n          icon={<PrintIcon />}\n          handleChange={() => handleChange('print')}\n        />\n      </List>\n    </DesktopDrawer>\n  );\n}\n\nDesktopActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\n\nexport default function ClearCollageDialog({ open, onSubmit, onCancel }) {\n  return (\n    <Dialog open={open}>\n      <DialogTitle\n        sx={{\n          textAlign: 'center',\n          fontWeight: 'bold',\n          color: alpha('#000', 0.8),\n        }}\n      >\n        Clear Collage\n      </DialogTitle>\n      <DialogContent dividers>\n        <DialogContentText sx={{ fontWeight: 'bold', color: 'gray' }}>\n          Do you want to clear collage?\n        </DialogContentText>\n        <Typography\n          variant=\"subtitle2\"\n          sx={{ color: 'red', fontWeight: 'bold' }}\n          noWrap\n        >\n          Note:\n        </Typography>\n        <Typography sx={{ fontSize: '0.8rem', color: 'gray' }}>\n          This change is not reversible\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onSubmit} sx={{ color: 'red' }}>\n          {' '}\n          Clear{' '}\n        </Button>\n        <Button variant=\"outlined\" onClick={onCancel}>\n          {' '}\n          Cancel{' '}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nClearCollageDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Stack from '@mui/material/Stack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport { alpha } from '@mui/material/styles';\n\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function DesktopControls({\n  innerRef,\n  onRefresh,\n  photosComp,\n  editComp,\n  handleClear,\n  clearDelete,\n}) {\n  const [imageOptionsOpen, setImageOptionsOpen] = useState(false);\n  const [editOptionsOpen, setEditOptionsOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const closeAll = () => {\n    clearDelete();\n    setImageOptionsOpen(false);\n    setEditOptionsOpen(false);\n    setClearOpen(false);\n  };\n  const handlePhotosClick = () => {\n    if (imageOptionsOpen) {\n      setImageOptionsOpen(false);\n    } else {\n      closeAll();\n      setImageOptionsOpen(true);\n    }\n  };\n\n  const handleEditClick = () => {\n    if (editOptionsOpen) {\n      setEditOptionsOpen(false);\n    } else {\n      closeAll();\n      setEditOptionsOpen(true);\n    }\n  };\n  const handleRearrange = () => {\n    closeAll();\n    onRefresh();\n  };\n\n  const handleClearClick = () => {\n    console.log('clear open', clearOpen);\n    if (clearOpen) {\n      setClearOpen(false);\n    } else {\n      closeAll();\n      setClearOpen(true);\n    }\n  };\n\n  const handleClearClose = () => setClearOpen(false);\n  const handleClearSubmit = () => {\n    handleClearClose();\n    handleClear();\n  };\n\n  console.log('clear open', clearOpen);\n  console.log('rendering desktop controls');\n  return (\n    <DesktopDrawer anchor=\"left\">\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\" ref={innerRef}>\n        <List\n          sx={{\n            backgroundColor: alpha('#fff', 0.1),\n            borderRadius: '0 10px 10px 0',\n          }}\n        >\n          <DBNA\n            label=\"Rearrange\"\n            icon={<AutoAwesomeMosaicIcon />}\n            handleChange={handleRearrange}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Photos\"\n            icon={<PhotoIcon />}\n            handleChange={handlePhotosClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Edit\"\n            icon={<EditIcon />}\n            handleChange={handleEditClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Clear\"\n            icon={<RefreshIcon />}\n            handleChange={handleClearClick}\n          />\n        </List>\n        {imageOptionsOpen ? photosComp : null}\n        {editOptionsOpen ? editComp : null}\n        <ClearCollageDialog\n          open={clearOpen}\n          onSubmit={handleClearSubmit}\n          onCancel={handleClearClose}\n        />\n      </Stack>\n    </DesktopDrawer>\n  );\n}\n\nDesktopControls.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  photosComp: PropTypes.node.isRequired,\n  editComp: PropTypes.node.isRequired,\n  handleClear: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\n\nexport default function DesktopImageOptions({ onDelete, onAdd, clearDelete }) {\n  const handleAdd = () => {\n    clearDelete();\n    onAdd();\n  };\n\n  return (\n    <List\n      sx={{\n        backgroundColor: alpha('#fff', 0.15),\n        borderRadius: '10px 10px 10px 10px',\n        height: 'fit-content',\n      }}\n    >\n      <DBNA\n        label=\"Add\"\n        icon={<AddPhotoAlternateIcon />}\n        handleChange={handleAdd}\n      />\n      <ControlsDivider />\n      <DBNA label=\"Delete\" icon={<DeleteIcon />} handleChange={onDelete} />\n    </List>\n  );\n}\n\nDesktopImageOptions.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function PaddingControl({ padding, handlePaddingChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n          mixBlendMode: 'difference',\n        }}\n      >\n        Padding\n      </Typography>\n      <Slider\n        aria-label=\"Padding\"\n        defaultValue={0}\n        value={padding}\n        valueLabelDisplay=\"auto\"\n        step={0.1}\n        min={0}\n        max={10}\n        onChange={handlePaddingChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nPaddingControl.propTypes = {\n  padding: PropTypes.number.isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function RadiusControl({ radius, handleRadiusChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n        }}\n      >\n        Corner Radius\n      </Typography>\n      <Slider\n        aria-label=\"Corner Radius\"\n        defaultValue={0}\n        value={radius}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        min={0}\n        max={40}\n        onChange={handleRadiusChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nRadiusControl.propTypes = {\n  radius: PropTypes.number.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { ChromePicker } from 'react-color';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function ColorControl({\n  color,\n  displayColorPicker,\n  handleClick,\n  handleClose,\n  handleChange,\n}) {\n  console.log('color control', color, displayColorPicker);\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      spacing={2}\n      sx={{ my: 2 }}\n    >\n      <Typography\n        sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n      >\n        Background Color\n      </Typography>\n      <Box\n        component=\"div\"\n        sx={{\n          padding: '2px',\n          background: '#fff',\n          borderRadius: '5px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        }}\n        onClick={handleClick}\n      >\n        <Box\n          component=\"div\"\n          sx={{\n            width: '70px',\n            height: '30px',\n            borderRadius: '18px',\n            background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n          }}\n        />\n      </Box>\n      <ColorPicker\n        open={displayColorPicker}\n        color={color}\n        handleClose={handleClose}\n        handleChange={handleChange}\n      />\n    </Stack>\n  );\n}\n\nColorControl.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport function ColorPicker({ open, color, handleClose, handleChange }) {\n  console.log(handleClose);\n  return open ? (\n    <>\n      <Box\n        component=\"div\"\n        sx={{\n          position: 'absolute',\n          zIndex: 3,\n          bottom: 10,\n        }}\n      >\n        <IconButton\n          sx={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            zIndex: 2,\n            backgroundColor: 'button.main',\n            p: 0,\n            transform: 'translate(0, -110%)',\n            border: '2px solid black',\n          }}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n        <ChromePicker color={color} onChange={handleChange} />\n      </Box>\n    </>\n  ) : null;\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n//  import FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function TextControl({\n  text,\n  handleTextChange,\n  topText,\n  handlePositionChange,\n}) {\n  const [collageTextError] = useState('');\n  return (\n    <Stack\n      sx={{\n        backgroundColor: 'transparent',\n      }}\n    >\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        spacing={2}\n      >\n        <Typography\n          sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n        >\n          Collage Text\n        </Typography>\n        <FormGroup row>\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === false}\n                onChange={() => handlePositionChange(false)}\n                sx={{ color: 'white', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Bottom\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold' }}\n          />\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === true}\n                onChange={() => handlePositionChange(true)}\n                sx={{ color: 'gray', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Top\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold', fontSize: '0.8rem' }}\n          />\n        </FormGroup>\n      </Stack>\n      <TextField\n        variant=\"outlined\"\n        label=\"\"\n        defaultValue={text}\n        onChange={handleTextChange}\n        size=\"small\"\n        sx={{ width: '100%', mb: 1 }}\n        InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n        helperText={\n          <Typography sx={{ color: 'gray', fontSize: '0.75rem' }}>\n            {collageTextError}\n          </Typography>\n        }\n        error={!!collageTextError}\n      />\n    </Stack>\n  );\n}\n\nTextControl.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  handlePositionChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport ColorControl from 'components/collage/ColorControl';\nimport TextControl from 'components/collage/TextControl';\n\nexport default function EditControl({ optionProps }) {\n  const {\n    options,\n    handlePaddingChange,\n    displayColorPicker,\n    handleColorChange,\n    handleColorClose,\n    handleColorClick,\n    handleRadiusChange,\n    handleTextChange,\n    handlePositionChange,\n  } = optionProps;\n\n  return (\n    <Stack\n      direction=\"column\"\n      spacing={4}\n      sx={{\n        p: 2,\n        backgroundColor: alpha('#000', 0.7),\n        borderRadius: '10px 10px 10px 10px',\n        boxShadow: '0 0 10px inset rgba(255, 255, 255, 0.3)',\n      }}\n    >\n      <PaddingControl\n        padding={options.padding}\n        handlePaddingChange={handlePaddingChange}\n      />\n      <RadiusControl\n        radius={options.borderRadius}\n        handleRadiusChange={handleRadiusChange}\n      />\n      <ColorControl\n        color={options.color}\n        displayColorPicker={displayColorPicker}\n        handleChange={handleColorChange}\n        handleClose={handleColorClose}\n        handleClick={handleColorClick}\n      />\n      <TextControl\n        text={options.text}\n        topText={options.topText}\n        handleTextChange={handleTextChange}\n        handlePositionChange={handlePositionChange}\n      />\n    </Stack>\n  );\n}\n\nEditControl.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n\nexport default function MBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      value={label.toLowerCase()}\n      icon={icon}\n      sx={{\n        fontWeight: 'bold',\n        color: 'gray',\n        '&.Mui-selected': { color: 'white', outline: 'none' },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\n\nMBNA.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function MobileActions({ actionsRef, onDownload, onSave }) {\n  return (\n    <BottomNavigation\n      ref={actionsRef}\n      showLabels\n      sx={{ py: 1, fontWeight: 'bold', backgroundColor: alpha('#fff', 0.2) }}\n    >\n      <MBNA label=\"Save\" icon={<SaveIcon />} handleChange={onSave} />\n      <MBNA\n        label=\"Download\"\n        icon={<DownloadIcon />}\n        handleChange={onDownload}\n      />\n      <MBNA label=\"Print\" icon={<PrintIcon />} handleChange={() => {}} />\n    </BottomNavigation>\n  );\n}\n\nMobileActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport { alpha } from '@mui/material/styles';\n\nexport default function MainControls({ value, handleChange }) {\n  return (\n    <BottomNavigation\n      showLabels\n      value={value}\n      onChange={handleChange}\n      sx={{\n        fontWeight: 'bold',\n        backgroundColor: alpha('#fff', 0.2),\n        '&.Mui-selected': { color: 'white' },\n      }}\n    >\n      <BottomNavigationAction\n        label=\"Rearrange\"\n        value=\"rearrange\"\n        icon={<AutoAwesomeMosaicIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Photos\"\n        value=\"photo\"\n        icon={<PhotoIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Edit\"\n        value=\"edit\"\n        icon={<EditIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Clear\"\n        value=\"clear\"\n        icon={<RefreshIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n    </BottomNavigation>\n  );\n}\n\nMainControls.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport Typography from '@mui/material/Typography';\nimport PaddingIcon from '@mui/icons-material/Padding';\nimport CropFreeIcon from '@mui/icons-material/CropFree';\nimport SquareIcon from '@mui/icons-material/Square';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TitleIcon from '@mui/icons-material/Title';\nimport { alpha } from '@mui/material/styles';\n\nexport default function EditOptions({\n  color,\n  editOptionsValue,\n  open,\n  handleOptionsClose,\n  handleEditOptionsClick,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={editOptionsValue}\n        onChange={handleEditOptionsClick}\n        sx={{\n          display: 'flex',\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          position: 'relative',\n          alignItems: 'center',\n        }}\n      >\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Padding\n            </Typography>\n          }\n          value=\"padding\"\n          icon={<PaddingIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Corner\n            </Typography>\n          }\n          value=\"border radius\"\n          icon={<CropFreeIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Color\n            </Typography>\n          }\n          value=\"color\"\n          icon={\n            <SquareIcon\n              sx={{\n                fill: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n                borderRadius: '5px',\n              }}\n            />\n          }\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label=\"Text\"\n          value=\"text\"\n          icon={<TitleIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nEditOptions.propTypes = {\n  editOptionsValue: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleEditOptionsClick: PropTypes.func.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function ImageOptions({\n  open,\n  value,\n  handleOptionsClose,\n  handleDelete,\n  handleAdd,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={value}\n        sx={{\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          '&.Mui-selected': { color: 'white' },\n        }}\n      >\n        <MBNA\n          label=\"Delete\"\n          icon={<DeleteIcon />}\n          handleChange={handleDelete}\n        />\n        <MBNA\n          label=\"Add\"\n          icon={<AddPhotoAlternateIcon />}\n          handleChange={handleAdd}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nImageOptions.propTypes = {\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\n\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport TextControl from 'components/collage/TextControl';\nimport { ColorPicker } from 'components/collage/ColorControl';\nimport MainControls from 'components/collage/MainControls';\nimport EditOptions from 'components/collage/EditOptions';\nimport ImageOptions from 'components/collage/ImageOptions';\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function MobileControls({\n  optionProps,\n  actionProps,\n  dimensionProps,\n  handleClear,\n}) {\n  const {\n    options,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClose,\n    handleColorClick,\n    handleColorChange,\n    handleTextChange,\n    handlePositionChange,\n    displayColorPicker,\n  } = optionProps;\n\n  const { onRefresh, onDelete, clearDelete } = actionProps;\n  const { footerRef, handleImageAddClick } = dimensionProps;\n\n  const [mainOpen, setMainOpen] = useState(true);\n  const [value, setValue] = useState('');\n  const [editOpen, setEditOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const [editControl, setEditControl] = useState(null);\n  const [editOptionsValue, setEditOptionsValue] = useState('');\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageValue, setImageValue] = useState('');\n\n  const handleImageOptionsClose = () => {\n    setImageOpen(false);\n    setImageValue('');\n    setMainOpen(true);\n    clearDelete();\n    setValue('');\n  };\n\n  const handleEditOptionsClose = () => {\n    setEditOpen(false);\n    setEditControl(null);\n    setEditOptionsValue('');\n    setMainOpen(true);\n    setValue('');\n  };\n\n  const handleEditOptionsClick = (e, nV) => {\n    console.log('handle edit options click');\n    setEditOptionsValue(nV);\n    if (nV === 'padding') {\n      setEditControl(\n        <PaddingControl\n          padding={options.padding}\n          handlePaddingChange={handlePaddingChange}\n        />\n      );\n    } else if (nV === 'border radius') {\n      setEditControl(\n        <RadiusControl\n          radius={options.borderRadius}\n          handleRadiusChange={handleRadiusChange}\n        />\n      );\n    } else if (nV === 'color') {\n      handleColorClick();\n      setEditControl(\n        <ColorPicker\n          open={displayColorPicker}\n          color={options.color}\n          handleChange={handleColorChange}\n          handleClose={() => {\n            setEditControl(null);\n            handleColorClose();\n          }}\n        />\n      );\n    } else if (nV === 'text') {\n      console.log(nV);\n      setEditControl(\n        <TextControl\n          text={options.text}\n          handleTextChange={handleTextChange}\n          topText={options.topText}\n          handlePositionChange={handlePositionChange}\n        />\n      );\n    } else {\n      setEditControl(<Typography color=\"secondary\">{nV}</Typography>);\n    }\n  };\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'padding') {\n      setEditControl(\n        <PaddingControl\n          padding={options.padding}\n          handlePaddingChange={handlePaddingChange}\n        />\n      );\n    }\n  }, [options.padding, editOpen]);\n  // }, [options.padding, editOpen, editOptionsValue]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'border radius') {\n      setEditControl(\n        <RadiusControl\n          radius={options.borderRadius}\n          handleRadiusChange={handleRadiusChange}\n        />\n      );\n    }\n  }, [options.borderRadius, editOpen]);\n  // }, [options.borderRadius, editOpen, editOptionsValue]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'color') {\n      setEditControl(\n        <ColorPicker\n          open={displayColorPicker}\n          color={options.color}\n          handleChange={handleColorChange}\n          handleClose={handleColorClose}\n        />\n      );\n    }\n  }, [options.color, editOpen, displayColorPicker]);\n  // }, [options.color, editOpen, editOptionsValue, displayColorPicker]);\n\n  useEffect(() => {\n    console.log('text control useEffect');\n    if (editOpen && editOptionsValue === 'text') {\n      setEditControl(\n        <TextControl\n          text={options.text}\n          handleTextChange={handleTextChange}\n          topText={options.topText}\n          handlePositionChange={handlePositionChange}\n        />\n      );\n    }\n  }, [options.text, editOpen, options.topText]);\n  // }, [options.text, editOpen, editOptionsValue, options.topText]);\n\n  const handleImageClose = () => {\n    setImageValue('');\n    setImageOpen(false);\n    setMainOpen(true);\n  };\n\n  const handleChange = (event, newValue) => {\n    clearDelete();\n    handleImageClose();\n    handleEditOptionsClose();\n    setValue(newValue);\n    if (newValue === 'rearrange') {\n      onRefresh();\n    } else if (newValue === 'photo') {\n      setMainOpen(false);\n      setImageOpen(true);\n    } else if (newValue === 'edit') {\n      setMainOpen(false);\n      setEditOpen(true);\n    } else if (newValue === 'clear') {\n      setClearOpen(true);\n      //  handleClear();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  const handleImageAdd = () => {\n    clearDelete();\n    handleImageAddClick();\n  };\n\n  const handleClearSubmit = () => {\n    handleClear();\n    setClearOpen(false);\n    setValue('');\n  };\n\n  const handleClearCancel = () => {\n    setClearOpen(false);\n    setValue('');\n  };\n\n  console.log('rerendering', editControl);\n  return (\n    <Paper\n      ref={footerRef}\n      sx={{\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        mt: 1,\n        backgroundColor: 'black',\n        borderRadius: 0,\n      }}\n      elevation={4}\n    >\n      <ClearCollageDialog\n        open={clearOpen}\n        onSubmit={handleClearSubmit}\n        onCancel={handleClearCancel}\n      />\n      {editControl ? (\n        <Box\n          sx={{\n            backgroundColor: alpha('#fff', 0.15),\n            p: 1,\n          }}\n        >\n          {editControl}\n        </Box>\n      ) : null}\n      <ImageOptions\n        open={imageOpen}\n        value={imageValue}\n        handleDelete={onDelete}\n        handleAdd={handleImageAdd}\n        handleOptionsClose={handleImageOptionsClose}\n      />\n      <EditOptions\n        color={options.color}\n        editOptionsValue={editOptionsValue}\n        open={editOpen}\n        handleOptionsClose={handleEditOptionsClose}\n        handleEditOptionsClick={handleEditOptionsClick}\n      />\n      {mainOpen ? (\n        <MainControls value={value} handleChange={handleChange} />\n      ) : null}\n    </Paper>\n  );\n}\n\nMobileControls.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n  }).isRequired,\n  actionProps: PropTypes.shape({\n    onRefresh: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    clearDelete: PropTypes.func.isRequired,\n  }).isRequired,\n  handleClear: PropTypes.func.isRequired,\n  dimensionProps: PropTypes.shape({\n    handleImageAddClick: PropTypes.func.isRequired,\n    footerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport db from 'db';\nimport { useEffect, useState } from 'react';\nimport dbutils from 'components/collage/dbutils';\nimport useBase from 'hooks/collage/base';\nimport utils from 'utils';\nimport { useNavigate } from 'react-router-dom';\nimport Dialog from '@mui/material/Dialog';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport DialogContent from '@mui/material/DialogContent';\nimport Box from '@mui/material/Box';\n\nimport Authenticate from 'hocs/require-authentication';\nimport Collage from 'components/collage/Collage';\nimport DownloadDialog from 'components/collage/DownloadDialog';\nimport SaveDialog from 'components/collage/SaveDialog';\nimport SaveStatusDialog from 'components/collage/SaveStatusDialog';\nimport Header from 'components/collage/Header';\nimport Loading from 'components/Loading';\nimport View from 'components/collage/View';\n\nimport DesktopActions from 'components/collage/DesktopActions';\nimport DesktopControls from 'components/collage/DesktopControls';\nimport DesktopImageOptions from 'components/collage/DesktopImageOptions';\nimport EditControl from 'components/collage/EditControl';\nimport MobileActions from 'components/collage/MobileActions';\nimport MobileControls from 'components/collage/MobileControls';\n\nexport default function BaseCollage({ getCollage, clearCollage, saveType }) {\n  console.log('base collage', saveType);\n  const navigate = useNavigate();\n  const [details, setDetails] = useState({});\n  const [status, setStatus] = useState('fetching');\n  const [commonOpen, setCommonOpen] = useState(false);\n  const [commonMessage, setCommonMessage] = useState('');\n\n  const openCommonDialog = (message) => {\n    console.log('opening common dialog with message', message);\n    if (message !== '') {\n      setCommonMessage(message);\n      setCommonOpen(true);\n    }\n  };\n\n  const closeCommonDialog = () => {\n    console.log('closing common dialog', commonMessage);\n    setCommonOpen(false);\n    setCommonMessage('');\n  };\n\n  const [\n    getDetails,\n    collageName,\n    ,\n    collageID,\n    constants,\n    dimensionProps,\n    optionProps,\n    actionProps,\n    imageProps,\n    treeProps,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n  ] = useBase(details);\n\n  useEffect(async () => {\n    if (Object.keys(details).length === 0) {\n      setStatus('fetching');\n      const collageDetails =\n        saveType === 'new'\n          ? await getCollage()\n          : await getCollage(\n              imageProps.setImageCount,\n              imageProps.setNewImageCount,\n              imageProps.handleImageData\n            );\n      setStatus('fetch end');\n      console.log('setting collage details', collageDetails);\n      setDetails(collageDetails);\n      if (saveType === 'new') {\n        clearCollage();\n      }\n    }\n  }, []);\n\n  console.log(\n    'base collage',\n    details,\n    imageProps.imgCount,\n    imageProps.loaded,\n    imageProps.images,\n    imageProps.newImagesLoaded,\n    collageName,\n    collageID\n  );\n\n  useEffect(() => {\n    let st = status;\n    // if (st === 'fetching') return;\n    if (\n      imageProps.imgCount === 0 &&\n      Object.keys(details).length === 0 &&\n      st === 'fetch end'\n    ) {\n      st = 'empty';\n    }\n    if (\n      imageProps.images.length > 0 &&\n      imageProps.images.length === imageProps.imgCount\n    ) {\n      st = 'preparing';\n    }\n    if (imageProps.images.length < imageProps.imgCount) {\n      st = 'loading';\n    }\n    if (imageProps.loaded >= imageProps.imgCount && imageProps.imgCount > 0) {\n      st = 'ready';\n    }\n    setStatus(st);\n    console.log(\n      'status calculation',\n      imageProps.loaded,\n      imageProps.imgCount,\n      imageProps.images.length,\n      st,\n      details\n    );\n  }, [imageProps]);\n\n  const clearAll = async () => {\n    openCommonDialog('Deleting Collage');\n    setDetails({});\n    handleClear();\n    await clearCollage();\n    setStatus('fetch end');\n    closeCommonDialog();\n    if (saveType === 'existing') {\n      openCommonDialog('Navigating to collages page');\n      setTimeout(() => {\n        closeCommonDialog();\n        navigate('/collages');\n      }, 3000);\n    }\n  };\n\n  const handleSave = async (name) => {\n    console.log('in handle save', getDetails(name), imageProps.images);\n\n    actionProps.onSaveClick();\n    const res =\n      saveType === 'new' ? await newCollage(name) : await saveCollage(name);\n    console.log('save results', res, collageID);\n    if (res) {\n      setTimeout(() => {\n        if (saveType === 'new') clearAll();\n        actionProps.setSaveStart(false);\n        navigate('/collages');\n      }, 3000);\n    }\n  };\n\n  const downloadDialog = (\n    <DownloadDialog\n      open={actionProps.open}\n      onClick={actionProps.onDownloadClick}\n      onClose={actionProps.onDownloadClose}\n      sizes={constants.paperSizes}\n    />\n  );\n\n  const saveDialog = (\n    <Authenticate>\n      <SaveDialog\n        open={actionProps.saveOpen}\n        onClick={handleSave}\n        onClose={actionProps.onSaveClose}\n      />\n    </Authenticate>\n  );\n\n  const saveStatusDialog = (\n    <Authenticate>\n      <SaveStatusDialog open={actionProps.saveStart} status={saveStatus} />\n    </Authenticate>\n  );\n\n  const collage = (\n    <Collage\n      dimensionProps={dimensionProps}\n      imageProps={imageProps}\n      actionProps={actionProps}\n      collageCallback={collageCallback}\n      handleRemoveImage={handleRemoveImage}\n      options={optionProps.options}\n      tree={treeProps.tree}\n    />\n  );\n\n  const mobileControls = (\n    <MobileControls\n      optionProps={optionProps}\n      actionProps={actionProps}\n      dimensionProps={dimensionProps}\n      handleClear={clearAll}\n    />\n  );\n\n  const header = (\n    <Header headerRef={dimensionProps.headerRef} name={collageName} />\n  );\n\n  const desktopPhotosComp = (\n    <DesktopImageOptions\n      onDelete={actionProps.onDelete}\n      onAdd={dimensionProps.handleImageAddClick}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n  const desktopControls = (\n    <DesktopControls\n      innerRef={dimensionProps.footerRef}\n      onRefresh={actionProps.onRefresh}\n      photosComp={desktopPhotosComp}\n      editComp={<EditControl optionProps={optionProps} />}\n      handleClear={clearAll}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n\n  const isMobile = window.innerWidth < window.innerHeight;\n  const controls = isMobile ? mobileControls : desktopControls;\n\n  const onSave = async () => {\n    const userInfo = utils.getUserInfo();\n    console.log('user info', userInfo);\n    if (saveType === 'new' && userInfo === '') {\n      openCommonDialog('Saving collage locally');\n      console.time('saving locally');\n      await db.collageDB.details.clear();\n      await db.collageDB.images.clear();\n      console.timeEnd('saving locally');\n      console.time('saving locally state');\n      const respdets = await dbutils.save(\n        [getDetails(collageName, {})],\n        'details'\n      );\n      const respImgs = await dbutils.save(imageProps.images, 'images');\n      console.log('save responses', respdets, respImgs);\n      console.timeEnd('saving locally state');\n      closeCommonDialog();\n    }\n    actionProps.handleSave();\n  };\n\n  const actionsComp = isMobile ? (\n    <MobileActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={onSave}\n    />\n  ) : (\n    <DesktopActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={onSave}\n    />\n  );\n\n  return (\n    <Box sx={{ backgroundColor: 'black', height: '100vh' }}>\n      <View\n        open={actionProps.open}\n        saveOpen={actionProps.saveOpen}\n        saveStatusOpen={actionProps.saveStart}\n        dimensionProps={dimensionProps}\n        imageProps={imageProps}\n        header={header}\n        actions={actionsComp}\n        downloadDialog={downloadDialog}\n        saveDialog={saveDialog}\n        saveStatusDialog={saveStatusDialog}\n        collage={collage}\n        controls={controls}\n        status={status}\n        saveType={saveType}\n      />\n      <input\n        ref={dimensionProps.addImageRef}\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={imageProps.handleLoad}\n      />\n      {actionProps.generate ? <Loading title=\"Creating collage ...\" /> : null}\n      <Dialog open={commonOpen}>\n        <DialogContent>\n          <Stack\n            direction=\"row\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <CircularProgress />\n            <Typography variant=\"h6\">{commonMessage}</Typography>\n          </Stack>\n        </DialogContent>\n      </Dialog>\n    </Box>\n  );\n  // return 'base';\n}\n\nBaseCollage.propTypes = {\n  getCollage: PropTypes.func.isRequired,\n  clearCollage: PropTypes.func.isRequired,\n  saveType: PropTypes.string.isRequired,\n};\n","const parseCookie = (str) =>\n  Object.fromEntries(str.split(';').map((cookie) => cookie.split('=', 2)));\n\nfunction getUserInfo() {\n  const parsedCookies = parseCookie(document.cookie);\n  if ('userInfo' in parsedCookies) {\n    return JSON.parse(atob(parsedCookies.userInfo));\n  }\n  return '';\n}\n\nfunction handleMaxPhotos(containerWidth) {\n  if (containerWidth < 450) return { maxPhotos: 2 };\n  if (containerWidth < 800) return { maxPhotos: 3 };\n  return { maxPhotos: 4 };\n}\n\nfunction handleColumns(containerWidth) {\n  if (containerWidth < 450) return 2;\n  if (containerWidth < 800) return 3;\n  return 4;\n}\n\nfunction handleArrangement(images, callback) {\n  let twidth = 0;\n  let theight = 0;\n  images.forEach(({ height, width }) => {\n    if (height > width) theight += 1;\n    else twidth += 1;\n  });\n  if (twidth > theight) {\n    callback('rows');\n  } else {\n    callback('columns');\n  }\n}\n\nasync function isFieldValid(key, value, setFieldError, schema) {\n  let hasError = false;\n  const testField = await schema\n    .validate({ [key]: value }, { abortEarly: false })\n    .catch((error) => error);\n  setFieldError('');\n  if (testField.inner) {\n    testField.inner.forEach((error) => setFieldError(error.message));\n    hasError = true;\n  }\n  return !hasError;\n}\n\nexport default {\n  parseCookie,\n  getUserInfo,\n  handleMaxPhotos,\n  handleColumns,\n  handleArrangement,\n  isFieldValid,\n};\n"],"names":["url","body","params","method","fetch","then","response","resp","console","log","newCollage","collageID","collageDetails","collage_id","helpers","process","JSON","stringify","error","saveCollage","upload","listCollages","nextToken","next_token","getThumbnail","collageId","getCollage","deleteCollage","checkOptimizeStatus","get","path","newUrl","options","credentials","headers","Headers","URLSearchParams","toString","ok","status","document","cookie","json","post","apiUrl","deleteMethod","OptionsButton","children","onClick","name","Button","id","variant","component","sx","color","borderRadius","backgroundColor","padding","defaultProps","AddPhotos","handleChange","type","hidden","multiple","accept","onChange","fontSize","Typography","fontWeight","LoginButton","authURL","next","href","target","style","textDecoration","borderColor","alpha","getData","tableName","db","toArray","rows","length","clearData","clear","getCollageDetails","details","images","data","map","dt","put","getCollageData","clearCollageData","save","getClosest","arr","index1","index2","downscaleImage","image","newWidth","newHeight","fileType","canvas","createElement","width","height","getContext","drawImage","toDataURL","optimizeImage","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","event","handleImageCount","handleNewImageCount","handleImageData","files","cnt","Array","from","Image","e","naturalWidth","naturalHeight","src","title","Date","now","aspectRatio","time","optimizedSRC","timeEnd","size","imageDetail","originalSRC","originalHeight","originalWidth","getCollageDimension","maxW","maxH","a","origAR","wrapText","text","x","y","maxWidth","lineHeight","textCanvas","ctx","font","textAlign","tempX","tempY","words","split","line","testLine","lineArray","n","testWidth","measureText","letterSpacing","push","getTextHeight","scaleFactor","getCut","Math","round","random","findClosest","start","end","mid","findImgPair","i","j","minMatchingCost","abs","getAspectRatio","cut","ar1","ar2","handleImageLoad","resizeImages","originalImages","handleImages","addImagesToDB","tempImages","forEach","origImage","tempImage","imgs","ind","findIndex","elem","slice","convertToRGBA","value","r","g","b","convertBase64String","readAsD","Blob","textCanvasDraw","textArray","position","canvasWidth","textHeight","textBaseline","fillStyle","fillRect","chunk","textPart","fillText","getImageDimensions","paperWidth","paperHeight","optimizeDimensions","maxPrintWidth","maxPrintHeight","problematicNodes","ar","optimumTreeSizes","pn","newRootWidth","newRootHeight","sort","ProfileAvatar","picture","email","initials","toUpperCase","referrerPolicy","alt","ProfileIcon","open","handleClick","avatar","display","alignItems","marginRight","undefined","ml","ProfileMenu","handleClose","anchorEl","profileIdentifier","onClose","PaperProps","elevation","filter","mt","mr","content","top","right","bgcolor","transform","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","underline","Profile","React","setAnchorEl","Boolean","userInfo","commonUtils","userAvatar","currentTarget","ProfileLink","item","paddingTop","collageDB","Dexie","version","stores","AuthDialog","onLogin","fullWidth","dividers","justifyContent","Authenticate","nextPath","useState","setOpen","location","useLocation","isLoggedIn","to","replace","pathname","search","window","TextDisplay","paddingX","fontFamily","Node","this","left","obj","fromObject","getScore","output","concat","copyNode","copy","newImages","replaceImages","rest","removeImageData","imageData","find","addImageData","delImg","handleRemoveImage","yOffset","xOffset","handleCollageImageLoad","newX","newY","Box","onLoad","Tooltip","IconButton","Delete","DOMDisplay","RenderImage","tempCanvas","tempCtx","floor","log2","radius","clipwidth","clipheight","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","canvasElement","CanvasDisplay","newImg","ResizeImage","ImageStyling","clearRect","tar","imageCount","targetAspectRatioArr","closestIndex","restImages","targetAspectRatio","leftIndex","rightIndex","index","includes","first","second","generate","th","adjustments","adjust","parentWidth","parentHeight","parentX","parentY","parentCut","nodeType","addSize","validateAddSize","lV","lPN","rV","rPN","valid","BinaryTree","root","tempTree","canvasHeight","topText","lA","score","min","trys","bestAdjust","bestAspectRatio","tolerableDifference","ajstCnt","diff","copyTree","findBestAdjustTree","tolerance","imageWidth","imageHeight","sortedImages","collageArray","imgTree","generateCollageTree","aspR","bAR","toFixed","maxScore","maxElem","element","generateScore","useBase","initialValue","setDetails","collageName","setCollageName","constants","resizeImageWidth","paperSizes","A472","A4","A3","A4LandScape","A3LandScape","FBCoverDesktop","WhatsappStatus","uploadedImages","setUploadedImages","dimensions","headerRef","useRef","actionsRef","footerRef","addImageRef","setHeight","setImageHeight","setImageWidth","setWidth","maxHeight","setMaxHeight","setMaxWidth","setTextHeight","setDimensions","innerWidth","innerHeight","otherHeight","current","offsetHeight","w","h","headerHeight","actionsWidth","offsetWidth","footerWidth","useEffect","addEventListener","removeEventListener","handleImageAddClick","click","useDimensions","optionsInitValue","setOptions","displayColorPicker","setDisplayColorPicker","handlePaddingChange","opts","handleRadiusChange","handleColorClick","dcp","handleColorClose","handleColorChange","clr","rgb","handlePositionChange","handleTextChange","useOptions","actions","saveOpen","setSaveOpen","saveStart","setSaveStart","refresh","setRefresh","setGenerate","removeImage","setRemoveImage","printOptions","setPrintOptions","clearDelete","handleDownload","handleGenerateCallback","onDelete","ri","onDownloadClick","onDownloadClose","onRefresh","onSaveClose","onSaveClick","handleSave","useActions","newImgCount","setNewImageCount","newImagesLoaded","setNewImagesLoaded","imgCount","setImageCount","loaded","setLoaded","setImages","handleLoad","remove","removeIndex","newImagesArr","getImageData","imageArr","img","useImages","treeState","loadingCallback","tree","setTree","newTree","Object","keys","reAdjust","imagesArr","treeUtils","bestAspectRatioTree","addOptions","useTree","thumbnail","setThumbnail","finalizing","saveStatus","setSaveStatus","updateStatus","key","st","imagesText","updateImagesStatus","handleClear","allSettled","clearPromises","generateThumbnail","thumbnailCanvas","thumbnailTree","thumbnailDetails","uploadCollageDetails","dets","created_at","last_updated_at","collageapi","uploadCollageImages","imageURLS","imagePromises","thumbnailKey","thumbnailPromise","toBlob","blob","Img","uploadPromises","uploadStatus","tH","getDetails","imgTitle","Collage","dimensionProps","imageProps","actionProps","collageCallback","collage","setCollage","isEmpty","t","createCollage","collageElem","pw","ph","canvasTree","getCanvasTree","imgPW","imgPH","generateCollage","ctree","getCanvas","setTimeout","pW","pH","link","download","URL","createObjectURL","revokeObjectURL","probNodes","newPW","newPH","newCanvasTree","newValid","newProbNodes","DownloadDialog","sizes","setValue","Dialog","DialogTitle","DialogContent","DialogContentText","pr","FormControl","InputLabel","Select","labelId","defaultValue","label","MenuItem","DialogActions","disabled","SaveDialog","setName","nameError","TextField","mb","InputProps","helperText","StatusIndicator","CircularProgress","Pending","CheckCircleOutline","Close","Status","pending","done","running","failed","Stack","direction","OverAllStatus","counter","spacing","p","SaveStatusDialog","overAllStatus","setCounter","timerId","clearTimeout","statusArr","values","val","Header","Paper","ref","postion","Link","ArrowBack","EmptyCollage","loadComponent","backgroundImage","collageBack","backgroundSize","objectFit","View","saveStatusOpen","header","downloadDialog","saveDialog","saveStatusDialog","controls","saveType","isMobile","actionsHeight","Loading","justifySelf","DBNA","icon","BottomNavigationAction","showLabel","py","outline","DesktopDrawer","anchor","innerRef","Drawer","ControlsDivider","Divider","my","DesktopActions","onDownload","onSave","newValue","List","Save","Download","Print","ClearCollageDialog","onSubmit","onCancel","noWrap","DesktopControls","photosComp","editComp","imageOptionsOpen","setImageOptionsOpen","editOptionsOpen","setEditOptionsOpen","clearOpen","setClearOpen","closeAll","handleClearClose","AutoAwesomeMosaic","Photo","Edit","Refresh","DesktopImageOptions","onAdd","AddPhotoAlternate","PaddingControl","mixBlendMode","Slider","valueLabelDisplay","step","max","RadiusControl","ColorControl","background","boxShadow","cursor","ColorPicker","bottom","border","TextControl","collageTextError","FormGroup","row","FormControlLabel","disableTypography","control","Checkbox","checked","EditControl","optionProps","MBNA","toLowerCase","MobileActions","BottomNavigation","showLabels","MainControls","EditOptions","editOptionsValue","handleOptionsClose","handleEditOptionsClick","borderTop","Padding","CropFree","Square","fill","Title","ImageOptions","handleDelete","handleAdd","MobileControls","mainOpen","setMainOpen","editOpen","setEditOpen","editControl","setEditControl","setEditOptionsValue","imageOpen","setImageOpen","imageValue","setImageValue","handleEditOptionsClose","nV","BaseCollage","clearCollage","navigate","useNavigate","setStatus","commonOpen","setCommonOpen","commonMessage","setCommonMessage","openCommonDialog","message","closeCommonDialog","treeProps","clearAll","res","mobileControls","desktopPhotosComp","desktopControls","utils","dbutils","respdets","respImgs","actionsComp","parseCookie","str","fromEntries","setFieldError","schema","hasError","validate","abortEarly","catch","testField","inner","getUserInfo","parsedCookies","parse","atob","handleMaxPhotos","containerWidth","maxPhotos","handleColumns","handleArrangement","callback","twidth","theight","isFieldValid"],"sourceRoot":""}