{"version":3,"file":"static/js/94.5cf6b1b7.chunk.js","mappings":"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","sources":["pages/CreateItem.jsx","pages/MemoryThumbnail.jsx","pages/MemoryThumbnailCard.jsx","pages/memories/MemoryItemLoading.jsx","pages/memories/MemoryGrid.jsx","pages/memories/LoadMore.jsx","pages/memories/GridView.jsx","pages/memories/Own.jsx","components/NoMemories.jsx","pages/memories/Shared.jsx","components/ActionButton.jsx","components/OwnerInfo.jsx","components/ReviewCard.jsx","components/ReviewItem.jsx","pages/memories/Review.jsx","pages/memories/Memories.jsx","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport AddOutlinedIcon from '@mui/icons-material/AddOutlined';\n\nimport MemoryThumbnailCard from 'pages/MemoryThumbnailCard';\n\nexport default function CreateMemoryItem({ message, handleClick }) {\n  const belowmd = useMediaQuery((theme) => theme.breakpoints.down('md'));\n\n  return (\n    <Grid item key=\"creatememory\" lg={3} md={4} sm={6} xs={12} sx={{ p: 1 }}>\n      <MemoryThumbnailCard handleClick={handleClick}>\n        <Typography\n          variant={belowmd ? 'body1' : 'h5'}\n          color=\"button.main\"\n          sx={{\n            p: 1,\n            color: 'secondary.main',\n            bgcolor: 'primary.main',\n            borderRadius: '0px 10px 10px 0px',\n            borderColor: 'secondary.main',\n            position: 'absolute',\n            bottom: 15,\n            left: 0,\n          }}\n        >\n          {message}\n        </Typography>\n        <AddOutlinedIcon\n          sx={{\n            position: 'absolute',\n            border: 3,\n            borderRadius: '50%',\n            fontSize: '7.5rem',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            color: 'muted.main',\n          }}\n        />\n      </MemoryThumbnailCard>\n    </Grid>\n  );\n}\n\nCreateMemoryItem.propTypes = {\n  message: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Typography from '@mui/material/Typography';\nimport Chip from '@mui/material/Chip';\nimport MemoryThumbnailCard from './MemoryThumbnailCard';\n\nfunction ThumbnailImage({ imageSrc, imageSrcSet, title, handleImageLoad }) {\n  return (\n    <CardMedia\n      component=\"img\"\n      src={imageSrc}\n      srcSet={imageSrcSet}\n      alt={title}\n      sx={{\n        textAlign: 'center',\n        objectFit: 'cover',\n        height: {\n          lg: 350,\n          md: 300,\n          xs: 250,\n        },\n      }}\n      onLoad={handleImageLoad}\n    />\n  );\n}\n\nfunction ThumbnailDetails({ title, date, avatar, shared }) {\n  return (\n    <CardContent>\n      <CardHeader\n        disableTypography\n        avatar={avatar}\n        title={\n          <Typography\n            noWrap\n            sx={{\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              width: { xs: 'calc(75%)', sm: 'calc(100%)' },\n              fontWeight: 600,\n            }}\n          >\n            {title}\n            {shared !== '' ? (\n              <>\n                {' '}\n                <Chip\n                  label={shared}\n                  size=\"small\"\n                  variant=\"filled\"\n                  color={shared === 'Shared' ? 'success' : 'default'}\n                  sx={{ height: 'auto' }}\n                />\n              </>\n            ) : null}\n          </Typography>\n        }\n        subheader={<Typography sx={{ color: 'muted.main' }}>{date}</Typography>}\n        sx={{\n          padding: 0,\n          color: 'faded.black',\n        }}\n      />\n    </CardContent>\n  );\n}\n\nexport default function MemoryThumbnail({\n  title,\n  date,\n  avatar,\n  shared,\n  thumbnailImage,\n  thumbnailImageSrcSet,\n  handleClick,\n  handleImageLoad,\n}) {\n  return (\n    <MemoryThumbnailCard handleClick={handleClick}>\n      <ThumbnailImage\n        imageSrc={thumbnailImage}\n        imageSrcSet={thumbnailImageSrcSet}\n        title={title}\n        handleImageLoad={handleImageLoad}\n      />\n      <ThumbnailDetails\n        title={title}\n        date={date}\n        avatar={avatar}\n        shared={shared}\n      />\n    </MemoryThumbnailCard>\n  );\n}\n\nThumbnailDetails.defaultProps = {\n  title: 'Memory Thumbnail Image',\n  date: 'Memory Date',\n  avatar: '',\n  shared: '',\n};\n\nThumbnailDetails.propTypes = {\n  title: PropTypes.string,\n  date: PropTypes.string,\n  avatar: PropTypes.node,\n  shared: PropTypes.string,\n};\n\nThumbnailImage.defaultProps = {\n  title: 'Memory Thumbnail Image',\n  imageSrc: '',\n  imageSrcSet: '',\n  handleImageLoad: () => {},\n};\n\nThumbnailImage.propTypes = {\n  title: PropTypes.string,\n  imageSrc: PropTypes.string,\n  imageSrcSet: PropTypes.string,\n  handleImageLoad: PropTypes.func,\n};\n\nMemoryThumbnail.defaultProps = {\n  thumbnailImageSrcSet: '',\n  handleImageLoad: () => {},\n  avatar: '',\n  shared: '',\n};\n\nMemoryThumbnail.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  date: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  avatar: PropTypes.node,\n  shared: PropTypes.string,\n  thumbnailImage: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  thumbnailImageSrcSet: PropTypes.string,\n  handleImageLoad: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardActionArea from '@mui/material/CardActionArea';\n//  import { useTheme, alpha } from '@mui/material/styles';\n\nexport default function MemoryThumbnailCard({ handleClick, children }) {\n  //  const theme = useTheme();\n\n  return (\n    <CardActionArea onClick={handleClick}>\n      <Card\n        elevation={2}\n        sx={{\n          bgcolor: '#fff',\n          borderRadius: 5,\n          // border: '2px solid gray',\n          color: 'black',\n          position: 'relative',\n          height: {\n            lg: 430,\n            md: 380,\n            xs: 330,\n          },\n          '&:hover': {\n            border: 3,\n            borderColor: 'secondary.main',\n            elevation: 0,\n          },\n        }}\n      >\n        {children}\n      </Card>\n    </CardActionArea>\n  );\n}\n\nMemoryThumbnailCard.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Grid from '@mui/material/Grid';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport MemoryThumbnail from 'pages/MemoryThumbnail';\nimport imageLoading from 'static/images/image-loading.png';\n\nexport default function MemoryItemLoading({ memory }) {\n  return (\n    <Grid item key={memory} lg={3} md={4} sm={6} xs={12} sx={{ p: 1 }}>\n      <MemoryThumbnail\n        title={<Skeleton type=\"rectangular\" sx={{ width: '60%' }} />}\n        date={<Skeleton type=\"rectangular\" sx={{ width: '50%' }} />}\n        thumbnailImage={imageLoading}\n        handleClick={() => {}}\n      />\n    </Grid>\n  );\n}\n\nMemoryItemLoading.propTypes = {\n  memory: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\n\nexport default function MemoryGrid({ children }) {\n  return (\n    <Grid\n      container\n      sx={{ bgcolor: 'button.main', py: 1 }}\n      justifyContent=\"left\"\n      alignItems=\"flex-start\"\n    >\n      {children}\n    </Grid>\n  );\n}\n\nMemoryGrid.defaultProps = {\n  children: '',\n};\n\nMemoryGrid.propTypes = {\n  children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\nimport MemoryThumbnailCard from '../MemoryThumbnailCard';\n\nexport default function LoadMore({ handleMoreClick }) {\n  return (\n    <Grid item key=\"creatememory\" lg={3} md={4} sm={6} xs={12} sx={{ p: 1 }}>\n      <MemoryThumbnailCard handleClick={handleMoreClick}>\n        <Typography\n          variant=\"h5\"\n          sx={{\n            p: 2,\n            color: 'secondary.main',\n            bgcolor: 'primary.main',\n            borderRadius: '30px',\n            borderColor: 'secondary.main',\n            position: 'absolute',\n            bottom: '50%',\n            left: '50%',\n            transform: 'translate(-50%, +50%)',\n            textAlign: 'center',\n          }}\n        >\n          Load More\n        </Typography>\n      </MemoryThumbnailCard>\n    </Grid>\n  );\n}\n\nLoadMore.propTypes = {\n  handleMoreClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport Grid from '@mui/material/Grid';\nimport { ProfileAvatar } from 'components/profile';\nimport CreateItem from 'pages/CreateItem';\nimport MemoryThumbnail from 'pages/MemoryThumbnail';\n\nimport LoadMore from './LoadMore';\n\nexport default function GridView({\n  memories,\n  handleMoreClick,\n  nextToken,\n  handleImageLoad,\n  create,\n  handleClick,\n}) {\n  const navigate = useNavigate();\n  const handleCreateClick = () => navigate('/memory/create');\n\n  const sortedMemories = memories.sort((a, b) =>\n    a.memory_id > b.memory_id ? 1 : -1\n  );\n\n  const getThumbnailSrcSet = (thumbnailImage) => {\n    const srcSetList = thumbnailImage.images\n      ? thumbnailImage.images.map(({ src, width }) => `${src} ${width}w`)\n      : [];\n    return srcSetList.join(',');\n  };\n\n  return (\n    <Grid\n      container\n      sx={{ bgcolor: 'button.main', py: 1 }}\n      justifyContent=\"left\"\n      alignItems=\"flex-start\"\n    >\n      {create || memories.length === 0 ? (\n        <CreateItem message=\"Create a memory\" handleClick={handleCreateClick} />\n      ) : null}\n      {sortedMemories.map((memory) => (\n        <Grid\n          item\n          key={memory.title}\n          lg={3}\n          md={4}\n          sm={6}\n          xs={12}\n          sx={{ p: 1 }}\n        >\n          <MemoryThumbnail\n            title={memory.title}\n            date={memory.date}\n            avatar={\n              memory.owner ? (\n                <ProfileAvatar\n                  name={memory.owner.name}\n                  picture={memory.owner.picture}\n                  email={memory.owner.email}\n                />\n              ) : null\n            }\n            shared={memory.shared}\n            thumbnailImage={memory.photo.src}\n            thumbnailImageSrcSet={getThumbnailSrcSet(memory.photo)}\n            handleClick={() => handleClick(memory)}\n            handleImageLoad={handleImageLoad}\n          />\n        </Grid>\n      ))}\n      {nextToken && <LoadMore handleMoreClick={handleMoreClick} />}\n    </Grid>\n  );\n}\n\nGridView.defaultProps = {\n  memories: [],\n};\n\nGridView.propTypes = {\n  create: PropTypes.bool.isRequired,\n  memories: PropTypes.arrayOf(\n    PropTypes.shape({\n      memory_id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      photo: PropTypes.arrayOf(\n        PropTypes.shape({\n          key: PropTypes.string,\n          src: PropTypes.string,\n          title: PropTypes.string,\n          alt: PropTypes.string,\n          width: PropTypes.number,\n          height: PropTypes.number,\n        })\n      ),\n    })\n  ),\n  nextToken: PropTypes.string.isRequired,\n  handleMoreClick: PropTypes.func.isRequired,\n  handleImageLoad: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport MemoryItemLoading from 'pages/memories/MemoryItemLoading';\nimport MemoryGrid from 'pages/memories/MemoryGrid';\nimport memoryapi from 'api/memory';\nimport CreateItem from 'pages/CreateItem';\nimport GridView from './GridView';\n\nasync function getMemories(\n  handleMemoryCallback,\n  handleTokenCallback,\n  handleThumbnailCallback,\n  nextToken = ''\n) {\n  try {\n    const resp = await memoryapi.getMemories(nextToken);\n    if (resp) {\n      if (resp.memories) {\n        handleThumbnailCallback(resp.memories);\n        const thumbnails = await Promise.all(\n          memoryapi.getThumbnails(resp.memories)\n        );\n        handleMemoryCallback(thumbnails);\n        handleTokenCallback(resp.next_continuation_token || '');\n      }\n    }\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nexport default function OwnMemories() {\n  const [nextToken, setNextToken] = useState('');\n  const [memoryIDs, setMemoryIDs] = useState([]);\n  const [memories, setMemories] = useState([]);\n  const [count, setCount] = useState(0);\n  const [grid, setGrid] = useState(null);\n  const navigate = useNavigate();\n  const handleCreateClick = () => navigate('/memory/create');\n\n  const handleClick = (memDetails) => {\n    navigate(`/memory/${memDetails.memory_id}`, { state: memDetails });\n  };\n\n  const picLoaded = () => setCount((cnt) => cnt + 1);\n  const handleTokenChange = (newToken) => setNextToken(newToken);\n  const addMemories = (details) => setMemories((arr) => arr.concat(details));\n  const addMemoryIDs = (ids) => setMemoryIDs((arr) => arr.concat(ids));\n\n  useEffect(\n    () => getMemories(addMemories, handleTokenChange, addMemoryIDs, nextToken),\n    []\n  );\n\n  function GetThumbnailGrid() {\n    const thumbnailGrid = (\n      <GridView\n        create\n        memories={memories}\n        nextToken={nextToken}\n        handleMoreClick={() =>\n          getMemories(addMemories, handleTokenChange, addMemoryIDs, nextToken)\n        }\n        handleImageLoad={picLoaded}\n        handleClick={handleClick}\n      />\n    );\n    setGrid(thumbnailGrid);\n  }\n\n  useEffect(() => GetThumbnailGrid(), [memories, nextToken]);\n\n  return memories.length === memoryIDs.length && count >= memoryIDs.length ? (\n    grid\n  ) : (\n    <>\n      <MemoryGrid>\n        <CreateItem message=\"Create a memory\" handleClick={handleCreateClick} />\n        {memoryIDs.map((memory) => (\n          <MemoryItemLoading memory={memory} />\n        ))}\n      </MemoryGrid>\n\n      <Box component=\"div\" sx={{ display: 'none' }}>\n        {grid}\n      </Box>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { ReactComponent as Logo } from 'static/images/icons/logo.svg';\n\nexport default function NoMemories({ message }) {\n  const navigate = useNavigate();\n  const handleClick = () => navigate('/memory/create');\n\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{\n        width: '95%',\n        maxWidth: '500px',\n        position: 'fixed',\n        top: '50%',\n        right: '50%',\n        transform: 'translate(50%, -50%)',\n        border: '2px solid gray',\n        height: '60%',\n        borderRadius: '10px',\n      }}\n    >\n      <Logo fill=\"gray\" width=\"64px\" height=\"64px\" />\n      <Typography color=\"gray\" sx={{ fontSize: '1.3rem' }}>\n        {message}\n      </Typography>\n      <Typography color=\"gray\" sx={{ pb: 8, fontSize: '1.3rem' }}>\n        Check again later.\n      </Typography>\n      <Typography color=\"primary\">In the mean time, you can</Typography>\n      <Button variant=\"contained\" onClick={handleClick}>\n        Create a Memory\n      </Button>\n    </Stack>\n  );\n}\n\nNoMemories.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport MemoryItemLoading from 'pages/memories/MemoryItemLoading';\nimport MemoryGrid from 'pages/memories/MemoryGrid';\nimport NoMemories from 'components/NoMemories';\nimport memoryapi from 'api/memory';\nimport GridView from './GridView';\n\nasync function getAcceptedMemories(\n  handleMemoryCallback,\n  handleTokenCallback,\n  handleThumbnailCallback,\n  nextToken = ''\n) {\n  try {\n    const resp = await memoryapi.getAcceptedMemories(nextToken);\n    if (resp) {\n      if (resp.memories) {\n        handleThumbnailCallback(resp.memories);\n        const thumbnails = await Promise.all(\n          memoryapi.getAcceptedThumbnails(resp.memories)\n        );\n        handleMemoryCallback(thumbnails);\n        handleTokenCallback(resp.next_continuation_token || '');\n      }\n    }\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nexport default function SharedMemories() {\n  const [nextToken, setNextToken] = useState('');\n  const [memoryIDs, setMemoryIDs] = useState([]);\n  const [memories, setMemories] = useState([]);\n  const [count, setCount] = useState(0);\n  const [grid, setGrid] = useState(null);\n  const navigate = useNavigate();\n\n  const handleClick = (memDetails) => {\n    navigate(`/memory/shared/${memDetails.memory_id}`, { state: memDetails });\n  };\n\n  const picLoaded = () => setCount((cnt) => cnt + 1);\n  const handleTokenChange = (newToken) => setNextToken(newToken);\n\n  const addMemories = (details) => {\n    details.map((detail) => {\n      const memDetails = detail.thumbnail;\n      memDetails.owner = detail.owner_details;\n      setMemories((arr) => arr.concat([memDetails]));\n      return 0;\n    });\n  };\n\n  const addMemoryIDs = (ids) => setMemoryIDs((arr) => arr.concat(ids));\n\n  useEffect(\n    () =>\n      getAcceptedMemories(\n        addMemories,\n        handleTokenChange,\n        addMemoryIDs,\n        nextToken\n      ),\n    []\n  );\n\n  function GetThumbnailGrid() {\n    if (memories.length > 0) {\n      const thumbnailGrid = (\n        <GridView\n          create={false}\n          memories={memories}\n          nextToken={nextToken}\n          handleMoreClick={() =>\n            getAcceptedMemories(\n              addMemories,\n              handleTokenChange,\n              addMemoryIDs,\n              nextToken\n            )\n          }\n          handleImageLoad={picLoaded}\n          handleClick={handleClick}\n        />\n      );\n      setGrid(thumbnailGrid);\n    } else {\n      setGrid(<NoMemories message=\"No shared memories right now.\" />);\n    }\n  }\n\n  useEffect(() => GetThumbnailGrid(), [memories, nextToken]);\n\n  return memories.length === memoryIDs.length && count >= memoryIDs.length ? (\n    grid\n  ) : (\n    <>\n      <MemoryGrid>\n        {memoryIDs.map((memory) => (\n          <MemoryItemLoading memory={memory} />\n        ))}\n      </MemoryGrid>\n\n      <Box component=\"div\" sx={{ display: 'none' }}>\n        {grid}\n      </Box>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nexport default function ActionButton({ label, handleClick, color, disabled }) {\n  return (\n    <Button\n      variant=\"contained\"\n      color={color}\n      sx={{ m: 1 }}\n      onClick={handleClick}\n      disabled={disabled}\n    >\n      <Typography variant=\"h6\">{label}</Typography>\n    </Button>\n  );\n}\n\nActionButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  color: PropTypes.string.isRequired,\n  disabled: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\nimport { ProfileAvatar } from './profile';\n\nexport default function OwnerInfo({ name, email, picture }) {\n  return (\n    <Stack\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{ width: '100%' }}\n    >\n      <ProfileAvatar name={name} email={email} picture={picture} />\n      <Typography variant=\"h6\" sx={{ px: 1 }}>\n        {name}\n      </Typography>\n    </Stack>\n  );\n}\n\nOwnerInfo.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardActionArea from '@mui/material/CardActionArea';\n\nexport default function ReviewCard({ handleClick, children }) {\n  return (\n    <CardActionArea onClick={handleClick} sx={{ display: 'flex' }}>\n      <Card\n        elevation={0}\n        sx={{\n          bgcolor: '#fff',\n          borderRadius: 5,\n          position: 'relative',\n          maxWidth: '700px',\n          width: '95%',\n        }}\n      >\n        {children}\n      </Card>\n    </CardActionArea>\n  );\n}\n\nReviewCard.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Typography from '@mui/material/Typography';\nimport ReviewCard from './ReviewCard';\n\nfunction ReviewImage({ imageSrc, imageSrcSet, title, handleImageLoad }) {\n  return (\n    <CardMedia\n      component=\"img\"\n      src={imageSrc}\n      srcSet={imageSrcSet}\n      alt={title}\n      sx={{\n        borderColor: 'muted.main',\n        borderRadius: 4,\n        textAlign: 'center',\n        objectFit: 'cover',\n        height: {\n          lg: 400,\n          sm: 350,\n          xs: 350,\n        },\n      }}\n      onLoad={handleImageLoad}\n    />\n  );\n}\n\nfunction ReviewDetails({ title, date }) {\n  return (\n    <CardContent>\n      <CardHeader\n        disableTypography\n        title={\n          <Typography\n            noWrap\n            sx={{\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              width: { xs: 'calc(75%)', sm: 'calc(100%)' },\n              fontWeight: 600,\n            }}\n          >\n            {title}\n          </Typography>\n        }\n        subheader={<Typography sx={{ color: 'muted.main' }}>{date}</Typography>}\n        sx={{\n          padding: 0,\n          color: 'faded.black',\n        }}\n      />\n    </CardContent>\n  );\n}\n\nexport default function ReviewItem({\n  title,\n  date,\n  thumbnailImage,\n  thumbnailImageSrcSet,\n  handleClick,\n  handleImageLoad,\n}) {\n  return (\n    <ReviewCard handleClick={handleClick}>\n      <ReviewImage\n        imageSrc={thumbnailImage}\n        imageSrcSet={thumbnailImageSrcSet}\n        title={title}\n        handleImageLoad={handleImageLoad}\n      />\n      <ReviewDetails title={title} date={date} />\n    </ReviewCard>\n  );\n}\n\nReviewDetails.defaultProps = {\n  title: '',\n  date: '',\n};\n\nReviewDetails.propTypes = {\n  title: PropTypes.string,\n  date: PropTypes.string,\n};\n\nReviewImage.defaultProps = {\n  title: 'Review Image',\n  imageSrc: '',\n  imageSrcSet: '',\n  handleImageLoad: () => {},\n};\n\nReviewImage.propTypes = {\n  title: PropTypes.string,\n  imageSrc: PropTypes.string,\n  imageSrcSet: PropTypes.string,\n  handleImageLoad: PropTypes.func,\n};\n\nReviewItem.defaultProps = {\n  title: '',\n  date: '',\n  thumbnailImageSrcSet: '',\n  handleImageLoad: () => {},\n};\n\nReviewItem.propTypes = {\n  title: PropTypes.string,\n  date: PropTypes.string,\n  thumbnailImage: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  thumbnailImageSrcSet: PropTypes.string,\n  handleImageLoad: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport ActionButton from 'components/ActionButton';\nimport OwnerInfo from 'components/OwnerInfo';\nimport SimpleSnackbar from 'components/simple_snackbar';\nimport Skeleton from '@mui/material/Skeleton';\nimport imageLoading from 'static/images/image-loading.png';\nimport commonUtils from 'utils';\nimport NoMemories from 'components/NoMemories';\nimport ReviewItem from 'components/ReviewItem';\n\nimport memoryapi from 'api/memory';\n\nconst getThumbnailSrcSet = (thumbnailImage) => {\n  const srcSetList = thumbnailImage.images\n    ? thumbnailImage.images.map(({ src, width }) => `${src} ${width}w`)\n    : [];\n  return srcSetList.join(',');\n};\n\nasync function getReviewMemory(\n  handleThumbnailCallback,\n  handleMemoryCallback,\n  handleCountCallback,\n  memoryID = ''\n) {\n  try {\n    const resp = await memoryapi.getPendingMemories(memoryID);\n    if (resp) {\n      handleCountCallback(resp.count);\n      if (resp.memory) {\n        handleMemoryCallback(resp.memory);\n        const thumbnail = await memoryapi.getPendingThumbnails(resp.memory);\n        handleThumbnailCallback(thumbnail);\n      }\n    }\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nasync function acceptMemory(memoryID, handleAcceptCallback) {\n  try {\n    const userInfo = commonUtils.getUserInfo();\n    const resp = await memoryapi.acceptShare(memoryID, userInfo.email);\n    handleAcceptCallback(resp);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nasync function rejectMemory(memoryID, handleRejectCallback) {\n  try {\n    const userInfo = commonUtils.getUserInfo();\n    const resp = await memoryapi.rejectShare(memoryID, userInfo.email);\n    handleRejectCallback(resp);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nexport default function ReviewMemories({ memoryID }) {\n  const [count, setCount] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [, setMemID] = useState(null);\n  const [pendingMemory, setPendingMemory] = useState(null);\n  const [grid, setGrid] = useState(null);\n\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  const [accepting, setAccepting] = useState(false);\n  const [rejecting, setRejecting] = useState(false);\n  const [message, setMessage] = useState(null);\n\n  const startAccepting = () => {\n    setMessage('Accepting memory. Please wait...');\n    setAccepting(true);\n  };\n\n  const startRejecting = () => {\n    setMessage('Rejecting memory. Please wait...');\n    setRejecting(true);\n  };\n\n  const endRunning = () => {\n    setMessage(null);\n    setAccepting(false);\n    setRejecting(false);\n  };\n\n  const handleSnackMessage = (msg, error) => {\n    setSnack(true);\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const handleMemoryRemove = () => {\n    setPendingMemory(null);\n    setGrid(null);\n    getReviewMemory(setPendingMemory, setMemID, setCount, memoryID);\n  };\n\n  useEffect(\n    () => getReviewMemory(setPendingMemory, setMemID, setCount, memoryID),\n    []\n  );\n\n  const handleAcceptActionResults = (resp) => {\n    if (resp.ok) {\n      handleSnackMessage('Memory share accepted', false);\n      setLoaded(false);\n      handleMemoryRemove();\n    } else {\n      handleSnackMessage('Error while accepting memory share', true);\n    }\n  };\n\n  const handleRejectActionResults = (resp) => {\n    if (resp.ok) {\n      handleSnackMessage('Memory share rejected', false);\n      setLoaded(false);\n      handleMemoryRemove();\n    } else {\n      handleSnackMessage('Error while rejecting memory share', true);\n    }\n  };\n\n  const handleAccept = () => {\n    startAccepting();\n    acceptMemory(pendingMemory.thumbnail.memory_id, handleAcceptActionResults);\n    endRunning();\n  };\n\n  const handleReject = () => {\n    startRejecting();\n    rejectMemory(pendingMemory.thumbnail.memory_id, handleRejectActionResults);\n    endRunning();\n  };\n\n  const handleImageLoad = () => setLoaded(true);\n\n  if (count === 0 && grid === null) {\n    setGrid(<NoMemories message=\"Nothing to review right now.\" />);\n  }\n\n  function ReviewCarousel() {\n    if (pendingMemory !== null) {\n      const rc = (\n        <Box\n          sx={{\n            display: 'flex',\n            width: '100%',\n            backgroundColor: 'transparent',\n            backgroundSize: 'cover',\n            backgroundImage: 'linear-gradient(white, #0e516a)',\n            justifyContent: 'center',\n          }}\n        >\n          <Stack\n            direction=\"column\"\n            alignItems=\"center\"\n            sx={{ width: '100%', my: 3 }}\n          >\n            <OwnerInfo\n              name={pendingMemory.owner_details.name || ''}\n              email={pendingMemory.owner_details.email || 'P'}\n              picture={pendingMemory.owner_details.picture || ''}\n            />\n            <Typography sx={{ mb: 2 }}>has shared a memory with you</Typography>\n            <Stack\n              key={pendingMemory.thumbnail.memory_id}\n              direction=\"column\"\n              spacing={1}\n              alignItems=\"center\"\n            >\n              <ReviewItem\n                title={pendingMemory.thumbnail.title}\n                date={pendingMemory.thumbnail.date}\n                thumbnailImage={pendingMemory.thumbnail.photo.src}\n                thumbnailImageSrcSet={getThumbnailSrcSet(\n                  pendingMemory.thumbnail.photo\n                )}\n                handleImageLoad={handleImageLoad}\n                handleClick={() => {}}\n              />\n            </Stack>\n            <Stack direction=\"row\" sx={{ m: 1 }}>\n              <ActionButton\n                label=\"Accept\"\n                color=\"primary\"\n                handleClick={handleAccept}\n                disabled={accepting || rejecting}\n              />\n              <ActionButton\n                label=\"Reject\"\n                color=\"error\"\n                handleClick={handleReject}\n                disabled={accepting || rejecting}\n              />\n            </Stack>\n          </Stack>\n        </Box>\n      );\n      setGrid(rc);\n    }\n  }\n\n  useEffect(\n    () => ReviewCarousel(),\n    [pendingMemory, memoryID, accepting, rejecting]\n  );\n\n  return (pendingMemory !== null && loaded) || count === 0 ? (\n    <>\n      {accepting === true || rejecting === true ? (\n        <Typography variant=\"h6\" sx={{ p: 2, color: 'white' }}>\n          {message}\n        </Typography>\n      ) : null}\n      {grid}\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n        error={snackError}\n      />\n    </>\n  ) : (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          width: '100%',\n          backgroundColor: 'transparent',\n          backgroundSize: 'cover',\n          backgroundImage: 'linear-gradient(white, #0e516a)',\n          justifyContent: 'center',\n        }}\n      >\n        <Stack\n          direction=\"column\"\n          alignItems=\"center\"\n          sx={{ width: '100%', my: 3 }}\n        >\n          <OwnerInfo\n            name={<Skeleton type=\"rectangular\" sx={{ width: '35%' }} />}\n            email=\"P\"\n            picture=\"\"\n          />\n          <Typography sx={{ mb: 2 }}>has shared a memory with you</Typography>\n          <Stack\n            key=\"loading\"\n            direction=\"column\"\n            spacing={1}\n            alignItems=\"center\"\n          >\n            <ReviewItem\n              title=\"\"\n              date=\"\"\n              thumbnailImage={imageLoading}\n              thumbnailImageSrcSet=\"\"\n              handleImageLoad={() => {}}\n              handleClick={() => {}}\n            />\n          </Stack>\n          <Stack direction=\"row\" sx={{ m: 1 }}>\n            <ActionButton\n              label=\"Accept\"\n              color=\"primary\"\n              handleClick={() => {}}\n              disabled\n            />\n            <ActionButton\n              label=\"Reject\"\n              color=\"error\"\n              handleClick={() => {}}\n              disabled\n            />\n          </Stack>\n        </Stack>\n      </Box>\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n        error={snackError}\n      />\n      <Box component=\"div\" sx={{ display: 'none' }}>\n        {grid}\n      </Box>\n    </>\n  );\n}\n\nReviewMemories.defaultProps = {\n  memoryID: '',\n};\n\nReviewMemories.propTypes = {\n  memoryID: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport Stack from '@mui/material/Stack';\n\nimport BasePage from '../base_page';\nimport OwnMemories from './Own';\nimport SharedMemories from './Shared';\nimport ReviewMemories from './Review';\n\nfunction MemoryModes({ mode, handleChange }) {\n  return (\n    <Stack\n      direction=\"row\"\n      justifyContent=\"center\"\n      sx={{ py: 1, backgroundColor: 'button.main' }}\n    >\n      <ToggleButtonGroup\n        color=\"primary\"\n        value={mode}\n        exclusive\n        aria-label=\"Memory Modes\"\n      >\n        <ToggleButton\n          value=\"own\"\n          sx={{ borderRadius: '30px' }}\n          onClick={handleChange}\n        >\n          My Memories\n        </ToggleButton>\n        <ToggleButton value=\"shared\" onClick={handleChange}>\n          Shared With Me\n        </ToggleButton>\n        <ToggleButton\n          value=\"review\"\n          sx={{ borderRadius: '30px' }}\n          onClick={handleChange}\n        >\n          Review\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Stack>\n  );\n}\n\nfunction MemoryModeContent({ mode, memoryID }) {\n  if (mode === 'own') {\n    return <OwnMemories />;\n  }\n\n  if (mode === 'shared') {\n    return <SharedMemories />;\n  }\n\n  if (mode === 'review') {\n    return <ReviewMemories memoryID={memoryID} />;\n  }\n}\n\nexport default function Memories({ initMode }) {\n  const params = useParams();\n  const { memoryMode } = params;\n  const [searchParams] = useSearchParams();\n  const [mode, setMode] = useState(initMode);\n\n  useEffect(() => {\n    if (memoryMode) {\n      setMode(memoryMode);\n    } else {\n      setMode(initMode);\n    }\n  }, [memoryMode, initMode]);\n\n  const handleChange = (event, newMode) => {\n    setMode(newMode);\n  };\n\n  return (\n    <BasePage create>\n      <Stack direction=\"column\">\n        <MemoryModes mode={mode} handleChange={handleChange} />\n        <MemoryModeContent\n          mode={mode}\n          memoryID={searchParams.get('memoryID')}\n        />\n      </Stack>\n    </BasePage>\n  );\n}\n\nMemories.propTypes = {\n  initMode: PropTypes.string.isRequired,\n};\n\nMemoryModes.propTypes = {\n  mode: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nMemoryModeContent.defaultProps = {\n  memoryID: '',\n};\n\nMemoryModeContent.propTypes = {\n  mode: PropTypes.string.isRequired,\n  memoryID: PropTypes.string,\n};\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;"],"names":["CreateMemoryItem","message","handleClick","belowmd","useMediaQuery","theme","breakpoints","down","item","lg","md","sm","xs","sx","p","variant","color","bgcolor","borderRadius","borderColor","position","bottom","left","border","fontSize","top","transform","ThumbnailImage","imageSrc","imageSrcSet","title","handleImageLoad","component","src","srcSet","alt","textAlign","objectFit","height","onLoad","ThumbnailDetails","date","avatar","shared","disableTypography","noWrap","overflow","textOverflow","width","fontWeight","label","size","subheader","padding","MemoryThumbnail","thumbnailImage","thumbnailImageSrcSet","defaultProps","MemoryThumbnailCard","children","onClick","elevation","MemoryItemLoading","memory","Grid","Skeleton","type","imageLoading","MemoryGrid","container","py","justifyContent","alignItems","LoadMore","handleMoreClick","Typography","GridView","memories","nextToken","create","navigate","useNavigate","sortedMemories","sort","a","b","memory_id","length","CreateItem","map","owner","name","picture","email","photo","images","join","getMemories","handleMemoryCallback","handleTokenCallback","handleThumbnailCallback","memoryapi","resp","Promise","all","thumbnails","next_continuation_token","console","log","OwnMemories","useState","setNextToken","memoryIDs","setMemoryIDs","setMemories","count","setCount","grid","setGrid","memDetails","state","picLoaded","cnt","handleTokenChange","newToken","addMemories","details","arr","concat","addMemoryIDs","ids","useEffect","Box","display","NoMemories","Stack","direction","maxWidth","right","fill","pb","Button","getAcceptedMemories","SharedMemories","detail","thumbnail","owner_details","ActionButton","disabled","m","OwnerInfo","px","ReviewCard","CardActionArea","Card","ReviewImage","CardMedia","ReviewDetails","CardContent","CardHeader","ReviewItem","getReviewMemory","handleCountCallback","memoryID","handleAcceptCallback","userInfo","commonUtils","handleRejectCallback","ReviewMemories","loaded","setLoaded","setMemID","pendingMemory","setPendingMemory","snack","setSnack","snackMessage","setSnackMessage","snackError","setSnackError","accepting","setAccepting","rejecting","setRejecting","setMessage","endRunning","handleSnackMessage","msg","error","handleSnackBarClose","handleMemoryRemove","handleAcceptActionResults","ok","handleRejectActionResults","handleAccept","acceptMemory","handleReject","rejectMemory","rc","backgroundColor","backgroundSize","backgroundImage","my","mb","spacing","ReviewCarousel","snackBarOpen","onClose","MemoryModes","mode","handleChange","ToggleButtonGroup","value","exclusive","ToggleButton","MemoryModeContent","Memories","initMode","memoryMode","useParams","useSearchParams","searchParams","setMode","event","newMode","get","getSkeletonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","styled","overridesResolver","props","styles","ownerState","root","animation","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","getUnit","shape","radiusValue","toUnitless","_extends","vars","palette","bg","alpha","text","primary","marginTop","marginBottom","transformOrigin","Math","round","content","visibility","css","action","hover","React","inProps","ref","useThemeProps","className","style","other","_objectWithoutPropertiesLoose","Boolean","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx"],"sourceRoot":""}