{"version":3,"file":"static/js/782.cf02b376.chunk.js","mappings":"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","sources":["components/OptionsButton.jsx","components/AddPhotos.jsx","db.js","hooks/indexedDBState.jsx","components/collage/helpers.js","components/collage/node.jsx","components/collage/binaryTree.jsx","components/collage/Collage.jsx","components/collage/CollagePreview.jsx","components/collage/CollageControls.jsx","components/collage/CollageMakerHeader.jsx","components/collage/CollageActions.jsx","components/collage/CollageSwipeableDrawer.jsx","components/collage/TextControl.jsx","components/collage/PaddingControl.jsx","components/collage/RadiusControl.jsx","components/collage/ColorControl.jsx","components/collage/EditControl.jsx","components/collage/DownloadDialog.jsx","pages/collage/CollageMaker.jsx","hooks/imageCount.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\n\nexport default function OptionsButton({\n  children, onClick, name,\n}) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: 'muted.main',\n        borderRadius: 15,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: 'muted.main',\n          backgroundColor: 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  //  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport OptionsButton from 'components/OptionsButton';\n\nexport default function AddPhotos({ handleChange }) {\n  return (\n    <OptionsButton name=\"add\">\n      <input type=\"file\" hidden multiple accept=\"image/*\" onChange={handleChange} />\n      <AddPhotoIcon sx={{ fontSize: '2rem' }} />\n      Add Images\n    </OptionsButton>\n  );\n}\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import Dexie from 'dexie';\n\nconst collageDB = new Dexie('collage');\n\ncollageDB.version(1).stores({\n  images: 'title, url,naturalWidth,naturalHeight,aspectRatio', // Primary key and indexed props\n  originalImages: 'title, url,naturalWidth,naturalHeight,aspectRatio', // Primary key and indexed props\n  imgCount: 'count',\n});\n\nexport default { collageDB };\n","import { useState, useEffect } from 'react';\nimport db from 'db';\n\nexport default function useIndexedDBState(tableName, initialValue, loadingCallback = () => {}) {\n  const [value, setValue] = useState(initialValue);\n\n  useEffect(() => {\n    async function setDataFromDB() {\n      loadingCallback(true);\n      const rows = await db.collageDB[tableName].toArray();\n      loadingCallback(false);\n      if (rows.length) setValue(rows);\n    }\n    setDataFromDB();\n  }, []);\n\n  const addToDB = (data) => data.forEach((d) => db.collageDB[tableName].put(d));\n\n  useEffect(() => addToDB(value), [value]);\n\n  return [value, setValue];\n}\n","function getClosest(arr, index1, index2, target) {\n  if (target - arr[index1] >= arr[index2] - target) return index2;\n  return index1;\n}\n\nfunction findClosest(arr, target) {\n  const n = arr.length;\n\n  if (target <= arr[0]) return 0;\n  if (target >= arr[n - 1]) return n - 1;\n\n  let start = 0; let end = n; let\n    mid = 0;\n  while (start < end) {\n    mid = (start + end) / 2;\n\n    if (arr[mid] === target) return mid;\n\n    if (target < arr[mid]) {\n      if (mid > 0 && target > arr[mid - 1]) return getClosest(arr, mid - 1, mid, target);\n      end = mid;\n    } else {\n      if (mid < n - 1 && target < arr[mid + 1]) return getClosest(arr, mid, mid + 1, target);\n      start = mid + 1;\n    }\n  }\n\n  return mid;\n}\n\nfunction getCut() {\n  const cutArr = ['v', 'h'];\n  return cutArr[Math.round(Math.random())];\n}\n\nfunction findImgPair(arr, target) {\n  let start = 0; let\n    end = arr.length - 1;\n  let i = start; let\n    j = end;\n  let minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n  while (start <= end) {\n    if ((arr[start] + arr[end]) > target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        // update fetched pair and matching cost\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      end -= 1;\n    } else if ((arr[start] + arr[end]) <= target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      start += 1;\n    } else {\n      // best pair (m === 0) found\n      i = start;\n      j = end;\n      break;\n    }\n  }\n  // console.log(\"pair\", i, j);\n  const randomNumber = Math.round(Math.random());\n  if (randomNumber) return [i, j];\n  return [j, i];\n}\n\nfunction getAspectRatio(cut, ar1, ar2) {\n  if (cut === 'v') return ar1 + ar2;\n  return (ar1 * ar2) / (ar1 + ar2);\n}\n\nfunction downscaleImage(image, newWidth, newHeight, fileType) {\n  const canvas = document.createElement('canvas');\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, newWidth, newHeight);\n  return canvas.toDataURL(fileType);\n}\n\nfunction resizeImages(originalImages, maxWidth, handleImages, addImagesToDB) {\n  const tempImages = [];\n  originalImages.forEach((origImage) => {\n    const image = new Image();\n    image.onload = () => {\n      const { title, aspectRatio, type } = origImage;\n      const dataurl = downscaleImage(image, maxWidth, maxWidth / aspectRatio, origImage.type);\n      const tempImage = {\n        title,\n        src: dataurl,\n        naturalHeight: maxWidth / aspectRatio,\n        naturalWidth: maxWidth,\n        aspectRatio,\n        type,\n      };\n      tempImages.push(tempImage);\n      handleImages((imgs) => {\n        const ind = imgs.findIndex((elem) => elem.title === origImage.title);\n        return [...imgs.slice(0, ind), tempImage, ...imgs.slice(ind + 1)];\n      });\n      addImagesToDB(tempImage);\n    };\n    image.src = origImage.src;\n  });\n}\n\nfunction convertBase64(file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\n\nfunction handleImageLoad(event, maxWidth, handleImageCount, handleImageData) {\n  if (event.target.files) {\n    handleImageCount((cnt) => cnt + event.target.files.length);\n    const files = Array.from(event.target.files);\n    files.forEach(async (file) => {\n      const image = new Image();\n      image.onload = (e) => {\n        const { naturalWidth, naturalHeight, src } = e.target;\n        const title = `${Date.now()}-${file.name}`;\n        const aspectRatio = naturalWidth / naturalHeight;\n\n        const dataurl = downscaleImage(image, maxWidth, maxWidth / aspectRatio, file.type);\n        const originalImageDetail = {\n          title, src, naturalHeight, naturalWidth, aspectRatio, type: file.type,\n        };\n        const imageDetail = {\n          title,\n          src: dataurl,\n          naturalHeight: maxWidth / aspectRatio,\n          naturalWidth: maxWidth,\n          aspectRatio,\n          type: file.type,\n        };\n        handleImageData(imageDetail, originalImageDetail);\n      };\n      image.src = await convertBase64(file);\n    });\n    files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n  }\n}\n\nexport default {\n  getCut, findClosest, findImgPair, getAspectRatio, handleImageLoad, resizeImages,\n};\n","import Box from '@mui/material/Box';\n//  import Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Tooltip from '@mui/material/Tooltip';\nimport { alpha } from '@mui/material/styles';\nimport helpers from 'components/collage/helpers';\n\nexport default class Node {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n\n  display() {\n    let output = [];\n    const { cut, title, aspectRatio } = this.value;\n    if (this === null) return null;\n    if ('cut' in this.value) output.push([cut, aspectRatio]);\n    if ('title' in this.value) output.push([title, aspectRatio]);\n    if (this.left !== null) output = output.concat(this.left.display());\n    if (this.right !== null) output = output.concat(this.right.display());\n    return output;\n  }\n\n  copy() {\n    if (this === null) return null;\n    const copyNode = new Node({ ...this.value });\n    if (this.left != null) copyNode.left = this.left.copy();\n    if (this.right != null) copyNode.right = this.right.copy();\n    return copyNode;\n  }\n\n  replaceImages(newImages) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const findIndex = newImages.findIndex((elem) => elem.title === this.value.title);\n        const origImage = newImages[findIndex];\n        this.value.src = origImage.src;\n        this.value.naturalWidth = origImage.naturalWidth;\n        this.value.naturalHeight = origImage.naturalHeight;\n      }\n      if (this.left != null) this.left.replaceImages(newImages);\n      if (this.right != null) this.right.replaceImages(newImages);\n    }\n  }\n\n  RenderImage(padding, borderRadius, delImg, handleRemoveImage, yOffset, xOffset) {\n    //  console.log('in render image', this.value.title, delImg);\n    const {\n      width, title, src, /* x, y, */\n    } = this.value;\n\n    //  const newX = x + xOffset;\n    //  const newY = y + yOffset;\n\n    return (\n      <>\n        <Box\n          key={title}\n          component=\"img\"\n          title={title}\n          alt={title}\n          width={width}\n          src={src}\n          sx={{\n            position: 'absolute',\n            padding: `${padding}px`,\n            borderRadius: `${borderRadius}px`,\n            left: this.value.x + xOffset,\n            top: this.value.y + yOffset,\n          }}\n        />\n        {/*\n        <Typography\n          sx={{\n            position: 'absolute',\n            top: this.value.y - 5 + yOffset + this.value.height,\n            left: this.value.x + 2 + xOffset,\n            backgroundColor: 'white',\n            fontSize: '15px',\n            transform: 'translate(0, -100%)',\n          }}\n        >\n          {newX.toFixed(2)}\n          ,\n          {newY.toFixed(2)}\n        </Typography>\n        <Typography\n        sx={{\n          position: 'absolute', top: this.value.y + 30 + yOffset,\n          left: this.value.x + 2 + xOffset, backgroundColor: 'white',\n        }}\n        >\n        {width.toFixed(2)}\n        ,\n        {height.toFixed(2)}\n        </Typography>\n        <Typography\n        sx={{\n          position: 'absolute', bottom: 38, right: 10, backgroundColor: 'white',\n          fontSize: '0.5rem', fontWeight: 700,\n        }}\n        >\n        {title}\n        </Typography>\n      */}\n\n        { (delImg === true) ? (\n          <Tooltip title=\"Remove Image\">\n            <IconButton\n              size=\"medium\"\n              sx={{\n                color: alpha('#000', 0.7),\n                bgcolor: alpha('#fff', 0.4),\n                position: 'absolute',\n                top: this.value.y + 5 + yOffset,\n                left: this.value.x + this.value.width,\n                padding: 0,\n                px: '4px',\n                borderRadius: '5px 0 0 5px',\n                transform: 'translate(-100%)',\n              }}\n              onClick={() => handleRemoveImage(title)}\n            >\n              <DeleteIcon size=\"medium\" />\n            </IconButton>\n          </Tooltip>\n        ) : null }\n      </>\n    );\n  }\n\n  DOMDisplay(padding, borderRadius, delImg, handleRemoveImage, yOffset, xOffset) {\n    const { cut } = this.value;\n    if (this === null) return null;\n    if (cut) {\n      return (\n        <>\n          {this.left.DOMDisplay(padding, borderRadius, delImg, handleRemoveImage, yOffset, xOffset)}\n          {\n            this.right.DOMDisplay(\n              padding,\n              borderRadius,\n              delImg,\n              handleRemoveImage,\n              yOffset,\n              xOffset,\n            )\n          }\n        </>\n      );\n    }\n    if ('title' in this.value) return this.RenderImage(padding, borderRadius, delImg, handleRemoveImage, yOffset, xOffset);\n    return null;\n  }\n\n  ResizeImage(image) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = this.value.naturalWidth;\n    tempCanvas.height = this.value.naturalHeight;\n    const tempCtx = tempCanvas.getContext('2d');\n    let width = this.value.naturalWidth;\n    let height = this.value.naturalHeight;\n    let newWidth;\n    let newHeight;\n    const scaleFactor = Math.floor(\n      Math.log2(this.value.naturalWidth / this.value.width),\n    );\n    //  console.log('scalefactor', scaleFactor, this.value.naturalWidth, this.value.width,\n    //  this.value.naturalHeight, this.value.height);\n    if (scaleFactor === 0) {\n      tempCtx.drawImage(image, 0, 0, width, height, 0, 0, this.value.width, this.value.height);\n    } else {\n      for (let i = 0; i < scaleFactor; i += 1) {\n        newWidth = width >> 1; // eslint-disable-line no-bitwise\n        newHeight = newWidth / this.value.aspectRatio; // eslint-disable-line no-bitwise\n        if (i === 0) {\n          tempCtx.drawImage(image, 0, 0, width, height, 0, 0, newWidth, newHeight);\n        } else {\n          tempCtx.drawImage(tempCanvas, 0, 0, width, height, 0, 0, newWidth, newHeight);\n        }\n        width = newWidth;\n        height = newHeight;\n      }\n\n      //  console.log('last scale down', width, height, this.value.width, this.value.height);\n      tempCtx.drawImage(\n        tempCanvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height,\n      );\n    }\n    return tempCanvas;\n  }\n\n  ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset) {\n    const x = this.value.x + padding + xOffset;\n    const y = this.value.y + padding + yOffset;\n    const clipwidth = this.value.width - 2 * padding;\n    const clipheight = clipwidth / this.value.aspectRatio;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + clipwidth - radius, y);\n    ctx.quadraticCurveTo(x + clipwidth, y, x + clipwidth, y + radius);\n    ctx.lineTo(x + clipwidth, y + clipheight - radius);\n    ctx.quadraticCurveTo(\n      x + clipwidth,\n      y + clipheight,\n      x + clipwidth - radius,\n      y + clipheight,\n    );\n    ctx.lineTo(x + radius, y + clipheight);\n    ctx.quadraticCurveTo(x, y + clipheight, x, y + clipheight - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.clip();\n\n    ctx.drawImage(\n      tempCanvas,\n      0,\n      0,\n      this.value.width,\n      this.value.height,\n      x,\n      y,\n      clipwidth,\n      clipheight,\n    );\n    ctx.restore();\n  }\n\n  CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset) {\n    if ('cut' in this.value) {\n      this.left.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n      this.right.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n    }\n\n    if ('title' in this.value) {\n      const ctx = canvasElement.getContext('2d');\n      const newImg = new Image();\n      newImg.onload = () => {\n        const tempCanvas = this.ResizeImage(newImg);\n        const tempCtx = tempCanvas.getContext('2d');\n        //  console.log('image styling', this.value.title, this.value.x + xOffset,\n        //  this.value.y + yOffset);\n        this.ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset);\n        tempCtx.clearRect(0, 0, tempCanvas.width, tempCanvas.height);\n      };\n      newImg.src = this.value.src;\n    }\n  }\n\n  generate(images, tar, imageCount) {\n    //  console.log('in generate', images, tar, imageCount);\n    const targetAspectRatioArr = images.map(\n      (image) => image.naturalWidth / image.naturalHeight,\n    );\n    if (imageCount < 1) return [];\n    if (imageCount === 1) {\n      const closestIndex = helpers.findClosest(targetAspectRatioArr, tar);\n      this.value = images[closestIndex];\n      this.left = null;\n      this.right = null;\n      return [\n        ...images.slice(0, closestIndex),\n        ...images.slice(closestIndex + 1),\n      ];\n    }\n\n    const cut = helpers.getCut();\n    this.value = { cut, targetAspectRatio: tar };\n    if (imageCount === 2) {\n      const [leftIndex, rightIndex] = helpers.findImgPair(\n        targetAspectRatioArr,\n        tar,\n      );\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        images[leftIndex].aspectRatio,\n        images[rightIndex].aspectRatio,\n      );\n      this.left = new Node(images[leftIndex]);\n      this.right = new Node(images[rightIndex]);\n      return images.filter(\n        (item, index) => ![leftIndex, rightIndex].includes(index),\n      );\n    }\n\n    let restImages;\n    let targetAspectRatio;\n    this.left = new Node({ cut: helpers.getCut() });\n    this.right = new Node({ cut: helpers.getCut() });\n    //  this.right = new Node({ cut: this.left.value.cut === 'v' ? 'h' : 'v' });\n\n    if (cut === 'v') {\n      targetAspectRatio = tar * 2;\n    } else {\n      targetAspectRatio = tar / 2;\n    }\n\n    restImages = this.left.generate(\n      images,\n      targetAspectRatio,\n      imageCount - Math.floor(imageCount / 2),\n    );\n    restImages = this.right.generate(\n      restImages,\n      targetAspectRatio,\n      Math.floor(imageCount / 2),\n    );\n\n    this.value.aspectRatio = helpers.getAspectRatio(\n      this.value.cut,\n      this.left.value.aspectRatio,\n      this.right.value.aspectRatio,\n    );\n\n    return restImages;\n  }\n\n  adjust(th) {\n    let adjustments = 0;\n    if (this === null) return adjustments;\n\n    if (this.left !== null && this.right !== null) {\n      // console.log(\"node is non leaf\", this);\n      if (this.value.aspectRatio > this.value.targetAspectRatio * th) {\n        // console.log(\"aspectRatio is more\");\n        this.value.cut = 'h';\n        adjustments += 1;\n      }\n      if (this.value.aspectRatio < this.value.targetAspectRatio / th) {\n        // console.log(\"aspectRatio is less\");\n        this.value.cut = 'v';\n        adjustments += 1;\n      }\n\n      if (this.value.cut === 'v') {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n      } else {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n      }\n      adjustments += this.left.adjust(th) + this.right.adjust(th);\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        this.left.value.aspectRatio,\n        this.right.value.aspectRatio,\n      );\n    }\n\n    // console.log(\"adjustments\", adjustments);\n    return adjustments;\n  }\n\n  addSize(parentWidth, parentHeight, parentX, parentY, parentCut, nodeType) {\n    if (parentCut === 'v') {\n      this.value.height = parentHeight;\n      this.value.width = this.value.height * this.value.aspectRatio;\n    } else {\n      this.value.width = parentWidth;\n      this.value.height = this.value.width / this.value.aspectRatio;\n    }\n\n    if ('title' in this.value) {\n      //  console.log(\n      //  this.value.title,\n      //  this.value.height,\n      //  this.value.naturalHeight,\n      //  this.value.width,\n      //  this.value.naturalWidth,\n      //  );\n    }\n\n    if (nodeType === 'left') {\n      this.value.x = parentX;\n      this.value.y = parentY;\n    } else if (parentCut === 'h') {\n      this.value.y = parentY + parentHeight - this.value.height;\n      this.value.x = parentX;\n    } else {\n      this.value.x = parentX + parentWidth - this.value.width;\n      this.value.y = parentY;\n    }\n\n    if (this.left !== null) {\n      this.left.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'left',\n      );\n    }\n    if (this.right !== null) {\n      this.right.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'right',\n      );\n    }\n  }\n}\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\nimport Node from './node';\n\nexport default class BinaryTree {\n  constructor(value) {\n    if (this.root === undefined) {\n      this.root = new Node(value);\n      return this;\n    }\n  }\n\n  display() {\n    if (this.root !== null) {\n      return this.root.display();\n    }\n    return null;\n  }\n\n  replaceImages(newImages) {\n    if (this.root !== null) {\n      this.root.replaceImages(newImages);\n    }\n  }\n\n  DOMDisplay(\n    topText,\n    imageWidth,\n    imageHeight,\n    canvasWidth,\n    canvasHeight,\n    padding,\n    borderRadius,\n    backColor,\n    text,\n    delImg,\n    handleRemoveImage,\n  ) {\n    let yOffset = (imageHeight - this.root.value.height) / 2;\n    const xOffset = (canvasWidth - this.root.value.width) / 2;\n    if (topText && text.length > 0) yOffset += 50;\n    let collageText;\n    if (text.length > 0 && topText) {\n      collageText = (\n        <Typography\n          sx={{\n            width: '100%',\n            position: 'absolute',\n            top: 5,\n            left: '50%',\n            transform: 'translate(-50%, 0)',\n            bgcolor: alpha('#1c1c1c', 0.7),\n            padding: 1,\n            color: 'button.main',\n            margin: 'auto',\n            textAlign: 'center',\n            display: 'inline-block',\n          }}\n        >\n          {text}\n        </Typography>\n      );\n    }\n\n    if (text.length > 0 && !topText) {\n      collageText = (\n        <Typography\n          sx={{\n            width: '100%',\n            position: 'absolute',\n            bottom: 5,\n            left: '50%',\n            transform: 'translate(-50%, 0)',\n            bgcolor: alpha('#1c1c1c', 0.7),\n            padding: 1,\n            color: 'button.main',\n            margin: 'auto',\n            textAlign: 'center',\n            display: 'inline-block',\n          }}\n        >\n          {text}\n        </Typography>\n      );\n    }\n    if (this.root !== null) {\n      return (\n        <Box\n          width={canvasWidth}\n          height={canvasHeight}\n          sx={{\n            position: 'relative',\n            backgroundColor: backColor,\n            outline: '1px solid white',\n          }}\n        >\n          {this.root.DOMDisplay(\n            padding,\n            borderRadius,\n            delImg,\n            handleRemoveImage,\n            yOffset,\n            xOffset,\n          )}\n          {collageText}\n        </Box>\n      );\n    }\n    return null;\n  }\n\n  CanvasDisplay(\n    canvasWidth,\n    imageHeight,\n    canvasElement,\n    padding,\n    borderRadius,\n    backColor,\n    text,\n    topText,\n    scaleFactor,\n  ) {\n    //  console.log(topText);\n    if (this.root !== null) {\n      let yOffset = (imageHeight - this.root.value.height) / 2;\n      const xOffset = (canvasWidth - this.root.value.width) / 2;\n      if (topText && text.length > 0) yOffset += 50;\n      const ctx = canvasElement.getContext('2d');\n      //  console.log('canvas 2d context', ctx);\n      ctx.fillStyle = backColor;\n      ctx.textAlign = 'center';\n      //  console.log(\n      //  'canvas dimensions',\n      //  canvasElement.width,\n      //  canvasElement.height,\n      //  );\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      this.root.CanvasDisplay(\n        canvasElement,\n        padding,\n        borderRadius,\n        yOffset,\n        xOffset,\n      );\n      if (text.length > 0) {\n        ctx.fillStyle = '#1c1c1cb3';\n        ctx.fillRect(\n          0,\n          canvasElement.height - 34 * scaleFactor,\n          canvasElement.width,\n          24 * scaleFactor,\n        );\n        //  console.log(text, canvasElement.width / 2, canvasElement.height - 5);\n        ctx.font = `${scaleFactor}rem Arial`;\n        ctx.fillStyle = 'white';\n        ctx.shadowColor = 'transparent';\n        if (topText) {\n          ctx.fillText(text, canvasElement.width / 2, 13 * scaleFactor);\n        } else {\n          ctx.fillText(text, canvasElement.width / 2, canvasElement.height - 13 * scaleFactor);\n        }\n      }\n    }\n  }\n\n  generateCollageTree(images, tar) {\n    //  console.log('In generate collage tree', images, tar);\n    this.root.generate(images, tar, images.length);\n  }\n\n  adjust(th) {\n    //  console.log('In adjust');\n    let trys = 0;\n    let bestAdjust = this.copy();\n    let bestAspectRatio = this.root.value.aspectRatio;\n    const tolerableDifference = this.root.value.targetAspectRatio * (1 - th);\n    let ajstCnt = 1000;\n    while (trys < 100 && ajstCnt > 0) {\n      //  console.log(trys, ajstCnt, bestAspectRatio);\n      ajstCnt = this.root.adjust(th);\n      trys += 1;\n      const diff = this.root.value.aspectRatio - this.root.value.targetAspectRatio;\n      if (\n        (diff > 0 && this.root.value.aspectRatio < bestAspectRatio)\n        || (bestAspectRatio < this.root.value.targetAspectRatio\n          && this.root.value.aspectRatio > this.root.value.targetAspectRatio)\n      ) {\n        bestAspectRatio = this.root.value.aspectRatio;\n        bestAdjust = this.copy();\n      }\n      if ((diff > 0 && diff < tolerableDifference) || diff === 0) break;\n    }\n\n    return [bestAspectRatio, bestAdjust];\n  }\n\n  copy() {\n    const copyTree = new BinaryTree({});\n    copyTree.root = this.root.copy();\n    return copyTree;\n  }\n\n  addSize(canvasWidth, canvasHeight, aspectRatio) {\n    //  console.log(\n    //  'In add size',\n    //  canvasWidth,\n    //  canvasHeight,\n    //  aspectRatio,\n    //  canvasWidth / aspectRatio,\n    //  );\n    this.root.value.width = canvasWidth;\n    this.root.value.height = canvasWidth / aspectRatio;\n    this.root.value.x = 0;\n    //  this.root.value.y = (canvasHeight - this.root.value.height) / 2;\n    this.root.value.y = 0;\n    const {\n      width, height, x, y, cut,\n    } = this.root.value;\n    if (this.root.left !== null) this.root.left.addSize(width, height, x, y, cut, 'left');\n    if (this.root.right !== null) this.root.right.addSize(width, height, x, y, cut, 'right');\n  }\n}\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport { useState, useEffect, useRef } from 'react';\nimport BinaryTree from './binaryTree';\n\nexport default function Collage({\n  paperWidth,\n  paperHeight,\n  generate,\n  generateCallback,\n  topText,\n  imageHeight,\n  imageWidth,\n  images,\n  originalImages,\n  aspectRatio,\n  canvasWidth,\n  canvasHeight,\n  tolerance,\n  padding,\n  borderRadius,\n  color,\n  text,\n  refresh,\n  handleRefresh,\n  removeImage,\n  handleRemoveImage,\n  stopRemoveImage,\n}) {\n  console.log('incollage', images, padding, imageHeight, imageWidth);\n  const canvasRef = useRef();\n  const [canvasElement, setCanvasElement] = useState(null);\n\n  const [collage, setCollage] = useState(null);\n  const [bestAspectRatio, setBestAspectRatio] = useState(null);\n  const [bestAspectRatioTree, setBestAspectRatioTree] = useState(null);\n\n  const convertToRGBA = (value) => `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\n  const showCollagePreview = (collTree) => {\n    if (collTree != null) {\n      setCollage(\n        collTree.DOMDisplay(\n          topText,\n          imageWidth,\n          imageHeight,\n          canvasWidth,\n          canvasHeight,\n          padding,\n          borderRadius,\n          convertToRGBA(color),\n          text,\n          removeImage,\n          handleRemoveImage,\n        ),\n      );\n    }\n  };\n\n  const findBestAdjustTree = () => {\n    console.log('finding best adjust tree');\n    setBestAspectRatio(null);\n    const imgTree = new BinaryTree({ cut: 'v' });\n    const sortedImages = images.sort((a, b) => (a.aspectRatio <= b.aspectRatio ? 1 : -1));\n    imgTree.generateCollageTree(sortedImages, imageWidth / imageHeight);\n\n    const [bestAR, bestAdjust] = imgTree.adjust(1 - tolerance);\n    console.log('best adjust tree', bestAdjust);\n    setBestAspectRatio(bestAR);\n    setBestAspectRatioTree(bestAdjust);\n    return [bestAR, bestAdjust];\n  };\n\n  useEffect(() => setCanvasElement(canvasRef.current), [canvasElement]);\n\n  useEffect(() => {\n    console.log('effect after render', images);\n    const [bestAR, bestAdjust] = findBestAdjustTree();\n    bestAdjust.addSize(imageWidth, imageHeight, bestAR);\n    showCollagePreview(bestAdjust);\n  }, []);\n\n  useEffect(() => {\n    setCollage(null);\n    const [bestAR, bestAdjust] = findBestAdjustTree();\n    bestAdjust.addSize(imageWidth, imageHeight, bestAR);\n    showCollagePreview(bestAdjust);\n  }, [images, aspectRatio]);\n\n  useEffect(\n    () => showCollagePreview(bestAspectRatioTree),\n    [padding, borderRadius, color, text, topText],\n  );\n\n  useEffect(() => {\n    if (bestAspectRatioTree != null) {\n      bestAspectRatioTree.addSize(imageWidth, imageHeight, bestAspectRatio);\n    }\n    showCollagePreview(bestAspectRatioTree);\n  }, [imageWidth, imageHeight]);\n\n  const getTextHeight = () => {\n    if (text.length === 0) return 0;\n    return (50 * paperHeight) / canvasHeight;\n  };\n\n  useEffect(() => {\n    const textHeight = getTextHeight();\n    const imgPrintHeight = paperHeight - textHeight;\n    const imgPrintWidth = (paperHeight - textHeight) * aspectRatio;\n    if (generate === true) {\n      const canvasTree = bestAspectRatioTree.copy();\n      canvasTree.replaceImages(originalImages);\n      canvasTree.addSize(imgPrintWidth, imgPrintHeight, bestAspectRatio);\n      canvasElement.width = paperWidth;\n      canvasElement.height = paperHeight;\n      canvasTree.CanvasDisplay(\n        paperWidth,\n        imgPrintHeight,\n        canvasElement,\n        (padding * paperWidth) / canvasWidth,\n        (borderRadius * paperWidth) / canvasWidth,\n        convertToRGBA(color),\n        text,\n        topText,\n        paperWidth / canvasWidth,\n      );\n\n      setTimeout(() => {\n        canvasRef.current.toBlob((blob) => {\n          const link = document.createElement('a');\n          link.download = `collage-${paperWidth}X${paperHeight}-${Date.now()}.png`;\n          link.href = URL.createObjectURL(blob);\n          link.click();\n          URL.revokeObjectURL(link.href);\n          link.href = null;\n          generateCallback();\n        });\n      }, '5000');\n    }\n  }, [generate]);\n\n  useEffect(() => {\n    if (refresh === true) {\n      console.log('refresh is true');\n      stopRemoveImage();\n      const [bestAR, bestAdjust] = findBestAdjustTree();\n      bestAdjust.addSize(imageWidth, imageHeight, bestAR);\n      showCollagePreview(bestAdjust);\n      handleRefresh();\n    }\n  }, [refresh]);\n\n  useEffect(() => showCollagePreview(bestAspectRatioTree), [removeImage]);\n\n  return (\n    <>\n      {collage || (<Typography sx={{ color: 'white' }}>Creating collage layout...</Typography>)}\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\n    </>\n  );\n}\n\nCollage.propTypes = {\n  paperWidth: PropTypes.number.isRequired,\n  paperHeight: PropTypes.number.isRequired,\n  tolerance: PropTypes.number.isRequired,\n  generate: PropTypes.bool.isRequired,\n  generateCallback: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  imageWidth: PropTypes.number.isRequired,\n  imageHeight: PropTypes.number.isRequired,\n  aspectRatio: PropTypes.number.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      src: PropTypes.string.isRequired,\n      naturalHeight: PropTypes.number.isRequired,\n      naturalWidth: PropTypes.number.isRequired,\n      aspectRatio: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  originalImages: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      src: PropTypes.string.isRequired,\n      naturalHeight: PropTypes.number.isRequired,\n      naturalWidth: PropTypes.number.isRequired,\n      aspectRatio: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  padding: PropTypes.number.isRequired,\n  borderRadius: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  refresh: PropTypes.bool.isRequired,\n  handleRefresh: PropTypes.func.isRequired,\n  handleRemoveImage: PropTypes.func.isRequired,\n  removeImage: PropTypes.bool.isRequired,\n  stopRemoveImage: PropTypes.func.isRequired,\n  canvasWidth: PropTypes.number.isRequired,\n  canvasHeight: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nimport AddPhotos from 'components/AddPhotos';\nimport Collage from 'components/collage/Collage';\nimport collageBack from 'static/images/back_blur.webp';\n\nexport default function CollagePreview({\n  paperWidth,\n  paperHeight,\n  generate,\n  generateCallback,\n  topText,\n  imageWidth,\n  imageHeight,\n  aspectRatio,\n  images,\n  originalImages,\n  imgCount,\n  padding,\n  radius,\n  text,\n  color,\n  width,\n  height,\n  refresh,\n  handleRefresh,\n  removeImage,\n  stopRemoveImage,\n  handleLoad,\n  handleRemoveImage,\n}) {\n  const tolerance = 0.1;\n\n  //  console.log(images.length, imgCount);\n  if ((images.length === 0) || (imageHeight === 0)) {\n    return (\n      <>\n        <Box\n          sx={{\n            width,\n            height,\n            //  border: '2px solid white',\n            position: 'relative',\n            backgroundImage: `url(${collageBack})`,\n            backgroundSize: width,\n            objectFit: 'contain',\n            backgroundRepeat: 'no-repeat',\n            alignItems: 'center',\n          }}\n        >\n          <Box\n            sx={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n            }}\n          >\n            <AddPhotos handleChange={handleLoad} />\n          </Box>\n        </Box>\n      </>\n    );\n  }\n\n  if (images.length > 0 && images.length === imgCount) {\n    //  console.log('rendering collage', images);\n    return (\n      <Collage\n        paperWidth={paperWidth}\n        paperHeight={paperHeight}\n        generate={generate}\n        generateCallback={generateCallback}\n        topText={topText}\n        imageHeight={imageHeight}\n        imageWidth={imageWidth}\n        images={images}\n        originalImages={originalImages}\n        aspectRatio={aspectRatio}\n        canvasWidth={width}\n        canvasHeight={height}\n        padding={padding}\n        borderRadius={radius}\n        tolerance={tolerance}\n        text={text}\n        color={color}\n        refresh={refresh}\n        handleRefresh={handleRefresh}\n        removeImage={removeImage}\n        handleRemoveImage={handleRemoveImage}\n        stopRemoveImage={stopRemoveImage}\n      />\n    );\n  }\n\n  return (\n    <Typography sx={{ color: 'white' }}>\n      Loading (\n      {images.length}\n      {' '}\n      /\n      {imgCount}\n      ) images...\n    </Typography>\n  );\n}\n\nCollagePreview.propTypes = {\n  paperWidth: PropTypes.number.isRequired,\n  paperHeight: PropTypes.number.isRequired,\n  generate: PropTypes.bool.isRequired,\n  generateCallback: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  imageWidth: PropTypes.number.isRequired,\n  imageHeight: PropTypes.number.isRequired,\n  aspectRatio: PropTypes.number.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      src: PropTypes.string.isRequired,\n      naturalHeight: PropTypes.number.isRequired,\n      naturalWidth: PropTypes.number.isRequired,\n      aspectRatio: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  originalImages: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      src: PropTypes.string.isRequired,\n      naturalHeight: PropTypes.number.isRequired,\n      naturalWidth: PropTypes.number.isRequired,\n      aspectRatio: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  padding: PropTypes.number.isRequired,\n  radius: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  imgCount: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  refresh: PropTypes.bool.isRequired,\n  handleRefresh: PropTypes.func.isRequired,\n  handleLoad: PropTypes.func.isRequired,\n  removeImage: PropTypes.bool.isRequired,\n  stopRemoveImage: PropTypes.func.isRequired,\n  handleRemoveImage: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport TitleIcon from '@mui/icons-material/Title';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\n\nexport default function CollageControls({\n  controlsRef, onRefresh, onDelete, onAdd, onText, onEdit, clearDelete,\n}) {\n  const [value, setValue] = useState();\n\n  const handleChange = (event, newValue) => {\n    console.log(newValue);\n    clearDelete();\n    setValue(newValue);\n    if (newValue === 'refresh') {\n      onRefresh();\n    } else if (newValue === 'delete') {\n      onDelete();\n    } else if (newValue === 'add') {\n      console.log(event);\n      onAdd();\n    } else if (newValue === 'text') {\n      console.log(event);\n      onText();\n    } else if (newValue === 'edit') {\n      console.log(event);\n      onEdit();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  return (\n    <Paper\n      ref={controlsRef}\n      sx={{\n        position: 'fixed', bottom: 0, left: 0, right: 0, mt: 1, backgroundColor: 'black', borderRadius: 0,\n      }}\n      elevation={4}\n    >\n      <BottomNavigation showLabels value={value} onChange={handleChange} sx={{ fontWeight: 'bold', backgroundColor: alpha('#fff', 0.2) }}>\n        <BottomNavigationAction label=\"Refresh\" value=\"refresh\" icon={<RefreshIcon />} sx={{ fontWeight: 'bold', color: 'gray' }} />\n        <BottomNavigationAction label=\"Delete\" value=\"delete\" icon={<DeleteIcon />} sx={{ fontWeight: 'bold', color: 'gray' }} />\n        <BottomNavigationAction label=\"Edit\" value=\"edit\" icon={<EditIcon />} sx={{ fontWeight: 'bold', color: 'gray' }} />\n        <BottomNavigationAction label=\"Add\" value=\"add\" icon={<AddPhotoAlternateIcon />} sx={{ fontWeight: 'bold', color: 'gray' }} />\n        <BottomNavigationAction label=\"Text\" value=\"text\" icon={<TitleIcon />} sx={{ fontWeight: 'bold', color: 'gray' }} />\n      </BottomNavigation>\n    </Paper>\n  );\n}\n\nCollageControls.propTypes = {\n  controlsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  onText: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Paper from '@mui/material/Paper';\nimport { Typography, Box, Link } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { alpha } from '@mui/material/styles';\n\nexport default function CollageMakerHeader({ headerRef }) {\n  return (\n    <Paper\n      ref={headerRef}\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        p: 1,\n        backgroundColor: alpha('#fff', 0.1),\n        borderRadius: 0,\n\n      }}\n      elevation={3}\n    >\n      <Box sx={{ position: 'absolute', left: '5px' }}>\n        <Link href=\"/collages\" color=\"muted.main\" underline=\"none\">\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <ArrowBackIcon />\n          </Box>\n        </Link>\n      </Box>\n      <Typography\n        variant=\"h4\"\n        component=\"h4\"\n        sx={{ color: alpha('#fff', 0.5) }}\n      >\n        Collage Maker\n      </Typography>\n    </Paper>\n  );\n}\n\nCollageMakerHeader.propTypes = {\n  headerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n//  import Paper from '@mui/material/Paper';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport { alpha } from '@mui/material/styles';\n\nexport default function CollageActions({ actionsRef, onDownload }) {\n  const [value, setValue] = useState();\n\n  const handleChange = (event, newValue) => {\n    console.log(newValue);\n    setValue(newValue);\n    if (newValue === 'download') {\n      onDownload();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  return (\n    <BottomNavigation\n      ref={actionsRef}\n      showLabels\n      value={value}\n      onChange={handleChange}\n      sx={{ py: 1, fontWeight: 'bold', backgroundColor: alpha('#fff', 0.2) }}\n    >\n      <BottomNavigationAction\n        label=\"Save\"\n        value=\"save\"\n        icon={<SaveIcon />}\n        sx={{ fontWeight: 'bold', color: 'gray' }}\n      />\n      <BottomNavigationAction\n        label=\"Download\"\n        value=\"download\"\n        icon={<DownloadIcon />}\n        sx={{ fontWeight: 'bold', color: 'gray' }}\n      />\n      <BottomNavigationAction\n        label=\"Print\"\n        value=\"print\"\n        icon={<PrintIcon />}\n        sx={{ fontWeight: 'bold', color: 'gray' }}\n      />\n    </BottomNavigation>\n  );\n}\n\nCollageActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  //  onDelete: PropTypes.func.isRequired,\n  //  onAdd: PropTypes.func.isRequired,\n  //  onText: PropTypes.func.isRequired,\n  //  onEdit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { grey } from '@mui/material/colors';\nimport Box from '@mui/material/Box';\nimport Skeleton from '@mui/material/Skeleton';\nimport Typography from '@mui/material/Typography';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\n\nconst drawerBleeding = 56;\n\nconst Puller = ({ anchor }) => (\n  <Box\n    sx={{\n      width: 30,\n      height: 6,\n      backgroundColor: grey[300],\n      borderRadius: 3,\n      position: 'absolute',\n      [anchor === 'top' ? 'bottom' : 'top']: 8,\n      left: 'calc(50% - 15px)',\n    }}\n  />\n);\n\nexport default function CollageSwipeableDrawer({\n  anchor,\n  open,\n  title,\n  toggleDrawer,\n  drawerChild,\n}) {\n  return (\n    <Box>\n      <CssBaseline />\n      <SwipeableDrawer\n        anchor={anchor}\n        open={open}\n        onClose={toggleDrawer}\n        onOpen={toggleDrawer}\n        swipeAreaWidth={drawerBleeding}\n        disableSwipeToOpen={false}\n        ModalProps={{\n          keepMounted: false,\n        }}\n        PaperProps={{\n          sx: {\n            borderRadius: anchor === 'top' ? '0 0 15px 15px' : '15px 15px 0 0',\n            backgroundColor: 'black',\n          },\n        }}\n      >\n        <Box\n          sx={{\n            visibility: open ? 'visible' : 'hidden',\n            backgroundColor: alpha('#fff', 0.1),\n          }}\n        >\n          <Puller anchor={anchor} />\n          <Typography\n            sx={{\n              pt: 3,\n              pb: 1,\n              color: 'gray',\n              fontWeight: 'bold',\n              textAlign: 'center',\n            }}\n          >\n            {title}\n          </Typography>\n        </Box>\n        {drawerChild || (\n          <Box\n            sx={{\n              px: 2,\n              pb: 2,\n              height: '100%',\n              overflow: 'auto',\n            }}\n          >\n            <Skeleton variant=\"rectangular\" height=\"50px\" />\n          </Box>\n        )}\n      </SwipeableDrawer>\n    </Box>\n  );\n}\n\nPuller.propTypes = {\n  anchor: PropTypes.string.isRequired,\n};\n\nCollageSwipeableDrawer.propTypes = {\n  open: PropTypes.bool.isRequired,\n  anchor: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  toggleDrawer: PropTypes.func.isRequired,\n  drawerChild: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function TextControl({\n  text, handleTextChange, topText, handlePositionChange,\n}) {\n  const [collageTextError] = useState('');\n  return (\n    <Box sx={{ px: 1, backgroundColor: alpha('#fff', 0.2) }}>\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={2}>\n        <Typography sx={{ fontWeight: 'bold', color: 'gray' }}> Collage Text </Typography>\n        <FormGroup row>\n          <FormLabel label=\"Position\" />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={topText === false}\n                onChange={() => handlePositionChange(false)}\n              />\n            )}\n            label=\"Bottom\"\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={topText === true}\n                onChange={() => handlePositionChange(true)}\n              />\n            )}\n            label=\"Top\"\n          />\n        </FormGroup>\n      </Stack>\n      <TextField\n        variant=\"outlined\"\n        label=\"\"\n        defaultValue={text}\n        onChange={handleTextChange}\n        sx={{ width: '100%', mb: 2 }}\n        InputProps={{ sx: { backgroundColor: 'white' } }}\n        helperText={collageTextError || 'E.g. Marriage Anniversary 2018'}\n        error={!!collageTextError}\n      />\n\n    </Box>\n  );\n}\n\nTextControl.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  handlePositionChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\n\nexport default function PaddingControl({ padding, handlePaddingChange }) {\n  return (\n    <>\n      <Typography sx={{ fontWeight: 'bold', color: 'gray' }}>Padding</Typography>\n      <Slider\n        aria-label=\"Temperature\"\n        defaultValue={0}\n        value={padding}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={0}\n        max={10}\n        size=\"large\"\n        onChange={handlePaddingChange}\n        sx={{ color: 'white' }}\n      />\n    </>\n  );\n}\n\nPaddingControl.propTypes = {\n  padding: PropTypes.number.isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\n\nexport default function RadiusControl({ radius, handleRadiusChange }) {\n  return (\n    <>\n      <Typography sx={{ fontWeight: 'bold', color: 'gray' }}>\n        Border Radius\n      </Typography>\n      <Slider\n        aria-label=\"Temperature\"\n        defaultValue={0}\n        value={radius}\n        valueLabelDisplay=\"auto\"\n        step={5}\n        marks\n        min={0}\n        max={40}\n        onChange={handleRadiusChange}\n        sx={{ color: 'white' }}\n      />\n    </>\n  );\n}\n\nRadiusControl.propTypes = {\n  radius: PropTypes.number.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { ChromePicker } from 'react-color';\n\nexport default function ColorControl({\n  color,\n  displayColorPicker,\n  handleClick,\n  handleClose,\n  handleChange,\n}) {\n  console.log(color, displayColorPicker);\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      spacing={2}\n      sx={{ my: 2 }}\n    >\n      <Typography sx={{ fontWeight: 'bold', color: 'gray' }}>\n        Background Color\n      </Typography>\n      <Box\n        component=\"div\"\n        sx={{\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        }}\n        onClick={handleClick}\n      >\n        <Box\n          component=\"div\"\n          sx={{\n            width: '72px',\n            height: '28px',\n            borderRadius: '2px',\n            background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n          }}\n        />\n      </Box>\n      {displayColorPicker ? (\n        <Box\n          component=\"div\"\n          sx={{\n            position: 'absolute',\n            zIndex: '2',\n          }}\n        >\n          <Box\n            component=\"div\"\n            sx={{\n              position: 'fixed',\n              top: '0px',\n              right: '0px',\n              bottom: '50px',\n              left: '0px',\n            }}\n            onClick={handleClose}\n          />\n          <ChromePicker color={color} onChange={handleChange} />\n        </Box>\n      ) : null}\n    </Stack>\n  );\n}\n\nColorControl.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport ColorControl from 'components/collage/ColorControl';\n\nexport default function EditControl({\n  padding,\n  handlePaddingChange,\n  color,\n  displayColorPicker,\n  handleColorChange,\n  handleClose,\n  handleClick,\n  radius,\n  handleRadiusChange,\n}) {\n  return (\n    <Box sx={{ p: 2, backgroundColor: alpha('#fff', 0.2) }}>\n      <PaddingControl\n        padding={padding}\n        handlePaddingChange={handlePaddingChange}\n      />\n      <ColorControl\n        color={color}\n        displayColorPicker={displayColorPicker}\n        handleChange={handleColorChange}\n        handleClose={handleClose}\n        handleClick={handleClick}\n      />\n      <RadiusControl radius={radius} handleRadiusChange={handleRadiusChange} />\n    </Box>\n  );\n}\n\nEditControl.propTypes = {\n  padding: PropTypes.number.isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleColorChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  radius: PropTypes.number.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Authenticate from 'hocs/require-authentication';\n\nexport default function DownloadDialog({\n  open, onClick, onClose, sizes,\n}) {\n  const [value, setValue] = useState('');\n  const handleDownload = () => {\n    console.log(sizes[value].width, sizes[value].height, onClick);\n    onClick(sizes[value].width, sizes[value].height);\n    setValue('');\n  };\n\n  const handleClose = () => {\n    setValue('');\n    onClose();\n  };\n\n  return (\n    <Authenticate>\n      <Dialog open={open} fullWidth>\n        <DialogTitle sx={{ textAlign: 'center' }}>Download Collage</DialogTitle>\n        <DialogContent dividers sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n          <DialogContentText sx={{ display: 'inline', pr: 1 }}>Choose collage size</DialogContentText>\n          <FormControl fullWidth sx={{ maxWidth: '60%' }}>\n            <InputLabel id=\"demo-simple-select-label\">Download Size</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              defaultValue=\"A4\"\n              value={value}\n              label=\"Download Size\"\n              onChange={(event) => setValue(event.target.value)}\n            >\n              {\n              Object.keys(sizes).map((key) => (\n                <MenuItem key={sizes[key].text} value={key}>{sizes[key].text}</MenuItem>\n              ))\n            }\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"outlined\" disabled={value.length === 0} onClick={handleDownload}>Download</Button>\n          <Button variant=\"text\" onClick={handleClose}>Cancel</Button>\n        </DialogActions>\n      </Dialog>\n    </Authenticate>\n  );\n}\n\nDownloadDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport db from 'db';\nimport useIndexedDBState from 'hooks/indexedDBState';\nimport useImageCount from 'hooks/imageCount';\nimport CollagePreview from 'components/collage/CollagePreview';\nimport CollageControls from 'components/collage/CollageControls';\nimport Box from '@mui/material/Box';\n\nimport CollageMakerHeader from 'components/collage/CollageMakerHeader';\nimport CollageActions from 'components/collage/CollageActions';\nimport CollageSwipeableDrawer from 'components/collage/CollageSwipeableDrawer';\nimport TextControl from 'components/collage/TextControl';\nimport EditControl from 'components/collage/EditControl';\nimport DownloadDialog from 'components/collage/DownloadDialog';\nimport Loading from 'components/Loading';\nimport helpers from 'components/collage/helpers';\n\nfunction CollageMaker() {\n  const resizeImageWidth = 1500;\n  const paperSizes = {\n    A4: { width: 2480, height: 3508, text: '8 X 11 inches' },\n    A3: { width: 3508, height: 4961, text: '11 X 16 inches' },\n  };\n  const headerRef = useRef();\n  const actionsRef = useRef();\n  const footerRef = useRef();\n  const aspectRatio = 0.7;\n  const addImageRef = useRef();\n  const textHeight = 50;\n\n  const [loading, setLoading] = useState(false);\n  const [images, setImages] = useIndexedDBState('images', [], setLoading);\n  const [\n    originalImages,\n    setOriginalImages,\n  ] = useIndexedDBState('originalImages', []);\n\n  const [imgCount, setImageCount, addImageCountToDB] = useImageCount('imgCount', 0);\n\n  const [color, setColor] = useState({\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 1,\n  });\n  const [paperWidth, setPaperWidth] = useState(0);\n  const [paperHeight, setPaperHeight] = useState(0);\n  const [generate, setGenerate] = useState(false);\n  const [padding, setPadding] = useState(2);\n  const [radius, setRadius] = useState(5);\n  const [text, setText] = useState('');\n  const [topText, setTopText] = useState(false);\n\n  const [height, setHeight] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [imageWidth, setImageWidth] = useState(0);\n  const [controlsOpen, setControlsOpen] = useState(false);\n  const [title, setTitle] = useState('');\n  const [refresh, setRefresh] = useState(false);\n  const [removeImage, setRemoveImage] = useState(false);\n  const [width, setWidth] = useState(0);\n  const [maxHeight, setMaxHeight] = useState(0);\n  const [maxWidth, setMaxWidth] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n  const [drawerChild, setDrawerChild] = useState(null);\n\n  const toggleDrawer = () => {\n    if (controlsOpen) {\n      setDrawerChild(null);\n      setTitle('');\n    }\n    setControlsOpen((val) => !val);\n  };\n\n  const getCollageDimension = (maxW, maxH, a) => {\n    const origAR = maxW / maxH;\n    console.log('in get collage dimensions', maxW, maxH, a, origAR);\n    if (origAR < a) return [maxW, maxW / a];\n    if (origAR > a) return [maxH * a, maxH];\n    return [maxW, maxH];\n  };\n\n  const setDimensions = () => {\n    let otherHeight;\n    setMaxWidth(window.innerWidth);\n    setMaxHeight(window.innerHeight - otherHeight);\n    if (headerRef.current && actionsRef.current && footerRef.current) {\n      console.log('changing other height', headerRef.current, actionsRef.current, footerRef.current);\n      const headerHeight = headerRef.current.offsetHeight;\n      const actionsHeight = actionsRef.current.offsetHeight;\n      const footerHeight = footerRef.current.offsetHeight;\n      otherHeight = headerHeight + actionsHeight + footerHeight;\n    }\n    const [w, h] = getCollageDimension(\n      window.innerWidth,\n      window.innerHeight - otherHeight,\n      aspectRatio,\n    );\n    setWidth(w);\n    setHeight(h);\n  };\n\n  useEffect(() => {\n    db.collageDB.imgCount.clear();\n    addImageCountToDB(imgCount);\n  }, [imgCount]);\n\n  useEffect(() => setDimensions(), [window.innerHeight, window.innerWidth]);\n\n  const handleRemoveImage = (imgTitle) => {\n    const removeIndex = images.findIndex((elem) => elem.title === imgTitle);\n    setImages([...images.slice(0, removeIndex), ...images.slice(removeIndex + 1)]);\n    setImageCount((cnt) => cnt - 1);\n    db.collageDB.images.delete(imgTitle);\n    db.collageDB.originalImages.delete(imgTitle);\n  };\n\n  const handleImageData = (imageDetail, originalImageDetail) => {\n    setOriginalImages((arr) => arr.concat([originalImageDetail]));\n    //  addOriginalImagesToDB(originalImageDetail);\n    setImages((arr) => arr.concat([imageDetail]));\n    //  addImagesToDB(imageDetail);\n  };\n\n  const handleLoad = (event) => {\n    helpers.handleImageLoad(event, resizeImageWidth, setImageCount, handleImageData);\n  };\n\n  const handleImageAddClick = () => {\n    if (addImageRef.current) addImageRef.current.click();\n  };\n\n  const handlePaddingChange = (e) => setPadding(e.target.value);\n  const handleRadiusChange = (e) => setRadius(e.target.value);\n  const handleClick = () => setDisplayColorPicker((dcp) => !dcp);\n  const handleClose = () => setDisplayColorPicker(false);\n  const handleColorChange = (clr) => setColor(clr.rgb);\n\n  const handleTextChange = (e) => {\n    const { target } = e;\n    setText(target.value);\n    if (target.value.length > 0) {\n      setImageWidth((height - textHeight) * aspectRatio);\n      setImageHeight(height - textHeight);\n    } else {\n      setImageWidth(width);\n      setImageHeight(height);\n    }\n  };\n\n  const textControl = () => (\n    <TextControl\n      text={text}\n      handleTextChange={handleTextChange}\n      topText={topText}\n      handlePositionChange={setTopText}\n    />\n  );\n\n  const handleText = () => {\n    setTitle('Add Text');\n    setControlsOpen(true);\n    setDrawerChild(textControl);\n  };\n\n  const editControl = () => (\n    <EditControl\n      padding={padding}\n      handlePaddingChange={handlePaddingChange}\n      color={color}\n      displayColorPicker={displayColorPicker}\n      handleColorChange={handleColorChange}\n      handleClose={handleClose}\n      handleClick={handleClick}\n      radius={radius}\n      handleRadiusChange={handleRadiusChange}\n    />\n  );\n\n  const handleEdit = () => {\n    setTitle('Edit Collage');\n    setControlsOpen(true);\n    setDrawerChild(editControl);\n  };\n\n  const handleDownload = () => setOpen(true);\n  const onDownloadClose = () => setOpen(false);\n  const onDownloadClick = (w, h) => {\n    setPaperWidth(w);\n    setPaperHeight(h);\n    setGenerate(true);\n    setOpen(false);\n  };\n\n  const handleGenerateCallback = () => {\n    setGenerate(false);\n    setPaperWidth(0);\n    setPaperHeight(0);\n  };\n\n  useEffect(() => setDrawerChild(textControl), [text, topText]);\n  useEffect(() => {\n    setDimensions();\n    window.addEventListener('resize', setDimensions);\n\n    return () => window.removeEventListener('resize', setDimensions);\n  }, []);\n\n  useEffect(() => {\n    if (text.length > 0) {\n      setImageWidth((height - textHeight) * aspectRatio);\n      setImageHeight(height - textHeight);\n    } else {\n      setTopText(false);\n      setImageWidth(width);\n      setImageHeight(height);\n    }\n  }, [width, height, text]);\n\n  useEffect(() => setDrawerChild(editControl), [padding, radius, color, displayColorPicker]);\n\n  console.log(\n    originalImages.length,\n    images,\n    imgCount,\n    padding,\n    color,\n    generate,\n    imageWidth,\n    imageHeight,\n    width,\n    height,\n    maxWidth,\n    maxHeight,\n    headerRef.current?.offsetHeight,\n    actionsRef.current?.offsetHeight,\n    footerRef.current?.offsetHeight,\n  );\n\n  if (loading) {\n    return <Loading title=\"Loading images. Please wait\" />;\n  }\n\n  return (\n    <Box component=\"div\" sx={{ backgroundColor: 'black' }}>\n      <CollageMakerHeader headerRef={headerRef} />\n      <CollageActions actionsRef={actionsRef} onDownload={handleDownload} />\n      {open\n        ? (\n          <DownloadDialog\n            open={open}\n            onClick={onDownloadClick}\n            onClose={onDownloadClose}\n            sizes={paperSizes}\n          />\n        ) : null}\n      <Box\n        width={maxWidth}\n        height={maxHeight}\n        sx={{\n          display: 'flex',\n          alignItems: controlsOpen ? 'start' : 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <CollagePreview\n          paperWidth={paperWidth}\n          paperHeight={paperHeight}\n          aspectRatio={aspectRatio}\n          color={color}\n          generate={generate}\n          generateCallback={handleGenerateCallback}\n          handleLoad={handleLoad}\n          handleRefresh={() => setRefresh(false)}\n          height={height}\n          imageHeight={imageHeight}\n          imageWidth={imageWidth}\n          images={images}\n          originalImages={originalImages}\n          imgCount={imgCount}\n          padding={padding}\n          radius={radius}\n          refresh={refresh}\n          removeImage={removeImage}\n          stopRemoveImage={() => setRemoveImage(false)}\n          text={text}\n          topText={topText}\n          width={width}\n          handleRemoveImage={handleRemoveImage}\n        />\n      </Box>\n      <input ref={addImageRef} type=\"file\" hidden multiple accept=\"image/*\" onChange={handleLoad} />\n      {controlsOpen ? (\n        <CollageSwipeableDrawer\n          anchor=\"bottom\"\n          title={title}\n          open={controlsOpen}\n          toggleDrawer={toggleDrawer}\n          drawerChild={drawerChild}\n        />\n      ) : (\n        <CollageControls\n          controlsRef={footerRef}\n          onRefresh={() => setRefresh(true)}\n          onDelete={() => setRemoveImage(true)}\n          onAdd={handleImageAddClick}\n          onText={handleText}\n          onEdit={handleEdit}\n          clearDelete={() => setRemoveImage(false)}\n        />\n      )}\n      {generate ? <Loading title=\"Creating collage ...\" /> : null}\n    </Box>\n  );\n}\n\nexport default CollageMaker;\n","import { useState, useEffect } from 'react';\nimport db from 'db';\n\nexport default function useImageCount(tableName, initialValue) {\n  const [value, setValue] = useState(initialValue);\n\n  useEffect(() => {\n    async function setDataFromDB() {\n      const rows = await db.collageDB[tableName].toArray();\n      console.log('rows data', rows, tableName);\n      if (rows.length) setValue(rows[0].count);\n    }\n    setDataFromDB();\n  }, []);\n\n  const addToDB = (data) => {\n    console.log('data', data, tableName);\n    db.collageDB[tableName].put({ count: data });\n  };\n\n  return [value, setValue, addToDB];\n}\n"],"names":["OptionsButton","children","onClick","name","Button","id","variant","component","sx","color","borderRadius","backgroundColor","padding","AddPhotos","handleChange","type","hidden","multiple","accept","onChange","fontSize","defaultProps","collageDB","Dexie","version","stores","images","originalImages","imgCount","useIndexedDBState","tableName","initialValue","loadingCallback","useState","value","setValue","useEffect","db","toArray","rows","length","setDataFromDB","addToDB","data","forEach","d","put","getClosest","arr","index1","index2","target","downscaleImage","image","newWidth","newHeight","fileType","canvas","document","createElement","width","height","getContext","drawImage","toDataURL","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","getCut","Math","round","random","findClosest","n","start","end","mid","findImgPair","i","j","minMatchingCost","abs","getAspectRatio","cut","ar1","ar2","handleImageLoad","event","maxWidth","handleImageCount","handleImageData","files","cnt","Array","from","Image","e","naturalWidth","naturalHeight","src","title","Date","now","aspectRatio","dataurl","originalImageDetail","imageDetail","map","URL","revokeObjectURL","resizeImages","handleImages","addImagesToDB","tempImages","origImage","tempImage","push","imgs","ind","findIndex","elem","slice","Node","this","left","right","output","concat","display","copyNode","copy","newImages","replaceImages","delImg","handleRemoveImage","yOffset","xOffset","Box","alt","position","x","top","y","Tooltip","IconButton","size","alpha","bgcolor","px","transform","Delete","DOMDisplay","RenderImage","tempCanvas","tempCtx","scaleFactor","floor","log2","ctx","radius","clipwidth","clipheight","save","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","canvasElement","CanvasDisplay","newImg","ResizeImage","ImageStyling","clearRect","tar","imageCount","targetAspectRatioArr","closestIndex","helpers","restImages","targetAspectRatio","leftIndex","rightIndex","filter","item","index","includes","generate","th","adjustments","adjust","parentWidth","parentHeight","parentX","parentY","parentCut","nodeType","addSize","BinaryTree","undefined","root","topText","imageWidth","imageHeight","canvasWidth","canvasHeight","backColor","text","collageText","Typography","margin","textAlign","bottom","outline","fillStyle","fillRect","font","shadowColor","fillText","trys","bestAdjust","bestAspectRatio","tolerableDifference","ajstCnt","diff","copyTree","Collage","paperWidth","paperHeight","generateCallback","tolerance","refresh","handleRefresh","removeImage","stopRemoveImage","console","log","canvasRef","useRef","setCanvasElement","collage","setCollage","setBestAspectRatio","bestAspectRatioTree","setBestAspectRatioTree","convertToRGBA","r","g","b","a","showCollagePreview","collTree","findBestAdjustTree","imgTree","sortedImages","sort","generateCollageTree","bestAR","current","textHeight","imgPrintHeight","imgPrintWidth","canvasTree","setTimeout","toBlob","blob","link","download","href","createObjectURL","click","ref","style","CollagePreview","handleLoad","backgroundImage","collageBack","backgroundSize","objectFit","backgroundRepeat","alignItems","CollageControls","controlsRef","onRefresh","onDelete","onAdd","onText","onEdit","clearDelete","Paper","mt","elevation","BottomNavigation","showLabels","newValue","fontWeight","BottomNavigationAction","label","icon","Refresh","Edit","AddPhotoAlternate","Title","CollageMakerHeader","headerRef","justifyContent","p","Link","underline","ArrowBack","CollageActions","actionsRef","onDownload","py","Save","Download","Print","Puller","anchor","grey","CollageSwipeableDrawer","open","toggleDrawer","drawerChild","CssBaseline","SwipeableDrawer","onClose","onOpen","swipeAreaWidth","disableSwipeToOpen","ModalProps","keepMounted","PaperProps","visibility","pt","pb","overflow","Skeleton","TextControl","handleTextChange","handlePositionChange","collageTextError","Stack","direction","spacing","FormGroup","row","FormLabel","FormControlLabel","control","Checkbox","checked","TextField","defaultValue","mb","InputProps","helperText","PaddingControl","handlePaddingChange","Slider","valueLabelDisplay","step","marks","min","max","RadiusControl","handleRadiusChange","ColorControl","displayColorPicker","handleClick","handleClose","my","background","boxShadow","cursor","zIndex","EditControl","handleColorChange","DownloadDialog","sizes","Dialog","fullWidth","DialogTitle","DialogContent","dividers","DialogContentText","pr","FormControl","InputLabel","Select","labelId","Object","keys","key","MenuItem","DialogActions","disabled","footerRef","addImageRef","loading","setImages","setOriginalImages","count","useImageCount","setImageCount","addImageCountToDB","setColor","setPaperWidth","setPaperHeight","setGenerate","setPadding","setRadius","setText","setTopText","setHeight","setImageHeight","setImageWidth","controlsOpen","setControlsOpen","setTitle","setRefresh","setRemoveImage","setWidth","maxHeight","setMaxHeight","setMaxWidth","setOpen","setDisplayColorPicker","setDrawerChild","setDimensions","otherHeight","window","innerWidth","innerHeight","offsetHeight","maxW","maxH","origAR","getCollageDimension","w","h","clear","dcp","clr","rgb","textControl","editControl","addEventListener","removeEventListener","Loading","A4","A3","imgTitle","removeIndex","val"],"sourceRoot":""}