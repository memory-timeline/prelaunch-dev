{"version":3,"file":"static/js/616.803c891d.chunk.js","mappings":"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","sources":["api/collage.jsx","api/helpers.js","components/OptionsButton.jsx","components/AddPhotos.jsx","static/config/collage.jsx","components/collage/helpers.js","components/collage/TextDisplay.jsx","components/collage/node.jsx","components/collage/binaryTree.jsx","components/collage/treeUtils.js","components/collage/apiHelpers.js","hooks/collage/base.jsx","hooks/collage/dimensions.jsx","hooks/collage/options.jsx","hooks/collage/actions.jsx","hooks/collage/images.jsx","hooks/collage/tree.jsx","hocs/handle-error.jsx","components/collage/Collage.jsx","components/collage/DownloadDialog.jsx","components/collage/SaveDialog.jsx","components/collage/SaveStatusDialog.jsx","components/collage/Header.jsx","components/collage/EmptyCollage.jsx","components/collage/View.jsx","components/collage/DesktopActionItem.jsx","components/collage/DesktopDrawer.jsx","components/collage/ControlsDivider.jsx","components/collage/DesktopActions.jsx","components/collage/ClearCollageDialog.jsx","components/collage/DesktopControls.jsx","components/collage/DesktopImageOptions.jsx","components/collage/EditControl.jsx","components/collage/MobileActionItem.jsx","components/collage/MobileActions.jsx","components/collage/MainControls.jsx","components/collage/EditOptions.jsx","components/collage/ImageOptions.jsx","components/collage/MobileControls.jsx","components/collage/CollageType.jsx","components/collage/CollageImageCount.jsx","components/collage/CollageMetaInfo.jsx","components/collage/PaddingControl.jsx","components/collage/RadiusControl.jsx","components/collage/TextControl.jsx","components/collage/ColorControl.jsx","components/collage/CommonDialog.jsx","pages/collage/Base.jsx"],"sourcesContent":["import helpers from 'api/helpers';\n\nfunction newCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/new';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction saveCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/save';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\nasync function upload(url, body) {\n  try {\n    const params = { body, method: 'PUT' };\n    const resp = await fetch(url, params).then((response) => response);\n    return resp;\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction listCollages(nextToken) {\n  try {\n    const path = '/api/collage/list';\n    const params = { next_token: nextToken };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getThumbnail(collageId) {\n  try {\n    const path = '/api/collage/thumbnail';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getCollage(collageId) {\n  try {\n    const path = '/api/collage/get';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction deleteCollage(collageId) {\n  try {\n    const path = '/api/collage/delete';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.deleteMethod(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction checkOptimizeStatus(collageId) {\n  try {\n    const path = '/api/collage/resized-count';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\nexport default {\n  newCollage,\n  saveCollage,\n  upload,\n  listCollages,\n  getThumbnail,\n  getCollage,\n  deleteCollage,\n  checkOptimizeStatus,\n};\n","const get = async (url, path, params = {}) => {\n  let newUrl = `https://${url}${path}`;\n  const options = {\n    method: 'GET',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  newUrl += `?${new URLSearchParams(params).toString()}`;\n  const resp = await fetch(newUrl, options);\n  if (!resp.ok) {\n    if (resp.status === 401) {\n      document.cookie =\n        'userInfo=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return { status: 'unauthenticated' };\n    }\n    if (resp.status === 403) {\n      return { status: 'forbidden' };\n    }\n  }\n\n  return resp.json();\n};\n\nconst post = async (url, path, params, body) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'POST',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body,\n  };\n  return fetch(apiUrl, options).then((response) => {\n    console.log('post response', response);\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\n\nconst deleteMethod = async (url, path, params) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'DELETE',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\nexport default { get, post, deleteMethod };\n","import PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\n\nexport default function OptionsButton({ children, onClick, name }) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: 'muted.main',\n        borderRadius: 15,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: 'muted.main',\n          backgroundColor: 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  //  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport OptionsButton from 'components/OptionsButton';\nimport Typography from '@mui/material/Typography';\n\nexport default function AddPhotos({ handleChange }) {\n  return (\n    <OptionsButton name=\"add\">\n      <input\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={handleChange}\n      />\n      <AddPhotoIcon sx={{ fontSize: '2rem' }} />\n      <Typography sx={{ fontWeight: 'bold' }}>Add Images</Typography>\n    </OptionsButton>\n  );\n}\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import FacebookIcon from '@mui/icons-material/Facebook';\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\nimport InstagramIcon from '@mui/icons-material/Instagram';\nimport DescriptionIcon from '@mui/icons-material/Description';\n\nexport default {\n  defaultCollageName: 'Untitled',\n  defaultCollageType: 'A4',\n  tolerance: 0.1,\n  resizeImageWidth: 1500,\n  fontSize: 20,\n  lineHeight: 25,\n  textPadding: 20,\n  thumbnailHeight: 500,\n  maxNameLength: 20,\n  maxColllageTextLength: 40,\n  minImages: 2,\n  maxImages: 15,\n  paperSizes: {\n    A4: {\n      width: 2480,\n      height: 3508,\n      text: 'A4 Potrait',\n      icon: <DescriptionIcon sx={{ mr: 1 }} />,\n    },\n    A3: {\n      width: 3508,\n      height: 4961,\n      text: 'A3 Potrait',\n      icon: <DescriptionIcon sx={{ mr: 1 }} />,\n    },\n    A4LandScape: {\n      height: 2480,\n      width: 3508,\n      text: 'A4 LandScape',\n      icon: <DescriptionIcon sx={{ mr: 1, transform: 'rotate(90deg)' }} />,\n    },\n    A3LandScape: {\n      height: 3508,\n      width: 4961,\n      text: 'A3 LandScape',\n      icon: <DescriptionIcon sx={{ mr: 1, transform: 'rotate(90deg)' }} />,\n    },\n    FBCoverDesktop: {\n      height: 740,\n      width: 2000,\n      text: 'Cover Photo (Desktop)',\n      icon: <FacebookIcon sx={{ fill: '#3b5998', mr: 1 }} />,\n    },\n    FBCoverMobile: {\n      height: 720,\n      width: 1280,\n      text: 'Cover Photo (Mobile)',\n      icon: <FacebookIcon sx={{ fill: '#3b5998', mr: 1 }} />,\n    },\n    FBPost: {\n      height: 1260,\n      width: 2400,\n      text: 'Post',\n      icon: <FacebookIcon sx={{ fill: '#3b5998', mr: 1 }} />,\n    },\n    WhatsappStatus: {\n      height: 1920,\n      width: 1080,\n      text: 'Status',\n      icon: (\n        <WhatsAppIcon\n          sx={{\n            backgroundColor: '#25D366',\n            fill: 'white',\n            mr: 1,\n          }}\n        />\n      ),\n    },\n    InstaStory: {\n      height: 1920,\n      width: 1080,\n      text: 'Story',\n      icon: (\n        <InstagramIcon\n          sx={{\n            fill: 'white',\n            background:\n              'linear-gradient(45deg, #f09433 0%,#e6683c 25%,#dc2743 50%,#cc2366 75%,#bc1888 100%)',\n            mr: 1,\n          }}\n        />\n      ),\n    },\n  },\n};\n","import constants from 'static/config/collage';\n\nfunction textCanvasDraw(\n  ctx,\n  textArray,\n  position,\n  scaleFactor,\n  canvasWidth,\n  textHeight\n) {\n  const { fontSize, textPadding } = constants;\n  ctx.font = `${scaleFactor * fontSize}px Arial`;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'top';\n  ctx.fillStyle = '#1c1c1cb3';\n  ctx.fillRect(0, position, canvasWidth, position + textHeight);\n  ctx.fillStyle = 'white';\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const chunk of textArray) {\n    const [textPart, , y] = chunk;\n    ctx.fillText(\n      textPart,\n      canvasWidth / 2,\n      y + position + 2.5 + textPadding * scaleFactor\n    );\n  }\n}\n\nfunction getClosest(arr, index1, index2, target) {\n  if (target - arr[index1] >= arr[index2] - target) return index2;\n  return index1;\n}\n\nfunction findClosest(arr, target) {\n  const n = arr.length;\n\n  if (target <= arr[0]) return 0;\n  if (target >= arr[n - 1]) return n - 1;\n\n  let start = 0;\n  let end = n;\n  let mid = 0;\n  while (start < end) {\n    mid = (start + end) / 2;\n\n    if (arr[mid] === target) return mid;\n\n    if (target < arr[mid]) {\n      if (mid > 0 && target > arr[mid - 1])\n        return getClosest(arr, mid - 1, mid, target);\n      end = mid;\n    } else {\n      if (mid < n - 1 && target < arr[mid + 1])\n        return getClosest(arr, mid, mid + 1, target);\n      start = mid + 1;\n    }\n  }\n\n  return mid;\n}\n\nfunction getCut() {\n  const cutArr = ['v', 'h'];\n  return cutArr[Math.round(Math.random())];\n}\n\nfunction findImgPair(arr, target) {\n  let start = 0;\n  let end = arr.length - 1;\n  let i = start;\n  let j = end;\n  let minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n  while (start <= end) {\n    if (arr[start] + arr[end] > target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        // update fetched pair and matching cost\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      end -= 1;\n    } else if (arr[start] + arr[end] <= target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      start += 1;\n    } else {\n      // best pair (m === 0) found\n      i = start;\n      j = end;\n      break;\n    }\n  }\n  const randomNumber = Math.round(Math.random());\n  if (randomNumber) return [i, j];\n  return [j, i];\n}\n\nfunction getAspectRatio(cut, ar1, ar2) {\n  if (cut === 'v') return ar1 + ar2;\n  return (ar1 * ar2) / (ar1 + ar2);\n}\n\nfunction downscaleImage(image, newWidth, newHeight, fileType) {\n  const canvas = document.createElement('canvas');\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, newWidth, newHeight);\n  return canvas.toDataURL(fileType);\n}\n\n// function convertImage(image, newWidth, newHeight) {\n//   const canvas = document.createElement('canvas');\n//   canvas.width = newWidth;\n//   canvas.height = newHeight;\n//   const ctx = canvas.getContext('2d');\n//   ctx.drawImage(image, 0, 0, newWidth, newHeight);\n//   return canvas.toDataURL('image/webp');\n// }\n\nfunction optimizeImage(image, newWidth, newHeight) {\n  const canvas = document.createElement('canvas');\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, newWidth, newHeight);\n  const dataURL = canvas.toDataURL('image/webp', 0.3);\n  return dataURL;\n}\n\nfunction resizeImages(originalImages, maxWidth, handleImages, addImagesToDB) {\n  const tempImages = [];\n  originalImages.forEach((origImage) => {\n    const image = new Image();\n    image.onload = () => {\n      const { title, aspectRatio, type } = origImage;\n      const dataurl = downscaleImage(\n        image,\n        maxWidth,\n        maxWidth / aspectRatio,\n        origImage.type\n      );\n      const tempImage = {\n        title,\n        src: dataurl,\n        naturalHeight: maxWidth / aspectRatio,\n        naturalWidth: maxWidth,\n        aspectRatio,\n        type,\n      };\n      tempImages.push(tempImage);\n      handleImages((imgs) => {\n        const ind = imgs.findIndex((elem) => elem.title === origImage.title);\n        return [...imgs.slice(0, ind), tempImage, ...imgs.slice(ind + 1)];\n      });\n      addImagesToDB(tempImage);\n    };\n    image.src = origImage.src;\n  });\n}\n\nfunction convertBase64(file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\n\nfunction convertBase64String(file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsD(new Blob(file));\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\n\nasync function handleImageLoad(\n  event,\n  handleImageCount,\n  handleNewImageCount,\n  handleImageData\n) {\n  if (event.target.files) {\n    handleImageCount((cnt) => cnt + event.target.files.length);\n    handleNewImageCount(event.target.files.length);\n    const files = Array.from(event.target.files);\n    files.map(async (file) => {\n      const image = new Image();\n      image.onload = (e) => {\n        const { naturalWidth, naturalHeight, src } = e.target;\n        const title = `${Date.now()}-${file.name}`;\n        const aspectRatio = naturalWidth / naturalHeight;\n        const imageDetail = {\n          title,\n          src,\n          naturalHeight,\n          naturalWidth,\n          aspectRatio,\n          targetAspectRatio: aspectRatio,\n          type: file.type,\n          file,\n        };\n        handleImageData(imageDetail);\n      };\n      image.src = URL.createObjectURL(file);\n    });\n    files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n  }\n}\n\nfunction getCollageDimension(maxW, maxH, a) {\n  const origAR = maxW / maxH;\n  if (origAR < a) return [maxW, maxW / a];\n  if (origAR > a) return [maxH * a, maxH];\n  return [maxW, maxH];\n}\n\nfunction wrapText(text, x, y, maxWidth, fontSize, lineHeight) {\n  // First, start by splitting all of our text into words,\n  // but splitting it into an array split by spaces\n  if (text.length === 0) return [];\n  const paddingX = 1; // 8px on both sided\n  const textCanvas = document.createElement('canvas');\n  textCanvas.width = maxWidth - 2 * paddingX * 8;\n  textCanvas.height = 1000;\n  const ctx = textCanvas.getContext('2d');\n  ctx.font = `${fontSize}px Arial`;\n  ctx.textAlign = 'center';\n  const tempX = x;\n  let tempY = y;\n  const words = text.split(' ');\n  let line = ''; // This will store the text of the current line\n  let testLine = ''; // This will store the text when we add a word, to test if it's too long\n  const lineArray = []; // This is an array of lines, which the function will return\n\n  // Lets iterate over each word\n  for (let n = 0; n < words.length; n += 1) {\n    // Create a test line, and measure it..\n    testLine += `${words[n]} `;\n    const metrics = ctx.measureText(testLine);\n    const testWidth = metrics.width;\n    // If the width of this test line is more than the max width\n    if (testWidth > textCanvas.width && n > 0) {\n      // Then the line is finished, push the current line into \"lineArray\"\n      lineArray.push([line, tempX, tempY]);\n      // Increase the line height, so a new line is started\n      tempY += lineHeight;\n      // Update line and test line to use this word as the first word on the next line\n      line = `${words[n]} `;\n      testLine = `${words[n]} `;\n    } else {\n      // If the test line is still less than the max width, then add the word to the current line\n      line += `${words[n]} `;\n    }\n    // If we never reach the full max width, then there is only one line..\n    // so push it into the lineArray so we return something\n    if (n === words.length - 1) {\n      lineArray.push([line, tempX, tempY]);\n    }\n  }\n  // Return the line array\n  return lineArray;\n}\n\nfunction getTextHeight(\n  text,\n  x,\n  y,\n  maxWidth,\n  fontSize,\n  lineHeight,\n  scaleFactor\n) {\n  const { textPadding } = constants;\n  const lineArray = wrapText(\n    text,\n    x,\n    y,\n    maxWidth,\n    fontSize * scaleFactor,\n    lineHeight * scaleFactor\n  );\n  return (lineArray.length * lineHeight + 2 * textPadding) * scaleFactor;\n}\n\nfunction getImageDimensions(\n  paperWidth,\n  paperHeight,\n  text,\n  x,\n  y,\n  fontSize,\n  lineHeight,\n  scaleFactor,\n  aspectRatio\n) {\n  const textHeight = getTextHeight(\n    text,\n    x,\n    y,\n    paperWidth,\n    fontSize,\n    lineHeight,\n    scaleFactor\n  );\n  return getCollageDimension(paperWidth, paperHeight - textHeight, aspectRatio);\n}\n\nconst convertToRGBA = (value) =>\n  `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nfunction optimizeDimensions(maxPrintWidth, maxPrintHeight, problematicNodes) {\n  const ar = maxPrintWidth / maxPrintHeight;\n  const optimumTreeSizes = problematicNodes.map((pn) => {\n    const newRootWidth =\n      (maxPrintWidth * pn.value.naturalWidth) / pn.value.width;\n    const newRootHeight = newRootWidth / ar;\n    // node with highest score needs smalles tree. smallest tree will satisfy all constraints\n    const score = maxPrintWidth - newRootWidth + maxPrintHeight - newRootHeight;\n    return [score, [newRootWidth, newRootHeight]];\n  });\n  optimumTreeSizes.sort((a, b) => b[0] - a[0]);\n  return optimumTreeSizes[0][1];\n}\n\nexport default {\n  getCut,\n  findClosest,\n  findImgPair,\n  getAspectRatio,\n  handleImageLoad,\n  resizeImages,\n  wrapText,\n  convertToRGBA,\n  getCollageDimension,\n  downscaleImage,\n  convertBase64,\n  convertBase64String,\n  textCanvasDraw,\n  getTextHeight,\n  getImageDimensions,\n  optimizeDimensions,\n  optimizeImage,\n};\n","import Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { alpha } from '@mui/material/styles';\nimport constants from 'static/config/collage';\n\nexport default function TextDisplay(textArray, position, textHeight) {\n  const { fontSize, lineHeight, textPadding } = constants;\n  console.log('text display', textArray, position, textPadding);\n  return (\n    <>\n      <Stack\n        sx={{\n          height: textHeight,\n          backgroundColor: alpha('#1c1c1c', 0.7),\n          position: 'absolute',\n          top: position,\n          width: '100%',\n        }}\n      />\n      {\n        // eslint-disable-next-line react/destructuring-assignment\n        textArray.map((chunk) => (\n          <Typography\n            key={chunk[2]}\n            sx={{\n              width: '100%',\n              position: 'absolute',\n              top: position + chunk[2] + textPadding,\n              paddingX: 1,\n              color: 'button.main',\n              textAlign: 'center',\n              fontFamily: 'Arial',\n              fontSize: `${fontSize}px`,\n              lineHeight: `${lineHeight}px`,\n              letterSpacing: 'normal',\n            }}\n          >\n            {chunk[0]}\n          </Typography>\n        ))\n      }\n    </>\n  );\n}\n","import Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Tooltip from '@mui/material/Tooltip';\nimport { alpha } from '@mui/material/styles';\nimport helpers from 'components/collage/helpers';\n\nexport default class Node {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n\n  fromObject(obj) {\n    if (obj != null) {\n      this.value = obj.value;\n      if (obj.left != null) {\n        this.left = new Node(obj.left.value);\n        this.left.fromObject(obj.left);\n      }\n      if (obj.right != null) {\n        this.right = new Node(obj.right.value);\n        this.right.fromObject(obj.right);\n      }\n      return this;\n    }\n    return null;\n  }\n\n  getScore() {\n    if ('cut' in this.value) {\n      return [...this.left.getScore(), ...this.right.getScore()];\n    }\n\n    return [this.value.width + this.value.height];\n  }\n\n  display() {\n    let output = [];\n    const { cut, title, aspectRatio } = this.value;\n    if (this === null) return null;\n    if ('cut' in this.value) output.push([cut, aspectRatio]);\n    if ('title' in this.value) output.push([title, aspectRatio]);\n    if (this.left !== null) output = output.concat(this.left.display());\n    if (this.right !== null) output = output.concat(this.right.display());\n    return output;\n  }\n\n  copy() {\n    if (this === null) return null;\n    const copyNode = new Node({ ...this.value });\n    if (this.left != null) copyNode.left = this.left.copy();\n    if (this.right != null) copyNode.right = this.right.copy();\n    return copyNode;\n  }\n\n  replaceImages(newImages) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const findIndex = newImages.findIndex(\n          (elem) => elem.title === this.value.title\n        );\n        const origImage = newImages[findIndex];\n        this.value.src = origImage.src;\n      }\n      if (this.left != null) this.left.replaceImages(newImages);\n      if (this.right != null) this.right.replaceImages(newImages);\n    }\n  }\n\n  removeImageData() {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const { src, ...rest } = this.value;\n        this.value = rest;\n      }\n      if (this.left != null) this.left.removeImageData();\n      if (this.right != null) this.right.removeImageData();\n    }\n  }\n\n  addImageData(imageData) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const image = imageData.find((elem) => elem.title === this.value.title);\n        this.value.src = image.src;\n      }\n      if (this.left != null) this.left.addImageData(imageData);\n      if (this.right != null) this.right.addImageData(imageData);\n    }\n  }\n\n  RenderImage(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    const { width, title, src, x, y } = this.value;\n\n    const newX = x + xOffset;\n    const newY = y + yOffset;\n    return (\n      <>\n        <Box\n          key={title}\n          component=\"img\"\n          title={title}\n          alt={title}\n          width={width - 2 * padding}\n          onLoad={handleCollageImageLoad}\n          src={src}\n          sx={{\n            position: 'absolute',\n            padding: `${padding}px`,\n            borderRadius: `${borderRadius}px`,\n            left: this.value.x + xOffset,\n            top: this.value.y + yOffset,\n          }}\n        />\n        {delImg === true ? (\n          <Tooltip title=\"Remove Image\">\n            <IconButton\n              size=\"medium\"\n              sx={{\n                color: alpha('#000', 0.7),\n                bgcolor: alpha('#fff', 0.5),\n                position: 'absolute',\n                top: newY + padding,\n                left: newX + width,\n                padding: `${padding}px`,\n                borderRadius: '0 5px 0 5px',\n                transform: 'translate(-100%, 0)',\n              }}\n              onClick={() => handleRemoveImage(title)}\n            >\n              <DeleteIcon size=\"medium\" />\n            </IconButton>\n          </Tooltip>\n        ) : null}\n      </>\n    );\n  }\n\n  DOMDisplay(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    const { cut } = this.value;\n    if (this === null) return null;\n    if (cut) {\n      return (\n        <>\n          {this.left != null\n            ? this.left.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n          {this.right != null\n            ? this.right.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n        </>\n      );\n    }\n    if ('title' in this.value)\n      return this.RenderImage(\n        padding,\n        borderRadius,\n        delImg,\n        handleRemoveImage,\n        yOffset,\n        xOffset,\n        handleCollageImageLoad\n      );\n    return null;\n  }\n\n  ResizeImage(image) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = this.value.naturalWidth;\n    tempCanvas.height = this.value.naturalHeight;\n    const tempCtx = tempCanvas.getContext('2d');\n    let width = this.value.naturalWidth;\n    let height = this.value.naturalHeight;\n    let newWidth;\n    let newHeight;\n    const scaleFactor = Math.floor(\n      Math.log2(this.value.naturalWidth / this.value.width)\n    );\n    if (scaleFactor === 0) {\n      tempCtx.drawImage(\n        image,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    } else {\n      for (let i = 0; i < scaleFactor; i += 1) {\n        newWidth = width >> 1; // eslint-disable-line no-bitwise\n        newHeight = newWidth / this.value.aspectRatio; // eslint-disable-line no-bitwise\n        if (i === 0) {\n          tempCtx.drawImage(\n            image,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        } else {\n          tempCtx.drawImage(\n            tempCanvas,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        }\n        width = newWidth;\n        height = newHeight;\n      }\n\n      tempCtx.drawImage(\n        tempCanvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    }\n    return tempCanvas;\n  }\n\n  ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset) {\n    const x = this.value.x + padding + xOffset;\n    const y = this.value.y + padding + yOffset;\n    const clipwidth = this.value.width - 2 * padding;\n    const clipheight = clipwidth / this.value.aspectRatio;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + clipwidth - radius, y);\n    ctx.quadraticCurveTo(x + clipwidth, y, x + clipwidth, y + radius);\n    ctx.lineTo(x + clipwidth, y + clipheight - radius);\n    ctx.quadraticCurveTo(\n      x + clipwidth,\n      y + clipheight,\n      x + clipwidth - radius,\n      y + clipheight\n    );\n    ctx.lineTo(x + radius, y + clipheight);\n    ctx.quadraticCurveTo(x, y + clipheight, x, y + clipheight - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.clip();\n\n    ctx.drawImage(\n      tempCanvas,\n      0,\n      0,\n      this.value.width,\n      this.value.height,\n      x,\n      y,\n      clipwidth,\n      clipheight\n    );\n    ctx.restore();\n  }\n\n  CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset) {\n    if ('cut' in this.value) {\n      this.left.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n      this.right.CanvasDisplay(\n        canvasElement,\n        padding,\n        radius,\n        yOffset,\n        xOffset\n      );\n    }\n\n    if ('title' in this.value) {\n      const ctx = canvasElement.getContext('2d');\n      const newImg = new Image();\n      newImg.onload = () => {\n        const tempCanvas = this.ResizeImage(newImg);\n        const tempCtx = tempCanvas.getContext('2d');\n        this.ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset);\n        tempCtx.clearRect(0, 0, tempCanvas.width, tempCanvas.height);\n      };\n      newImg.src = this.value.src;\n    }\n  }\n\n  generate(images, tar, imageCount) {\n    const targetAspectRatioArr = images.map(\n      (image) => image.naturalWidth / image.naturalHeight\n    );\n    if (imageCount < 1) return [];\n    if (imageCount === 1) {\n      const closestIndex = helpers.findClosest(targetAspectRatioArr, tar);\n      this.value = images[closestIndex];\n      this.left = null;\n      this.right = null;\n      return [\n        ...images.slice(0, closestIndex),\n        ...images.slice(closestIndex + 1),\n      ];\n    }\n\n    const cut = helpers.getCut();\n    this.value = { cut, targetAspectRatio: tar };\n    if (imageCount === 2) {\n      const [leftIndex, rightIndex] = helpers.findImgPair(\n        targetAspectRatioArr,\n        tar\n      );\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        images[leftIndex].aspectRatio,\n        images[rightIndex].aspectRatio\n      );\n      this.left = new Node(images[leftIndex]);\n      this.right = new Node(images[rightIndex]);\n      return images.filter(\n        (item, index) => ![leftIndex, rightIndex].includes(index)\n      );\n    }\n\n    let restImages;\n    let targetAspectRatio;\n    this.left = new Node({ cut: helpers.getCut() });\n    //  this.right = new Node({ cut: helpers.getCut() });\n    this.right = new Node({ cut: this.left.value.cut === 'v' ? 'h' : 'v' });\n\n    targetAspectRatio = tar / 2;\n    if (cut === 'v') {\n      targetAspectRatio = tar * 2;\n    }\n\n    const randomNumber = Math.round(Math.random());\n    const [first, second] = randomNumber\n      ? ['left', 'right']\n      : ['right', 'left'];\n    restImages = this[first].generate(\n      images,\n      targetAspectRatio,\n      imageCount - Math.floor(imageCount / 2)\n    );\n    restImages = this[second].generate(\n      restImages,\n      targetAspectRatio,\n      Math.floor(imageCount / 2)\n    );\n\n    this.value.aspectRatio = helpers.getAspectRatio(\n      this.value.cut,\n      this.left.value.aspectRatio,\n      this.right.value.aspectRatio\n    );\n\n    return restImages;\n  }\n\n  adjust(th) {\n    let adjustments = 0;\n    if (this === null) return adjustments;\n\n    if (this.left !== null && this.right !== null) {\n      if (this.value.aspectRatio > this.value.targetAspectRatio * th) {\n        this.value.cut = 'h';\n        adjustments += 1;\n      }\n      if (this.value.aspectRatio < this.value.targetAspectRatio / th) {\n        this.value.cut = 'v';\n        adjustments += 1;\n      }\n\n      if (this.value.cut === 'v') {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n      } else {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n      }\n      adjustments += this.left.adjust(th) + this.right.adjust(th);\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        this.left.value.aspectRatio,\n        this.right.value.aspectRatio\n      );\n    }\n\n    return adjustments;\n  }\n\n  addSize(parentWidth, parentHeight, parentX, parentY, parentCut, nodeType) {\n    if (parentCut === 'v') {\n      this.value.height = parentHeight;\n      this.value.width = this.value.height * this.value.aspectRatio;\n    } else {\n      this.value.width = parentWidth;\n      this.value.height = this.value.width / this.value.aspectRatio;\n    }\n\n    if (nodeType === 'left') {\n      this.value.x = parentX;\n      this.value.y = parentY;\n    } else if (parentCut === 'h') {\n      this.value.y = parentY + parentHeight - this.value.height;\n      this.value.x = parentX;\n    } else {\n      this.value.x = parentX + parentWidth - this.value.width;\n      this.value.y = parentY;\n    }\n\n    if (this.left !== null) {\n      this.left.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'left'\n      );\n    }\n    if (this.right !== null) {\n      this.right.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'right'\n      );\n    }\n  }\n\n  validateAddSize() {\n    if ('cut' in this.value) {\n      const [lV, lPN] = this.left.validateAddSize();\n      const [rV, rPN] = this.right.validateAddSize();\n      return [lV && rV, lPN.concat(rPN)];\n    }\n    if ('title' in this.value) {\n      const valid =\n        this.value.width <= this.value.naturalWidth &&\n        this.value.height <= this.value.naturalHeight;\n      return valid ? [valid, []] : [valid, [{ ...this }]];\n    }\n    return false;\n  }\n}\n","import Box from '@mui/material/Box';\nimport TextDisplay from 'components/collage/TextDisplay';\nimport constants from 'static/config/collage';\nimport Node from './node';\nimport helpers from './helpers';\n\nexport default class BinaryTree {\n  constructor(value) {\n    if (this.root === undefined) {\n      this.root = new Node(value);\n      return this;\n    }\n  }\n\n  addOptions(options) {\n    this.root.options = { ...options };\n  }\n\n  display() {\n    if (this.root !== null) {\n      return this.root.display();\n    }\n    return null;\n  }\n\n  replaceImages(newImages) {\n    if (this.root !== null) this.root.replaceImages(newImages);\n  }\n\n  fromObject(obj) {\n    if (obj.root != null) this.root.fromObject(obj.root);\n    return this;\n  }\n\n  removeImageData() {\n    const tempTree = this.copy();\n    if (this.root !== null) {\n      tempTree.root.removeImageData();\n    }\n    return tempTree;\n  }\n\n  addImageData(imageData) {\n    if (this.root !== null) this.root.addImageData(imageData);\n  }\n\n  DOMDisplay(\n    canvasWidth,\n    canvasHeight,\n    delImg,\n    handleRemoveImage,\n    handleCollageImageLoad\n  ) {\n    const { fontSize, lineHeight, textPadding } = constants;\n    const { width, height } = this.root.value;\n    const { text, topText, padding, borderRadius, color } = this.root.options;\n    const lA = helpers.wrapText(text, 0, 0, canvasWidth, fontSize, lineHeight);\n    const textHeight = text.length\n      ? lA.length * lineHeight + 2 * textPadding\n      : 0;\n    let yOffset = (canvasHeight - textHeight - height) / 2;\n    const xOffset = (canvasWidth - width) / 2;\n    let position = canvasHeight - textHeight;\n    if (topText && text.length > 0) {\n      yOffset += textHeight;\n      position = 0;\n    }\n\n    if (this.root !== null) {\n      return (\n        <Box sx={{ backgroundColor: 'white' }}>\n          <Box\n            width={canvasWidth}\n            height={canvasHeight}\n            sx={{\n              position: 'relative',\n              backgroundColor: helpers.convertToRGBA(color),\n            }}\n          >\n            {this.root.DOMDisplay(\n              padding,\n              borderRadius,\n              delImg,\n              handleRemoveImage,\n              yOffset,\n              xOffset,\n              handleCollageImageLoad\n            )}\n            {text.length ? TextDisplay(lA, position, textHeight) : null}\n          </Box>\n        </Box>\n      );\n    }\n    return null;\n  }\n\n  CanvasDisplay(canvasWidth, canvasHeight, canvasElement, scaleFactor) {\n    const { fontSize, lineHeight, textPadding } = constants;\n    if (this.root !== null) {\n      const { text, topText, padding, borderRadius, color } = this.root.options;\n      const { width, height } = this.root.value;\n      const lA = helpers.wrapText(\n        text,\n        0,\n        0,\n        canvasWidth,\n        fontSize * scaleFactor,\n        lineHeight * scaleFactor\n      );\n      const textHeight = text.length\n        ? (lA.length * lineHeight + 2 * textPadding) * scaleFactor\n        : 0;\n      let yOffset = (canvasHeight - textHeight - height) / 2;\n      const xOffset = (canvasWidth - width) / 2;\n      let position = canvasHeight - textHeight;\n      if (topText && text.length > 0) {\n        yOffset += textHeight;\n        position = 0;\n      }\n      const ctx = canvasElement.getContext('2d');\n      ctx.fillStyle = 'white';\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      ctx.fillStyle = helpers.convertToRGBA(color);\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      this.root.CanvasDisplay(\n        canvasElement,\n        padding * scaleFactor,\n        borderRadius * scaleFactor,\n        yOffset,\n        xOffset\n      );\n      helpers.textCanvasDraw(\n        ctx,\n        lA,\n        position,\n        scaleFactor,\n        canvasWidth,\n        textHeight\n      );\n    }\n  }\n\n  generateScore() {\n    const score = this.root.getScore();\n    return Math.min(...score);\n  }\n\n  generateCollageTree(images, tar) {\n    this.root.generate(images, tar, images.length);\n  }\n\n  adjust(th) {\n    let trys = 0;\n    let bestAdjust = this.copy();\n    let bestAspectRatio = this.root.value.aspectRatio;\n    const tolerableDifference = this.root.value.targetAspectRatio * (1 - th);\n    let ajstCnt = 1000;\n    while (trys < 100 && ajstCnt > 0) {\n      ajstCnt = this.root.adjust(th);\n      trys += 1;\n      const diff =\n        this.root.value.aspectRatio - this.root.value.targetAspectRatio;\n      if (\n        Math.abs(diff) <\n        Math.abs(bestAspectRatio - this.root.value.targetAspectRatio)\n      ) {\n        bestAspectRatio = this.root.value.aspectRatio;\n        bestAdjust = this.copy();\n      }\n      if ((diff > 0 && diff < tolerableDifference) || diff === 0) break;\n    }\n\n    return [bestAspectRatio, bestAdjust];\n  }\n\n  copy() {\n    const copyTree = new BinaryTree({});\n    copyTree.root = this.root.copy();\n    copyTree.root.options = { ...this.root.options };\n    return copyTree;\n  }\n\n  addSize(canvasWidth, canvasHeight, aspectRatio) {\n    const [maxW, maxH] = helpers.getCollageDimension(\n      canvasWidth,\n      canvasHeight,\n      aspectRatio\n    );\n    this.root.value.width = maxW;\n    this.root.value.height = maxH;\n    this.root.value.x = 0;\n    this.root.value.y = 0;\n    const { width, height, x, y, cut } = this.root.value;\n    if (this.root.left !== null)\n      this.root.left.addSize(width, height, x, y, cut, 'left');\n    if (this.root.right !== null)\n      this.root.right.addSize(width, height, x, y, cut, 'right');\n  }\n\n  validateAddSize() {\n    return this.root.validateAddSize();\n  }\n}\n","import BinaryTree from './binaryTree';\nimport helpers from './helpers';\n\nfunction findBestAdjustTree(images, tolerance, imageWidth, imageHeight) {\n  const sortedImages = images.sort((a, b) =>\n    a.aspectRatio <= b.aspectRatio ? 1 : -1\n  );\n  const collageArray = [];\n  for (let i = 0; i < 100; i += 1) {\n    const imgTree = new BinaryTree({ cut: helpers.getCut() });\n    imgTree.generateCollageTree(sortedImages, imageWidth / imageHeight);\n\n    collageArray.push(imgTree.adjust(1 - tolerance));\n  }\n\n  collageArray.sort((a, b) => {\n    const aspR = imageWidth / imageHeight;\n    const diffA = Math.abs(a[0] - aspR);\n    const diffB = Math.abs(b[0] - aspR);\n    return diffA - diffB;\n  });\n\n  const bAR = collageArray.filter(\n    (elem) => elem[0].toFixed(1) === collageArray[0][0].toFixed(1)\n  );\n  console.log('from bar', bAR);\n  let maxScore = 0;\n  let maxElem = {};\n  bAR.forEach((element) => {\n    element[1].addSize(\n      1000 * (imageWidth / imageHeight),\n      1000,\n      imageWidth / imageHeight\n    );\n    const score = element[1].generateScore();\n    if (score > maxScore) {\n      maxScore = score;\n      maxElem = element;\n    }\n  });\n  return maxElem;\n}\n\nexport default { findBestAdjustTree };\n","import collageapi from 'api/collage';\n\nfunction verifyPromises(uploadPromises) {\n  let status;\n  for (let i = 0; i < uploadPromises.length; i += 1) {\n    if (\n      uploadPromises[i].status === 'fulfilled' ||\n      uploadPromises[i].value.ok === true\n    ) {\n      status = true;\n    } else {\n      status = false;\n      break;\n    }\n  }\n  return status;\n}\n\nfunction uploadCollageImages(\n  thumbnailCanvas,\n  imageURLS,\n  uploadCallback,\n  images,\n  collageID\n) {\n  const imagePromises = Object.keys(imageURLS).map(async (item) => {\n    // Upload thumbnail\n    const thumbnailKey = `thumbnail-${collageID}.jpg`;\n    if (item === thumbnailKey) {\n      return thumbnailCanvas.toBlob(async (blob) =>\n        collageapi.upload(imageURLS[thumbnailKey], blob)\n      );\n    }\n\n    // Upload Images\n    const url = imageURLS[item];\n    const Img = images.find((img) => img.title === item);\n    return collageapi.upload(url, Img.file).then((resp) => {\n      uploadCallback(); // Increase image upload count\n      return resp;\n    });\n  });\n\n  return imagePromises;\n}\n\nexport default { uploadCollageImages, verifyPromises };\n","import { useEffect, useState /* , useLayoutEffect */ } from 'react';\nimport useDimensions from 'hooks/collage/dimensions';\nimport useOptions from 'hooks/collage/options';\nimport useActions from 'hooks/collage/actions';\nimport useImages from 'hooks/collage/images';\nimport useTree from 'hooks/collage/tree';\n\nimport helpers from 'components/collage/helpers';\nimport apiHelpers from 'components/collage/apiHelpers';\nimport collageapi from 'api/collage';\nimport constants from 'static/config/collage';\n\nexport default function useBase(initialValue) {\n  const {\n    defaultCollageName,\n    defaultCollageType,\n    paperSizes,\n    tolerance,\n    thumbnailHeight,\n    fontSize,\n    lineHeight,\n    textPadding,\n  } = constants;\n\n  const [details, setDetails] = useState(initialValue);\n  const [collageName, setCollageName] = useState(defaultCollageName);\n  const [collageType, setCollageType] = useState(defaultCollageType);\n  const [uploadedImages, setUploadedImages] = useState(0);\n  const dimensions = useDimensions();\n  const options = useOptions();\n  const actions = useActions();\n  const images = useImages(details);\n  const treeState = useTree(details, options.setOptions);\n  const [thumbnail, setThumbnail] = useState({});\n\n  const initialStatus = () => ({\n    details: {\n      text: 'Saving Details',\n      status: 'pending',\n    },\n    images: {\n      text: `Saving Images (${uploadedImages} / ${images.images.length})`,\n      status: 'pending',\n    },\n    finalizing: {\n      text: 'Finalizing Collage',\n      status: 'pending',\n    },\n  });\n\n  const [saveStatus, setSaveStatus] = useState(initialStatus);\n\n  const collageID =\n    'details' in initialValue && 'collage_id' in initialValue.details\n      ? initialValue.details.collage_id\n      : Date.now();\n\n  const collageCallback = () => {};\n  const handleCollageTypeChange = (ct) => setCollageType(ct);\n  const getAspectRatio = () =>\n    paperSizes[collageType].width / paperSizes[collageType].height;\n\n  const handleNameChange = (newName) => setCollageName(newName);\n  const uploadCallback = () => setUploadedImages((cnt) => cnt + 1);\n\n  const updateStatus = (key, status) => {\n    const value = { ...saveStatus[key], status };\n    setSaveStatus((st) => ({ ...st, [key]: value }));\n  };\n\n  const updateImagesStatus = () => {\n    const imagesText = `Saving Images (${uploadedImages} / ${images.imgCount})`;\n    let value = { ...saveStatus.images, text: imagesText };\n    if (uploadedImages === images.imgCount && images.imgCount > 0) {\n      value = { ...value, status: 'done' };\n    }\n    setSaveStatus((st) => ({ ...st, images: value }));\n  };\n\n  const handleClear = () => {\n    treeState.clear();\n    images.clear();\n    options.clear();\n  };\n\n  const handleRemoveImage = (imgTitle) => {\n    const newImagesArr = images.remove(imgTitle);\n    treeState.reAdjust(\n      newImagesArr,\n      tolerance,\n      dimensions.imageWidth,\n      dimensions.imageHeight,\n      options.options\n    );\n  };\n\n  const generateThumbnail = () => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    const thumbnailWidth = thumbnailHeight * ar;\n    const thumbnailCanvas = document.createElement('canvas');\n    const thumbnailTree = treeState.tree.copy();\n    thumbnailTree.root.options.text = '';\n    thumbnailTree.addSize(thumbnailWidth, thumbnailHeight, ar);\n    thumbnailCanvas.width = thumbnailWidth;\n    thumbnailCanvas.height = thumbnailHeight;\n    thumbnailTree.CanvasDisplay(\n      thumbnailWidth,\n      thumbnailHeight,\n      thumbnailCanvas,\n      thumbnailWidth / dimensions.width\n    );\n\n    // create and update details\n    const thumbnailDetails = {\n      title: `thumbnail-${collageID}.png`,\n      src: '',\n      naturalHeight: thumbnailHeight,\n      naturalWidth: thumbnailWidth,\n      aspectRatio: ar,\n      type: 'image/png',\n    };\n    setThumbnail(thumbnailDetails);\n    return [thumbnailDetails, thumbnailCanvas];\n  };\n\n  const getDetails = (name, thumbnailDetails) => {\n    setCollageName(name);\n    return {\n      collage_id: collageID.toString(),\n      name,\n      collage_type: collageType,\n      created_at: '2021-02-18T21:54:42.123Z',\n      last_updated_at: '2021-02-18T21:54:45.123Z',\n      images: images.getImageData(images.images),\n      tree: treeState.tree.removeImageData(),\n      thumbnail: thumbnailDetails,\n    };\n  };\n\n  const updateCollage = async (name, getURLS) => {\n    const [thumbDets, thumbnailCanvas] = generateThumbnail();\n\n    // Upload collage details\n    updateStatus('details', 'running');\n    const getURLSResp = await getURLS(collageID, getDetails(name, thumbDets));\n    if ('status' in getURLSResp && getURLSResp.status === 'error') {\n      updateStatus('details', 'failed');\n      return false;\n    }\n\n    updateStatus('details', 'done');\n\n    // Image Upload start\n    updateStatus('images', 'running');\n    const uploadPromises = await Promise.allSettled(\n      apiHelpers.uploadCollageImages(\n        thumbnailCanvas,\n        getURLSResp,\n        uploadCallback,\n        images.images,\n        collageID\n      )\n    );\n    updateStatus('images', 'done');\n\n    // Verify upload promises\n    updateStatus('finalizing', 'running');\n    const valid = apiHelpers.verifyPromises(uploadPromises);\n    updateStatus('finalizing', valid === true ? 'done' : 'failed');\n    return valid;\n  };\n\n  const newCollage = async (name) => updateCollage(name, collageapi.newCollage);\n  const saveCollage = async (name) =>\n    updateCollage(name, collageapi.saveCollage);\n\n  const updateTreeAspectRatio = () => {\n    const ar = getAspectRatio();\n    if (\n      Object.keys(treeState.tree).length > 0 &&\n      'aspectRatio' in treeState.tree.root.value &&\n      treeState.tree.root.value.aspectRatio !== ar\n    ) {\n      const tempTree = treeState.tree.copy();\n      tempTree.value = { ...tempTree.value, aspectRatio: ar };\n      tempTree.root.value = { ...tempTree.root.value, targetAspectRatio: ar };\n      treeState.setTree(tempTree);\n      if (images.images.length > 1) actions.setRefresh(true);\n    }\n  };\n\n  const handleInitialValue = () => {\n    setDetails(initialValue);\n    if ('details' in initialValue) {\n      const iDets = initialValue.details;\n      if ('name' in iDets && collageName === defaultCollageName) {\n        setCollageName(iDets.name);\n      }\n      if ('collage_type' in iDets && collageType === defaultCollageType) {\n        setCollageType(initialValue.details.collage_type);\n      }\n    }\n  };\n\n  const rearrangeCollage = () => {\n    if (\n      (images.newImgCount > 0 &&\n        images.newImgCount === images.newImagesLoaded) ||\n      actions.refresh\n    ) {\n      images.setNewImageCount(0);\n      images.setNewImagesLoaded(0);\n      treeState.reAdjust(\n        images.images,\n        tolerance,\n        dimensions.width,\n        dimensions.height - dimensions.textHeight,\n        options.options\n      );\n      actions.setRefresh(false);\n    }\n  };\n\n  const setCollageDimensions = () => {\n    const ar = getAspectRatio();\n    const { maxWidth, maxHeight } = dimensions;\n    const [w, h] = helpers.getCollageDimension(maxWidth, maxHeight, ar);\n    dimensions.setWidth(w);\n    dimensions.setHeight(h);\n  };\n\n  const updateCollageWithTextDimensions = () => {\n    const { width, height, setTextHeight, setImageWidth, setImageHeight } =\n      dimensions;\n    const { text } = options.options;\n    if (Object.keys(treeState.tree).length > 0) {\n      const tH = helpers.wrapText(text, 0, 0, width, fontSize, lineHeight);\n      const totalTextHeight =\n        text.length > 0 ? tH.length * lineHeight + 2 * textPadding : 0;\n      const [w, h] = helpers.getCollageDimension(\n        width,\n        height - totalTextHeight,\n        treeState.tree.root.value.aspectRatio\n      );\n      setTextHeight(totalTextHeight);\n      setImageWidth(w);\n      setImageHeight(h);\n    }\n  };\n\n  useEffect(() => updateTreeAspectRatio, [collageType]);\n  useEffect(updateImagesStatus, [uploadedImages, images.imgCount]);\n  useEffect(handleInitialValue, [initialValue]);\n\n  useEffect(setCollageDimensions, [\n    dimensions.maxWidth,\n    dimensions.maxHeight,\n    collageType,\n  ]);\n\n  useEffect(rearrangeCollage, [\n    images.newImgCount,\n    images.newImagesLoaded,\n    actions.refresh,\n  ]);\n\n  useEffect(updateCollageWithTextDimensions, [\n    dimensions.width,\n    dimensions.height,\n    treeState.tree,\n    options.options.text,\n  ]);\n\n  return [\n    collageType,\n    getDetails,\n    collageName,\n    thumbnail,\n    collageID,\n    dimensions,\n    options,\n    actions,\n    images,\n    treeState,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n    handleCollageTypeChange,\n    handleNameChange,\n  ];\n}\n","import { useRef, useState, useEffect } from 'react';\n\nexport default function useDimensions() {\n  const headerRef = useRef();\n  const actionsRef = useRef();\n  const footerRef = useRef();\n  const collageMetaRef = useRef();\n  const addImageRef = useRef();\n\n  const [height, setHeight] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [imageWidth, setImageWidth] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [maxHeight, setMaxHeight] = useState(0);\n  const [maxWidth, setMaxWidth] = useState(0);\n  const [textHeight, setTextHeight] = useState(0);\n\n  const setDimensions = () => {\n    const isMobile = window.innerWidth < window.innerHeight;\n    const headerHeight = headerRef.current ? headerRef.current.offsetHeight : 0;\n    const collageMetaHeight = collageMetaRef.current\n      ? collageMetaRef.current.offsetHeight\n      : 0;\n    console.log('dimensions collage meta height', collageMetaHeight);\n    if (isMobile === true) {\n      const actionsHeight = actionsRef.current\n        ? actionsRef.current.offsetHeight\n        : 0;\n      const footerHeight = footerRef.current\n        ? footerRef.current.offsetHeight\n        : 0;\n      const otherHeight =\n        headerHeight + actionsHeight + footerHeight + collageMetaHeight;\n      setMaxWidth(Math.min(window.innerWidth, window.screen.availWidth));\n      setMaxHeight(\n        Math.min(window.innerHeight, window.screen.availHeight) -\n          otherHeight -\n          10\n      );\n    } else {\n      const actionsWidth = actionsRef.current\n        ? actionsRef.current.offsetWidth\n        : 0;\n      const footerWidth = footerRef.current ? footerRef.current.offsetWidth : 0;\n      setMaxWidth(window.innerWidth - (footerWidth + actionsWidth) - 10);\n      setMaxHeight(window.innerHeight - headerHeight - collageMetaHeight);\n    }\n  };\n\n  const handleImageAddClick = () => {\n    if (addImageRef.current) addImageRef.current.click();\n  };\n\n  useEffect(() => {\n    setDimensions();\n  }, [headerRef.current, actionsRef.current, footerRef.current]);\n\n  useEffect(() => {\n    setDimensions();\n\n    window.addEventListener('resize', setDimensions);\n\n    return () => window.removeEventListener('resize', setDimensions);\n  }, []);\n\n  return {\n    addImageRef,\n    actionsRef,\n    headerRef,\n    footerRef,\n    collageMetaRef,\n    width,\n    height,\n    imageHeight,\n    imageWidth,\n    setImageWidth,\n    setImageHeight,\n    maxHeight,\n    maxWidth,\n    handleImageAddClick,\n    textHeight,\n    setTextHeight,\n    setWidth,\n    setHeight,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useOptions() {\n  const optionsInitValue = {\n    padding: 2,\n    borderRadius: 5,\n    color: {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1,\n    },\n    text: '',\n    topText: true,\n  };\n\n  const [options, setOptions] = useState(optionsInitValue);\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n  const [editControl, setEditControl] = useState(null);\n  const [editOptionsValue, setEditOptionsValue] = useState('');\n\n  const clear = () => setOptions(optionsInitValue);\n  const handlePaddingChange = (e) =>\n    setOptions((opts) => ({ ...opts, padding: e.target.value }));\n  const handleRadiusChange = (e) => {\n    setOptions((opts) => ({ ...opts, borderRadius: e.target.value }));\n  };\n\n  const handleColorClick = () => setDisplayColorPicker((dcp) => !dcp);\n  const handleColorClose = () => setDisplayColorPicker(false);\n  const handleColorChange = (clr) =>\n    setOptions((opts) => ({ ...opts, color: clr.rgb }));\n  const handlePositionChange = (value) =>\n    setOptions((opts) => ({ ...opts, topText: value }));\n\n  const handleTextChange = (e) => {\n    const { target } = e;\n    setOptions((opts) => ({ ...opts, text: target.value }));\n  };\n\n  const handleTextSubmit = (e) => {\n    handleTextChange(e);\n    setEditControl(null);\n    setEditOptionsValue(null);\n  };\n\n  return {\n    options,\n    setOptions,\n    clear,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClick,\n    handleColorClose,\n    handleColorChange,\n    handlePositionChange,\n    handleTextChange,\n    displayColorPicker,\n    editControl,\n    setEditControl,\n    editOptionsValue,\n    setEditOptionsValue,\n    handleTextSubmit,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useActions() {\n  const [open, setOpen] = useState(false);\n  const [saveOpen, setSaveOpen] = useState(false);\n  const [saveStart, setSaveStart] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [generate, setGenerate] = useState(false);\n  const [removeImage, setRemoveImage] = useState(false);\n  const [printOptions, setPrintOptions] = useState({\n    paperWidth: 0,\n    paperHeight: 0,\n  });\n\n  const onRefresh = () => setRefresh(true);\n  const handleDownload = () => setOpen(true);\n  const handleSave = () => {\n    setSaveOpen(true);\n  };\n  const onDownloadClose = () => setOpen(false);\n  const onSaveClose = () => setSaveOpen(false);\n  const clearDelete = () => setRemoveImage(false);\n  const onDelete = () => setRemoveImage((ri) => !ri);\n\n  const onDownloadClick = (w, h) => {\n    setPrintOptions({ paperWidth: w, paperHeight: h });\n    setGenerate(true);\n    setOpen(false);\n  };\n\n  const onSaveClick = () => {\n    setSaveStart(true);\n    setSaveOpen(false);\n  };\n  const handleGenerateCallback = () => {\n    setGenerate(false);\n    setPrintOptions({ paperWidth: 0, paperHeight: 0 });\n  };\n\n  return {\n    clearDelete,\n    generate,\n    handleDownload,\n    handleGenerateCallback,\n    onDelete,\n    onDownloadClick,\n    onDownloadClose,\n    onRefresh,\n    open,\n    printOptions,\n    refresh,\n    setGenerate,\n    setOpen,\n    setPrintOptions,\n    setRefresh,\n    removeImage,\n    setRemoveImage,\n    saveOpen,\n    setSaveOpen,\n    onSaveClose,\n    onSaveClick,\n    handleSave,\n    saveStart,\n    setSaveStart,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport helpers from 'components/collage/helpers';\nimport constants from 'static/config/collage';\n\nexport default function useImages(initialValue) {\n  console.log('use images', initialValue);\n  const [newImgCount, setNewImageCount] = useState(0);\n  const [newImagesLoaded, setNewImagesLoaded] = useState(0);\n  const [imgCount, setImageCount] = useState(0);\n  const [loaded, setLoaded] = useState(0);\n  const [images, setImages] = useState([]);\n  const [imageCountMaxError, setImageCountMaxError] = useState('');\n  const [imageCountMinError, setImageCountMinError] = useState('');\n\n  useEffect(() => {\n    console.log('setting images');\n    if ('images' in initialValue) {\n      setImages(initialValue.images);\n      if (imgCount === 0) setImageCount(initialValue.images.length);\n    }\n  }, [initialValue]);\n\n  const getImageData = (imageArr) => {\n    const tempImgArr = [...imageArr];\n    return tempImgArr.map((img) => {\n      const { file, src, ...rest } = img;\n      console.log('get image data', img, rest);\n      return rest;\n    });\n  };\n\n  const removeImageData = (imageArr) => {\n    const tempImgArr = [...imageArr];\n    return tempImgArr.map((img) => {\n      const { file, src, ...rest } = img;\n      console.log('get image data', img, rest);\n      return rest;\n    });\n  };\n\n  const incrementNewImageCount = () => {\n    console.log('incrementing image count');\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleImageData = async (imageDetail) => {\n    setImages((arr) => arr.concat([imageDetail]));\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleImageCount = (totalImages) => {\n    if (totalImages === 0) {\n      setImageCountMinError('');\n      return true;\n    }\n    if (totalImages > 0) {\n      if (totalImages < constants.minImages) {\n        setImageCountMinError(\n          `Image Count Error: Need atleast ${constants.minImages} images to create a collage`\n        );\n        setImageCountMaxError('');\n        return false;\n      }\n      if (totalImages > constants.maxImages) {\n        setImageCountMaxError(\n          `Image Count Error: Maximum images allowed in collage is ${constants.maxImages}`\n        );\n        setImageCountMinError('');\n        return false;\n      }\n      if (\n        totalImages >= constants.minImages &&\n        totalImages <= constants.maxImages\n      ) {\n        setImageCountMaxError('');\n        setImageCountMinError('');\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const handleLoad = (event) => {\n    const totalImages = event.target.files.length + imgCount;\n    const valid = handleImageCount(totalImages);\n    if (valid === true) {\n      helpers.handleImageLoad(\n        event,\n        setImageCount,\n        setNewImageCount,\n        handleImageData\n      );\n    }\n    console.log(\n      'total image count',\n      event.target.files.length + imgCount,\n      imgCount\n    );\n  };\n\n  const clear = () => {\n    setImages([]);\n    setImageCount(0);\n    setLoaded(0);\n    setNewImagesLoaded(0);\n  };\n\n  const remove = (title) => {\n    const removeIndex = images.findIndex((elem) => elem.title === title);\n    const newImagesArr = [\n      ...images.slice(0, removeIndex),\n      ...images.slice(removeIndex + 1),\n    ];\n    setImages(newImagesArr);\n    setImageCount((cnt) => cnt - 1);\n    return newImagesArr;\n  };\n\n  return {\n    clear,\n    handleImageData,\n    handleLoad,\n    images,\n    imgCount,\n    loaded,\n    newImagesLoaded,\n    newImgCount,\n    remove,\n    setImageCount,\n    setImages,\n    setLoaded,\n    setNewImageCount,\n    setNewImagesLoaded,\n    getImageData,\n    removeImageData,\n    incrementNewImageCount,\n    imageCountMinError,\n    setImageCountMinError,\n    imageCountMaxError,\n    setImageCountMaxError,\n    handleImageCount,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport treeUtils from 'components/collage/treeUtils';\nimport BinaryTree from 'components/collage/binaryTree';\n\nexport default function useTree(initialValue, loadingCallback = () => {}) {\n  console.log('use Tree', initialValue);\n  const [tree, setTree] = useState(new BinaryTree({}));\n\n  useEffect(() => {\n    console.log('use Tree useEffect');\n    const newTree = new BinaryTree({});\n    if (\n      'details' in initialValue &&\n      Object.keys(initialValue.details).length > 0\n    ) {\n      console.log('initial value in tree', initialValue);\n      newTree.fromObject(initialValue.details.tree);\n      if ('options' in initialValue.details.tree.root) {\n        loadingCallback((opts) => ({\n          ...opts,\n          ...initialValue.details.tree.root.options,\n        }));\n      }\n      console.log('setting tree');\n      setTree(newTree);\n    }\n  }, [initialValue]);\n\n  const clear = () => setTree({});\n\n  const reAdjust = (imagesArr, tolerance, imageWidth, imageHeight, options) => {\n    const [, bestAspectRatioTree] = treeUtils.findBestAdjustTree(\n      imagesArr,\n      tolerance,\n      imageWidth,\n      imageHeight\n    );\n    bestAspectRatioTree.addOptions(options);\n    setTree(bestAspectRatioTree);\n  };\n\n  return { tree, setTree, clear, reAdjust };\n}\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Typography from '@mui/material/Typography';\n\nexport default function HandleError({ errors, children, handleClose }) {\n  const [open, setOpen] = useState(false);\n  useEffect(() => setOpen(true), []);\n  return errors.length > 0 ? (\n    <Dialog open={open} fullWidth>\n      <DialogTitle\n        sx={{ textAlign: 'center', color: 'red', fontWeight: 'bold' }}\n      >\n        Error(s)\n      </DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <DialogContentText sx={{ display: 'inline', pr: 1 }}>\n          <Typography sx={{ fontWeight: 'bold' }}>\n            Please fix the following errors\n          </Typography>\n          <List sx={{ px: 2 }}>\n            {errors.map((err) => (\n              <ListItem sx={{ display: 'list-item', listStyleType: 'disc' }}>\n                {err}\n              </ListItem>\n            ))}\n          </List>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          onClick={() => {\n            handleClose();\n            setOpen(false);\n          }}\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  ) : (\n    children\n  );\n}\n\nHandleError.propTypes = {\n  errors: PropTypes.arrayOf(PropTypes.string).isRequired,\n  children: PropTypes.node.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport constants from 'static/config/collage';\nimport helpers from './helpers';\n\nexport default function Collage({\n  dimensionProps,\n  imageProps,\n  actionProps,\n  collageCallback,\n  handleRemoveImage,\n  options,\n  tree,\n}) {\n  const [collage, setCollage] = useState(null);\n  const { images, setLoaded } = imageProps;\n  const { generate, handleGenerateCallback, printOptions, removeImage } =\n    actionProps;\n  const { height, width, imageHeight, imageWidth } = dimensionProps;\n  const { fontSize, lineHeight } = constants;\n\n  const handleCollageImageLoad = () => setLoaded((cnt) => cnt + 1);\n  const isEmpty = (t) => Object.keys(t).length === 0;\n  const createCollage = () => {\n    console.log('started collage loading', tree);\n    tree.addSize(imageWidth, imageHeight, tree.root.value.aspectRatio);\n    console.log('collage added size');\n    tree.addOptions(options);\n    console.log('collage added options', images.length);\n    if (images.length > 0) {\n      tree.addImageData(images);\n      console.log('collage added image data');\n      const collageElem = tree.DOMDisplay(\n        width,\n        height,\n        removeImage,\n        handleRemoveImage,\n        handleCollageImageLoad\n      );\n      console.log('collage added dom display');\n      setCollage(collageElem);\n      collageCallback(tree);\n    }\n  };\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      console.log('collage, tree is not empty');\n      createCollage();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(tree) && tree.root.left != null) {\n      console.log('collage, tree is not empty 1');\n      createCollage();\n    } else {\n      setCollage(null);\n    }\n  }, [tree, options, imageWidth, imageHeight, removeImage, images]);\n\n  const downloadCollage = (canvas, pW, pH) => {\n    canvas.toBlob((blob) => {\n      const link = document.createElement('a');\n      link.download = `collage-${pW.toFixed(2)}X${pH.toFixed(\n        2\n      )}-${Date.now()}.jpg`;\n      link.href = URL.createObjectURL(blob);\n      link.click();\n      URL.revokeObjectURL(link.href);\n      link.href = null;\n      handleGenerateCallback();\n    }, 'image/jpeg');\n  };\n\n  const getCanvasTree = () => {\n    const canvasTree = tree.copy();\n    canvasTree.replaceImages(images);\n    return canvasTree;\n  };\n\n  const getCanvas = (pw, ph) => {\n    const canvasElement = document.createElement('canvas');\n    canvasElement.width = pw;\n    canvasElement.height = ph;\n    return canvasElement;\n  };\n\n  const generateCollageTree = (pw, ph) => {\n    const canvasTree = getCanvasTree();\n    const ar = tree.root.value.aspectRatio;\n    const scaleFactor = pw / width;\n    const [imgPW, imgPH] = helpers.getImageDimensions(\n      pw,\n      ph,\n      options.text,\n      0,\n      0,\n      fontSize,\n      lineHeight,\n      scaleFactor,\n      tree.root.value.aspectRatio\n    );\n    canvasTree.addSize(imgPW, imgPH, ar);\n    return canvasTree;\n  };\n\n  const generateCollage = (ctree, pw, ph) => {\n    const scaleFactor = pw / width;\n    const canvasElement = getCanvas(pw, ph);\n    ctree.CanvasDisplay(pw, ph, canvasElement, scaleFactor);\n\n    setTimeout(() => downloadCollage(canvasElement, pw, ph), '5000');\n  };\n\n  useEffect(() => {\n    if (generate === true) {\n      const { paperWidth: pw, paperHeight: ph } = printOptions;\n      const canvasTree = generateCollageTree(pw, ph);\n      const [valid, probNodes] = canvasTree.validateAddSize();\n      if (valid) {\n        generateCollage(canvasTree, pw, ph);\n      } else {\n        const [newPW, newPH] = helpers.optimizeDimensions(pw, ph, probNodes);\n        const newCanvasTree = generateCollageTree(newPW, newPH);\n        const [newValid, newProbNodes] = newCanvasTree.validateAddSize();\n        if (newValid) {\n          generateCollage(newCanvasTree, newPW, newPH);\n        } else {\n          console.log('unable to generate collage', newProbNodes);\n        }\n      }\n    }\n  }, [generate]);\n\n  return collage;\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\n\nexport default function DownloadDialog({ open, onClick, onClose, sizes }) {\n  const [value, setValue] = useState('');\n  const handleDownload = () => {\n    console.log(sizes[value].width, sizes[value].height, onClick);\n    onClick(sizes[value].width, sizes[value].height);\n    setValue('');\n  };\n\n  const handleClose = () => {\n    setValue('');\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Download Collage</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <DialogContentText sx={{ display: 'inline', pr: 1 }}>\n          Choose collage size\n        </DialogContentText>\n        <FormControl fullWidth sx={{ maxWidth: '60%' }}>\n          <InputLabel id=\"demo-simple-select-label\">Download Size</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            defaultValue=\"A4\"\n            value={value}\n            label=\"Download Size\"\n            onChange={(event) => setValue(event.target.value)}\n          >\n            {Object.keys(sizes).map((key) => (\n              <MenuItem key={sizes[key].text} value={key}>\n                {sizes[key].text}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          disabled={value.length === 0}\n          onClick={handleDownload}\n        >\n          Download\n        </Button>\n        <Button variant=\"text\" onClick={handleClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nDownloadDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport TextField from '@mui/material/TextField';\n\nexport default function SaveDialog({ collageName, open, onClick, onClose }) {\n  const [name, setName] = useState(collageName);\n  const [nameError] = useState('');\n  const handleSave = () => {\n    onClick(name);\n  };\n\n  const handleNameChange = (e) => {\n    const { target } = e;\n    setName(target.value);\n  };\n\n  const handleClose = () => {\n    setName('');\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <TextField\n          variant=\"outlined\"\n          label=\"Set Collage Name\"\n          defaultValue={name}\n          onChange={handleNameChange}\n          size=\"small\"\n          sx={{ width: '100%', mb: 1 }}\n          InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n          helperText={nameError}\n          error={!!nameError}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          disabled={name.length === 0}\n          onClick={handleSave}\n        >\n          Save\n        </Button>\n        <Button variant=\"text\" onClick={handleClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nSaveDialog.propTypes = {\n  collageName: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport PendingIcon from '@mui/icons-material/Pending';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CloseIcon from '@mui/icons-material/Close';\n\nfunction FailedIcon() {\n  return (\n    <CloseIcon\n      color=\"error\"\n      size=\"0.875rem\"\n      sx={{ border: '2px solid red', borderRadius: '50%' }}\n    />\n  );\n}\n\nfunction StatusIndicator({ status }) {\n  if (status === 'running') {\n    return <CircularProgress color=\"info\" size=\"1rem\" />;\n  }\n  if (status === 'pending') {\n    return <PendingIcon color=\"disabled\" size=\"0.875rem\" />;\n  }\n  if (status === 'done') {\n    return <CheckCircleOutlineIcon color=\"success\" size=\"0.875rem\" />;\n  }\n  if (status === 'failed') {\n    return <FailedIcon />;\n  }\n}\n\nStatusIndicator.propTypes = {\n  status: PropTypes.string.isRequired,\n};\n\nfunction Status({ text, status }) {\n  const color = {\n    pending: alpha('#000', 0.26),\n    done: 'black',\n    running: 'black',\n    failed: 'red',\n  };\n\n  return (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n      <Typography\n        sx={{ fontWeight: 'bold', fontSize: '1rem', color: color[status] }}\n      >\n        {text}\n      </Typography>\n      <StatusIndicator status={status} />\n    </Stack>\n  );\n}\n\nStatus.propTypes = {\n  text: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nfunction OverAllStatus({ status, counter }) {\n  if (status === 'failed') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <FailedIcon />\n        <Typography>Collage creation failed</Typography>\n      </Stack>\n    );\n  }\n\n  if (status === 'running' || status === 'pending') return null;\n\n  if (status === 'success') {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ width: '100%', p: 1 }}\n      >\n        <CheckCircleOutlineIcon color=\"success\" sx={{ fontSize: '2rem' }} />\n        <Typography>\n          Collage creation successful. Navigation to collages in {counter}{' '}\n          seconds...\n        </Typography>\n      </Stack>\n    );\n  }\n\n  return null;\n}\n\nOverAllStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  counter: PropTypes.number.isRequired,\n};\n\nexport default function SaveStatusDialog({ open, status }) {\n  let overAllStatus = 'pending';\n  const [counter, setCounter] = useState(-1);\n  useEffect(() => {\n    let timerId;\n    if (counter > 0 && overAllStatus === 'success') {\n      timerId = setTimeout(() => setCounter(counter - 1), 1000);\n    }\n    return () => clearTimeout(timerId);\n  }, [counter, overAllStatus]);\n\n  const statusArr = Object.values(status).map((val) => val.status);\n  if (statusArr.includes('failed')) {\n    overAllStatus = 'failed';\n  } else if (statusArr.includes('running')) {\n    overAllStatus = 'running';\n  } else if (!statusArr.includes('pending')) {\n    console.log('setting counter', counter, status);\n    if (counter === -1) {\n      setCounter(3);\n    }\n    overAllStatus = 'success';\n  }\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n      <DialogContent dividers>\n        <Stack direction=\"column\" justifyContent=\"center\" spacing={2}>\n          {Object.values(status).map((st) => (\n            <Status key={st.text} text={st.text} status={st.status} />\n          ))}\n        </Stack>\n      </DialogContent>\n      <OverAllStatus status={overAllStatus} counter={counter} />\n    </Dialog>\n  );\n}\n\nSaveStatusDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  status: PropTypes.objectOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      status: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n\nimport * as yup from 'yup';\n// import { alpha } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n// import { alpha } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport { Typography, Box, Link } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ProfileLink from 'components/profile';\nimport { Branding, BrandLogo } from 'components/brand';\nimport constants from 'static/config/collage';\nimport utils from 'utils';\n\nfunction HeaderNameSection({ name, handleChange, nameError, handleNameError }) {\n  const [editable, setEditable] = useState(false);\n  const handleClick = () => setEditable(true);\n  const nameSchema = yup\n    .object({\n      name: yup\n        .string()\n        .max(\n          constants.maxNameLength,\n          `Max allowed length is ${constants.maxNameLength}`\n        ),\n    })\n    .required();\n\n  const isValid = async () => {\n    const nameValid = await utils.isFieldValid(\n      'name',\n      name,\n      handleNameError,\n      nameSchema\n    );\n    return nameValid;\n  };\n\n  const handleNameChange = (e) => handleChange(e.target.value);\n\n  const handleBlur = async (e) => {\n    if (e.target.value === '') {\n      handleChange('Untitled');\n    } else {\n      handleChange(e.target.value);\n      const valid = await isValid();\n      if (valid === false) {\n        return;\n      }\n    }\n    setEditable(false);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      handleBlur(e);\n    }\n  };\n\n  useEffect(() => isValid(), [name]);\n\n  return editable === true ? (\n    <TextField\n      color=\"primary\"\n      variant=\"filled\"\n      label=\"Set Collage Name\"\n      defaultValue={name}\n      autoFocus\n      size=\"small\"\n      onChange={handleNameChange}\n      onBlur={handleBlur}\n      onKeyDown={handleKeyDown}\n      InputLabelProps={{\n        color: 'secondary',\n        focused: true,\n      }}\n      InputProps={{\n        sx: {\n          color: 'white',\n        },\n      }}\n      helperText={\n        <Typography\n          variant=\"body\"\n          sx={{\n            fontWeight: 'bold',\n            color: 'secondary.main',\n          }}\n        >\n          {nameError}\n        </Typography>\n      }\n      error={!!nameError}\n      sx={{\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n        cursor: 'text',\n      }}\n    />\n  ) : (\n    <Typography\n      variant=\"h5\"\n      onClick={handleClick}\n      sx={{\n        color: 'gray',\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n      }}\n    >\n      {name}\n    </Typography>\n  );\n}\n\nHeaderNameSection.propTypes = {\n  name: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  nameError: PropTypes.string.isRequired,\n  handleNameError: PropTypes.func.isRequired,\n};\n\nexport default function Header({\n  headerRef,\n  name,\n  handleNameChange,\n  nameError,\n  handleNameError,\n}) {\n  const belowmd = useMediaQuery((theme) => theme.breakpoints.down('md'));\n  return (\n    <Paper\n      ref={headerRef}\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        p: 1,\n        backgroundColor: 'primary.main',\n        borderRadius: 0,\n      }}\n      elevation={0}\n    >\n      <Box sx={{ postion: 'absolute', left: '5px' }}>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n          <Link href=\"/collages\" color=\"white\" underline=\"none\">\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <ArrowBackIcon fontSize=\"medium\" />\n            </Box>\n          </Link>\n          {belowmd ? (\n            <BrandLogo width=\"50px\" height=\"50px\" />\n          ) : (\n            <Branding width=\"50px\" height=\"50px\" />\n          )}\n        </Stack>\n      </Box>\n      <HeaderNameSection\n        name={name}\n        handleChange={handleNameChange}\n        nameError={nameError}\n        handleNameError={handleNameError}\n      />\n      <ProfileLink />\n    </Paper>\n  );\n}\n\nHeader.propTypes = {\n  name: PropTypes.string.isRequired,\n  headerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  handleNameChange: PropTypes.func.isRequired,\n  nameError: PropTypes.string.isRequired,\n  handleNameError: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n// import Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport collageBack from 'static/images/collage_back1.webp';\n\nexport default function EmptyCollage({ width, height, loadComponent }) {\n  console.log(width, height);\n  return (\n    <Box\n      sx={{\n        backgroundImage: `url(${collageBack})`,\n        backgroundSize: width,\n        objectFit: 'fill',\n        width,\n        height,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {loadComponent}\n    </Box>\n  );\n}\n\nEmptyCollage.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  loadComponent: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport constants from 'static/config/collage';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport EmptyCollage from 'components/collage/EmptyCollage';\nimport Loading from 'components/Loading';\nimport AddPhotos from 'components/AddPhotos';\n\nexport default function View({\n  open,\n  saveOpen,\n  saveStatusOpen,\n  status,\n  dimensionProps,\n  imageProps,\n  header,\n  actions,\n  downloadDialog,\n  saveDialog,\n  saveStatusDialog,\n  collage,\n  controls,\n  collageMetaInfo,\n}) {\n  const { width, height, maxWidth, maxHeight, collageMetaRef } = dimensionProps;\n  console.log(maxHeight, maxWidth);\n  const metaHeight = collageMetaRef.current\n    ? collageMetaRef.current.offsetHeight\n    : 0;\n  let showControls = false;\n  const { images, imgCount, handleLoad } = imageProps;\n  if (images.length > 0) {\n    showControls = true;\n  }\n  let content;\n  if (status === 'fetching') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={<Loading title=\"Fetching collage...\" />}\n      />\n    );\n  }\n\n  if (status === 'preparing') {\n    content = (\n      <>\n        {collage}\n        <Loading title=\"Preparing collage...\" />\n      </>\n    );\n  }\n\n  if (status === 'loading') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          <>\n            <Loading\n              title={`Loading (${imageProps.newImagesLoaded} / ${imgCount}) images...`}\n            />\n            {collage}\n          </>\n        }\n      />\n    );\n  }\n\n  if (status === 'empty') {\n    content = (\n      <EmptyCollage\n        width={width}\n        height={height}\n        loadComponent={\n          width ? (\n            <Stack direction=\"column\" spacing={2}>\n              <AddPhotos handleChange={handleLoad} />\n              <Typography\n                sx={{\n                  backgroundColor: 'faded.black',\n                  p: 1,\n                  color: 'form.stepper',\n                  fontWeight: 'bold',\n                  fontSize: '0.7rem',\n                }}\n              >\n                Tip: Select {constants.minImages} - {constants.maxImages} images\n              </Typography>\n            </Stack>\n          ) : (\n            <div />\n          )\n        }\n      />\n    );\n  }\n\n  if (status === 'ready') {\n    content = collage;\n  }\n  const leftPos =\n    (Math.min(window.innerWidth, window.screen.availWidth) - maxWidth) / 2;\n  console.log(\n    'window.innerWidth',\n    window.innerWidth,\n    'maxWidth',\n    maxWidth,\n    'leftPos',\n    leftPos\n  );\n\n  return (\n    <Box\n      component=\"div\"\n      sx={{\n        backgroundColor: 'red',\n        position: 'relative',\n      }}\n    >\n      {header}\n      {showControls ? actions : null}\n      {open ? downloadDialog : null}\n      {saveOpen ? saveDialog : null}\n      {saveStatusOpen ? saveStatusDialog : null}\n      <Stack\n        direction=\"column\"\n        width={maxWidth}\n        height={maxHeight + metaHeight}\n        sx={{\n          position: 'absolute',\n          // top: offsetHeight,\n          left: leftPos,\n          // transform: 'translate(-50%, 0)',\n          // display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'gray',\n        }}\n      >\n        {collageMetaInfo}\n        {content}\n      </Stack>\n      {showControls ? controls : null}\n    </Box>\n  );\n}\n\nView.propTypes = {\n  dimensionProps: PropTypes.shape({\n    maxWidth: PropTypes.number.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    imageHeight: PropTypes.number.isRequired,\n    collageMetaRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n\n    headerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n    actionsRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n    footerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n  imageProps: PropTypes.shape({\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        src: PropTypes.string.isRequired,\n        naturalHeight: PropTypes.number.isRequired,\n        naturalWidth: PropTypes.number.isRequired,\n        aspectRatio: PropTypes.number.isRequired,\n        type: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    imgCount: PropTypes.number.isRequired,\n    handleLoad: PropTypes.func.isRequired,\n    loaded: PropTypes.number.isRequired,\n    newImagesLoaded: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  saveOpen: PropTypes.bool.isRequired,\n  saveStatusOpen: PropTypes.bool.isRequired,\n  status: PropTypes.string.isRequired,\n  header: PropTypes.node.isRequired,\n  actions: PropTypes.node.isRequired,\n  collage: PropTypes.node.isRequired,\n  controls: PropTypes.node.isRequired,\n  downloadDialog: PropTypes.node.isRequired,\n  saveDialog: PropTypes.node.isRequired,\n  saveStatusDialog: PropTypes.node.isRequired,\n  collageMetaInfo: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      icon={icon}\n      sx={{\n        py: 1,\n        fontWeight: 'bold',\n        color: 'gray',\n        outline: 'none',\n        '&:focus': {\n          color: 'white',\n          outline: 'none',\n        },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\nDBNA.defaultProps = {\n  handleChange: () => {},\n};\n\nDBNA.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Drawer from '@mui/material/Drawer';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopDrawer({ anchor, children, innerRef }) {\n  return (\n    <Drawer\n      anchor={anchor}\n      variant=\"permanent\"\n      PaperProps={{\n        ref: innerRef,\n        sx: {\n          height: 'fit-content',\n          top: '50%',\n          backgroundColor: 'transparent',\n          color: 'gray',\n          fontWeight: 'bold',\n          borderRadius: anchor === 'left' ? '0 10px 10px 0' : '10px 0 0 10px',\n          transform: 'translate(0, -50%)',\n          border: 0,\n        },\n      }}\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nDesktopDrawer.defaultProps = {\n  innerRef: () => {},\n};\n\nDesktopDrawer.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n  anchor: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Divider from '@mui/material/Divider';\n\nexport default function ControlsDivider() {\n  return <Divider sx={{ backgroundColor: 'gray', my: 1 }} variant=\"middle\" />;\n}\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport List from '@mui/material/List';\n// import { alpha } from '@mui/material/styles';\n\nimport DBNA from 'components/collage/DesktopActionItem';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport ControlsDivider from 'components/collage/ControlsDivider';\n\nexport default function DesktopActions({ actionsRef, onDownload, onSave }) {\n  const handleChange = (newValue) => {\n    if (newValue === 'download') {\n      onDownload();\n    }\n    if (newValue === 'save') {\n      onSave();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  return (\n    <DesktopDrawer anchor=\"right\" innerRef={actionsRef}>\n      <List sx={{ backgroundColor: 'black' }}>\n        <DBNA\n          label=\"Save\"\n          icon={<SaveIcon />}\n          handleChange={() => handleChange('save')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label=\"Download\"\n          icon={<DownloadIcon />}\n          handleChange={() => handleChange('download')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label={\n            <>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Order\n              </Typography>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Print(s)\n              </Typography>\n            </>\n          }\n          icon={<PrintIcon />}\n          handleChange={() => handleChange('print')}\n        />\n      </List>\n    </DesktopDrawer>\n  );\n}\n\nDesktopActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\n\nexport default function ClearCollageDialog({\n  open,\n  onSubmit,\n  onCancel,\n  saveType,\n}) {\n  return (\n    <Dialog open={open}>\n      <DialogTitle\n        sx={{\n          textAlign: 'center',\n          fontWeight: 'bold',\n          color: alpha('#000', 0.8),\n        }}\n      >\n        {saveType === 'new' ? 'Clear' : 'Delete'} Collage\n      </DialogTitle>\n      <DialogContent dividers>\n        <DialogContentText sx={{ fontWeight: 'bold', color: 'gray', pb: 1 }}>\n          Do you want to {saveType === 'new' ? 'clear' : 'delete'} this collage?\n        </DialogContentText>\n        <Typography\n          variant=\"subtitle2\"\n          sx={{ color: 'red', fontWeight: 'bold' }}\n          noWrap\n        >\n          Note:\n        </Typography>\n        <Typography\n          sx={{ fontSize: '0.8rem', color: 'gray', fontWeight: 'bold' }}\n        >\n          This change is not reversible\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onSubmit} sx={{ color: 'red' }}>\n          {saveType === 'new' ? 'Clear' : 'Delete'}\n        </Button>\n        <Button variant=\"outlined\" onClick={onCancel}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nClearCollageDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useRef, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\n// import { alpha } from '@mui/material/styles';\n\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function DesktopControls({\n  innerRef,\n  onRefresh,\n  photosComp,\n  editComp,\n  handleClear,\n  clearDelete,\n  saveType,\n}) {\n  const [imageOptionsOpen, setImageOptionsOpen] = useState(false);\n  const [editOptionsOpen, setEditOptionsOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const editRef = useRef(null);\n\n  const closeAll = () => {\n    clearDelete();\n    setImageOptionsOpen(false);\n    setEditOptionsOpen(false);\n    setClearOpen(false);\n  };\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (editRef.current && !editRef.current.contains(event.target)) {\n        closeAll();\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [editRef]);\n\n  const handlePhotosClick = () => {\n    const ioo = imageOptionsOpen;\n    setImageOptionsOpen((io) => !io);\n    if (ioo === true) closeAll();\n    // closeAll();\n    // if (imageOptionsOpen) {\n    //   setImageOptionsOpen((io) => !io);\n    //   closeAll();\n    // } else {\n    //   closeAll();\n    //   setImageOptionsOpen(true);\n    // }\n  };\n\n  const handleEditClick = () => {\n    if (editOptionsOpen) {\n      setEditOptionsOpen(false);\n    } else {\n      closeAll();\n      setEditOptionsOpen(true);\n    }\n  };\n  const handleRearrange = () => {\n    closeAll();\n    onRefresh();\n  };\n\n  const handleClearClick = () => {\n    console.log('clear open', clearOpen);\n    if (clearOpen) {\n      setClearOpen(false);\n    } else {\n      closeAll();\n      setClearOpen(true);\n    }\n  };\n\n  const handleClearClose = () => setClearOpen(false);\n  const handleClearSubmit = () => {\n    handleClearClose();\n    handleClear();\n  };\n\n  console.log('clear open', clearOpen);\n  console.log('rendering desktop controls');\n  return (\n    <DesktopDrawer anchor=\"left\">\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\" ref={innerRef}>\n        <List\n          sx={{\n            backgroundColor: 'black',\n            borderRadius: '0 10px 10px 0',\n          }}\n        >\n          <DBNA\n            label=\"Rearrange\"\n            icon={<AutoAwesomeMosaicIcon />}\n            handleChange={handleRearrange}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Photos\"\n            icon={<PhotoIcon />}\n            handleChange={handlePhotosClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Edit\"\n            icon={<EditIcon />}\n            handleChange={handleEditClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label={saveType === 'new' ? 'Clear' : 'Delete'}\n            icon={saveType === 'new' ? <RefreshIcon /> : <DeleteIcon />}\n            handleChange={handleClearClick}\n          />\n        </List>\n        {imageOptionsOpen ? photosComp : null}\n        {editOptionsOpen ? <div ref={editRef}>{editComp}</div> : null}\n        <ClearCollageDialog\n          open={clearOpen}\n          onSubmit={handleClearSubmit}\n          onCancel={handleClearClose}\n          saveType={saveType}\n        />\n      </Stack>\n    </DesktopDrawer>\n  );\n}\n\nDesktopControls.propTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  photosComp: PropTypes.node.isRequired,\n  editComp: PropTypes.node.isRequired,\n  handleClear: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopImageOptions({ onDelete, onAdd, clearDelete }) {\n  const handleAdd = () => {\n    clearDelete();\n    onAdd();\n  };\n\n  return (\n    <List\n      sx={{\n        backgroundColor: 'black',\n        borderRadius: '10px 10px 10px 10px',\n        height: 'fit-content',\n      }}\n    >\n      <DBNA\n        label=\"Add\"\n        icon={<AddPhotoAlternateIcon />}\n        handleChange={handleAdd}\n      />\n      <ControlsDivider />\n      <DBNA label=\"Delete\" icon={<DeleteIcon />} handleChange={onDelete} />\n    </List>\n  );\n}\n\nDesktopImageOptions.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\n\nexport default function EditControl({\n  paddingControl,\n  radiusControl,\n  colorControl,\n  textControl,\n}) {\n  return (\n    <Stack\n      direction=\"column\"\n      spacing={4}\n      sx={{\n        p: 3,\n        backgroundColor: 'black',\n        borderRadius: '10px 10px 10px 10px',\n        boxShadow: '0 0 10px inset rgba(255, 0, 0, 0.3)',\n      }}\n    >\n      {paddingControl}\n      {radiusControl}\n      {colorControl}\n      {textControl}\n    </Stack>\n  );\n}\n\nEditControl.propTypes = {\n  paddingControl: PropTypes.node.isRequired,\n  radiusControl: PropTypes.node.isRequired,\n  colorControl: PropTypes.node.isRequired,\n  textControl: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n\nexport default function MBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      value={label.toLowerCase()}\n      icon={icon}\n      sx={{\n        fontWeight: 'bold',\n        color: 'gray',\n        '&.Mui-selected': { color: 'white', outline: 'none' },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\n\nMBNA.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function MobileActions({ actionsRef, onDownload, onSave }) {\n  return (\n    <BottomNavigation\n      ref={actionsRef}\n      showLabels\n      sx={{ py: 1, fontWeight: 'bold', backgroundColor: alpha('#000', 0.6) }}\n    >\n      <MBNA label=\"Save\" icon={<SaveIcon />} handleChange={onSave} />\n      <MBNA\n        label=\"Download\"\n        icon={<DownloadIcon />}\n        handleChange={onDownload}\n      />\n      <MBNA label=\"Print\" icon={<PrintIcon />} handleChange={() => {}} />\n    </BottomNavigation>\n  );\n}\n\nMobileActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { alpha } from '@mui/material/styles';\n\nexport default function MainControls({ value, handleChange, saveType }) {\n  return (\n    <BottomNavigation\n      showLabels\n      value={value}\n      onChange={handleChange}\n      sx={{\n        fontWeight: 'bold',\n        backgroundColor: alpha('#fff', 0.2),\n        '&.Mui-selected': { color: 'white' },\n      }}\n    >\n      <BottomNavigationAction\n        label=\"Rearrange\"\n        value=\"rearrange\"\n        icon={<AutoAwesomeMosaicIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Photos\"\n        value=\"photo\"\n        icon={<PhotoIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Edit\"\n        value=\"edit\"\n        icon={<EditIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label={saveType === 'new' ? 'Clear' : 'Delete'}\n        value=\"clear\"\n        icon={saveType === 'new' ? <RefreshIcon /> : <DeleteIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n    </BottomNavigation>\n  );\n}\n\nMainControls.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport Typography from '@mui/material/Typography';\nimport PaddingIcon from '@mui/icons-material/Padding';\nimport CropFreeIcon from '@mui/icons-material/CropFree';\nimport SquareIcon from '@mui/icons-material/Square';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TitleIcon from '@mui/icons-material/Title';\nimport { alpha } from '@mui/material/styles';\n\nexport default function EditOptions({\n  color,\n  editOptionsValue,\n  open,\n  handleOptionsClose,\n  handleEditOptionsClick,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={editOptionsValue}\n        onChange={handleEditOptionsClick}\n        sx={{\n          display: 'flex',\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          position: 'relative',\n          alignItems: 'center',\n        }}\n      >\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Padding\n            </Typography>\n          }\n          value=\"padding\"\n          icon={<PaddingIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Corner\n            </Typography>\n          }\n          value=\"border radius\"\n          icon={<CropFreeIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Color\n            </Typography>\n          }\n          value=\"color\"\n          icon={\n            <SquareIcon\n              sx={{\n                fill: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n                borderRadius: '5px',\n              }}\n            />\n          }\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label=\"Text\"\n          value=\"text\"\n          icon={<TitleIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nEditOptions.propTypes = {\n  editOptionsValue: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleEditOptionsClick: PropTypes.func.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function ImageOptions({\n  open,\n  value,\n  handleOptionsClose,\n  handleDelete,\n  handleAdd,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={value}\n        sx={{\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          '&.Mui-selected': { color: 'white' },\n        }}\n      >\n        <MBNA\n          label=\"Delete\"\n          icon={<DeleteIcon />}\n          handleChange={handleDelete}\n        />\n        <MBNA\n          label=\"Add\"\n          icon={<AddPhotoAlternateIcon />}\n          handleChange={handleAdd}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nImageOptions.propTypes = {\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect, useRef } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport { alpha } from '@mui/material/styles';\n\nimport MainControls from 'components/collage/MainControls';\nimport EditOptions from 'components/collage/EditOptions';\nimport ImageOptions from 'components/collage/ImageOptions';\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function MobileControls({\n  optionProps,\n  actionProps,\n  dimensionProps,\n  handleClear,\n  saveType,\n  paddingControl,\n  radiusControl,\n  colorControl,\n  textControl,\n  editControl,\n  handleEditControl,\n  editOptionsValue,\n  handleEditOptionsValue,\n}) {\n  const { options, handleColorClick, displayColorPicker } = optionProps;\n  const { onRefresh, onDelete, clearDelete } = actionProps;\n  const { footerRef, handleImageAddClick } = dimensionProps;\n\n  const [mainOpen, setMainOpen] = useState(true);\n  const [value, setValue] = useState('');\n  const [editOpen, setEditOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageValue, setImageValue] = useState('');\n  const editRef = useRef(null);\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (editRef.current && !editRef.current.contains(event.target)) {\n        handleEditControl(null);\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [editRef]);\n\n  const handleImageOptionsClose = () => {\n    setImageOpen(false);\n    setImageValue('');\n    setMainOpen(true);\n    clearDelete();\n    setValue('');\n  };\n\n  const handleEditOptionsClose = () => {\n    setEditOpen(false);\n    handleEditControl(null);\n    handleEditOptionsValue('');\n    setMainOpen(true);\n    setValue('');\n  };\n\n  const handleEditOptionsClick = (e, nV) => {\n    console.log('handle edit options click');\n    handleEditOptionsValue(nV);\n    if (nV === 'padding') {\n      handleEditControl(paddingControl);\n    } else if (nV === 'border radius') {\n      handleEditControl(radiusControl);\n    } else if (nV === 'color') {\n      handleColorClick();\n    } else if (nV === 'text') {\n      console.log(nV);\n      handleEditControl(textControl);\n    }\n  };\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'padding') {\n      handleEditControl(paddingControl);\n    }\n  }, [options.padding, editOpen]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'border radius') {\n      handleEditControl(radiusControl);\n    }\n  }, [options.borderRadius, editOpen]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'color' && !!displayColorPicker) {\n      handleEditControl(colorControl);\n    }\n  }, [options.color, editOpen, displayColorPicker]);\n\n  useEffect(() => {\n    console.log('text control useEffect');\n    if (editOpen && editOptionsValue === 'text') {\n      handleEditControl(textControl);\n    }\n  }, [options.text, editOpen, options.topText]);\n\n  const handleImageClose = () => {\n    setImageValue('');\n    setImageOpen(false);\n    setMainOpen(true);\n  };\n\n  const handleChange = (event, newValue) => {\n    clearDelete();\n    handleImageClose();\n    handleEditOptionsClose();\n    setValue(newValue);\n    if (newValue === 'rearrange') {\n      onRefresh();\n    } else if (newValue === 'photo') {\n      setMainOpen(false);\n      setImageOpen(true);\n    } else if (newValue === 'edit') {\n      setMainOpen(false);\n      setEditOpen(true);\n    } else if (newValue === 'clear') {\n      setClearOpen(true);\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  const handleImageAdd = () => {\n    clearDelete();\n    handleImageAddClick();\n  };\n\n  const handleClearSubmit = () => {\n    handleClear();\n    setClearOpen(false);\n    setValue('');\n  };\n\n  const handleClearCancel = () => {\n    setClearOpen(false);\n    setValue('');\n  };\n\n  console.log('rerendering', editControl);\n  return (\n    <Paper\n      ref={footerRef}\n      sx={{\n        position: 'fixed',\n        top: Math.min(window.innerHeight, window.screen.availHeight),\n        // bottom: 0,\n        // left: 0,\n        // right: 0,\n        // mt: 1,\n        backgroundColor: 'black',\n        borderRadius: 0,\n        width: Math.min(window.innerWidth, window.screen.availWidth),\n        transform: 'translate(0, -100%)',\n      }}\n      elevation={4}\n    >\n      <ClearCollageDialog\n        open={clearOpen}\n        onSubmit={handleClearSubmit}\n        onCancel={handleClearCancel}\n        saveType={saveType}\n      />\n      {editControl !== null ? (\n        <Box\n          ref={editRef}\n          sx={{\n            backgroundColor: alpha('#fff', 0.15),\n            p: 1,\n          }}\n        >\n          {editControl}\n        </Box>\n      ) : null}\n      <ImageOptions\n        open={imageOpen}\n        value={imageValue}\n        handleDelete={onDelete}\n        handleAdd={handleImageAdd}\n        handleOptionsClose={handleImageOptionsClose}\n      />\n      <EditOptions\n        color={options.color}\n        editOptionsValue={editOptionsValue}\n        open={editOpen}\n        handleOptionsClose={handleEditOptionsClose}\n        handleEditOptionsClick={handleEditOptionsClick}\n      />\n      {mainOpen ? (\n        <MainControls\n          value={value}\n          handleChange={handleChange}\n          saveType={saveType}\n        />\n      ) : null}\n    </Paper>\n  );\n}\n\nMobileControls.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n  }).isRequired,\n  actionProps: PropTypes.shape({\n    onRefresh: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    clearDelete: PropTypes.func.isRequired,\n  }).isRequired,\n  handleClear: PropTypes.func.isRequired,\n  dimensionProps: PropTypes.shape({\n    handleImageAddClick: PropTypes.func.isRequired,\n    footerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n  saveType: PropTypes.oneOf(['new', 'existing']).isRequired,\n  paddingControl: PropTypes.node.isRequired,\n  radiusControl: PropTypes.node.isRequired,\n  colorControl: PropTypes.node.isRequired,\n  textControl: PropTypes.node.isRequired,\n  editControl: PropTypes.node.isRequired,\n  handleEditControl: PropTypes.func.isRequired,\n  editOptionsValue: PropTypes.node.isRequired,\n  handleEditOptionsValue: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\n// import ListItemText from '@mui/material/ListItemText';\n// import ListItemIcon from '@mui/material/ListItemIcon';\n\nexport default function CollageType({ type, handleChange, sizes }) {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n      <Typography\n        sx={{\n          color: 'form.input',\n          fontSize: '0.87rem',\n          fontWeight: 'bold',\n        }}\n      >\n        Type:{' '}\n      </Typography>\n      <FormControl\n        variant=\"standard\"\n        size=\"small\"\n        margin=\"none\"\n        hiddenLabel\n        sx={{ alignItems: 'center' }}\n      >\n        <Select\n          id=\"demo-simple-select-standard\"\n          value={type}\n          onChange={handleChange}\n          label=\"CollageType\"\n          disableUnderline\n          inputProps={{\n            sx: {\n              p: 0,\n              fontWeight: 'bold',\n              fontSize: '0.82rem',\n              color: 'primary.main',\n              pl: 1,\n              minWidth: '40px',\n              alignItems: 'end',\n              display: 'flex',\n              minHeight: '30px',\n            },\n          }}\n        >\n          {Object.keys(sizes).map((key) => (\n            <MenuItem\n              divider\n              key={sizes[key].text}\n              value={key}\n              sx={{\n                alignItems: 'center',\n                // p: '5px',\n                px: 1,\n                minHeight: '35px',\n                fontSize: '0.87rem',\n                fontWeight: 'bold',\n                color: 'gray',\n              }}\n            >\n              {sizes[key].icon}\n              {sizes[key].text}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Stack>\n  );\n}\n\nCollageType.propTypes = {\n  type: PropTypes.string.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      icon: PropTypes.node,\n    })\n  ).isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\n\nexport default function CollageImageCount({ count }) {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n      <Typography\n        sx={{\n          color: 'form.input',\n          fontSize: '0.87rem',\n          fontWeight: 'bold',\n          px: 1,\n        }}\n      >\n        Images:\n      </Typography>\n      <Typography\n        sx={{\n          color: 'primary.main',\n          fontSize: '0.87rem',\n          fontWeight: 'bold',\n          p: 0,\n        }}\n      >\n        {count}\n      </Typography>\n    </Stack>\n  );\n}\n\nCollageImageCount.propTypes = {\n  count: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport CollageType from 'components/collage/CollageType';\nimport CollageImageCount from 'components/collage/CollageImageCount';\n\nexport default function CollageMetaInfo({\n  collageMetaRef,\n  collageType,\n  width,\n  sizes,\n  handleTypeChange,\n  imageCount,\n}) {\n  const handleChange = (event) => {\n    const ct = event.target.value;\n    handleTypeChange(ct);\n  };\n\n  return (\n    <Stack\n      ref={collageMetaRef}\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-around\"\n      sx={{\n        width,\n        textAlign: 'middle',\n        px: 1,\n      }}\n    >\n      <CollageType\n        type={collageType}\n        sizes={sizes}\n        handleChange={handleChange}\n      />\n      <CollageImageCount count={imageCount} />\n    </Stack>\n  );\n}\n\nCollageMetaInfo.propTypes = {\n  collageType: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      icon: PropTypes.node,\n    })\n  ).isRequired,\n  handleTypeChange: PropTypes.func.isRequired,\n  imageCount: PropTypes.number.isRequired,\n  collageMetaRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function PaddingControl({ padding, handlePaddingChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n          mixBlendMode: 'difference',\n        }}\n      >\n        Padding\n      </Typography>\n      <Slider\n        aria-label=\"Padding\"\n        defaultValue={0}\n        value={padding}\n        valueLabelDisplay=\"auto\"\n        step={0.1}\n        min={0}\n        max={10}\n        onChange={handlePaddingChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nPaddingControl.propTypes = {\n  padding: PropTypes.number.isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function RadiusControl({ radius, handleRadiusChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n        }}\n      >\n        Corner Radius\n      </Typography>\n      <Slider\n        aria-label=\"Corner Radius\"\n        defaultValue={0}\n        value={radius}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        min={0}\n        max={40}\n        onChange={handleRadiusChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nRadiusControl.propTypes = {\n  radius: PropTypes.number.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport * as yup from 'yup';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport constants from 'static/config/collage';\nimport utils from 'utils';\n\nexport default function TextControl({\n  text,\n  handleTextChange,\n  topText,\n  handlePositionChange,\n  handleTextSubmit,\n  textError,\n  handleTextError,\n}) {\n  const textSchema = yup\n    .object({\n      text: yup\n        .string()\n        .max(\n          constants.maxColllageTextLength,\n          `Max allowed length is ${constants.maxColllageTextLength}`\n        ),\n    })\n    .required();\n\n  const isValid = async () => {\n    const textValid = await utils.isFieldValid(\n      'text',\n      text,\n      handleTextError,\n      textSchema\n    );\n    return textValid;\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      handleTextSubmit(e);\n    }\n  };\n\n  useEffect(() => isValid(), [text]);\n\n  return (\n    <Stack\n      sx={{\n        backgroundColor: 'transparent',\n      }}\n    >\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        spacing={2}\n      >\n        <Typography\n          sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n        >\n          Collage Text\n        </Typography>\n        <FormGroup row>\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === false}\n                onChange={() => handlePositionChange(false)}\n                sx={{ color: 'white', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Bottom\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold' }}\n          />\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === true}\n                onChange={() => handlePositionChange(true)}\n                sx={{ color: 'gray', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Top\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold', fontSize: '0.8rem' }}\n          />\n        </FormGroup>\n      </Stack>\n      <TextField\n        variant=\"outlined\"\n        label=\"\"\n        defaultValue={text}\n        onKeyDown={handleKeyDown}\n        size=\"small\"\n        sx={{ width: '100%', mb: 1 }}\n        onChange={handleTextChange}\n        InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n        helperText={\n          <Typography sx={{ fontSize: '0.75rem' }}>{textError}</Typography>\n        }\n        error={!!textError}\n      />\n    </Stack>\n  );\n}\n\nTextControl.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  handlePositionChange: PropTypes.func.isRequired,\n  handleTextSubmit: PropTypes.func.isRequired,\n  textError: PropTypes.string.isRequired,\n  handleTextError: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { ChromePicker } from 'react-color';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function ColorControl({\n  color,\n  displayColorPicker,\n  handleClick,\n  handleClose,\n  handleChange,\n}) {\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      spacing={2}\n      sx={{ my: 2 }}\n    >\n      <Typography\n        sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n      >\n        Background Color\n      </Typography>\n      <Box\n        component=\"div\"\n        sx={{\n          padding: '2px',\n          background: '#fff',\n          borderRadius: '5px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        }}\n        onClick={handleClick}\n      >\n        <Box\n          component=\"div\"\n          sx={{\n            width: '70px',\n            height: '30px',\n            borderRadius: '18px',\n            background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n          }}\n        />\n      </Box>\n      <ColorPicker\n        open={displayColorPicker}\n        color={color}\n        handleClose={handleClose}\n        handleChange={handleChange}\n      />\n    </Stack>\n  );\n}\n\nColorControl.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport function ColorPicker({ open, color, handleClose, handleChange }) {\n  console.log(handleClose);\n  return open ? (\n    <>\n      <Box\n        component=\"div\"\n        sx={{\n          position: 'absolute',\n          zIndex: 3,\n          bottom: 10,\n        }}\n      >\n        <IconButton\n          sx={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            zIndex: 2,\n            backgroundColor: 'button.main',\n            p: 0,\n            transform: 'translate(0, -110%)',\n            border: '2px solid black',\n          }}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n        <ChromePicker color={color} onChange={handleChange} />\n      </Box>\n    </>\n  ) : null;\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\n\nexport default function CommonDialog({ open, message, progress, onClose }) {\n  return (\n    <Dialog open={open}>\n      {progress !== true ? (\n        <DialogTitle\n          sx={{ textAlign: 'center', color: 'info', fontWeight: 'bold' }}\n        >\n          Info\n        </DialogTitle>\n      ) : null}\n      <DialogContent dividers={progress !== true}>\n        <Stack\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          {progress === true ? <CircularProgress /> : null}\n          <Typography variant=\"h6\">{message}</Typography>\n        </Stack>\n      </DialogContent>\n      {progress === false ? (\n        <DialogActions>\n          <Button variant=\"text\" onClick={onClose}>\n            Close\n          </Button>\n        </DialogActions>\n      ) : null}\n    </Dialog>\n  );\n}\n\nCommonDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  message: PropTypes.string.isRequired,\n  progress: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport useBase from 'hooks/collage/base';\nimport { useNavigate } from 'react-router-dom';\nimport constants from 'static/config/collage';\nimport HandleError from 'hocs/handle-error';\nimport Box from '@mui/material/Box';\n\nimport Collage from 'components/collage/Collage';\nimport DownloadDialog from 'components/collage/DownloadDialog';\nimport SaveDialog from 'components/collage/SaveDialog';\nimport SaveStatusDialog from 'components/collage/SaveStatusDialog';\nimport Header from 'components/collage/Header';\nimport Loading from 'components/Loading';\nimport View from 'components/collage/View';\n\nimport DesktopActions from 'components/collage/DesktopActions';\nimport DesktopControls from 'components/collage/DesktopControls';\nimport DesktopImageOptions from 'components/collage/DesktopImageOptions';\nimport EditControl from 'components/collage/EditControl';\nimport MobileActions from 'components/collage/MobileActions';\nimport MobileControls from 'components/collage/MobileControls';\nimport CollageMetaInfo from 'components/collage/CollageMetaInfo';\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport TextControl from 'components/collage/TextControl';\nimport ColorControl, { ColorPicker } from 'components/collage/ColorControl';\nimport CommonDialog from 'components/collage/CommonDialog';\n\nexport default function BaseCollage({ getCollage, clearCollage, saveType }) {\n  const { paperSizes } = constants;\n  const navigate = useNavigate();\n  const [details, setDetails] = useState({});\n  const [status, setStatus] = useState('fetching');\n  const [commonOpen, setCommonOpen] = useState(false);\n  const [commonMessage, setCommonMessage] = useState('');\n  const [commonProgress, setCommonProgress] = useState(false);\n  const [nameError, setNameError] = useState('');\n  const [textError, setTextError] = useState('');\n\n  console.log('details', details);\n\n  const [\n    collageType,\n    ,\n    collageName,\n    ,\n    ,\n    dimensionProps,\n    optionProps,\n    actionProps,\n    imageProps,\n    treeProps,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n    saveCollage,\n    handleCollageTypeChange,\n    handleNameChange,\n  ] = useBase(details);\n\n  const openCommonDialog = (message, progress) => {\n    if (message !== '') {\n      setCommonMessage(message);\n      setCommonProgress(progress);\n      setCommonOpen(true);\n    }\n  };\n\n  const closeCommonDialog = () => {\n    if (imageProps.imageCountMinError !== '') {\n      handleClear();\n      imageProps.setImageCountMinError('');\n    }\n    if (imageProps.imageCountMaxError !== '') {\n      imageProps.setImageCountMaxError('');\n    }\n    setCommonProgress(false);\n    setCommonMessage('');\n    setCommonOpen(false);\n  };\n\n  useEffect(\n    () => imageProps.handleImageCount(imageProps.imgCount),\n    [imageProps.imgCount]\n  );\n\n  useEffect(() => {\n    if (imageProps.imageCountMinError !== '') {\n      openCommonDialog(imageProps.imageCountMinError, false);\n    }\n    if (imageProps.imageCountMinError !== '') {\n      openCommonDialog(imageProps.imageCountMaxError, false);\n    }\n  }, [imageProps.imageCountMinError, imageProps.imageCountMaxError]);\n\n  if (\n    imageProps.imgCount === constants.minImages &&\n    actionProps.removeImage === true\n  ) {\n    actionProps.setRemoveImage(false);\n    openCommonDialog(\n      `Need atleast ${constants.minImages} images for collage`,\n      false\n    );\n  }\n\n  const errors = [\n    nameError,\n    textError,\n    imageProps.imageCountMaxError,\n    imageProps.imageCountMinError,\n  ].filter((el) => el !== '');\n\n  const {\n    options,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClose,\n    handleColorClick,\n    handleColorChange,\n    handleTextChange,\n    handlePositionChange,\n    displayColorPicker,\n    editControl,\n    setEditControl,\n    editOptionsValue,\n    setEditOptionsValue,\n    handleTextSubmit,\n  } = optionProps;\n\n  useEffect(async () => {\n    if (Object.keys(details).length === 0) {\n      if (saveType === 'existing') {\n        const collageDetails = await getCollage(\n          imageProps.setImageCount,\n          imageProps.incrementNewImageCount\n        );\n        setDetails(collageDetails);\n      }\n      setStatus('fetch end');\n    }\n  }, []);\n\n  useEffect(() => {\n    let st = status;\n    if (st === 'fetching' && saveType === 'new') st = 'empty';\n    if (imageProps.imgCount === 0 && st === 'ready') {\n      st = 'empty';\n    }\n    if (\n      imageProps.imgCount === 0 &&\n      Object.keys(details).length === 0 &&\n      st === 'fetch end'\n    ) {\n      st = 'empty';\n    }\n    if (\n      imageProps.images.length > 0 &&\n      imageProps.images.length === imageProps.imgCount\n    ) {\n      st = 'preparing';\n    }\n    if (imageProps.loaded >= imageProps.imgCount && imageProps.imgCount > 0) {\n      st = 'ready';\n    }\n    if (\n      imageProps.imgCount >= constants.minImages &&\n      imageProps.images.length < imageProps.imgCount\n    ) {\n      st = 'loading';\n    }\n    if (imageProps.imageCountMinError !== '') {\n      st = 'empty';\n      openCommonDialog(imageProps.imageCountMinError, false);\n    }\n    if (imageProps.imageCountMaxError !== '') {\n      if (imageProps.imgCount === 0) {\n        st = 'empty';\n      } else {\n        st = 'ready';\n      }\n      openCommonDialog(imageProps.imageCountMaxError, false);\n    }\n    setStatus(st);\n  }, [imageProps]);\n\n  const clearAll = async () => {\n    openCommonDialog('Deleting Collage', true);\n    setDetails({});\n    handleClear();\n    await clearCollage();\n    setStatus('fetch end');\n    closeCommonDialog();\n    if (saveType === 'existing') {\n      openCommonDialog('Navigating to collages page', true);\n      setTimeout(() => {\n        closeCommonDialog();\n        navigate('/collages');\n      }, 3000);\n    }\n  };\n\n  const handleSave = async (name) => {\n    actionProps.onSaveClick();\n    const res =\n      saveType === 'new' ? await newCollage(name) : await saveCollage(name);\n    if (res) {\n      setTimeout(() => {\n        if (saveType === 'new') clearAll();\n        actionProps.setSaveStart(false);\n        navigate('/collages');\n      }, 3000);\n    }\n  };\n\n  const downloadDialog = (\n    <HandleError errors={errors} handleClose={actionProps.onDownloadClose}>\n      <DownloadDialog\n        open={actionProps.open}\n        onClick={actionProps.onDownloadClick}\n        onClose={actionProps.onDownloadClose}\n        sizes={paperSizes}\n      />\n    </HandleError>\n  );\n\n  const saveDialog = (\n    <HandleError errors={errors} handleClose={actionProps.onSaveClose}>\n      <SaveDialog\n        collageName={collageName}\n        open={actionProps.saveOpen}\n        onClick={handleSave}\n        onClose={actionProps.onSaveClose}\n      />\n    </HandleError>\n  );\n\n  const saveStatusDialog = (\n    <SaveStatusDialog open={actionProps.saveStart} status={saveStatus} />\n  );\n\n  const collage = (\n    <Collage\n      dimensionProps={dimensionProps}\n      imageProps={imageProps}\n      actionProps={actionProps}\n      collageCallback={collageCallback}\n      handleRemoveImage={handleRemoveImage}\n      options={optionProps.options}\n      tree={treeProps.tree}\n    />\n  );\n\n  const paddingControl = (\n    <PaddingControl\n      padding={options.padding}\n      handlePaddingChange={handlePaddingChange}\n    />\n  );\n\n  const radiusControl = (\n    <RadiusControl\n      radius={options.borderRadius}\n      handleRadiusChange={handleRadiusChange}\n    />\n  );\n\n  const colorControl = (\n    <ColorPicker\n      open={displayColorPicker}\n      color={options.color}\n      handleChange={handleColorChange}\n      handleClose={() => {\n        setEditControl(null);\n        handleColorClose();\n      }}\n    />\n  );\n\n  const desktopColorControl = (\n    <ColorControl\n      color={options.color}\n      displayColorPicker={displayColorPicker}\n      handleChange={handleColorChange}\n      handleClose={handleColorClose}\n      handleClick={handleColorClick}\n    />\n  );\n\n  const textControl = (\n    <TextControl\n      text={options.text}\n      handleTextChange={handleTextChange}\n      topText={options.topText}\n      handlePositionChange={handlePositionChange}\n      handleTextSubmit={handleTextSubmit}\n      textError={textError}\n      handleTextError={setTextError}\n    />\n  );\n\n  const mobileControls = (\n    <MobileControls\n      optionProps={optionProps}\n      actionProps={actionProps}\n      dimensionProps={dimensionProps}\n      handleClear={clearAll}\n      saveType={saveType}\n      paddingControl={paddingControl}\n      radiusControl={radiusControl}\n      colorControl={colorControl}\n      textControl={textControl}\n      editControl={editControl}\n      handleEditControl={setEditControl}\n      editOptionsValue={editOptionsValue}\n      handleEditOptionsValue={setEditOptionsValue}\n    />\n  );\n\n  const header = (\n    <Header\n      headerRef={dimensionProps.headerRef}\n      name={collageName}\n      handleNameChange={handleNameChange}\n      nameError={nameError}\n      handleNameError={setNameError}\n    />\n  );\n\n  const desktopPhotosComp = (\n    <DesktopImageOptions\n      onDelete={actionProps.onDelete}\n      onAdd={dimensionProps.handleImageAddClick}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n\n  const desktopEditComp = (\n    <EditControl\n      paddingControl={paddingControl}\n      radiusControl={radiusControl}\n      colorControl={desktopColorControl}\n      textControl={textControl}\n    />\n  );\n\n  const desktopControls = (\n    <DesktopControls\n      innerRef={dimensionProps.footerRef}\n      onRefresh={actionProps.onRefresh}\n      photosComp={desktopPhotosComp}\n      editComp={desktopEditComp}\n      handleClear={clearAll}\n      clearDelete={actionProps.clearDelete}\n      saveType={saveType}\n    />\n  );\n\n  const isMobile = window.innerWidth < window.innerHeight;\n  const controls = isMobile ? mobileControls : desktopControls;\n\n  const onSave = async () => actionProps.handleSave();\n\n  const actionsComp = isMobile ? (\n    <MobileActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={onSave}\n    />\n  ) : (\n    <DesktopActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={onSave}\n    />\n  );\n\n  const collageMetaInfo = (\n    <CollageMetaInfo\n      collageMetaRef={dimensionProps.collageMetaRef}\n      collageType={collageType}\n      width={dimensionProps.width}\n      sizes={paperSizes}\n      handleTypeChange={handleCollageTypeChange}\n      imageCount={imageProps.imgCount}\n    />\n  );\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'blue',\n        height: Math.min(window.innerHeight, window.screen.availHeight),\n        overflow: 'hidden',\n      }}\n    >\n      <View\n        open={actionProps.open}\n        saveOpen={actionProps.saveOpen}\n        saveStatusOpen={actionProps.saveStart}\n        dimensionProps={dimensionProps}\n        imageProps={imageProps}\n        header={header}\n        actions={actionsComp}\n        downloadDialog={downloadDialog}\n        saveDialog={saveDialog}\n        saveStatusDialog={saveStatusDialog}\n        collage={collage}\n        controls={controls}\n        status={status}\n        saveType={saveType}\n        collageMetaInfo={collageMetaInfo}\n      />\n      <input\n        ref={dimensionProps.addImageRef}\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={imageProps.handleLoad}\n      />\n      {actionProps.generate ? <Loading title=\"Creating collage ...\" /> : null}\n      <CommonDialog\n        open={commonOpen}\n        message={commonMessage}\n        progress={commonProgress}\n        onClose={closeCommonDialog}\n      />\n    </Box>\n  );\n}\n\nBaseCollage.defaultProps = {\n  getCollage: () => {},\n  clearCollage: () => {},\n};\n\nBaseCollage.propTypes = {\n  getCollage: PropTypes.func,\n  clearCollage: PropTypes.func,\n  saveType: PropTypes.string.isRequired,\n};\n"],"names":["url","body","params","method","fetch","then","response","resp","console","log","newCollage","collageID","collageDetails","collage_id","helpers","process","JSON","stringify","error","saveCollage","upload","listCollages","nextToken","next_token","getThumbnail","collageId","getCollage","deleteCollage","checkOptimizeStatus","get","path","newUrl","options","credentials","headers","Headers","URLSearchParams","toString","ok","status","document","cookie","json","post","apiUrl","deleteMethod","OptionsButton","children","onClick","name","Button","id","variant","component","sx","color","borderRadius","backgroundColor","padding","defaultProps","AddPhotos","handleChange","type","hidden","multiple","accept","onChange","fontSize","Typography","fontWeight","defaultCollageName","defaultCollageType","tolerance","resizeImageWidth","lineHeight","textPadding","thumbnailHeight","maxNameLength","maxColllageTextLength","minImages","maxImages","paperSizes","A4","width","height","text","icon","Description","mr","A3","A4LandScape","transform","A3LandScape","FBCoverDesktop","Facebook","fill","FBCoverMobile","FBPost","WhatsappStatus","WhatsApp","InstaStory","Instagram","background","getClosest","arr","index1","index2","target","downscaleImage","image","newWidth","newHeight","fileType","canvas","createElement","getContext","drawImage","toDataURL","event","handleImageCount","handleNewImageCount","handleImageData","files","cnt","length","Array","from","map","file","Image","onload","e","naturalWidth","naturalHeight","src","aspectRatio","imageDetail","title","Date","now","targetAspectRatio","URL","createObjectURL","revokeObjectURL","getCollageDimension","maxW","maxH","a","origAR","wrapText","x","y","maxWidth","textCanvas","ctx","font","textAlign","tempX","tempY","words","split","line","testLine","lineArray","n","measureText","push","getTextHeight","scaleFactor","constants","getCut","Math","round","random","findClosest","start","end","mid","findImgPair","i","j","minMatchingCost","abs","getAspectRatio","cut","ar1","ar2","handleImageLoad","resizeImages","originalImages","handleImages","addImagesToDB","tempImages","forEach","origImage","tempImage","imgs","ind","findIndex","elem","slice","convertToRGBA","value","r","g","b","convertBase64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","result","onerror","convertBase64String","readAsD","Blob","textCanvasDraw","textArray","position","canvasWidth","textHeight","textBaseline","fillStyle","fillRect","chunk","textPart","fillText","getImageDimensions","paperWidth","paperHeight","optimizeDimensions","maxPrintWidth","maxPrintHeight","problematicNodes","ar","optimumTreeSizes","pn","newRootWidth","newRootHeight","sort","optimizeImage","TextDisplay","Stack","alpha","top","paddingX","fontFamily","letterSpacing","Node","this","left","right","obj","fromObject","getScore","output","concat","display","copyNode","copy","newImages","replaceImages","rest","removeImageData","imageData","find","addImageData","delImg","handleRemoveImage","yOffset","xOffset","handleCollageImageLoad","newX","newY","Box","alt","onLoad","Tooltip","IconButton","size","bgcolor","Delete","DOMDisplay","RenderImage","tempCanvas","tempCtx","floor","log2","radius","clipwidth","clipheight","save","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","canvasElement","CanvasDisplay","newImg","ResizeImage","ImageStyling","clearRect","images","tar","imageCount","targetAspectRatioArr","closestIndex","restImages","leftIndex","rightIndex","filter","item","index","includes","first","second","generate","th","adjustments","adjust","parentWidth","parentHeight","parentX","parentY","parentCut","nodeType","addSize","validateAddSize","lV","lPN","rV","rPN","valid","BinaryTree","undefined","root","tempTree","canvasHeight","topText","lA","score","min","trys","bestAdjust","bestAspectRatio","tolerableDifference","ajstCnt","diff","copyTree","findBestAdjustTree","imageWidth","imageHeight","sortedImages","collageArray","imgTree","generateCollageTree","aspR","bAR","toFixed","maxScore","maxElem","element","generateScore","uploadCollageImages","thumbnailCanvas","imageURLS","uploadCallback","imagePromises","Object","keys","thumbnailKey","toBlob","blob","collageapi","Img","img","verifyPromises","uploadPromises","useBase","initialValue","useState","details","setDetails","collageName","setCollageName","collageType","setCollageType","uploadedImages","setUploadedImages","dimensions","headerRef","useRef","actionsRef","footerRef","collageMetaRef","addImageRef","setHeight","setImageHeight","setImageWidth","setWidth","maxHeight","setMaxHeight","setMaxWidth","setTextHeight","setDimensions","isMobile","window","innerWidth","innerHeight","headerHeight","current","offsetHeight","collageMetaHeight","otherHeight","screen","availWidth","availHeight","actionsWidth","offsetWidth","footerWidth","useEffect","addEventListener","removeEventListener","handleImageAddClick","click","useDimensions","optionsInitValue","setOptions","displayColorPicker","setDisplayColorPicker","editControl","setEditControl","editOptionsValue","setEditOptionsValue","handleTextChange","opts","clear","handlePaddingChange","handleRadiusChange","handleColorClick","dcp","handleColorClose","handleColorChange","clr","rgb","handlePositionChange","handleTextSubmit","useOptions","actions","open","setOpen","saveOpen","setSaveOpen","saveStart","setSaveStart","refresh","setRefresh","setGenerate","removeImage","setRemoveImage","printOptions","setPrintOptions","clearDelete","handleDownload","handleGenerateCallback","onDelete","ri","onDownloadClick","w","h","onDownloadClose","onRefresh","onSaveClose","onSaveClick","handleSave","useActions","newImgCount","setNewImageCount","newImagesLoaded","setNewImagesLoaded","imgCount","setImageCount","loaded","setLoaded","setImages","imageCountMaxError","setImageCountMaxError","imageCountMinError","setImageCountMinError","totalImages","handleLoad","remove","removeIndex","newImagesArr","getImageData","imageArr","incrementNewImageCount","useImages","treeState","loadingCallback","tree","setTree","newTree","reAdjust","imagesArr","treeUtils","bestAspectRatioTree","addOptions","useTree","thumbnail","setThumbnail","finalizing","saveStatus","setSaveStatus","updateStatus","key","st","generateThumbnail","thumbnailWidth","thumbnailTree","thumbnailDetails","getDetails","collage_type","created_at","last_updated_at","updateCollage","getURLS","thumbDets","getURLSResp","allSettled","apiHelpers","updateTreeAspectRatio","imagesText","iDets","tH","totalTextHeight","imgTitle","ct","newName","HandleError","errors","handleClose","Dialog","fullWidth","DialogTitle","DialogContent","dividers","alignItems","justifyContent","DialogContentText","pr","List","px","err","ListItem","listStyleType","DialogActions","Collage","dimensionProps","imageProps","actionProps","collageCallback","collage","setCollage","isEmpty","t","createCollage","collageElem","pw","ph","canvasTree","getCanvasTree","imgPW","imgPH","generateCollage","ctree","getCanvas","setTimeout","pW","pH","link","download","href","probNodes","newPW","newPH","newCanvasTree","newValid","newProbNodes","DownloadDialog","onClose","sizes","setValue","FormControl","InputLabel","Select","labelId","defaultValue","label","MenuItem","disabled","SaveDialog","setName","nameError","TextField","mb","InputProps","helperText","FailedIcon","Close","border","StatusIndicator","CircularProgress","Pending","CheckCircleOutline","Status","pending","done","running","failed","direction","OverAllStatus","counter","spacing","p","SaveStatusDialog","overAllStatus","setCounter","timerId","clearTimeout","statusArr","values","val","HeaderNameSection","handleNameError","editable","setEditable","nameSchema","yup","max","required","isValid","utils","nameValid","handleBlur","autoFocus","onBlur","onKeyDown","keyCode","shiftKey","InputLabelProps","focused","cursor","Header","handleNameChange","belowmd","useMediaQuery","theme","breakpoints","down","Paper","ref","elevation","postion","Link","underline","ArrowBack","EmptyCollage","loadComponent","backgroundImage","collageBack","backgroundSize","objectFit","View","saveStatusOpen","header","downloadDialog","saveDialog","saveStatusDialog","controls","collageMetaInfo","content","metaHeight","showControls","Loading","leftPos","DBNA","BottomNavigationAction","showLabel","py","outline","DesktopDrawer","anchor","innerRef","Drawer","PaperProps","ControlsDivider","Divider","my","DesktopActions","onDownload","onSave","newValue","Save","Download","Print","ClearCollageDialog","onSubmit","onCancel","saveType","pb","noWrap","DesktopControls","photosComp","editComp","handleClear","imageOptionsOpen","setImageOptionsOpen","editOptionsOpen","setEditOptionsOpen","clearOpen","setClearOpen","editRef","closeAll","handleClickOutside","contains","handleClearClose","AutoAwesomeMosaic","Photo","ioo","io","Edit","Refresh","DesktopImageOptions","onAdd","AddPhotoAlternate","EditControl","paddingControl","radiusControl","colorControl","textControl","boxShadow","MBNA","toLowerCase","MobileActions","BottomNavigation","showLabels","MainControls","EditOptions","handleOptionsClose","handleEditOptionsClick","borderTop","Padding","CropFree","Square","Title","ImageOptions","handleDelete","handleAdd","MobileControls","optionProps","handleEditControl","handleEditOptionsValue","mainOpen","setMainOpen","editOpen","setEditOpen","imageOpen","setImageOpen","imageValue","setImageValue","handleEditOptionsClose","nV","CollageType","margin","hiddenLabel","disableUnderline","inputProps","pl","minWidth","minHeight","divider","CollageImageCount","count","CollageMetaInfo","handleTypeChange","PaddingControl","mixBlendMode","Slider","valueLabelDisplay","step","RadiusControl","TextControl","textError","handleTextError","textSchema","textValid","FormGroup","row","FormControlLabel","disableTypography","control","Checkbox","checked","ColorControl","handleClick","ColorPicker","zIndex","bottom","CommonDialog","message","progress","BaseCollage","clearCollage","navigate","useNavigate","setStatus","commonOpen","setCommonOpen","commonMessage","setCommonMessage","commonProgress","setCommonProgress","setNameError","setTextError","treeProps","handleCollageTypeChange","openCommonDialog","closeCommonDialog","el","clearAll","desktopColorControl","mobileControls","desktopPhotosComp","desktopEditComp","desktopControls","actionsComp","overflow"],"sourceRoot":""}