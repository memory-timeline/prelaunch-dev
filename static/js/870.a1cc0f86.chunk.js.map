{"version":3,"file":"static/js/870.a1cc0f86.chunk.js","mappings":"iJAeqB,aAUpB,OAVoB,0BAArB,WAAsBA,EAAKC,GAAI,8EAEW,OAFX,SAErBC,EAAS,CAAED,KAAAA,EAAME,OAAQ,OAAQ,EAAD,OACnBC,MAAMJ,EAAKE,GAAQG,MAAK,SAACC,GAAQ,OAAKA,CAAQ,IAAE,KAAD,EAAxD,OAAJC,EAAI,yBACHA,GAAI,OAGQ,OAHR,yBAGXC,QAAQC,IAAI,EAAD,IAAQ,kFAGtB,sBAeD,KAAiBC,WAtCjB,SAAoBC,EAAWC,GAC7B,IACE,IACMV,EAAS,CAAEW,WAAYF,GAE7B,OAAOG,EAAAA,EAAAA,KADSC,oCAFH,mBAGsBb,EAAQc,KAAKC,UAAUL,GAK5D,CAJE,MAAOM,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,EA2B6BC,OA3B5B,SAEqB,EAAD,mCAyBgBC,aAbrC,SAAsBC,GACpB,IACE,IACMnB,EAAS,CAAEoB,WAAYD,GAE7B,OAAOP,EAAAA,EAAAA,KADSC,oCAFH,oBAGsBb,EAAQ,GAK7C,CAJE,MAAOgB,GAGP,OADAV,QAAQC,IAAIS,GACLA,CACT,CACF,E,kDCtCMK,EAAG,yCAAG,WAAOvB,EAAKwB,GAAI,8FAO6B,OAP3BtB,EAAM,+BAAG,CAAC,EAClCuB,EAAM,kBAAczB,GAAG,OAAGwB,GACxBE,EAAU,CACdvB,OAAQ,MACRwB,YAAa,UACbC,QAAS,IAAIC,QAAQ,CAAE,eAAgB,sBAEzCJ,GAAM,WAAQ,IAAIK,gBAAgB5B,GAAQ6B,YAAa,SACpC3B,MAAMqB,EAAQC,GAAS,KAAD,EAA/B,IAAJnB,EAAI,QACAyB,GAAG,CAAD,mBACU,MAAhBzB,EAAK0B,OAAc,iBAEyC,OAD9DC,SAASC,OACP,4DAA4D,kBACvD,CAAEF,OAAQ,oBAAmB,WAElB,MAAhB1B,EAAK0B,OAAc,0CACd,CAAEA,OAAQ,cAAa,iCAI3B1B,EAAK6B,QAAM,4CACnB,gBArBQ,wCAuBHC,EAAI,yCAAG,WAAOrC,EAAKwB,EAAMtB,EAAQD,GAAI,8EAQvC,OAPEqC,EAAM,kBAActC,GAAG,OAAGwB,GAC9Bc,GAAM,WAAQ,IAAIR,gBAAgB5B,GAAQ6B,YACpCL,EAAU,CACdvB,OAAQ,OACRwB,YAAa,UACbC,QAAS,IAAIC,QAAQ,CAAE,eAAgB,qBACvC5B,KAAAA,GACD,kBACMG,MAAMkC,EAAQZ,GAASrB,MAAK,SAACC,GAClC,OAAKA,EAAS0B,GAGP1B,EAAS8B,OAFP,CAAEH,OAAQ,QAGrB,KAAE,2CACH,gBAfS,4CAiBV,KAAiBV,IAAAA,EAAKc,KAAAA,E,2ICrCP,SAASE,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,IAAG,eAAvCnB,EAAS,KAAEoB,EAAY,KAO9B,OALAC,EAAAA,EAAAA,YAAS,uBAAC,yGACeC,EAAAA,EAAAA,aAAwBtB,GAAW,KAAD,EAAnDuB,EAAQ,OACdpC,QAAQC,IAAImC,EAAUH,GAAc,2CACnC,KAEI,yBAAK,iBACd,C","sources":["api/collage.jsx","api/helpers.js","pages/collage/List.jsx"],"sourcesContent":["import helpers from 'api/helpers';\n\nfunction newCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/new';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nasync function upload(url, body) {\n  try {\n    const params = { body, method: 'PUT' };\n    const resp = await fetch(url, params).then((response) => response);\n    return resp;\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction listCollages(nextToken) {\n  try {\n    const path = '/api/collage/list';\n    const params = { next_token: nextToken };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, '');\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nexport default { newCollage, upload, listCollages };\n","const get = async (url, path, params = {}) => {\n  let newUrl = `https://${url}${path}`;\n  const options = {\n    method: 'GET',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  newUrl += `?${new URLSearchParams(params).toString()}`;\n  const resp = await fetch(newUrl, options);\n  if (!resp.ok) {\n    if (resp.status === 401) {\n      document.cookie =\n        'userInfo=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return { status: 'unauthenticated' };\n    }\n    if (resp.status === 403) {\n      return { status: 'forbidden' };\n    }\n  }\n\n  return resp.json();\n};\n\nconst post = async (url, path, params, body) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'POST',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body,\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\n\nexport default { get, post };\n","import { useState, useEffect } from 'react';\nimport collageapi from 'api/collage';\n\nexport default function ListCollages() {\n  const [nextToken, setNextToken] = useState('');\n\n  useEffect(async () => {\n    const collages = await collageapi.listCollages(nextToken);\n    console.log(collages, setNextToken);\n  }, []);\n\n  return <div>List Collages</div>;\n}\n"],"names":["url","body","params","method","fetch","then","response","resp","console","log","newCollage","collageID","collageDetails","collage_id","helpers","process","JSON","stringify","error","upload","listCollages","nextToken","next_token","get","path","newUrl","options","credentials","headers","Headers","URLSearchParams","toString","ok","status","document","cookie","json","post","apiUrl","ListCollages","useState","setNextToken","useEffect","collageapi","collages"],"sourceRoot":""}