{"version":3,"file":"static/js/870.18f809b1.chunk.js","mappings":"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","sources":["api/collage.jsx","api/helpers.js","pages/CreateItem.jsx","pages/MemoryThumbnailCard.jsx","pages/collage/List.jsx","../node_modules/@mui/icons-material/AddOutlined.js","../node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/CardActionArea/CardActionArea.js"],"sourcesContent":["import helpers from 'api/helpers';\n\nfunction newCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/new';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nasync function upload(url, body) {\n  try {\n    const params = { body, method: 'PUT' };\n    const resp = await fetch(url, params).then((response) => response);\n    return resp;\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction listCollages(nextToken) {\n  try {\n    const path = '/api/collage/list';\n    const params = { next_token: nextToken };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction getThumbnail(collageId) {\n  try {\n    const path = '/api/collage/thumbnail';\n    const params = { collage_id: collageId };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nexport default { newCollage, upload, listCollages, getThumbnail };\n","const get = async (url, path, params = {}) => {\n  let newUrl = `https://${url}${path}`;\n  const options = {\n    method: 'GET',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  newUrl += `?${new URLSearchParams(params).toString()}`;\n  const resp = await fetch(newUrl, options);\n  if (!resp.ok) {\n    if (resp.status === 401) {\n      document.cookie =\n        'userInfo=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return { status: 'unauthenticated' };\n    }\n    if (resp.status === 403) {\n      return { status: 'forbidden' };\n    }\n  }\n\n  return resp.json();\n};\n\nconst post = async (url, path, params, body) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'POST',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body,\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\n\nexport default { get, post };\n","import PropTypes from 'prop-types';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport AddOutlinedIcon from '@mui/icons-material/AddOutlined';\n\nimport MemoryThumbnailCard from 'pages/MemoryThumbnailCard';\n\nexport default function CreateMemoryItem({ message, handleClick }) {\n  const belowmd = useMediaQuery((theme) => theme.breakpoints.down('md'));\n\n  return (\n    <Grid item key=\"creatememory\" lg={3} md={4} sm={6} xs={12} sx={{ p: 1 }}>\n      <MemoryThumbnailCard handleClick={handleClick}>\n        <Typography\n          variant={belowmd ? 'body1' : 'h5'}\n          color=\"button.main\"\n          sx={{\n            p: 1,\n            color: 'secondary.main',\n            bgcolor: 'primary.main',\n            borderRadius: '0px 10px 10px 0px',\n            borderColor: 'secondary.main',\n            position: 'absolute',\n            bottom: 15,\n            left: 0,\n          }}\n        >\n          {message}\n        </Typography>\n        <AddOutlinedIcon\n          sx={{\n            position: 'absolute',\n            border: 3,\n            borderRadius: '50%',\n            fontSize: '7.5rem',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            color: 'muted.main',\n          }}\n        />\n      </MemoryThumbnailCard>\n    </Grid>\n  );\n}\n\nCreateMemoryItem.propTypes = {\n  message: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardActionArea from '@mui/material/CardActionArea';\n//  import { useTheme, alpha } from '@mui/material/styles';\n\nexport default function MemoryThumbnailCard({ handleClick, children }) {\n  //  const theme = useTheme();\n\n  return (\n    <CardActionArea onClick={handleClick}>\n      <Card\n        elevation={2}\n        sx={{\n          bgcolor: '#fff',\n          borderRadius: 5,\n          // border: '2px solid gray',\n          color: 'black',\n          position: 'relative',\n          height: {\n            lg: 430,\n            md: 380,\n            xs: 330,\n          },\n          '&:hover': {\n            border: 3,\n            borderColor: 'secondary.main',\n            elevation: 0,\n          },\n        }}\n      >\n        {children}\n      </Card>\n    </CardActionArea>\n  );\n}\n\nMemoryThumbnailCard.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardActionArea from '@mui/material/CardActionArea';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport CreateItem from 'pages/CreateItem';\nimport collageapi from 'api/collage';\n\nexport default function ListCollages() {\n  const navigate = useNavigate();\n  const [nextToken, setNextToken] = useState('');\n  const [thumbnails, setThumbnails] = useState([]);\n\n  const handleCreateClick = () => navigate('/collage/create');\n\n  useEffect(async () => {\n    const collages = await collageapi.listCollages(nextToken);\n    const collagePromises = collages.collage_ids.map((collage) =>\n      collageapi.getThumbnail(collage)\n    );\n    setNextToken(collages.next_token);\n    const collThumbs = await Promise.all(collagePromises);\n    setThumbnails(collThumbs);\n    console.log(collages, collThumbs);\n  }, []);\n\n  return (\n    <Grid\n      container\n      sx={{ bgcolor: 'button.main', py: 1 }}\n      justifyContent=\"left\"\n      alignItems=\"flex-start\"\n    >\n      <CreateItem message=\"Create a collage\" handleClick={handleCreateClick} />\n      {thumbnails.map((thumb) => (\n        <Grid item key={thumb.title} lg={3} md={4} sm={6} xs={12} sx={{ p: 1 }}>\n          <CardActionArea>\n            <Card\n              elevation={2}\n              sx={{\n                bgcolor: '#fff',\n                borderRadius: 5,\n                color: 'black',\n                position: 'relative',\n                height: {\n                  lg: 430,\n                  md: 380,\n                  xs: 330,\n                },\n                '&:hover': {\n                  border: 3,\n                  borderColor: 'secondary.main',\n                  elevation: 0,\n                },\n              }}\n            >\n              <CardMedia\n                component=\"img\"\n                src={thumb.thumbnail_url}\n                alt={thumb.title}\n                sx={{\n                  textAlign: 'center',\n                  objectFit: 'cover',\n                  height: {\n                    lg: 350,\n                    md: 300,\n                    xs: 250,\n                  },\n                }}\n              />\n              <CardContent>\n                <CardHeader\n                  disableTypography\n                  title={\n                    <Typography\n                      noWrap\n                      sx={{\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        width: { xs: 'calc(75%)', sm: 'calc(100%)' },\n                        fontWeight: 600,\n                      }}\n                    >\n                      {thumb.title}\n                    </Typography>\n                  }\n                  sx={{\n                    padding: 0,\n                    color: 'faded.black',\n                  }}\n                />\n              </CardContent>\n            </Card>\n          </CardActionArea>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddOutlined');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"focusVisibleClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n  const {\n      children,\n      className,\n      focusVisibleClassName\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;"],"names":["url","body","params","method","fetch","then","response","resp","console","log","newCollage","collageID","collageDetails","collage_id","helpers","process","JSON","stringify","error","upload","listCollages","nextToken","next_token","getThumbnail","collageId","get","path","newUrl","options","credentials","headers","Headers","URLSearchParams","toString","ok","status","document","cookie","json","post","apiUrl","CreateMemoryItem","message","handleClick","belowmd","useMediaQuery","theme","breakpoints","down","item","lg","md","sm","xs","sx","p","variant","color","bgcolor","borderRadius","borderColor","position","bottom","left","border","fontSize","top","transform","MemoryThumbnailCard","children","onClick","elevation","height","ListCollages","navigate","useNavigate","useState","setNextToken","thumbnails","setThumbnails","useEffect","collageapi","collages","collagePromises","collage_ids","map","collage","Promise","all","collThumbs","container","py","justifyContent","alignItems","thumb","component","src","thumbnail_url","alt","title","textAlign","objectFit","disableTypography","noWrap","overflow","textOverflow","width","fontWeight","padding","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getCardActionAreaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionAreaRoot","styled","ButtonBase","name","overridesResolver","props","styles","root","display","cardActionAreaClasses","opacity","vars","palette","action","hoverOpacity","focusOpacity","CardActionAreaFocusHighlight","focusHighlight","pointerEvents","right","backgroundColor","transition","transitions","create","duration","short","React","inProps","ref","useThemeProps","className","focusVisibleClassName","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsxs","_extends","clsx","focusVisible","_jsx"],"sourceRoot":""}