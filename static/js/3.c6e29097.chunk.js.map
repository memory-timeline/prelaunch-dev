{"version":3,"file":"static/js/3.c6e29097.chunk.js","mappings":"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","sources":["components/RemovePhotoIcon.jsx","components/simple_snackbar.jsx","hooks/date.jsx","hooks/story.jsx","hooks/title.jsx","components/MemoryImageSlide.jsx","pages/memory/MemoryCarousel.jsx","pages/memory/MemoryTitle.jsx","pages/memory/MemoryDate.jsx","pages/memory/MemoryStory.jsx","pages/memory/MemoryImages.jsx","pages/memory/MemoryContent.jsx","components/UpdateMemoryIcon.jsx","pages/memory/DeleteMemoryIcon.jsx","components/confirmation.jsx","pages/memory/MemoryActions.jsx","pages/memory/MemoryContentStructure.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { alpha } from '@mui/material/styles';\n\nexport default function RemovePhotoIcon({ size, handleClick }) {\n  return (\n    <IconButton\n      size={size}\n      sx={{\n        color: 'black',\n        bgcolor: alpha('#fff', 0.4),\n        position: 'absolute',\n        top: 10,\n        right: 12,\n      }}\n      onClick={handleClick}\n    >\n      <CloseIcon size={size} />\n    </IconButton>\n  );\n}\n\nRemovePhotoIcon.defaultProps = {\n  size: 'small',\n};\n\nRemovePhotoIcon.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  size: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Stack from '@mui/material/Stack';\nimport DoneIcon from '@mui/icons-material/Done';\nimport Typography from '@mui/material/Typography';\n\nfunction SnackText({ message, error }) {\n  if (error === true) {\n    return (\n      <Stack direction=\"row\" spacing={2} justifyContents=\"space-between\" alignItems=\"center\">\n        <CloseIcon fontSize=\"small\" color=\"error\" />\n        <Typography>{message}</Typography>\n      </Stack>\n    );\n  }\n  return (\n    <Stack direction=\"row\" spacing={2} justifyContents=\"space-between\" alignItems=\"center\">\n      <DoneIcon fontSize=\"small\" color=\"success\" />\n      <Typography>{message}</Typography>\n    </Stack>\n  );\n}\n\nexport default function SimpleSnackbar({\n  snackBarOpen, message, onClose, error,\n}) {\n  const [open, setOpen] = useState(snackBarOpen);\n  const [snackMessage, setSnackMessage] = useState(message);\n\n  useEffect(() => setOpen(snackBarOpen), [snackBarOpen]);\n  useEffect(() => setSnackMessage(message), [message]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setSnackMessage(null);\n    onClose();\n  };\n\n  const action = (\n    <IconButton\n      size=\"small\"\n      aria-label=\"close\"\n      color=\"inherit\"\n      onClick={handleClose}\n    >\n      <CloseIcon fontSize=\"small\" />\n    </IconButton>\n  );\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      message={<SnackText message={snackMessage} error={error} />}\n      action={action}\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n    />\n  );\n}\n\nSimpleSnackbar.defaultProps = {\n  error: false,\n};\n\nSimpleSnackbar.propTypes = {\n  message: PropTypes.string.isRequired,\n  snackBarOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  error: PropTypes.bool,\n};\n\nSnackText.propTypes = {\n  message: PropTypes.string.isRequired,\n  error: PropTypes.bool.isRequired,\n};\n","import { useState } from 'react';\n\nexport default function useDate(initialDate) {\n  const [date, setDate] = useState(initialDate);\n  const handleDateChange = (e) => {\n    const newDate = new Date(e);\n    if (e) {\n      const formattedDate = newDate.toLocaleDateString('en-in', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric',\n      });\n      setDate(formattedDate);\n    } else {\n      setDate(null);\n    }\n  };\n  return [date, setDate, handleDateChange];\n}\n","import { useState } from 'react';\n\nexport default function useStory(initialState) {\n  const [story, setStory] = useState(initialState);\n  const handleStoryChange = (event) => setStory(event.target.value);\n  return [story, setStory, handleStoryChange];\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useTitle(initialValue) {\n  const [title, setTitle] = useState(initialValue);\n  useEffect(() => setTitle(initialValue), [initialValue]);\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  return [title, setTitle, handleTitleChange];\n}\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SwipeableViews from 'react-swipeable-views';\nimport Box from '@mui/material/Box';\nimport { autoPlay, virtualize, bindKeyboard } from 'react-swipeable-views-utils';\n\nconst EnhancedSwipeableViews = bindKeyboard(autoPlay(virtualize(SwipeableViews)));\n\nfunction mod(count, total) {\n  const modulus = count % total;\n  if (modulus < 0) {\n    return modulus + total;\n  }\n  return modulus;\n}\n\nexport default function MemoryImageSlide({\n  ind, images, handleNext, handleStepChange,\n}) {\n  const [activeStep, setActiveStep] = useState(ind);\n  const [loadedImages, setLoadedImages] = useState(0);\n  const [display, setDisplay] = useState(null);\n\n  useEffect(() => {\n    setActiveStep(ind);\n  }, [ind]);\n\n  useEffect(() => {\n    if (loadedImages < images.length) {\n      setDisplay('none');\n    } else {\n      setDisplay('flex');\n    }\n  }, [loadedImages]);\n\n  const handleImageLoad = () => setLoadedImages((prevLoaded) => prevLoaded + 1);\n\n  const slideRenderer = (props) => {\n    /* eslint-disable  react/prop-types */\n    const { index, key } = props;\n    const virtNum = mod(index, images.length);\n    const srcSetList = images[virtNum].images ? (\n      images[virtNum].images.map(({ src, width }) => `${src} ${width}w`)\n    ) : [];\n    const srcSet = srcSetList.join(',');\n    const style = {\n      display: 'block',\n      boxSizing: 'content-box',\n      cursor: 'pointer',\n      objectFit: 'contain',\n      height: '100vh',\n    };\n\n    return (\n      <Box\n        component=\"img\"\n        onLoad={handleImageLoad}\n        sx={{\n          display: { display },\n          justifyContents: 'center',\n          width: '100%',\n          bgcolor: '#1c1c1c',\n        }}\n        src={images[virtNum].src}\n        srcSet={srcSet}\n        style={style}\n        alt={images[virtNum].src}\n        key={key}\n      />\n    );\n  };\n\n  return (\n    <EnhancedSwipeableViews\n      index={activeStep}\n      onChangeIndex={handleStepChange}\n      enableMouseEvents\n      animateTransitions\n      interval={10000}\n      onClick={handleNext}\n      style={{ backgroundColor: 'muted.main' }}\n      slideRenderer={slideRenderer}\n    />\n  );\n}\n\nMemoryImageSlide.defaultProps = {\n  ind: 0,\n};\n\nMemoryImageSlide.propTypes = {\n  ind: PropTypes.number,\n  handleNext: PropTypes.func.isRequired,\n  handleStepChange: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport CardHeader from '@mui/material/CardHeader';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport IconButton from '@mui/material/IconButton';\n\nimport RemovePhotoIcon from 'components/RemovePhotoIcon';\nimport MemoryImageSlide from 'components/MemoryImageSlide';\n\nfunction NextPic({ handleClick }) {\n  return (\n    <IconButton\n      edge=\"start\"\n      color=\"primary\"\n      aria-label=\"close\"\n      onClick={handleClick}\n      sx={{\n        position: 'absolute', top: '50%', right: 0, transform: 'translate(0%, -50%)',\n      }}\n    >\n      <KeyboardArrowRight sx={{ color: 'button.main', fontSize: '4.5rem' }} />\n    </IconButton>\n  );\n}\n\nfunction PreviousPic({ handleClick }) {\n  return (\n    <IconButton\n      edge=\"start\"\n      color=\"primary\"\n      aria-label=\"close\"\n      onClick={handleClick}\n      sx={{\n        position: 'absolute', top: '50%', left: 0, transform: 'translate(0%, -50%)',\n      }}\n    >\n      <KeyboardArrowLeft sx={{ color: 'button.main', fontSize: '4.5rem' }} />\n    </IconButton>\n  );\n}\n\nexport default function MemoryCarousel({\n  open, title, date, images, index, handleNext, handleBack, handleClose, handleChange,\n}) {\n  return (\n    <Dialog\n      open={open}\n      fullScreen\n    >\n      <MemoryImageSlide\n        images={images}\n        ind={index}\n        handleNext={handleNext}\n        handleStepChange={handleChange}\n      />\n      <CardHeader\n        title={title}\n        subheader={date}\n        sx={{\n          position: 'absolute',\n          top: 10,\n          left: 10,\n          bgcolor: 'button.main',\n          borderRadius: 3,\n          padding: 1,\n        }}\n      />\n      <PreviousPic handleClick={handleBack} />\n      <NextPic handleClick={handleNext} />\n      <RemovePhotoIcon size=\"large\" handleClick={handleClose} />\n    </Dialog>\n  );\n}\n\nNextPic.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nPreviousPic.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nMemoryCarousel.defaultProps = {\n  index: 0,\n};\n\nMemoryCarousel.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport useTitle from '../../hooks/title';\n\nexport default function MemoryTitle({ editable, text, handleTitleUpdate }) {\n  const [title, setTitle, handleTitleChange] = useTitle(text);\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n\n  useEffect(() => {\n    setEdit(editable);\n    setTitle(text);\n    setStartEdit(false);\n  }, [editable]);\n\n  if (!edit && !startEdit) {\n    return <Typography variant=\"h6\">{title}</Typography>;\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'center' }} spacing={2}>\n        <Typography variant=\"h6\">{title}</Typography>\n        <EditIcon fontSize=\"medium\" onClick={() => setStartEdit(true)} />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'flex-end', justifyContent: 'flex-start' }} spacing={2}>\n        <TextField\n          id=\"standard-basic\"\n          size=\"small\"\n          label=\"Title\"\n          onChange={handleTitleChange}\n          variant=\"standard\"\n          defaultValue={title}\n          sx={{ maxWidth: '200px' }}\n        />\n        <DoneTwoToneIcon\n          fontSize=\"medium\"\n          onClick={() => {\n            handleTitleUpdate(title);\n            setStartEdit(false);\n          }}\n        />\n        <ClearIcon fontSize=\"medium\" onClick={() => { setTitle(text); setStartEdit(false); }} />\n      </Stack>\n    );\n  }\n}\n\nMemoryTitle.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  handleTitleUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n\nimport useDate from '../../hooks/date';\n\nexport default function MemoryDate({ editable, prevDate, handleDateUpdate }) {\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n  const [date, setDate, handleDateChange] = useDate(prevDate);\n\n  useEffect(() => {\n    setEdit(editable);\n    setDate(prevDate);\n    setStartEdit(false);\n  }, [editable, prevDate]);\n\n  if (!edit && !startEdit) {\n    return <Typography>{date}</Typography>;\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'center' }} spacing={2}>\n        <Typography>{date}</Typography>\n        <EditIcon fontSize=\"medium\" onClick={() => setStartEdit(true)} />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'flex-end', justifyContent: 'flex-start', mt: 3 }} spacing={2}>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <DatePicker\n            label=\"Memory Date\"\n            value={date}\n            onChange={handleDateChange}\n            placeholder=\"dd/MM/yyyy\"\n            inputFormat=\"dd/MM/yyyy\"\n            maxDate={new Date()}\n            renderInput={(props) => (\n              <TextField\n                readOnly\n                required\n          // eslint-disable-next-line react/jsx-props-no-spreading\n                {...props}\n              />\n            )}\n          />\n        </LocalizationProvider>\n        <DoneTwoToneIcon\n          fontSize=\"medium\"\n          onClick={() => {\n            handleDateUpdate(date);\n            setStartEdit(false);\n          }}\n        />\n        <ClearIcon fontSize=\"medium\" onClick={() => { setDate(prevDate); setStartEdit(false); }} />\n      </Stack>\n    );\n  }\n}\n\nMemoryDate.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  prevDate: PropTypes.string.isRequired,\n  handleDateUpdate: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Box from '@mui/material/Box';\nimport useStory from '../../hooks/story';\nimport './memory.css';\n\nexport default function MemoryStory({ editable, prevStory, handleStoryUpdate }) {\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n  const [story, setStory, handleStoryChange] = useStory(prevStory);\n  const storyRef = useRef();\n\n  useEffect(() => {\n    setEdit(editable);\n    setStory(prevStory);\n    setStartEdit(false);\n  }, [editable, prevStory]);\n\n  if (!edit && !startEdit) {\n    return (\n      <Typography style={{ whiteSpace: 'pre-wrap' }}>{story}</Typography>\n    );\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"column\" spacing={2}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'muted.main' }}>Edit Story</Typography>\n          <EditIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              setStartEdit(true);\n            }}\n          />\n        </Stack>\n        <Divider sx={{ width: 1 }} />\n        <Typography style={{ whiteSpace: 'pre-wrap' }}>{story}</Typography>\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"column\" spacing={2}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'muted.main' }}>Editing Story</Typography>\n          <DoneTwoToneIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              handleStoryUpdate(story);\n              setStartEdit(false);\n            }}\n          />\n          <ClearIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              setStory(prevStory);\n              setStartEdit(false);\n            }}\n          />\n        </Stack>\n        <Divider sx={{ width: 1 }} />\n        <Box\n          sx={{\n            p: 2,\n            m: 1,\n            my: 2,\n            border: 1,\n            borderColor: 'primary.main',\n            bgcolor: 'input.background',\n            minHeight: '70vh',\n            borderRadius: 5,\n            width: '90%',\n          }}\n          onClick={() => storyRef.current.focus()}\n        >\n          <TextareaAutosize\n            autoFocus\n            aria-label=\"minimum height\"\n            placeholder=\"Tell your story...\"\n            value={story}\n            onChange={handleStoryChange}\n            style={{\n              width: '100%',\n              minHeight: '184px',\n              maxHeight: '70vh',\n              boxSizing: 'border-box',\n              paddingTop: '5px',\n              border: 0,\n              overflow: 'auto',\n              outline: 'none',\n              resize: 'vertical',\n              borderRadius: 5,\n              '&:focus': {\n                border: 0,\n              },\n            }}\n            ref={storyRef}\n          />\n\n        </Box>\n      </Stack>\n    );\n  }\n}\n\nMemoryStory.propTypes = {\n  prevStory: PropTypes.string.isRequired,\n  editable: PropTypes.bool.isRequired,\n  handleStoryUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport PhotoAlbum from 'react-photo-album';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport Button from '@mui/material/Button';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { alpha } from '@mui/material/styles';\n\nfunction OptionsButton({\n  children, onClick, name, updateOp,\n}) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: (updateOp === name) ? 'button.main' : 'muted.main',\n        borderRadius: 5,\n        backgroundColor: (updateOp === name) ? 'primary.main' : 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: (updateOp === name) ? 'button.main' : 'muted.main',\n          backgroundColor: (updateOp === name) ? 'primary.main' : 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nfunction AddPhotos({ handleChange, onClick, updateOp }) {\n  return (\n    <OptionsButton onClick={onClick} name=\"add\" updateOp={updateOp}>\n      <input type=\"file\" hidden multiple accept=\"image/*\" onChange={handleChange} />\n      <AddPhotoIcon sx={{ fontSize: '1.5rem' }} />\n      Add\n    </OptionsButton>\n  );\n}\n\nfunction MemoryPhotoAlbum({ images, handlePhotoClick, renderPhoto }) {\n  const [arrangement, setArrangement] = useState(null);\n  useEffect(() => {\n    let twidth = 0;\n    let theight = 0;\n    images.forEach(({ height, width }) => {\n      if (height > width) theight += 1;\n      else twidth += 1;\n    });\n    if (twidth > theight) setArrangement('rows');\n    else setArrangement('columns');\n  }, [images]);\n\n  return renderPhoto ? (\n    <PhotoAlbum\n      layout={arrangement}\n      photos={images}\n      onClick={handlePhotoClick}\n      spacing={2}\n      renderPhoto={renderPhoto}\n    />\n  ) : (\n    <PhotoAlbum\n      layout={arrangement}\n      photos={images}\n      onClick={handlePhotoClick}\n      spacing={2}\n    />\n  );\n}\n\nexport default function MemoryImages({\n  editable, images, handlePhotoClick, handleThumbnailUpdate, deleteImage, addImage,\n}) {\n  const [edit, setEdit] = useState(editable);\n  const [updateOp, setUpdateOp] = useState(null);\n  const [thumbnail, setThumbnail] = useState(null);\n\n  const handleOpUpdate = (op) => {\n    if (updateOp === op) {\n      setUpdateOp(null);\n    } else {\n      setUpdateOp(op);\n    }\n  };\n\n  useEffect(() => {\n    setEdit(editable);\n    setUpdateOp(null);\n  }, [editable]);\n\n  const handleThumbnailChange = (name) => {\n    setThumbnail(name);\n    const thumbnailImage = images.find((image) => image.alt === name);\n    handleThumbnailUpdate(thumbnailImage);\n  };\n\n  const handleImageDelete = (name) => {\n    const deleted = images.find((image) => image.alt === name);\n    deleteImage(deleted);\n  };\n\n  const renderPhotosWithDeleteIcon = ({\n    layout,\n    imageProps: { alt, style, ...restImageProps },\n  }) => (\n    <Button component=\"div\">\n      <img\n        alt={alt}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        style={{ ...style, width: layout.width, padding: 0 }}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        {...restImageProps}\n      />\n      <IconButton\n        size=\"medium\"\n        sx={{\n          color: 'black',\n          bgcolor: alpha('#fff', 0.4),\n          position: 'absolute',\n          top: 10,\n          right: 12,\n        }}\n        onClick={() => handleImageDelete(alt)}\n      >\n        <CloseIcon size=\"medium\" />\n      </IconButton>\n    </Button>\n  );\n\n  const renderPhotosWithRadioButton = ({\n    layout,\n    imageProps: { alt, style, ...restImageProps },\n  }) => (\n    <Button component=\"div\">\n      <img\n        alt={alt}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        style={{ ...style, width: layout.width, padding: 0 }}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        {...restImageProps}\n      />\n      <FormControlLabel\n        control={<Radio />}\n        label=\"\"\n        checked={alt === thumbnail}\n        onChange={() => handleThumbnailChange(alt)}\n        sx={{\n          pr: 1,\n          position: 'absolute',\n          bgcolor: alpha('#fff', 0.6),\n          color: 'black',\n          borderRadius: '0px 5px 5px 0px',\n          borderColor: 'secondary.main',\n          borderLeft: 0,\n          bottom: 20,\n          left: 15,\n        }}\n      />\n    </Button>\n  );\n\n  const OptionsRow = (\n    <Stack direction=\"row\" spacing={2}>\n      <AddPhotos handleChange={addImage} onClick={() => handleOpUpdate('add')} updateOp={updateOp} />\n      <OptionsButton onClick={() => handleOpUpdate('delete')} name=\"delete\" updateOp={updateOp}>\n        <DeleteIcon sx={{ fontSize: '1.5rem' }} />\n        Delete\n      </OptionsButton>\n      <OptionsButton onClick={() => handleOpUpdate('thumbnail')} name=\"thumbnail\" updateOp={updateOp}>Set Thumbnail</OptionsButton>\n    </Stack>\n  );\n\n  const updatePanel = (\n    <Stack direction=\"row\">\n      <Typography variant=\"h6\" color=\"muted.main\">\n        Images:\n        {images.length}\n      </Typography>\n    </Stack>\n  );\n\n  if (!edit) {\n    return (\n      <MemoryPhotoAlbum images={images} handlePhotoClick={handlePhotoClick} />\n    );\n  }\n\n  if (edit && updateOp === 'delete') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n          renderPhoto={renderPhotosWithDeleteIcon}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && updateOp === 'thumbnail') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n          renderPhoto={renderPhotosWithRadioButton}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && updateOp === 'add') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && !updateOp) {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum images={images} handlePhotoClick={handlePhotoClick} />\n      </Stack>\n    );\n  }\n}\n\nMemoryImages.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  handlePhotoClick: PropTypes.func.isRequired,\n  handleThumbnailUpdate: PropTypes.func.isRequired,\n  deleteImage: PropTypes.func.isRequired,\n  addImage: PropTypes.func.isRequired,\n};\n\nMemoryPhotoAlbum.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  handlePhotoClick: PropTypes.func.isRequired,\n  renderPhoto: PropTypes.func,\n};\n\nMemoryPhotoAlbum.defaultProps = {\n  renderPhoto: null,\n};\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  updateOp: PropTypes.string.isRequired,\n};\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Link from '@mui/material/Link';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Divider from '@mui/material/Divider';\nimport Box from '@mui/material/Box';\nimport MemoryCarousel from './MemoryCarousel';\nimport MemoryContentStructure from './MemoryContentStructure';\nimport MemoryTitle from './MemoryTitle';\nimport MemoryDate from './MemoryDate';\nimport MemoryStory from './MemoryStory';\nimport MemoryImages from './MemoryImages';\nimport api from '../Api';\nimport SimpleSnackbar from '../../components/simple_snackbar';\nimport './memory.css';\n\nfunction BackButton({ preview }) {\n  if (preview === false) {\n    return (\n      <Stack\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        sx={{ backgroundColor: 'button.main', paddingX: 2, paddingY: 1 }}\n      >\n        <Link href=\"/\" underline=\"none\">\n          <Button\n            variant=\"contained\"\n            component=\"label\"\n            sx={{\n              color: 'primary.main',\n              backgroundColor: 'button.main',\n              padding: '6px 8px',\n              boxShadow: 0,\n              '&:hover': {\n                backgroundColor: 'button.main',\n              },\n            }}\n          >\n            <ArrowBackIcon size=\"medium\" sx={{ paddingRight: 1 }} />\n            <Typography variant=\"body1\" color=\"muted.main\">Memories</Typography>\n          </Button>\n        </Link>\n      </Stack>\n    );\n  }\n  return null;\n}\n\nexport default function MemoryContent({\n  memTitle,\n  memDate,\n  memStory,\n  memImages,\n  bucket,\n  memoryID,\n  authURL,\n  preview,\n}) {\n  const [open, setOpen] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [title, setTitle] = useState(memTitle);\n  const [date, setDate] = useState(memDate);\n  const [story, setStory] = useState(memStory);\n  const [images, setImages] = useState(memImages);\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n\n  const [newImages, setNewImages] = useState([]);\n  const [newImagesCount, setNewImagesCount] = useState(null);\n  const [errorUploadImages, setErrorUploadImages] = useState([]);\n  const [addImageOpen, setAddImageOpen] = useState(false);\n  const [uploadImageProgress, setUploadImageProgress] = useState(null);\n  const [uploadImageStatus, setUploadImageStatus] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  const [httpError, setHTTPError] = useState(false);\n\n  const maxSteps = images.length;\n\n  useEffect(() => setTitle(memTitle), [memTitle]);\n  useEffect(() => setDate(memDate), [memDate]);\n  useEffect(() => setStory(memStory), [memStory]);\n  useEffect(() => setImages(memImages), [memImages]);\n\n  const handleSnackMessage = (msg, error) => {\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const handleHTTPError = (response, operation, callback) => {\n    if (response.status === 401) {\n      handleSnackMessage('You have been logged out. Please login to continue.', true);\n    } else if (response.status === 403) {\n      handleSnackMessage('You do not have permissions to do this operation.', true);\n    } else {\n      handleSnackMessage(`Unknown error occured while ${operation}`, true);\n    }\n    callback(response.status);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const httpErrorCallback = (status) => {\n    setSnack(true);\n    setHTTPError(status);\n  };\n\n  const UpdateDetails = async (item, value) => {\n    try {\n      const resp = await api.updateMemoryDetails(\n        bucket,\n        authURL,\n        memoryID,\n        item,\n        value,\n      );\n      if (resp.ok) {\n        handleSnackMessage(`Memory ${item} updated successfully`, false);\n      } else {\n        handleHTTPError(resp, `updating ${item}`, httpErrorCallback);\n      }\n      setSnack(true);\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const UpdateThumbnail = async (image) => {\n    try {\n      const resp = await api.updateMemoryImage(\n        bucket,\n        authURL,\n        memoryID,\n        'thumbnail',\n        image,\n      );\n      if (resp.ok) {\n        handleSnackMessage('Thumbnail updated successfully', false);\n        setSnack(true);\n      } else {\n        handleHTTPError(resp, 'updating thumbnail', httpErrorCallback);\n      }\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const deleteImage = async (image) => {\n    try {\n      let resp;\n      if (images.length > 1) {\n        resp = await api.updateMemoryImage(\n          bucket,\n          authURL,\n          memoryID,\n          'delete',\n          image,\n        );\n        if (resp.ok) {\n          handleSnackMessage('Memory image deleted successfully', false);\n          setImages(images.filter((item) => item.title !== image.title));\n        } else {\n          handleHTTPError(resp, 'deleting image', httpErrorCallback);\n        }\n      } else {\n        handleSnackMessage('Atleast 1 image is needed for memory. Unable to delete', true);\n      }\n      setSnack(true);\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const addImage = async (details) => {\n    try {\n      const resp = await api.updateMemoryImage(\n        bucket,\n        authURL,\n        memoryID,\n        'add',\n        details,\n      );\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const handleNewImages = async () => {\n    /* eslint-disable  no-await-in-loop, no-restricted-syntax */\n    for (const [index, img] of newImages.entries()) {\n      const [det, file, src] = img;\n      const putURL = await addImage(det).then((response) => {\n        if (response.ok) {\n          return response.text();\n        }\n        handleHTTPError(response, 'adding image', httpErrorCallback);\n        return '';\n      });\n      const photo = {\n        key: `memories/${memoryID}/images/${det.name}`,\n        src,\n        alt: det.name,\n        title: det.name,\n        width: det.width,\n        height: det.height,\n        images: [],\n      };\n      const uploadResp = await fetch(putURL, { body: file, method: 'PUT' });\n      if (uploadResp.ok) {\n        setUploadImageProgress(`Images uploaded: ${index + 1} / ${newImagesCount} `);\n        setImages((pics) => pics.concat([photo]));\n      } else {\n        setUploadImageStatus('Error while uploading memory image');\n        setErrorUploadImages((errImgs) => errImgs.concat([det.name]));\n        handleHTTPError(uploadResp, 'deleting image', httpErrorCallback);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    if (newImages.length > 0) {\n      setAddImageOpen(true);\n      setUploadImageProgress('Preparing images for upload....');\n    }\n    if (newImages.length === newImagesCount) {\n      await handleNewImages();\n      if (errorUploadImages.length > 0) {\n        setUploadImageStatus(`Error while uploading ${errorUploadImages.length} images`);\n      } else {\n        setUploadImageStatus(`${newImages.length} image(s) uploaded successfully`);\n      }\n      setErrorUploadImages([]);\n      setNewImagesCount(null);\n      setNewImages([]);\n      setTimeout(() => {\n        setAddImageOpen(false);\n        setUploadImageStatus(null);\n        setUploadImageProgress(null);\n      }, 3000);\n    }\n  }, [newImages]);\n\n  const handleImageAdd = async (event) => {\n    if (event.target.files) {\n      const files = Array.from(event.target.files);\n      setNewImagesCount(files.length);\n      if (images.length + files.length <= 15) {\n        files.forEach((file) => {\n          const image = new Image();\n          image.onload = async (e) => {\n            const height = e.target.naturalHeight;\n            const width = e.target.naturalWidth;\n            const size = file.size / (1024 * 1024);\n            const { name } = file;\n            const resImages = [500, 1000, 1500].map((resHeight) => ({\n              height: resHeight, width: Math.ceil((resHeight * width) / height),\n            }));\n            const creationDate = Date.now();\n            const newName = `${creationDate}-${name}`;\n            const imageDetails = [{\n              name: newName, size, height, width, images: resImages,\n            }, file, e.target.src];\n            setNewImages((pics) => pics.concat([imageDetails]));\n          };\n          image.src = URL.createObjectURL(file);\n        });\n        files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n      } else {\n        handleSnackMessage(`Unable to add ${files.length} images. Maximum images allowed per memory is 15`, true);\n        setSnack(true);\n      }\n    }\n  };\n\n  const updateTitle = (value) => {\n    const resp = UpdateDetails('title', value);\n    if (resp) {\n      setTitle(value);\n    }\n  };\n\n  const updateDate = (value) => {\n    const resp = UpdateDetails('date', value);\n    if (resp) {\n      setDate(value);\n    }\n  };\n\n  const updateStory = (value) => {\n    const resp = UpdateDetails('story', value);\n    if (resp) {\n      setStory(value);\n    }\n  };\n\n  const handleClose = () => setOpen(false);\n\n  const handleActiveIndexChange = (step) => setActiveIndex(step);\n\n  const handleBack = () => {\n    setActiveIndex(\n      (prevActiveStep) => (prevActiveStep - 1 + maxSteps) % maxSteps,\n    );\n  };\n\n  const handleNext = () => {\n    setActiveIndex((prevActiveStep) => (prevActiveStep + 1) % maxSteps);\n  };\n\n  const handlePhotoClick = (photo, event, index) => {\n    setOpen(true);\n    setActiveIndex(index);\n  };\n\n  const handleEditClick = () => setEdit(true);\n\n  const memoryTitle = (\n    <MemoryTitle\n      editable={edit}\n      text={title}\n      handleTitleUpdate={updateTitle}\n    />\n  );\n\n  const memoryDate = (\n    <MemoryDate editable={edit} prevDate={date} handleDateUpdate={updateDate} />\n  );\n\n  const storyLayout = (\n    <MemoryStory\n      editable={edit}\n      prevStory={story}\n      handleStoryUpdate={updateStory}\n    />\n  );\n\n  const photoLayout = (\n    <MemoryImages\n      editable={edit}\n      images={images}\n      handlePhotoClick={handlePhotoClick}\n      handleThumbnailUpdate={UpdateThumbnail}\n      deleteImage={deleteImage}\n      addImage={handleImageAdd}\n    />\n  );\n\n  const updateDone = (\n    <Button\n      variant=\"contained\"\n      component=\"label\"\n      onClick={() => setEdit(false)}\n      sx={{\n        color: 'primary.main',\n        borderRadius: 5,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n      }}\n    >\n      <DoneIcon size=\"medium\" sx={{ paddingRight: 1 }} />\n      <Typography variant=\"body1\" color=\"muted.main\">Edit</Typography>\n    </Button>\n  );\n\n  if (httpError === 401 && snack === false) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return (\n    <>\n      {edit ? (\n        <Stack\n          direction=\"row\"\n          justifyContent=\"flex-start\"\n          sx={{ backgroundColor: 'button.main', paddingX: 2, paddingY: 1 }}\n        >\n          {updateDone}\n        </Stack>\n      ) : <BackButton preview={preview} /> }\n      <Box\n        component=\"div\"\n        sx={{\n          backgroundColor: 'button.main',\n          margin: edit ? '5px' : 0,\n        }}\n      >\n        <MemoryContentStructure\n          header={memoryTitle}\n          subheader={memoryDate}\n          photoLayout={photoLayout}\n          storyLayout={storyLayout}\n          memoryID={memoryID}\n          bucket={bucket}\n          authURL={authURL}\n          handleEditClick={handleEditClick}\n          preview={preview}\n        />\n      </Box>\n      <MemoryCarousel\n        open={open}\n        title={title}\n        date={date}\n        images={images}\n        index={activeIndex}\n        handleNext={handleNext}\n        handleBack={handleBack}\n        handleClose={handleClose}\n        handleChange={handleActiveIndexChange}\n      />\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n        error={snackError}\n      />\n      <Dialog\n        open={addImageOpen}\n        fullWidth\n        sx={{\n          p: 1,\n        }}\n      >\n        <Card sx={{ maxWidth: 1, p: 1 }}>\n          <CardHeader title=\"Adding Images\" sx={{ textAlign: 'center' }} />\n          <Divider />\n          <CardContent>\n            <Typography variant=\"h6\" sx={{ color: 'muted.main' }}>{uploadImageProgress}</Typography>\n            <Stack justifyContent=\"center\" sx={{ py: 2 }}>\n              <Typography variant=\"h5\">{uploadImageStatus}</Typography>\n            </Stack>\n          </CardContent>\n        </Card>\n      </Dialog>\n\n    </>\n  );\n}\n\nMemoryContent.defaultProps = {\n  memTitle: 'Memory Title',\n  memDate: 'Memory Date',\n  memStory: 'Memory Text',\n};\n\nMemoryContent.propTypes = {\n  memTitle: PropTypes.string,\n  memDate: PropTypes.string,\n  memStory: PropTypes.string,\n  memoryID: PropTypes.string.isRequired,\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n  memImages: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  preview: PropTypes.bool.isRequired,\n};\n\nBackButton.propTypes = {\n  preview: PropTypes.bool.isRequired,\n};\n","import Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\n\nexport default function UpdateMemoryIcon() {\n  return (\n    <Box sx={{ alignItems: 'center' }} onClick={() => {}}>\n      <IconButton\n        aria-label=\"update\"\n        sx={{\n          bgcolor: 'form.input',\n        }}\n        onClick={() => {}}\n      >\n        <EditIcon />\n      </IconButton>\n      Edit\n    </Box>\n  );\n}\n","import Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport default function DeleteMemoryIcon() {\n  return (\n    <Box sx={{ alignItems: 'center' }}>\n      <IconButton\n        aria-label=\"delete\"\n        sx={{\n          bgcolor: 'form.input',\n        }}\n      >\n        <DeleteIcon />\n      </IconButton>\n      Delete\n    </Box>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@mui/material/Dialog';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function Confirm({\n  confirm, handleCallback, handleCloseCallback, title, message,\n}) {\n  const [open, setOpen] = useState(confirm);\n  useEffect(() => setOpen(confirm), [confirm]);\n\n  const handleClose = () => {\n    setOpen(false);\n    handleCloseCallback();\n  };\n\n  const handleSubmit = () => {\n    handleClose();\n    handleCallback();\n  };\n\n  return (\n    <Dialog open={open} sx={{ backgroundColor: 'faded.black' }}>\n      <DialogTitle>{title}</DialogTitle>\n      <Box sx={{ p: 2 }}>\n        <Typography sx={{ pb: 2 }}>{message}</Typography>\n        <Stack spacing={2} direction=\"row\">\n          <Button variant=\"contained\" onClick={handleClose}>Cancel</Button>\n          <Button variant=\"outlined\" onClick={handleSubmit}>OK</Button>\n        </Stack>\n      </Box>\n    </Dialog>\n  );\n}\n\nConfirm.propTypes = {\n  confirm: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  handleCallback: PropTypes.func.isRequired,\n  handleCloseCallback: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Confirm from '../../components/confirmation';\n\nexport default function MemoryActions({\n  deleteItem, updateItem, snackBar, confirmMessage, handleDeleteObject, handleEditClick,\n}) {\n  const [confirm, setConfirm] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n\n  const handleDeleteClick = () => {\n    setConfirm(true);\n    handleClose();\n  };\n\n  const handleEdit = () => {\n    handleEditClick();\n    handleClose();\n  };\n\n  return (\n    <div>\n      <MoreVertIcon onClick={handleClick} />\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n        sx={{ borderRadius: '10px' }}\n      >\n        <MenuItem onClick={handleEdit}>{updateItem}</MenuItem>\n        <MenuItem onClick={handleDeleteClick}>{deleteItem}</MenuItem>\n      </Menu>\n      <Confirm\n        title=\"Delete Memory\"\n        confirm={confirm}\n        handleCallback={handleDeleteObject}\n        handleCloseCallback={() => setConfirm(false)}\n        message={confirmMessage}\n      />\n      {snackBar}\n    </div>\n  );\n}\n\nMemoryActions.propTypes = {\n  deleteItem: PropTypes.node.isRequired,\n  updateItem: PropTypes.node.isRequired,\n  confirmMessage: PropTypes.string.isRequired,\n  snackBar: PropTypes.node.isRequired,\n  handleDeleteObject: PropTypes.func.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Navigate } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport Box from '@mui/material/Box';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Divider from '@mui/material/Divider';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport UpdateMemoryIcon from 'components/UpdateMemoryIcon';\nimport SimpleSnackbar from 'components/simple_snackbar';\nimport DeleteMemoryIcon from './DeleteMemoryIcon';\nimport MemoryActions from './MemoryActions';\nimport api from '../Api';\n\nasync function deleteMemory(bucket, authURL, memoryID, memoryDeleteCallback) {\n  try {\n    const deleteResults = await api.deleteMemory(bucket, authURL, memoryID);\n    memoryDeleteCallback(deleteResults);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nexport default function MemoryContentStructure({\n  header, subheader, photoLayout, storyLayout, bucket, memoryID, authURL, handleEditClick, preview,\n}) {\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  let className;\n  const theme = useTheme();\n  const lgdown = useMediaQuery(theme.breakpoints.down('lg'));\n  if (lgdown) className = '';\n  else className = 'vertical-scroll';\n\n  const handleSnackMessage = (msg, error) => {\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const memoryDeleteCallback = (open) => {\n    if (open.status === 'ok') {\n      handleSnackMessage('Memory deleted successfully', false);\n    } else {\n      handleSnackMessage('Error while deleting memory', true);\n    }\n    setSnack(true);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const snackBar = (\n    <SimpleSnackbar\n      snackBarOpen={snack}\n      message={snackMessage}\n      onClose={handleSnackBarClose}\n      error={snackError}\n    />\n  );\n\n  const actions = !preview ? (\n    <MemoryActions\n      confirmMessage=\"Do you want to delete this memory?\"\n      snackBar={snackBar}\n      handleDeleteObject={() => {\n        deleteMemory(bucket, authURL, memoryID, memoryDeleteCallback);\n      }}\n      deleteItem={<DeleteMemoryIcon />}\n      updateItem={<UpdateMemoryIcon />}\n      handleEditClick={handleEditClick}\n    />\n  ) : <MoreVertIcon />;\n\n  return (snack === false) ? (\n    <Navigate to=\"/memories\" replace />\n  ) : (\n    <Card\n      sx={{\n        boxShadow: 0,\n        bgcolor: 'button.main',\n        p: 1,\n      }}\n    >\n      <CardHeader\n        title={header}\n        subheader={subheader}\n        action={actions}\n      />\n      <Divider />\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-start',\n          flexDirection: {\n            lg: 'row',\n            xs: 'column',\n          },\n          height: {\n            lg: '72vh',\n          },\n          my: 1,\n        }}\n      >\n        <Box\n          sx={{\n            width: {\n              lg: '70%',\n              xs: '100%',\n            },\n            overflowY: 'scroll',\n            borderRadius: 5,\n          }}\n          className={className}\n        >\n          {photoLayout}\n        </Box>\n        <Box\n          sx={{\n            width: { lg: '30%', sx: '100%' },\n            overflowY: 'scroll',\n            mt: {\n              lg: 0,\n              xs: 2,\n            },\n            p: {\n              lg: 1,\n            },\n            px: 1,\n          }}\n          className={className}\n        >\n          {storyLayout}\n        </Box>\n      </Box>\n    </Card>\n  );\n}\n\nMemoryContentStructure.propTypes = {\n  header: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  subheader: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  photoLayout: PropTypes.element.isRequired,\n  storyLayout: PropTypes.element.isRequired,\n  memoryID: PropTypes.string.isRequired,\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n  preview: PropTypes.bool.isRequired,\n};\n"],"names":["RemovePhotoIcon","size","handleClick","sx","color","bgcolor","alpha","position","top","right","onClick","defaultProps","SnackText","message","error","direction","spacing","justifyContents","alignItems","fontSize","SimpleSnackbar","snackBarOpen","onClose","useState","open","setOpen","snackMessage","setSnackMessage","useEffect","handleClose","action","autoHideDuration","anchorOrigin","vertical","horizontal","useDate","initialDate","date","setDate","e","newDate","Date","formattedDate","toLocaleDateString","day","month","year","useStory","initialState","story","setStory","event","target","value","useTitle","initialValue","title","setTitle","EnhancedSwipeableViews","bindKeyboard","autoPlay","virtualize","SwipeableViews","MemoryImageSlide","ind","images","handleNext","handleStepChange","activeStep","setActiveStep","loadedImages","setLoadedImages","display","setDisplay","length","handleImageLoad","prevLoaded","index","onChangeIndex","enableMouseEvents","animateTransitions","interval","style","backgroundColor","slideRenderer","props","key","virtNum","count","total","modulus","mod","srcSet","map","src","width","join","Box","component","onLoad","boxSizing","cursor","objectFit","height","alt","NextPic","IconButton","edge","transform","KeyboardArrowRight","PreviousPic","left","KeyboardArrowLeft","MemoryCarousel","handleBack","handleChange","Dialog","fullScreen","CardHeader","subheader","borderRadius","padding","MemoryTitle","editable","text","handleTitleUpdate","handleTitleChange","edit","setEdit","startEdit","setStartEdit","Stack","Typography","variant","Edit","justifyContent","TextField","id","label","onChange","defaultValue","maxWidth","DoneTwoTone","Clear","MemoryDate","prevDate","handleDateUpdate","handleDateChange","mt","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","placeholder","inputFormat","maxDate","renderInput","readOnly","required","MemoryStory","prevStory","handleStoryUpdate","handleStoryChange","storyRef","useRef","Divider","whiteSpace","p","m","my","border","borderColor","minHeight","current","focus","TextareaAutosize","autoFocus","maxHeight","paddingTop","overflow","outline","resize","ref","OptionsButton","children","name","updateOp","Button","AddPhotos","type","hidden","multiple","accept","MemoryPhotoAlbum","handlePhotoClick","renderPhoto","arrangement","setArrangement","twidth","theight","forEach","layout","photos","MemoryImages","handleThumbnailUpdate","deleteImage","addImage","setUpdateOp","thumbnail","setThumbnail","handleOpUpdate","op","OptionsRow","Delete","updatePanel","imageProps","restImageProps","deleted","find","image","handleImageDelete","Close","FormControlLabel","control","Radio","checked","thumbnailImage","handleThumbnailChange","pr","borderLeft","bottom","BackButton","preview","paddingX","paddingY","Link","href","underline","boxShadow","ArrowBack","paddingRight","MemoryContent","memTitle","memDate","memStory","memImages","bucket","memoryID","authURL","activeIndex","setActiveIndex","setImages","snack","setSnack","newImages","setNewImages","newImagesCount","setNewImagesCount","errorUploadImages","setErrorUploadImages","addImageOpen","setAddImageOpen","uploadImageProgress","setUploadImageProgress","uploadImageStatus","setUploadImageStatus","snackError","setSnackError","httpError","setHTTPError","maxSteps","handleSnackMessage","msg","handleHTTPError","response","operation","callback","status","httpErrorCallback","UpdateDetails","item","api","resp","ok","console","log","UpdateThumbnail","filter","details","handleNewImages","entries","img","det","file","then","putURL","photo","fetch","body","method","uploadResp","pics","concat","errImgs","setTimeout","handleImageAdd","files","Array","from","Image","onload","naturalHeight","naturalWidth","resImages","resHeight","Math","ceil","creationDate","now","newName","imageDetails","URL","createObjectURL","revokeObjectURL","memoryTitle","memoryDate","storyLayout","photoLayout","updateDone","Done","to","margin","MemoryContentStructure","header","handleEditClick","prevActiveStep","step","fullWidth","Card","textAlign","CardContent","py","UpdateMemoryIcon","DeleteMemoryIcon","Confirm","confirm","handleCallback","handleCloseCallback","DialogTitle","pb","MemoryActions","deleteItem","updateItem","snackBar","confirmMessage","handleDeleteObject","setConfirm","anchorEl","setAnchorEl","Boolean","MoreVert","currentTarget","Menu","MenuListProps","MenuItem","memoryDeleteCallback","deleteResults","className","theme","useTheme","useMediaQuery","breakpoints","down","actions","deleteMemory","replace","flexDirection","lg","xs","overflowY","px"],"sourceRoot":""}