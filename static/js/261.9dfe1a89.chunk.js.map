{"version":3,"file":"static/js/261.9dfe1a89.chunk.js","mappings":"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","sources":["api/collage.jsx","api/helpers.js","components/OptionsButton.jsx","components/AddPhotos.jsx","components/LoginButton.jsx","components/profile.jsx","components/collage/helpers.js","db.js","hooks/collage/imageCount.jsx","hooks/collage/indexedDBState.jsx","components/collage/node.jsx","components/collage/binaryTree.jsx","components/collage/treeUtils.js","hooks/collage/collage.jsx","hooks/collage/dimensions.jsx","hooks/collage/options.jsx","hooks/collage/actions.jsx","hooks/collage/images.jsx","hooks/collage/tree.jsx","components/collage/Collage.jsx","components/collage/DownloadDialog.jsx","components/collage/SaveDialog.jsx","components/collage/SaveStatusDialog.jsx","components/collage/Header.jsx","components/collage/EmptyCollage.jsx","components/collage/View.jsx","components/collage/DesktopActionItem.jsx","components/collage/DesktopDrawer.jsx","components/collage/ControlsDivider.jsx","components/collage/DesktopActions.jsx","components/collage/ClearCollageDialog.jsx","components/collage/DesktopControls.jsx","components/collage/DesktopImageOptions.jsx","components/collage/PaddingControl.jsx","components/collage/RadiusControl.jsx","components/collage/ColorControl.jsx","components/collage/TextControl.jsx","components/collage/EditControl.jsx","components/collage/MobileActionItem.jsx","components/collage/MobileActions.jsx","components/collage/MainControls.jsx","components/collage/EditOptions.jsx","components/collage/ImageOptions.jsx","components/collage/MobileControls.jsx","pages/collage/CollageMaker.jsx"],"sourcesContent":["import helpers from 'api/helpers';\n\nfunction newCollage(collageID, collageDetails) {\n  try {\n    const path = '/api/collage/new';\n    const params = { collage_id: collageID };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.post(authURL, path, params, JSON.stringify(collageDetails));\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nasync function upload(url, body) {\n  try {\n    const params = { body, method: 'PUT' };\n    const resp = await fetch(url, params).then((response) => response);\n    return resp;\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nfunction listCollages(nextToken) {\n  try {\n    const path = '/api/collage/list';\n    const params = { next_token: nextToken };\n    const authURL = process.env.REACT_APP_AUTH_URL;\n    return helpers.get(authURL, path, params);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n    return error;\n  }\n}\n\nexport default { newCollage, upload, listCollages };\n","const get = async (url, path, params = {}) => {\n  let newUrl = `https://${url}${path}`;\n  const options = {\n    method: 'GET',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n  };\n  newUrl += `?${new URLSearchParams(params).toString()}`;\n  const resp = await fetch(newUrl, options);\n  if (!resp.ok) {\n    if (resp.status === 401) {\n      document.cookie =\n        'userInfo=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return { status: 'unauthenticated' };\n    }\n    if (resp.status === 403) {\n      return { status: 'forbidden' };\n    }\n  }\n\n  return resp.json();\n};\n\nconst post = async (url, path, params, body) => {\n  let apiUrl = `https://${url}${path}`;\n  apiUrl += `?${new URLSearchParams(params).toString()}`;\n  const options = {\n    method: 'POST',\n    credentials: 'include',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body,\n  };\n  return fetch(apiUrl, options).then((response) => {\n    if (!response.ok) {\n      return { status: 'error' };\n    }\n    return response.json();\n  });\n};\n\nexport default { get, post };\n","import PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\n\nexport default function OptionsButton({ children, onClick, name }) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: 'muted.main',\n        borderRadius: 15,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: 'muted.main',\n          backgroundColor: 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  //  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport OptionsButton from 'components/OptionsButton';\nimport Typography from '@mui/material/Typography';\n\nexport default function AddPhotos({ handleChange }) {\n  return (\n    <OptionsButton name=\"add\">\n      <input\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={handleChange}\n      />\n      <AddPhotoIcon sx={{ fontSize: '2rem' }} />\n      <Typography sx={{ fontWeight: 'bold' }}>Add Images</Typography>\n    </OptionsButton>\n  );\n}\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import Button from '@mui/material/Button';\n// import Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\n\nexport default function LoginButton({ authURL, next }) {\n  const url =\n    next !== ''\n      ? `https://${authURL}/oauth2/authorize?next=${next}`\n      : `https://${authURL}/oauth2/authorize`;\n  return (\n    <a\n      href={url}\n      target=\"_self\"\n      style={{ textDecoration: 'none', color: 'white' }}\n    >\n      <Button\n        type=\"submit\"\n        variant=\"outlined\"\n        sx={{\n          borderRadius: '5px',\n          borderColor: 'white',\n          fontWeight: 'bold',\n          color: 'white',\n          '&:hover': {\n            color: 'white',\n            borderColor: 'white',\n            backgroundColor: alpha('#fff', 0.1),\n          },\n        }}\n      >\n        Login\n      </Button>\n    </a>\n  );\n}\n\nLoginButton.propTypes = {\n  authURL: PropTypes.string.isRequired,\n  next: PropTypes.string.isRequired,\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport Logout from '@mui/icons-material/Logout';\nimport Typography from '@mui/material/Typography';\nimport ListItemText from '@mui/material/ListItemText';\nimport Link from '@mui/material/Link';\nimport { alpha } from '@mui/material/styles';\nimport Authenticate from '../hocs/require-authentication';\nimport commonUtils from '../utils';\n\nexport function ProfileAvatar({ name, picture, email }) {\n  const initials = Array.from(email)[0].toUpperCase();\n  return (\n    <Avatar\n      sx={{\n        borderRadius: '50%',\n        // border: 3,\n        borderColor: alpha('#fff', 0.8),\n        referrerPolicy: 'no-referrer',\n      }}\n      alt={name}\n      src={picture}\n    >\n      {initials}\n    </Avatar>\n  );\n}\n\nfunction ProfileIcon({ name, email, open, handleClick, avatar }) {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        textAlign: 'center',\n        marginRight: '10px',\n      }}\n    >\n      <Tooltip\n        title={\n          <>\n            <Typography>{name}</Typography>\n            <Typography>{email}</Typography>\n          </>\n        }\n      >\n        <IconButton\n          onClick={handleClick}\n          size=\"small\"\n          aria-controls={open ? 'account-menu' : undefined}\n          aria-haspopup=\"true\"\n          aria-expanded={open ? 'true' : undefined}\n          sx={{ ml: 2 }}\n        >\n          {avatar}\n        </IconButton>\n      </Tooltip>\n    </Box>\n  );\n}\n\nfunction ProfileMenu({ name, open, handleClose, anchorEl, avatar, email }) {\n  const profileIdentifier = name || email;\n  const authURL = process.env.REACT_APP_AUTH_URL;\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      id=\"account-menu\"\n      open={open}\n      onClose={handleClose}\n      onClick={handleClose}\n      PaperProps={{\n        elevation: 0,\n        sx: {\n          filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n          mt: 1.5,\n          '& .MuiAvatar-root': {\n            width: 32,\n            height: 32,\n            ml: -0.5,\n            mr: 1,\n          },\n          '&:before': {\n            content: '\"\"',\n            display: 'block',\n            position: 'absolute',\n            top: 0,\n            right: 14,\n            width: 10,\n            height: 10,\n            bgcolor: 'background.paper',\n            transform: 'translateY(-50%) rotate(45deg)',\n            zIndex: 0,\n          },\n        },\n      }}\n      transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n      anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n    >\n      <MenuItem>\n        {avatar}\n        <ListItemText>{profileIdentifier}</ListItemText>\n      </MenuItem>\n      <Divider />\n      <Link\n        href={`https://${authURL}/oauth2/logout`}\n        underline=\"none\"\n        sx={{ alignItems: 'center', display: 'flex' }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <Logout fontSize=\"small\" />\n          </ListItemIcon>\n          <Typography sx={{ color: 'muted.main' }}>Logout</Typography>\n        </MenuItem>\n      </Link>\n    </Menu>\n  );\n}\n\nfunction Profile() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const userInfo = commonUtils.getUserInfo();\n  const handleClose = () => setAnchorEl(null);\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const userAvatar = (\n    <ProfileAvatar\n      name={userInfo.name}\n      picture={userInfo.picture}\n      email={userInfo.email}\n    />\n  );\n\n  return (\n    <>\n      <ProfileIcon\n        avatar={userAvatar}\n        open={open}\n        email={userInfo.email}\n        handleClick={handleClick}\n        name={userInfo.name}\n      />\n      <ProfileMenu\n        anchorEl={anchorEl}\n        avatar={userAvatar}\n        handleClose={handleClose}\n        name={userInfo.name}\n        email={userInfo.email}\n        open={open}\n      />\n    </>\n  );\n}\n\nexport default function ProfileLink() {\n  //  const ProfileButton = Authenticate(Profile);\n  return (\n    <Grid item sx={{ paddingTop: '0.3rem' }}>\n      <Authenticate>\n        <Profile />\n      </Authenticate>\n    </Grid>\n  );\n}\n\nProfileIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  avatar: PropTypes.node.isRequired,\n};\n\nProfileMenu.propTypes = {\n  name: PropTypes.string.isRequired,\n  anchorEl: PropTypes.node.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  avatar: PropTypes.node.isRequired,\n  email: PropTypes.string.isRequired,\n};\n\nProfileAvatar.propTypes = {\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n};\n","function getClosest(arr, index1, index2, target) {\n  if (target - arr[index1] >= arr[index2] - target) return index2;\n  return index1;\n}\n\nfunction findClosest(arr, target) {\n  const n = arr.length;\n\n  if (target <= arr[0]) return 0;\n  if (target >= arr[n - 1]) return n - 1;\n\n  let start = 0;\n  let end = n;\n  let mid = 0;\n  while (start < end) {\n    mid = (start + end) / 2;\n\n    if (arr[mid] === target) return mid;\n\n    if (target < arr[mid]) {\n      if (mid > 0 && target > arr[mid - 1])\n        return getClosest(arr, mid - 1, mid, target);\n      end = mid;\n    } else {\n      if (mid < n - 1 && target < arr[mid + 1])\n        return getClosest(arr, mid, mid + 1, target);\n      start = mid + 1;\n    }\n  }\n\n  return mid;\n}\n\nfunction getCut() {\n  const cutArr = ['v', 'h'];\n  return cutArr[Math.round(Math.random())];\n}\n\nfunction findImgPair(arr, target) {\n  let start = 0;\n  let end = arr.length - 1;\n  let i = start;\n  let j = end;\n  let minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n  while (start <= end) {\n    if (arr[start] + arr[end] > target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        // update fetched pair and matching cost\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      end -= 1;\n    } else if (arr[start] + arr[end] <= target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      start += 1;\n    } else {\n      // best pair (m === 0) found\n      i = start;\n      j = end;\n      break;\n    }\n  }\n  const randomNumber = Math.round(Math.random());\n  if (randomNumber) return [i, j];\n  return [j, i];\n}\n\nfunction getAspectRatio(cut, ar1, ar2) {\n  if (cut === 'v') return ar1 + ar2;\n  return (ar1 * ar2) / (ar1 + ar2);\n}\n\nfunction downscaleImage(image, newWidth, newHeight, fileType) {\n  const canvas = document.createElement('canvas');\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, newWidth, newHeight);\n  return canvas.toDataURL(fileType);\n}\n\nfunction resizeImages(originalImages, maxWidth, handleImages, addImagesToDB) {\n  const tempImages = [];\n  originalImages.forEach((origImage) => {\n    const image = new Image();\n    image.onload = () => {\n      const { title, aspectRatio, type } = origImage;\n      const dataurl = downscaleImage(\n        image,\n        maxWidth,\n        maxWidth / aspectRatio,\n        origImage.type\n      );\n      const tempImage = {\n        title,\n        src: dataurl,\n        naturalHeight: maxWidth / aspectRatio,\n        naturalWidth: maxWidth,\n        aspectRatio,\n        type,\n      };\n      tempImages.push(tempImage);\n      handleImages((imgs) => {\n        const ind = imgs.findIndex((elem) => elem.title === origImage.title);\n        return [...imgs.slice(0, ind), tempImage, ...imgs.slice(ind + 1)];\n      });\n      addImagesToDB(tempImage);\n    };\n    image.src = origImage.src;\n  });\n}\n\nfunction convertBase64(file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\n\nfunction handleImageLoad(\n  event,\n  maxWidth,\n  handleImageCount,\n  handleNewImageCount,\n  handleImageData\n) {\n  if (event.target.files) {\n    handleImageCount((cnt) => cnt + event.target.files.length);\n    handleNewImageCount(event.target.files.length);\n    const files = Array.from(event.target.files);\n    files.map(async (file) => {\n      const image = new Image();\n      image.onload = (e) => {\n        const { naturalWidth, naturalHeight, src } = e.target;\n        const title = `${Date.now()}-${file.name}`;\n        const aspectRatio = naturalWidth / naturalHeight;\n\n        const dataurl = downscaleImage(\n          image,\n          maxWidth,\n          maxWidth / aspectRatio,\n          file.type\n        );\n        const originalImageDetail = {\n          title,\n          src,\n          naturalHeight,\n          naturalWidth,\n          aspectRatio,\n          type: file.type,\n        };\n        const imageDetail = {\n          title,\n          src: dataurl,\n          naturalHeight: maxWidth / aspectRatio,\n          naturalWidth: maxWidth,\n          aspectRatio,\n          type: file.type,\n        };\n        handleImageData(imageDetail, originalImageDetail);\n      };\n      image.src = await convertBase64(file);\n    });\n    files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n  }\n}\n\nfunction wrapText(text, x, y, maxWidth, fontSize, lineHeight) {\n  // First, start by splitting all of our text into words,\n  // but splitting it into an array split by spaces\n  const paddingX = 1; // 8px on both sided\n  const textCanvas = document.createElement('canvas');\n  textCanvas.width = maxWidth - 2 * paddingX * 8;\n  textCanvas.height = 1000;\n  const ctx = textCanvas.getContext('2d');\n  ctx.font = `${fontSize}px Arial`;\n  ctx.textAlign = 'center';\n  const tempX = x;\n  let tempY = y;\n  const words = text.split(' ');\n  let line = ''; // This will store the text of the current line\n  let testLine = ''; // This will store the text when we add a word, to test if it's too long\n  const lineArray = []; // This is an array of lines, which the function will return\n\n  // Lets iterate over each word\n  for (let n = 0; n < words.length; n += 1) {\n    // Create a test line, and measure it..\n    testLine += `${words[n]} `;\n    const metrics = ctx.measureText(testLine);\n    const testWidth = metrics.width;\n    console.log(\n      'wrap text ',\n      line,\n      testLine,\n      testWidth,\n      textCanvas.width,\n      ctx.letterSpacing\n    );\n    // If the width of this test line is more than the max width\n    if (testWidth > textCanvas.width && n > 0) {\n      // Then the line is finished, push the current line into \"lineArray\"\n      lineArray.push([line, tempX, tempY]);\n      // Increase the line height, so a new line is started\n      tempY += lineHeight;\n      // Update line and test line to use this word as the first word on the next line\n      line = `${words[n]} `;\n      testLine = `${words[n]} `;\n    } else {\n      // If the test line is still less than the max width, then add the word to the current line\n      line += `${words[n]} `;\n    }\n    // If we never reach the full max width, then there is only one line..\n    // so push it into the lineArray so we return something\n    if (n === words.length - 1) {\n      lineArray.push([line, tempX, tempY]);\n    }\n  }\n  // Return the line array\n  return lineArray;\n}\n\nconst convertToRGBA = (value) =>\n  `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nconst getCollageDimension = (maxW, maxH, a) => {\n  const origAR = maxW / maxH;\n  if (origAR < a) return [maxW, maxW / a];\n  if (origAR > a) return [maxH * a, maxH];\n  return [maxW, maxH];\n};\n\nexport default {\n  getCut,\n  findClosest,\n  findImgPair,\n  getAspectRatio,\n  handleImageLoad,\n  resizeImages,\n  wrapText,\n  convertToRGBA,\n  getCollageDimension,\n};\n","import Dexie from 'dexie';\n\nconst collageDB = new Dexie('collage');\n\ncollageDB.version(1).stores({\n  images: 'title, url,naturalWidth,naturalHeight,aspectRatio', // Primary key and indexed props\n  originalImages: 'title, url,naturalWidth,naturalHeight,aspectRatio', // Primary key and indexed props\n  imgCount: '++id, count',\n  collageTree: '++id, collageTree',\n});\n\nexport default { collageDB };\n","import { useState, useEffect } from 'react';\nimport db from 'db';\n\nexport default function useImageCount(tableName, initialValue) {\n  const [value, setValue] = useState(initialValue);\n\n  async function setDataFromDB() {\n    const rows = await db.collageDB[tableName].toArray();\n    console.log('rows data', rows, tableName);\n    if (rows.length) setValue(rows[0].count);\n  }\n  useEffect(() => setDataFromDB(), []);\n\n  const addToDB = (data) => {\n    console.log('data', data, tableName);\n    db.collageDB[tableName].put(data);\n  };\n\n  useEffect(() => {\n    db.collageDB[tableName].clear();\n    console.log('Adding data to table', tableName, value);\n    addToDB({ count: value });\n  }, [value]);\n\n  return [value, setValue];\n}\n","import { useState, useEffect } from 'react';\nimport db from 'db';\n\nexport default function useIndexedDBState(\n  tableName,\n  initialValue,\n  loadingCallback = () => {}\n) {\n  const [value, setValue] = useState(initialValue);\n\n  useEffect(() => {\n    async function setDataFromDB() {\n      loadingCallback(true);\n      const rows = await db.collageDB[tableName].toArray();\n      loadingCallback(false);\n      if (rows.length) setValue(rows);\n    }\n    setDataFromDB();\n  }, []);\n\n  const addToDB = (data) => db.collageDB[tableName].put(data);\n\n  return [value, setValue, addToDB];\n}\n","import Box from '@mui/material/Box';\n//  import Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Tooltip from '@mui/material/Tooltip';\nimport { alpha } from '@mui/material/styles';\nimport helpers from 'components/collage/helpers';\n\nexport default class Node {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n\n  fromObject(obj) {\n    if (obj != null) {\n      this.value = obj.value;\n      if (obj.left != null) {\n        this.left = new Node(obj.left.value);\n        this.left.fromObject(obj.left);\n      }\n      if (obj.right != null) {\n        this.right = new Node(obj.right.value);\n        this.right.fromObject(obj.right);\n      }\n      return this;\n    }\n    return null;\n  }\n\n  getScore() {\n    if ('cut' in this.value) {\n      return [...this.left.getScore(), ...this.right.getScore()];\n    }\n\n    return [this.value.width + this.value.height];\n  }\n\n  display() {\n    let output = [];\n    const { cut, title, aspectRatio } = this.value;\n    if (this === null) return null;\n    if ('cut' in this.value) output.push([cut, aspectRatio]);\n    if ('title' in this.value) output.push([title, aspectRatio]);\n    if (this.left !== null) output = output.concat(this.left.display());\n    if (this.right !== null) output = output.concat(this.right.display());\n    return output;\n  }\n\n  copy() {\n    if (this === null) return null;\n    const copyNode = new Node({ ...this.value });\n    if (this.left != null) copyNode.left = this.left.copy();\n    if (this.right != null) copyNode.right = this.right.copy();\n    return copyNode;\n  }\n\n  replaceImages(newImages) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const findIndex = newImages.findIndex(\n          (elem) => elem.title === this.value.title\n        );\n        const origImage = newImages[findIndex];\n        this.value.src = origImage.src;\n        this.value.naturalWidth = origImage.naturalWidth;\n        this.value.naturalHeight = origImage.naturalHeight;\n      }\n      if (this.left != null) this.left.replaceImages(newImages);\n      if (this.right != null) this.right.replaceImages(newImages);\n    }\n  }\n\n  removeImageData() {\n    if (this !== null) {\n      if ('title' in this.value) {\n        this.value.src = '';\n      }\n      if (this.left != null) this.left.removeImageData();\n      if (this.right != null) this.right.removeImageData();\n    }\n  }\n\n  addImageData(imageData) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const image = imageData.find((elem) => elem.title === this.value.title);\n        this.value.src = image.src;\n      }\n      if (this.left != null) this.left.addImageData(imageData);\n      if (this.right != null) this.right.addImageData(imageData);\n    }\n  }\n\n  RenderImage(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    const { width, title, src, x, y } = this.value;\n\n    const newX = x + xOffset;\n    const newY = y + yOffset;\n\n    return (\n      <>\n        <Box\n          key={title}\n          component=\"img\"\n          title={title}\n          alt={title}\n          width={width}\n          onLoad={() => {\n            handleCollageImageLoad();\n            console.log('loaded', title);\n          }}\n          src={src}\n          sx={{\n            position: 'absolute',\n            padding: `${padding}px`,\n            borderRadius: `${borderRadius}px`,\n            left: this.value.x + xOffset,\n            top: this.value.y + yOffset,\n          }}\n        />\n        {/*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    top: newY,\n         *    left: newX,\n         *    backgroundColor: 'white',\n         *    fontSize: '15px',\n         *  }}\n         *>\n         *  {newX.toFixed(2)}\n         *  ,\n         *  {newY.toFixed(2)}\n         *</Typography>\n         */\n        /*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    top: this.value.y + yOffset + padding,\n         *    left: this.value.x + xOffset + padding,\n         *    backgroundColor: 'white',\n         *  }}\n         *>\n         *  {width.toFixed(2)}\n         *  ,\n         *  {height.toFixed(2)}\n         *</Typography>\n         */\n        /*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    bottom: 38,\n         *    right: 10,\n         *    backgroundColor: 'white',\n         *    fontSize: '0.5rem',\n         *    fontWeight: 700,\n         *  }}\n         *>\n         *  {title}\n         *</Typography>\n         */}\n\n        {delImg === true ? (\n          <Tooltip title=\"Remove Image\">\n            <IconButton\n              size=\"medium\"\n              sx={{\n                color: alpha('#000', 0.7),\n                bgcolor: alpha('#fff', 0.5),\n                position: 'absolute',\n                top: newY + padding,\n                left: newX + padding,\n                padding: `${padding}px`,\n                borderRadius: '0 0 5px 0',\n              }}\n              onClick={() => handleRemoveImage(title)}\n            >\n              <DeleteIcon size=\"medium\" />\n            </IconButton>\n          </Tooltip>\n        ) : null}\n      </>\n    );\n  }\n\n  DOMDisplay(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    console.log(\n      'node dom display',\n      padding,\n      borderRadius,\n      delImg,\n      handleRemoveImage,\n      yOffset,\n      xOffset,\n      this.value.title\n    );\n    const { cut } = this.value;\n    if (this === null) return null;\n    if (cut) {\n      console.log(this.right, this.left);\n      return (\n        <>\n          {this.left != null\n            ? this.left.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n          {this.right != null\n            ? this.right.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n        </>\n      );\n    }\n    if ('title' in this.value)\n      return this.RenderImage(\n        padding,\n        borderRadius,\n        delImg,\n        handleRemoveImage,\n        yOffset,\n        xOffset,\n        handleCollageImageLoad\n      );\n    return null;\n  }\n\n  ResizeImage(image) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = this.value.naturalWidth;\n    tempCanvas.height = this.value.naturalHeight;\n    const tempCtx = tempCanvas.getContext('2d');\n    let width = this.value.naturalWidth;\n    let height = this.value.naturalHeight;\n    let newWidth;\n    let newHeight;\n    const scaleFactor = Math.floor(\n      Math.log2(this.value.naturalWidth / this.value.width)\n    );\n    if (scaleFactor === 0) {\n      tempCtx.drawImage(\n        image,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    } else {\n      for (let i = 0; i < scaleFactor; i += 1) {\n        newWidth = width >> 1; // eslint-disable-line no-bitwise\n        newHeight = newWidth / this.value.aspectRatio; // eslint-disable-line no-bitwise\n        if (i === 0) {\n          tempCtx.drawImage(\n            image,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        } else {\n          tempCtx.drawImage(\n            tempCanvas,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        }\n        width = newWidth;\n        height = newHeight;\n      }\n\n      tempCtx.drawImage(\n        tempCanvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    }\n    return tempCanvas;\n  }\n\n  ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset) {\n    const x = this.value.x + padding + xOffset;\n    const y = this.value.y + padding + yOffset;\n    const clipwidth = this.value.width - 2 * padding;\n    const clipheight = clipwidth / this.value.aspectRatio;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + clipwidth - radius, y);\n    ctx.quadraticCurveTo(x + clipwidth, y, x + clipwidth, y + radius);\n    ctx.lineTo(x + clipwidth, y + clipheight - radius);\n    ctx.quadraticCurveTo(\n      x + clipwidth,\n      y + clipheight,\n      x + clipwidth - radius,\n      y + clipheight\n    );\n    ctx.lineTo(x + radius, y + clipheight);\n    ctx.quadraticCurveTo(x, y + clipheight, x, y + clipheight - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.clip();\n\n    ctx.drawImage(\n      tempCanvas,\n      0,\n      0,\n      this.value.width,\n      this.value.height,\n      x,\n      y,\n      clipwidth,\n      clipheight\n    );\n    ctx.restore();\n  }\n\n  CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset) {\n    if ('cut' in this.value) {\n      this.left.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n      this.right.CanvasDisplay(\n        canvasElement,\n        padding,\n        radius,\n        yOffset,\n        xOffset\n      );\n    }\n\n    if ('title' in this.value) {\n      const ctx = canvasElement.getContext('2d');\n      const newImg = new Image();\n      newImg.onload = () => {\n        const tempCanvas = this.ResizeImage(newImg);\n        const tempCtx = tempCanvas.getContext('2d');\n        this.ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset);\n        tempCtx.clearRect(0, 0, tempCanvas.width, tempCanvas.height);\n      };\n      newImg.src = this.value.src;\n    }\n  }\n\n  generate(images, tar, imageCount) {\n    const targetAspectRatioArr = images.map(\n      (image) => image.naturalWidth / image.naturalHeight\n    );\n    if (imageCount < 1) return [];\n    if (imageCount === 1) {\n      const closestIndex = helpers.findClosest(targetAspectRatioArr, tar);\n      this.value = images[closestIndex];\n      this.left = null;\n      this.right = null;\n      return [\n        ...images.slice(0, closestIndex),\n        ...images.slice(closestIndex + 1),\n      ];\n    }\n\n    const cut = helpers.getCut();\n    this.value = { cut, targetAspectRatio: tar };\n    if (imageCount === 2) {\n      const [leftIndex, rightIndex] = helpers.findImgPair(\n        targetAspectRatioArr,\n        tar\n      );\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        images[leftIndex].aspectRatio,\n        images[rightIndex].aspectRatio\n      );\n      this.left = new Node(images[leftIndex]);\n      this.right = new Node(images[rightIndex]);\n      return images.filter(\n        (item, index) => ![leftIndex, rightIndex].includes(index)\n      );\n    }\n\n    let restImages;\n    let targetAspectRatio;\n    this.left = new Node({ cut: helpers.getCut() });\n    //  this.right = new Node({ cut: helpers.getCut() });\n    this.right = new Node({ cut: this.left.value.cut === 'v' ? 'h' : 'v' });\n\n    targetAspectRatio = tar / 2;\n    if (cut === 'v') {\n      targetAspectRatio = tar * 2;\n    }\n\n    const randomNumber = Math.round(Math.random());\n    const [first, second] = randomNumber\n      ? ['left', 'right']\n      : ['right', 'left'];\n    restImages = this[first].generate(\n      images,\n      targetAspectRatio,\n      imageCount - Math.floor(imageCount / 2)\n    );\n    restImages = this[second].generate(\n      restImages,\n      targetAspectRatio,\n      Math.floor(imageCount / 2)\n    );\n\n    this.value.aspectRatio = helpers.getAspectRatio(\n      this.value.cut,\n      this.left.value.aspectRatio,\n      this.right.value.aspectRatio\n    );\n\n    return restImages;\n  }\n\n  adjust(th) {\n    let adjustments = 0;\n    if (this === null) return adjustments;\n\n    if (this.left !== null && this.right !== null) {\n      if (this.value.aspectRatio > this.value.targetAspectRatio * th) {\n        this.value.cut = 'h';\n        adjustments += 1;\n      }\n      if (this.value.aspectRatio < this.value.targetAspectRatio / th) {\n        this.value.cut = 'v';\n        adjustments += 1;\n      }\n\n      if (this.value.cut === 'v') {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n      } else {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n      }\n      adjustments += this.left.adjust(th) + this.right.adjust(th);\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        this.left.value.aspectRatio,\n        this.right.value.aspectRatio\n      );\n    }\n\n    return adjustments;\n  }\n\n  addSize(parentWidth, parentHeight, parentX, parentY, parentCut, nodeType) {\n    if (parentCut === 'v') {\n      this.value.height = parentHeight;\n      this.value.width = this.value.height * this.value.aspectRatio;\n    } else {\n      this.value.width = parentWidth;\n      this.value.height = this.value.width / this.value.aspectRatio;\n    }\n\n    if (nodeType === 'left') {\n      this.value.x = parentX;\n      this.value.y = parentY;\n    } else if (parentCut === 'h') {\n      this.value.y = parentY + parentHeight - this.value.height;\n      this.value.x = parentX;\n    } else {\n      this.value.x = parentX + parentWidth - this.value.width;\n      this.value.y = parentY;\n    }\n\n    if (this.left !== null) {\n      this.left.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'left'\n      );\n    }\n    if (this.right !== null) {\n      this.right.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'right'\n      );\n    }\n  }\n}\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\nimport Node from './node';\nimport helpers from './helpers';\n\nconst convertToRGBA = (value) =>\n  `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nfunction TextDisplay(textArray, position) {\n  return (\n    <>\n      {\n        // eslint-disable-next-line react/destructuring-assignment\n        textArray.map((chunk) => (\n          <Typography\n            key={chunk[2]}\n            sx={{\n              width: '100%',\n              position: 'absolute',\n              top: position + chunk[2],\n              bgcolor: alpha('#1c1c1c', 0.7),\n              paddingX: 1,\n              color: 'button.main',\n              textAlign: 'center',\n              fontFamily: 'Arial',\n              fontSize: '20px',\n              lineHeight: '25px',\n              letterSpacing: 'normal',\n            }}\n          >\n            {chunk[0]}\n          </Typography>\n        ))\n      }\n    </>\n  );\n}\n\nfunction TextCanvasDraw(\n  ctx,\n  textArray,\n  position,\n  scaleFactor,\n  canvasWidth,\n  textHeight\n) {\n  ctx.font = `${scaleFactor * 20}px Arial`;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'top';\n  ctx.fillStyle = '#1c1c1cb3';\n  ctx.fillRect(0, position, canvasWidth, position + textHeight);\n  ctx.fillStyle = 'white';\n\n  console.log('text array', textArray, textHeight);\n  // eslint-disable-next-line no-restricted-syntax\n  for (const chunk of textArray) {\n    const [textPart, , y] = chunk;\n    ctx.fillText(textPart, canvasWidth / 2, y + position + 2.5 * scaleFactor);\n  }\n}\n\nexport default class BinaryTree {\n  constructor(value) {\n    if (this.root === undefined) {\n      this.root = new Node(value);\n      return this;\n    }\n  }\n\n  addOptions(options) {\n    //  const convertToRGBA = (value) => `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n    this.root.options = { ...options };\n  }\n\n  display() {\n    if (this.root !== null) {\n      return this.root.display();\n    }\n    return null;\n  }\n\n  replaceImages(newImages) {\n    if (this.root !== null) {\n      this.root.replaceImages(newImages);\n    }\n  }\n\n  fromObject(obj) {\n    if (obj.root != null) this.root.fromObject(obj.root);\n    return this;\n  }\n\n  removeImageData() {\n    const tempTree = this.copy();\n    if (this.root !== null) {\n      tempTree.root.removeImageData();\n    }\n    return tempTree;\n  }\n\n  addImageData(imageData) {\n    if (this.root !== null) {\n      this.root.addImageData(imageData);\n    }\n  }\n\n  DOMDisplay(\n    canvasWidth,\n    canvasHeight,\n    delImg,\n    handleRemoveImage,\n    handleCollageImageLoad\n  ) {\n    const { text, topText, padding, borderRadius, color } = this.root.options;\n    const { width, height } = this.root.value;\n    const lA = helpers.wrapText(text, 0, 0, canvasWidth, 20, 25);\n    const textHeight = text.length ? lA.length * 25 : 0;\n    let yOffset = (canvasHeight - textHeight - height) / 2;\n    const xOffset = (canvasWidth - width) / 2;\n    let position = canvasHeight - textHeight;\n    if (topText && text.length > 0) {\n      yOffset += textHeight;\n      position = 0;\n    }\n\n    console.log(\n      'tree dom display',\n      canvasWidth,\n      canvasHeight,\n      height,\n      this.root.options,\n      textHeight,\n      yOffset,\n      xOffset,\n      width,\n      this,\n      lA\n    );\n    if (this.root !== null) {\n      return (\n        <Box sx={{ backgroundColor: 'white' }}>\n          <Box\n            width={canvasWidth}\n            height={canvasHeight}\n            sx={{\n              position: 'relative',\n              backgroundColor: convertToRGBA(color),\n            }}\n          >\n            {this.root.DOMDisplay(\n              padding,\n              borderRadius,\n              delImg,\n              handleRemoveImage,\n              yOffset,\n              xOffset,\n              handleCollageImageLoad\n            )}\n            {text.length ? TextDisplay(lA, position) : null}\n          </Box>\n        </Box>\n      );\n    }\n    return null;\n  }\n\n  CanvasDisplay(canvasWidth, canvasHeight, canvasElement, scaleFactor) {\n    if (this.root !== null) {\n      const { text, topText, padding, borderRadius, color } = this.root.options;\n      const { width, height } = this.root.value;\n      const lA = helpers.wrapText(\n        text,\n        0,\n        0,\n        canvasWidth,\n        20 * scaleFactor,\n        25 * scaleFactor\n      );\n      const textHeight = text.length ? lA.length * 25 * scaleFactor : 0;\n      let yOffset = (canvasHeight - textHeight - height) / 2;\n      const xOffset = (canvasWidth - width) / 2;\n      let position = canvasHeight - textHeight;\n      if (topText && text.length > 0) {\n        yOffset += textHeight;\n        position = 0;\n      }\n      const ctx = canvasElement.getContext('2d');\n      ctx.fillStyle = convertToRGBA(color);\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      this.root.CanvasDisplay(\n        canvasElement,\n        padding * scaleFactor,\n        borderRadius * scaleFactor,\n        yOffset,\n        xOffset\n      );\n      TextCanvasDraw(ctx, lA, position, scaleFactor, canvasWidth, textHeight);\n    }\n  }\n\n  generateScore() {\n    const score = this.root.getScore();\n    // console.log('from', ...score);\n    return Math.min(...score);\n  }\n\n  generateCollageTree(images, tar) {\n    this.root.generate(images, tar, images.length);\n  }\n\n  adjust(th) {\n    let trys = 0;\n    let bestAdjust = this.copy();\n    let bestAspectRatio = this.root.value.aspectRatio;\n    const tolerableDifference = this.root.value.targetAspectRatio * (1 - th);\n    let ajstCnt = 1000;\n    while (trys < 100 && ajstCnt > 0) {\n      ajstCnt = this.root.adjust(th);\n      trys += 1;\n      const diff =\n        this.root.value.aspectRatio - this.root.value.targetAspectRatio;\n      if (\n        Math.abs(diff) <\n        Math.abs(bestAspectRatio - this.root.value.targetAspectRatio)\n      ) {\n        bestAspectRatio = this.root.value.aspectRatio;\n        bestAdjust = this.copy();\n      }\n      if ((diff > 0 && diff < tolerableDifference) || diff === 0) break;\n    }\n\n    return [bestAspectRatio, bestAdjust];\n  }\n\n  copy() {\n    const copyTree = new BinaryTree({});\n    copyTree.root = this.root.copy();\n    copyTree.root.options = { ...this.root.options };\n    return copyTree;\n  }\n\n  addSize(canvasWidth, canvasHeight, aspectRatio) {\n    const [maxW, maxH] = helpers.getCollageDimension(\n      canvasWidth,\n      canvasHeight,\n      aspectRatio\n    );\n    this.root.value.width = maxW;\n    this.root.value.height = maxH;\n    console.log('add size', this.root.value.width, this.root.value.height);\n    this.root.value.x = 0;\n    this.root.value.y = 0;\n    const { width, height, x, y, cut } = this.root.value;\n    if (this.root.left !== null)\n      this.root.left.addSize(width, height, x, y, cut, 'left');\n    if (this.root.right !== null)\n      this.root.right.addSize(width, height, x, y, cut, 'right');\n  }\n}\n","import BinaryTree from './binaryTree';\nimport helpers from './helpers';\n\nfunction findBestAdjustTree(images, tolerance, imageWidth, imageHeight) {\n  const sortedImages = images.sort((a, b) =>\n    a.aspectRatio <= b.aspectRatio ? 1 : -1\n  );\n  const collageArray = [];\n  for (let i = 0; i < 100; i += 1) {\n    const imgTree = new BinaryTree({ cut: helpers.getCut() });\n    imgTree.generateCollageTree(sortedImages, imageWidth / imageHeight);\n\n    collageArray.push(imgTree.adjust(1 - tolerance));\n  }\n\n  collageArray.sort((a, b) => {\n    const aspR = imageWidth / imageHeight;\n    const diffA = Math.abs(a[0] - aspR);\n    const diffB = Math.abs(b[0] - aspR);\n    return diffA - diffB;\n  });\n\n  const bAR = collageArray.filter(\n    (elem) => elem[0].toFixed(1) === collageArray[0][0].toFixed(1)\n  );\n  console.log('from bar', bAR);\n  let maxScore = 0;\n  let maxElem = {};\n  bAR.forEach((element) => {\n    element[1].addSize(\n      1000 * (imageWidth / imageHeight),\n      1000,\n      imageWidth / imageHeight\n    );\n    const score = element[1].generateScore();\n    // console.log('from bar all matching', score);\n    if (score > maxScore) {\n      maxScore = score;\n      maxElem = element;\n    }\n  });\n  // console.log('from returning', maxElem, maxScore);\n  return maxElem;\n  // collageArray[0][1].addSize(\n  //   1000 * (imageWidth / imageHeight),\n  //   1000,\n  //   imageWidth / imageHeight\n  // );\n  // console.log(\n  //   'from best adjust tree',\n  //   collageArray[0][0],\n  //   collageArray[0][1].generateScore()\n  // );\n  // return collageArray[0];\n}\n\nexport default { findBestAdjustTree };\n","import { useEffect, useState } from 'react';\nimport useDimensions from 'hooks/collage/dimensions';\nimport useOptions from 'hooks/collage/options';\nimport useActions from 'hooks/collage/actions';\nimport useImages from 'hooks/collage/images';\nimport useTree from 'hooks/collage/tree';\n\nimport helpers from 'components/collage/helpers';\nimport collageapi from 'api/collage';\n\nexport default function useCollage() {\n  const collageID = Date.now();\n  const constants = {\n    tolerance: 0.1,\n    resizeImageWidth: 1500,\n    aspectRatio: 0.7,\n    paperSizes: {\n      A4: { width: 2480, height: 3508, text: '8 X 11 inches' },\n      A3: { width: 3508, height: 4961, text: '11 X 16 inches' },\n    },\n  };\n\n  const dimensions = useDimensions(constants.aspectRatio);\n  const options = useOptions();\n  const actions = useActions();\n  const images = useImages(constants.resizeImageWidth);\n  const treeState = useTree({}, options.setOptions);\n  const [thumbnail, setThumbnail] = useState(null);\n  const [saveStatus, setSaveStatus] = useState({\n    details: {\n      text: 'Saving Details',\n      status: 'pending',\n    },\n    images: {\n      text: 'Saving Images',\n      status: 'pending',\n    },\n    finalizing: {\n      text: 'Finalizing Collage',\n      status: 'pending',\n    },\n  });\n\n  const updateStatus = (key, status) => {\n    const value = { ...saveStatus[key], status };\n    setSaveStatus((st) => ({ ...st, [key]: value }));\n  };\n\n  const handleClear = async () => {\n    const clearPromises = await Promise.allSettled([\n      treeState.clear(),\n      images.clear(),\n      options.clear(),\n    ]);\n\n    for (let i = 0; i < clearPromises.length; i += 1) {\n      if (\n        clearPromises[i].status === 'fulfilled' ||\n        clearPromises[i].value.ok === true\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    if (\n      (images.newImgCount > 0 &&\n        images.newImgCount === images.newImagesLoaded) ||\n      actions.refresh\n    ) {\n      images.setNewImageCount(0);\n      images.setNewImagesLoaded(0);\n      treeState.reAdjust(\n        images.images,\n        constants.tolerance,\n        dimensions.width,\n        dimensions.height - dimensions.textHeight,\n        options.options\n      );\n      actions.setRefresh(false);\n    }\n  }, [images.newImgCount, images.newImagesLoaded, actions.refresh]);\n\n  const collageCallback = (someTree) => treeState.addTreeToDB(someTree);\n\n  const handleRemoveImage = (imgTitle) => {\n    const newImagesArr = images.remove(imgTitle);\n    treeState.reAdjust(\n      newImagesArr,\n      constants.tolerance,\n      dimensions.imageWidth,\n      dimensions.imageHeight,\n      options.options\n    );\n  };\n\n  const generateThumbnail = () => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    const thumbnailCanvas = document.createElement('canvas');\n    const thumbnailTree = treeState.tree.copy();\n    thumbnailTree.addSize(500 * ar, 500, ar);\n    thumbnailCanvas.width = 500 * ar;\n    thumbnailCanvas.height = 500;\n    thumbnailTree.CanvasDisplay(\n      500 * ar,\n      500,\n      thumbnailCanvas,\n      (500 * ar) / dimensions.width\n    );\n\n    // create and update details\n    const thumbnailDetails = {\n      title: `thumbnail-${collageID}.png`,\n      src: '',\n      naturalHeight: 500,\n      naturalWidth: 500 * ar,\n      aspectRatio: ar,\n      type: 'image/png',\n    };\n    return [thumbnailDetails, thumbnailCanvas];\n  };\n\n  const uploadCollageDetails = (thumbnailDetails, name) => {\n    const collageDetails = {\n      collage_id: collageID.toString(),\n      name,\n      created_at: '2021-02-18T21:54:42.123Z',\n      last_updated_at: '2021-02-18T21:54:45.123Z',\n      images: images.removeImageData(images.originalImages),\n      tree: treeState.tree.removeImageData(),\n      thumbnail: thumbnailDetails,\n    };\n    console.log(collageDetails);\n    return collageapi.newCollage(collageID, collageDetails);\n  };\n\n  const uploadCollageImages = (thumbnailCanvas, imageURLS) => {\n    const thumbnailPromise = thumbnailCanvas.toBlob(async (blob) => {\n      setThumbnail(blob);\n      const thumbnailKey = `thumbnail-${collageID}.png`;\n      return collageapi.upload(imageURLS[thumbnailKey], blob);\n    });\n\n    const imagePromises = images.originalImages.map(async (item) => {\n      const url = imageURLS[item.title];\n      const body = item.src;\n      return collageapi.upload(url, body);\n    });\n\n    return [thumbnailPromise, ...imagePromises];\n  };\n\n  const newCollage = async (name) => {\n    const ar = treeState.tree.root.value.aspectRatio;\n    console.log('in generate thumbnail', ar, 500 * ar, 500);\n    const [thumbnailDetails, thumbnailCanvas] = generateThumbnail();\n    updateStatus('details', 'running');\n    const imageURLS = await uploadCollageDetails(thumbnailDetails, name);\n    updateStatus('details', 'done');\n    updateStatus('images', 'running');\n    const imagePromises = uploadCollageImages(thumbnailCanvas, imageURLS);\n    const uploadPromises = await Promise.allSettled(imagePromises);\n    updateStatus('images', 'done');\n    updateStatus('finalizing', 'running');\n    let uploadStatus;\n    for (let i = 0; i < uploadPromises.length; i += 1) {\n      if (\n        uploadPromises[i].status === 'fulfilled' ||\n        uploadPromises[i].value.ok === true\n      ) {\n        uploadStatus = true;\n      } else {\n        uploadStatus = false;\n        break;\n      }\n    }\n    updateStatus('finalizing', 'done');\n    return uploadStatus;\n  };\n\n  useEffect(() => {\n    if (\n      options.options.text.length > 0 &&\n      Object.keys(treeState.tree).length > 0\n    ) {\n      const tH = helpers.wrapText(\n        options.options.text,\n        0,\n        0,\n        dimensions.width,\n        20,\n        25\n      );\n      dimensions.setTextHeight(tH.length * 25);\n      const [w, h] = helpers.getCollageDimension(\n        dimensions.width,\n        dimensions.height - tH.length * 25,\n        treeState.tree.root.value.aspectRatio\n      );\n      dimensions.setImageWidth(w);\n      dimensions.setImageHeight(h);\n    } else {\n      dimensions.setTextHeight(0);\n      options.handlePositionChange(true);\n      dimensions.setImageWidth(dimensions.width);\n      dimensions.setImageHeight(dimensions.height);\n    }\n  }, [\n    dimensions.width,\n    dimensions.height,\n    treeState.tree,\n    options.options.text,\n  ]);\n\n  return [\n    thumbnail,\n    collageID,\n    constants,\n    dimensions,\n    options,\n    actions,\n    images,\n    treeState,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n  ];\n}\n","import { useRef, useState, useEffect } from 'react';\nimport helpers from 'components/collage/helpers';\n\nexport default function useDimensions(aspectRatio) {\n  const headerRef = useRef();\n  const actionsRef = useRef();\n  const footerRef = useRef();\n  const addImageRef = useRef();\n\n  const [height, setHeight] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [imageWidth, setImageWidth] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [maxHeight, setMaxHeight] = useState(0);\n  const [maxWidth, setMaxWidth] = useState(0);\n  const [textHeight, setTextHeight] = useState(0);\n\n  const setDimensions = () => {\n    const headerHeight = headerRef.current ? headerRef.current.offsetHeight : 0;\n    const actionsHeight = actionsRef.current\n      ? actionsRef.current.offsetHeight\n      : 0;\n    const footerHeight = footerRef.current ? footerRef.current.offsetHeight : 0;\n    const otherHeight = headerHeight + actionsHeight + footerHeight;\n    setMaxWidth(window.innerWidth);\n    setMaxHeight(window.innerHeight - otherHeight);\n    const [w, h] = helpers.getCollageDimension(\n      window.innerWidth,\n      window.innerHeight - otherHeight - 6,\n      aspectRatio\n    );\n    console.log('other height', otherHeight);\n    setWidth(w);\n    setHeight(h);\n  };\n\n  const handleImageAddClick = () => {\n    if (addImageRef.current) addImageRef.current.click();\n  };\n\n  useEffect(() => {\n    console.log('dimensions changed');\n    setDimensions();\n  }, [\n    window.innerHeight,\n    window.innerWidth,\n    headerRef.current,\n    actionsRef.current,\n    footerRef.current,\n  ]);\n\n  useEffect(() => {\n    setDimensions();\n    window.addEventListener('resize', setDimensions);\n\n    return () => window.removeEventListener('resize', setDimensions);\n  }, []);\n\n  return {\n    actionsRef,\n    headerRef,\n    footerRef,\n    width,\n    height,\n    imageHeight,\n    imageWidth,\n    setImageWidth,\n    setImageHeight,\n    maxHeight,\n    maxWidth,\n    handleImageAddClick,\n    textHeight,\n    setTextHeight,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useOptions() {\n  const optionsInitValue = {\n    padding: 2,\n    borderRadius: 5,\n    color: {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1,\n    },\n    text: '',\n    topText: true,\n  };\n\n  const [options, setOptions] = useState(optionsInitValue);\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n  const clear = () => setOptions(optionsInitValue);\n  const handlePaddingChange = (e) =>\n    setOptions((opts) => ({ ...opts, padding: e.target.value }));\n  const handleRadiusChange = (e) => {\n    setOptions((opts) => ({ ...opts, borderRadius: e.target.value }));\n  };\n\n  const handleColorClick = () => setDisplayColorPicker((dcp) => !dcp);\n  const handleColorClose = () => setDisplayColorPicker(false);\n  const handleColorChange = (clr) =>\n    setOptions((opts) => ({ ...opts, color: clr.rgb }));\n  const handlePositionChange = (value) =>\n    setOptions((opts) => ({ ...opts, topText: value }));\n\n  const handleTextChange = (e) => {\n    const { target } = e;\n    setOptions((opts) => ({ ...opts, text: target.value }));\n  };\n\n  return {\n    options,\n    setOptions,\n    clear,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClick,\n    handleColorClose,\n    handleColorChange,\n    handlePositionChange,\n    handleTextChange,\n    displayColorPicker,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useActions() {\n  const [open, setOpen] = useState(false);\n  const [saveOpen, setSaveOpen] = useState(false);\n  const [saveStart, setSaveStart] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [generate, setGenerate] = useState(false);\n  const [removeImage, setRemoveImage] = useState(false);\n  const [printOptions, setPrintOptions] = useState({\n    paperWidth: 0,\n    paperHeight: 0,\n  });\n\n  const onRefresh = () => setRefresh(true);\n  const handleDownload = () => setOpen(true);\n  const handleSave = () => setSaveOpen(true);\n  const onDownloadClose = () => setOpen(false);\n  const onSaveClose = () => setSaveOpen(false);\n  const clearDelete = () => setRemoveImage(false);\n  const onDelete = () => setRemoveImage((ri) => !ri);\n\n  const onDownloadClick = (w, h) => {\n    setPrintOptions({ paperWidth: w, paperHeight: h });\n    setGenerate(true);\n    setOpen(false);\n  };\n\n  const onSaveClick = () => {\n    setSaveStart(true);\n    setSaveOpen(false);\n  };\n  const handleGenerateCallback = () => {\n    setGenerate(false);\n    setPrintOptions({ paperWidth: 0, paperHeight: 0 });\n  };\n\n  return {\n    clearDelete,\n    generate,\n    handleDownload,\n    handleGenerateCallback,\n    onDelete,\n    onDownloadClick,\n    onDownloadClose,\n    onRefresh,\n    open,\n    printOptions,\n    refresh,\n    setGenerate,\n    setOpen,\n    setPrintOptions,\n    setRefresh,\n    removeImage,\n    setRemoveImage,\n    saveOpen,\n    setSaveOpen,\n    onSaveClose,\n    onSaveClick,\n    handleSave,\n    saveStart,\n    setSaveStart,\n  };\n}\n","import { useState } from 'react';\nimport useImageCount from 'hooks/collage/imageCount';\nimport useIndexedDBState from 'hooks/collage/indexedDBState';\nimport helpers from 'components/collage/helpers';\nimport db from 'db';\n\nexport default function useImages(resizeImageWidth) {\n  const [newImgCount, setNewImageCount] = useState(0);\n  const [newImagesLoaded, setNewImagesLoaded] = useState(0);\n  const [imgCount, setImageCount] = useImageCount('imgCount', 0);\n  const [loaded, setLoaded] = useState(0);\n  const [images, setImages, addToImagesDB] = useIndexedDBState(\n    'images',\n    [],\n    () => {}\n  );\n  const [originalImages, setOriginalImages, addToOriginalImagesDB] =\n    useIndexedDBState('originalImages', []);\n\n  const removeImageData = (imageArr) => {\n    const tempImgArr = [...imageArr];\n    return tempImgArr.map((img) => {\n      const { src: _, ...rest } = img;\n      return rest;\n    });\n  };\n\n  const handleImageData = (imageDetail, originalImageDetail) => {\n    setOriginalImages((arr) => arr.concat([originalImageDetail]));\n    setImages((arr) => arr.concat([imageDetail]));\n    addToImagesDB(imageDetail);\n    addToOriginalImagesDB(originalImageDetail);\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleLoad = (event) => {\n    helpers.handleImageLoad(\n      event,\n      resizeImageWidth,\n      setImageCount,\n      setNewImageCount,\n      handleImageData\n    );\n  };\n\n  const clear = () => {\n    db.collageDB.images.clear();\n    setImages([]);\n    db.collageDB.originalImages.clear();\n    setOriginalImages([]);\n    db.collageDB.imgCount.clear();\n    setImageCount(0);\n  };\n\n  const remove = (title) => {\n    const removeIndex = images.findIndex((elem) => elem.title === title);\n    const newImagesArr = [\n      ...images.slice(0, removeIndex),\n      ...images.slice(removeIndex + 1),\n    ];\n    setImages(newImagesArr);\n    setImageCount((cnt) => cnt - 1);\n    db.collageDB.images.delete(title);\n    db.collageDB.originalImages.delete(title);\n    return newImagesArr;\n  };\n\n  return {\n    addToImagesDB,\n    addToOriginalImagesDB,\n    clear,\n    handleImageData,\n    handleLoad,\n    images,\n    imgCount,\n    loaded,\n    newImagesLoaded,\n    newImgCount,\n    originalImages,\n    remove,\n    setImageCount,\n    setImages,\n    setLoaded,\n    setNewImageCount,\n    setNewImagesLoaded,\n    setOriginalImages,\n    removeImageData,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport db from 'db';\nimport treeUtils from 'components/collage/treeUtils';\nimport BinaryTree from 'components/collage/binaryTree';\n\nexport default function useTree(initialValue, loadingCallback = () => {}) {\n  const tableName = 'collageTree';\n  const [tree, setTree] = useState(initialValue);\n\n  async function setDataFromDB() {\n    const rows = await db.collageDB[tableName].toArray();\n    if (rows.length > 0) {\n      const newTree = new BinaryTree({});\n      newTree.fromObject({ root: rows[0].root });\n      if ('options' in rows[0].root) {\n        loadingCallback((opts) => ({ ...opts, ...rows[0].root.options }));\n      }\n      setTree(newTree);\n    }\n  }\n\n  useEffect(() => {\n    setDataFromDB();\n  }, []);\n\n  const addTreeToDB = async (data) => {\n    db.collageDB.collageTree.clear();\n    const cleanedData = data.removeImageData();\n    await db.collageDB[tableName].put(cleanedData);\n  };\n\n  const clear = () => {\n    db.collageDB.collageTree.clear();\n    setTree({});\n  };\n\n  const reAdjust = (imagesArr, tolerance, imageWidth, imageHeight, options) => {\n    const [, bestAspectRatioTree] = treeUtils.findBestAdjustTree(\n      imagesArr,\n      tolerance,\n      imageWidth,\n      imageHeight\n    );\n    bestAspectRatioTree.addOptions(options);\n    setTree(bestAspectRatioTree);\n    addTreeToDB(bestAspectRatioTree);\n  };\n\n  return { tree, setTree, addTreeToDB, clear, reAdjust };\n}\n","import { useState, useEffect } from 'react';\nimport helpers from './helpers';\n\nexport default function Collage({\n  dimensionProps,\n  imageProps,\n  actionProps,\n  collageCallback,\n  handleRemoveImage,\n  options,\n  tree,\n}) {\n  const [collage, setCollage] = useState(null);\n  const { images, originalImages, setLoaded } = imageProps;\n  const { generate, handleGenerateCallback, printOptions, removeImage } =\n    actionProps;\n  const { height, width, imageHeight, imageWidth } = dimensionProps;\n\n  const handleCollageImageLoad = () => setLoaded((cnt) => cnt + 1);\n  const isEmpty = (t) => Object.keys(t).length === 0;\n  const createCollage = () => {\n    console.log('started collage loading');\n    tree.addSize(imageWidth, imageHeight, tree.root.value.aspectRatio);\n    console.log('collage added size');\n    tree.addOptions(options);\n    console.log('collage added options', images.length);\n    if (images.length > 0) {\n      tree.addImageData(images);\n      console.log('collage added image data');\n      const collageElem = tree.DOMDisplay(\n        width,\n        height,\n        removeImage,\n        handleRemoveImage,\n        handleCollageImageLoad\n      );\n      console.log('collage added dom display');\n      setCollage(collageElem);\n      collageCallback(tree);\n    }\n  };\n\n  useEffect(() => {\n    if (!isEmpty(tree)) {\n      console.log('collage, tree is not empty');\n      createCollage();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(tree)) {\n      console.log('collage, tree is not empty 1');\n      createCollage();\n    } else {\n      setCollage(null);\n    }\n  }, [tree, options, imageWidth, imageHeight, removeImage, images]);\n\n  const downloadCollage = (canvas, pW, pH) => {\n    canvas.toBlob((blob) => {\n      const link = document.createElement('a');\n      link.download = `collage-${pW}X${pH}-${Date.now()}.png`;\n      link.href = URL.createObjectURL(blob);\n      link.click();\n      URL.revokeObjectURL(link.href);\n      link.href = null;\n      handleGenerateCallback();\n    });\n  };\n\n  useEffect(() => {\n    if (generate === true) {\n      const canvasElement = document.createElement('canvas');\n      const { paperWidth, paperHeight } = printOptions;\n      canvasElement.width = paperWidth;\n      canvasElement.height = paperHeight;\n      const scaleFactor = paperWidth / width;\n      const lineArray = helpers.wrapText(\n        options.text,\n        0,\n        0,\n        paperWidth,\n        20 * scaleFactor,\n        25 * scaleFactor\n      );\n      const textHeight = lineArray.length * 25 * scaleFactor;\n      const [imgPrintWidth, imgPrintHeight] = helpers.getCollageDimension(\n        paperWidth,\n        paperHeight - textHeight,\n        tree.root.value.aspectRatio\n      );\n      const canvasTree = tree.copy();\n      canvasTree.replaceImages(originalImages);\n      canvasTree.addSize(\n        imgPrintWidth,\n        imgPrintHeight,\n        tree.root.value.aspectRatio\n      );\n      canvasTree.CanvasDisplay(\n        paperWidth,\n        paperHeight,\n        canvasElement,\n        scaleFactor\n      );\n\n      setTimeout(\n        () => downloadCollage(canvasElement, paperWidth, paperHeight),\n        '5000'\n      );\n    }\n  }, [generate]);\n  return collage;\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Authenticate from 'hocs/require-authentication';\n\nexport default function DownloadDialog({ open, onClick, onClose, sizes }) {\n  const [value, setValue] = useState('');\n  const handleDownload = () => {\n    console.log(sizes[value].width, sizes[value].height, onClick);\n    onClick(sizes[value].width, sizes[value].height);\n    setValue('');\n  };\n\n  const handleClose = () => {\n    setValue('');\n    onClose();\n  };\n\n  return (\n    <Authenticate>\n      <Dialog open={open} fullWidth>\n        <DialogTitle sx={{ textAlign: 'center' }}>Download Collage</DialogTitle>\n        <DialogContent\n          dividers\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <DialogContentText sx={{ display: 'inline', pr: 1 }}>\n            Choose collage size\n          </DialogContentText>\n          <FormControl fullWidth sx={{ maxWidth: '60%' }}>\n            <InputLabel id=\"demo-simple-select-label\">Download Size</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              defaultValue=\"A4\"\n              value={value}\n              label=\"Download Size\"\n              onChange={(event) => setValue(event.target.value)}\n            >\n              {Object.keys(sizes).map((key) => (\n                <MenuItem key={sizes[key].text} value={key}>\n                  {sizes[key].text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"outlined\"\n            disabled={value.length === 0}\n            onClick={handleDownload}\n          >\n            Download\n          </Button>\n          <Button variant=\"text\" onClick={handleClose}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Authenticate>\n  );\n}\n\nDownloadDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\n// import DialogContentText from '@mui/material/DialogContentText';\nimport TextField from '@mui/material/TextField';\nimport Authenticate from 'hocs/require-authentication';\n\nexport default function SaveDialog({ open, onClick, onClose }) {\n  const [name, setName] = useState('');\n  const [nameError] = useState('');\n  const handleSave = () => {\n    onClick(name);\n  };\n\n  const handleNameChange = (e) => {\n    const { target } = e;\n    setName(target.value);\n  };\n  const handleClose = () => {\n    setName('');\n    onClose();\n  };\n\n  return (\n    <Authenticate>\n      <Dialog open={open} fullWidth>\n        <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n        <DialogContent\n          dividers\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <TextField\n            variant=\"outlined\"\n            label=\"Set Collage Name\"\n            defaultValue={name}\n            onChange={handleNameChange}\n            size=\"small\"\n            sx={{ width: '100%', mb: 1 }}\n            InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n            helperText={nameError}\n            error={!!nameError}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"outlined\"\n            disabled={name.length === 0}\n            onClick={handleSave}\n          >\n            Save\n          </Button>\n          <Button variant=\"text\" onClick={handleClose}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Authenticate>\n  );\n}\n\nSaveDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Typography from '@mui/material/Typography';\nimport Authenticate from 'hocs/require-authentication';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport PendingIcon from '@mui/icons-material/Pending';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CloseIcon from '@mui/icons-material/Close';\n\nfunction StatusIndicator({ status }) {\n  if (status === 'running') {\n    return <CircularProgress color=\"info\" size=\"1rem\" />;\n  }\n  if (status === 'pending') {\n    return <PendingIcon color=\"disabled\" size=\"0.875rem\" />;\n  }\n  if (status === 'done') {\n    return <CheckCircleOutlineIcon color=\"success\" size=\"0.875rem\" />;\n  }\n  if (status === 'failed') {\n    return <CloseIcon color=\"error\" size=\"0.875rem\" />;\n  }\n}\n\nStatusIndicator.propTypes = {\n  status: PropTypes.string.isRequired,\n};\n\nfunction Status({ text, status }) {\n  const color = {\n    pending: alpha('#000', 0.26),\n    done: 'black',\n    running: 'black',\n    failed: 'red',\n  };\n\n  return (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n      <Typography\n        sx={{ fontWeight: 'bold', fontSize: '0.875rem', color: color[status] }}\n      >\n        {text}\n      </Typography>\n      <StatusIndicator status={status} />\n    </Stack>\n  );\n}\n\nStatus.propTypes = {\n  text: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nexport default function SaveStatusDialog({ open, status }) {\n  return (\n    <Authenticate>\n      <Dialog open={open} fullWidth>\n        <DialogTitle sx={{ textAlign: 'center' }}>Save Collage</DialogTitle>\n        <DialogContent dividers>\n          <Stack direction=\"column\" justifyContent=\"center\" spacing={2}>\n            {Object.values(status).map((st) => (\n              <Status key={st.text} text={st.text} status={st.status} />\n            ))}\n          </Stack>\n        </DialogContent>\n      </Dialog>\n    </Authenticate>\n  );\n}\n\nSaveStatusDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  status: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Paper from '@mui/material/Paper';\nimport { Typography, Box, Link } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { alpha } from '@mui/material/styles';\nimport commonUtils from 'utils';\nimport ProfileLink from 'components/profile';\n\nimport LoginButton from 'components/LoginButton';\n\nexport default function Header({ headerRef }) {\n  const cookieValue = commonUtils.getUserInfo();\n  const isLoggedIn = cookieValue !== '';\n  console.log('COOKIE value', cookieValue, isLoggedIn);\n  return (\n    <Paper\n      ref={headerRef}\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        p: 1,\n        backgroundColor: alpha('#fff', 0.1),\n        borderRadius: 0,\n      }}\n      elevation={3}\n    >\n      <Box sx={{ postion: 'absolute', left: '5px' }}>\n        <Link href=\"/collages\" color=\"muted.main\" underline=\"none\">\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <ArrowBackIcon />\n          </Box>\n        </Link>\n      </Box>\n      <Typography\n        variant=\"h4\"\n        component=\"h4\"\n        sx={{ color: alpha('#fff', 0.5) }}\n      >\n        Collage Maker\n      </Typography>\n      {isLoggedIn === true ? (\n        <ProfileLink />\n      ) : (\n        <LoginButton\n          authURL={process.env.REACT_APP_AUTH_URL}\n          next=\"collage/create\"\n        />\n      )}\n    </Paper>\n  );\n}\n\nHeader.propTypes = {\n  headerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport collageBack from 'static/images/collage_back1.webp';\n\nexport default function EmptyCollage({ width, height, loadComponent }) {\n  return (\n    <Box\n      sx={{\n        width,\n        height,\n        //  border: '2px solid white',\n        position: 'relative',\n        backgroundImage: `url(${collageBack})`,\n        backgroundSize: width,\n        objectFit: 'contain',\n        backgroundRepeat: 'no-repeat',\n        alignItems: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      >\n        {loadComponent}\n      </Box>\n    </Box>\n  );\n}\n\nEmptyCollage.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  loadComponent: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport EmptyCollage from 'components/collage/EmptyCollage';\nimport Loading from 'components/Loading';\nimport AddPhotos from 'components/AddPhotos';\n\nexport default function View({\n  open,\n  saveOpen,\n  saveStatusOpen,\n  loading,\n  dimensionProps,\n  imageProps,\n  header,\n  actions,\n  downloadDialog,\n  saveDialog,\n  saveStatusDialog,\n  collage,\n  controls,\n}) {\n  const { width, height, maxWidth, maxHeight, imageHeight } = dimensionProps;\n  const { images, imgCount, handleLoad } = imageProps;\n  return (\n    <Box component=\"div\" sx={{ backgroundColor: 'black' }}>\n      {header}\n      {actions}\n      {open ? downloadDialog : null}\n      {saveOpen ? saveDialog : null}\n      {saveStatusOpen ? saveStatusDialog : null}\n      <Box\n        width={maxWidth}\n        height={maxHeight}\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'black',\n        }}\n      >\n        {images.length !== imgCount /* && !loading */ ? (\n          <EmptyCollage\n            width={width}\n            height={height}\n            loadComponent={\n              <Loading\n                title={`Loading (${images.length} / ${imgCount}) images...`}\n              />\n            }\n          />\n        ) : null}\n        {imgCount === 0 || imageHeight === 0 ? (\n          <EmptyCollage\n            width={width}\n            height={height}\n            loadComponent={\n              width ? <AddPhotos handleChange={handleLoad} /> : <div />\n            }\n          />\n        ) : null}\n        {collage}\n        {images.length > 0 && images.length === imgCount && loading ? (\n          <Loading title=\"Preparing collage...\" />\n        ) : null}\n      </Box>\n      {controls}\n    </Box>\n  );\n}\n\nView.propTypes = {\n  dimensionProps: PropTypes.shape({\n    maxWidth: PropTypes.number.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    imageHeight: PropTypes.number.isRequired,\n  }).isRequired,\n  imageProps: PropTypes.shape({\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        src: PropTypes.string.isRequired,\n        naturalHeight: PropTypes.number.isRequired,\n        naturalWidth: PropTypes.number.isRequired,\n        aspectRatio: PropTypes.number.isRequired,\n        type: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    imgCount: PropTypes.number.isRequired,\n    handleLoad: PropTypes.func.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  saveOpen: PropTypes.bool.isRequired,\n  saveStatusOpen: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  header: PropTypes.node.isRequired,\n  actions: PropTypes.node.isRequired,\n  collage: PropTypes.node.isRequired,\n  controls: PropTypes.node.isRequired,\n  downloadDialog: PropTypes.node.isRequired,\n  saveDialog: PropTypes.node.isRequired,\n  saveStatusDialog: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport { alpha } from '@mui/material/styles';\n\nexport default function DBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      icon={icon}\n      sx={{\n        py: 1,\n        fontWeight: 'bold',\n        color: 'gray',\n        outline: 'none',\n        '&:focus': {\n          color: alpha('#fff', 0.8),\n          outline: 'none',\n        },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\nDBNA.defaultProps = {\n  handleChange: () => {},\n};\n\nDBNA.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Drawer from '@mui/material/Drawer';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopDrawer({ anchor, children }) {\n  return (\n    <Drawer\n      anchor={anchor}\n      variant=\"permanent\"\n      PaperProps={{\n        sx: {\n          height: 'fit-content',\n          top: '50%',\n          backgroundColor: 'transparent',\n          color: 'gray',\n          fontWeight: 'bold',\n          borderRadius: anchor === 'left' ? '0 10px 10px 0' : '10px 0 0 10px',\n          transform: 'translate(0, -50%)',\n        },\n      }}\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nDesktopDrawer.propTypes = {\n  anchor: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Divider from '@mui/material/Divider';\n\nexport default function ControlsDivider() {\n  return <Divider sx={{ backgroundColor: 'gray', my: 1 }} variant=\"middle\" />;\n}\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport List from '@mui/material/List';\nimport { alpha } from '@mui/material/styles';\n\nimport DBNA from 'components/collage/DesktopActionItem';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport ControlsDivider from 'components/collage/ControlsDivider';\n\nexport default function DesktopActions({ onDownload }) {\n  const handleChange = (newValue) => {\n    console.log(newValue);\n    if (newValue === 'download') {\n      onDownload();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  return (\n    <DesktopDrawer anchor=\"right\">\n      <List sx={{ backgroundColor: alpha('#fff', 0.1) }}>\n        <DBNA\n          label=\"Save\"\n          icon={<SaveIcon />}\n          handleChange={() => handleChange('save')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label=\"Download\"\n          icon={<DownloadIcon />}\n          handleChange={() => handleChange('download')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label={\n            <>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Order\n              </Typography>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Print(s)\n              </Typography>\n            </>\n          }\n          icon={<PrintIcon />}\n          handleChange={() => handleChange('print')}\n        />\n      </List>\n    </DesktopDrawer>\n  );\n}\n\nDesktopActions.propTypes = {\n  onDownload: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\n\nexport default function ClearCollageDialog({ open, onSubmit, onCancel }) {\n  return (\n    <Dialog open={open}>\n      <DialogTitle\n        sx={{\n          textAlign: 'center',\n          fontWeight: 'bold',\n          color: alpha('#000', 0.8),\n        }}\n      >\n        Clear Collage\n      </DialogTitle>\n      <DialogContent dividers>\n        <DialogContentText sx={{ fontWeight: 'bold', color: 'gray' }}>\n          Do you want to clear collage?\n        </DialogContentText>\n        <Typography\n          variant=\"subtitle2\"\n          sx={{ color: 'red', fontWeight: 'bold' }}\n          noWrap\n        >\n          Note:\n        </Typography>\n        <Typography sx={{ fontSize: '0.8rem', color: 'gray' }}>\n          This change is not reversible\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onSubmit} sx={{ color: 'red' }}>\n          {' '}\n          Clear{' '}\n        </Button>\n        <Button variant=\"outlined\" onClick={onCancel}>\n          {' '}\n          Cancel{' '}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nClearCollageDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Stack from '@mui/material/Stack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport { alpha } from '@mui/material/styles';\n\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function DesktopControls({\n  onRefresh,\n  photosComp,\n  editComp,\n  handleClear,\n  clearDelete,\n}) {\n  const [imageOptionsOpen, setImageOptionsOpen] = useState(false);\n  const [editOptionsOpen, setEditOptionsOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const closeAll = () => {\n    clearDelete();\n    setImageOptionsOpen(false);\n    setEditOptionsOpen(false);\n    setClearOpen(false);\n  };\n  const handlePhotosClick = () => {\n    if (imageOptionsOpen) {\n      setImageOptionsOpen(false);\n    } else {\n      closeAll();\n      setImageOptionsOpen(true);\n    }\n  };\n\n  const handleEditClick = () => {\n    if (editOptionsOpen) {\n      setEditOptionsOpen(false);\n    } else {\n      closeAll();\n      setEditOptionsOpen(true);\n    }\n  };\n  const handleRearrange = () => {\n    closeAll();\n    onRefresh();\n  };\n\n  const handleClearClick = () => {\n    console.log('clear open', clearOpen);\n    if (clearOpen) {\n      setClearOpen(false);\n    } else {\n      closeAll();\n      setClearOpen(true);\n    }\n  };\n\n  const handleClearClose = () => setClearOpen(false);\n  const handleClearSubmit = () => {\n    handleClearClose();\n    handleClear();\n  };\n\n  console.log('clear open', clearOpen);\n  console.log('rendering desktop controls');\n  return (\n    <DesktopDrawer anchor=\"left\">\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n        <List\n          sx={{\n            backgroundColor: alpha('#fff', 0.1),\n            borderRadius: '0 10px 10px 0',\n          }}\n        >\n          <DBNA\n            label=\"Rearrange\"\n            icon={<AutoAwesomeMosaicIcon />}\n            handleChange={handleRearrange}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Photos\"\n            icon={<PhotoIcon />}\n            handleChange={handlePhotosClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Edit\"\n            icon={<EditIcon />}\n            handleChange={handleEditClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Clear\"\n            icon={<RefreshIcon />}\n            handleChange={handleClearClick}\n          />\n        </List>\n        {imageOptionsOpen ? photosComp : null}\n        {editOptionsOpen ? editComp : null}\n        <ClearCollageDialog\n          open={clearOpen}\n          onSubmit={handleClearSubmit}\n          onCancel={handleClearClose}\n        />\n      </Stack>\n    </DesktopDrawer>\n  );\n}\n\nDesktopControls.propTypes = {\n  onRefresh: PropTypes.func.isRequired,\n  photosComp: PropTypes.node.isRequired,\n  editComp: PropTypes.node.isRequired,\n  handleClear: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\n\nexport default function DesktopImageOptions({ onDelete, onAdd, clearDelete }) {\n  const handleAdd = () => {\n    clearDelete();\n    onAdd();\n  };\n\n  return (\n    <List\n      sx={{\n        backgroundColor: alpha('#fff', 0.15),\n        borderRadius: '10px 10px 10px 10px',\n        height: 'fit-content',\n      }}\n    >\n      <DBNA\n        label=\"Add\"\n        icon={<AddPhotoAlternateIcon />}\n        handleChange={handleAdd}\n      />\n      <ControlsDivider />\n      <DBNA label=\"Delete\" icon={<DeleteIcon />} handleChange={onDelete} />\n    </List>\n  );\n}\n\nDesktopImageOptions.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function PaddingControl({ padding, handlePaddingChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n          mixBlendMode: 'difference',\n        }}\n      >\n        Padding\n      </Typography>\n      <Slider\n        aria-label=\"Padding\"\n        defaultValue={0}\n        value={padding}\n        valueLabelDisplay=\"auto\"\n        step={0.1}\n        min={0}\n        max={10}\n        onChange={handlePaddingChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nPaddingControl.propTypes = {\n  padding: PropTypes.number.isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function RadiusControl({ radius, handleRadiusChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n        }}\n      >\n        Corner Radius\n      </Typography>\n      <Slider\n        aria-label=\"Corner Radius\"\n        defaultValue={0}\n        value={radius}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        min={0}\n        max={40}\n        onChange={handleRadiusChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nRadiusControl.propTypes = {\n  radius: PropTypes.number.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { ChromePicker } from 'react-color';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function ColorControl({\n  color,\n  displayColorPicker,\n  handleClick,\n  handleClose,\n  handleChange,\n}) {\n  console.log('color control', color, displayColorPicker);\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      spacing={2}\n      sx={{ my: 2 }}\n    >\n      <Typography\n        sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n      >\n        Background Color\n      </Typography>\n      <Box\n        component=\"div\"\n        sx={{\n          padding: '2px',\n          background: '#fff',\n          borderRadius: '5px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        }}\n        onClick={handleClick}\n      >\n        <Box\n          component=\"div\"\n          sx={{\n            width: '70px',\n            height: '30px',\n            borderRadius: '18px',\n            background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n          }}\n        />\n      </Box>\n      <ColorPicker\n        open={displayColorPicker}\n        color={color}\n        handleClose={handleClose}\n        handleChange={handleChange}\n      />\n    </Stack>\n  );\n}\n\nColorControl.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport function ColorPicker({ open, color, handleClose, handleChange }) {\n  console.log(handleClose);\n  return open ? (\n    <>\n      <Box\n        component=\"div\"\n        sx={{\n          position: 'absolute',\n          zIndex: 3,\n          bottom: 10,\n        }}\n      >\n        <IconButton\n          sx={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            zIndex: 2,\n            backgroundColor: 'button.main',\n            p: 0,\n            transform: 'translate(0, -110%)',\n            border: '2px solid black',\n          }}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n        <ChromePicker color={color} onChange={handleChange} />\n      </Box>\n    </>\n  ) : null;\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n//  import FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function TextControl({\n  text,\n  handleTextChange,\n  topText,\n  handlePositionChange,\n}) {\n  const [collageTextError] = useState('');\n  return (\n    <Stack\n      sx={{\n        backgroundColor: 'transparent',\n      }}\n    >\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        spacing={2}\n      >\n        <Typography\n          sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n        >\n          Collage Text\n        </Typography>\n        <FormGroup row>\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === false}\n                onChange={() => handlePositionChange(false)}\n                sx={{ color: 'white', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Bottom\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold' }}\n          />\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === true}\n                onChange={() => handlePositionChange(true)}\n                sx={{ color: 'gray', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Top\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold', fontSize: '0.8rem' }}\n          />\n        </FormGroup>\n      </Stack>\n      <TextField\n        variant=\"outlined\"\n        label=\"\"\n        defaultValue={text}\n        onChange={handleTextChange}\n        size=\"small\"\n        sx={{ width: '100%', mb: 1 }}\n        InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n        helperText={\n          <Typography sx={{ color: 'gray', fontSize: '0.75rem' }}>\n            {collageTextError}\n          </Typography>\n        }\n        error={!!collageTextError}\n      />\n    </Stack>\n  );\n}\n\nTextControl.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  handlePositionChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport ColorControl from 'components/collage/ColorControl';\nimport TextControl from 'components/collage/TextControl';\n\nexport default function EditControl({ optionProps }) {\n  const {\n    options,\n    handlePaddingChange,\n    displayColorPicker,\n    handleColorChange,\n    handleColorClose,\n    handleColorClick,\n    handleRadiusChange,\n    handleTextChange,\n    handlePositionChange,\n  } = optionProps;\n\n  return (\n    <Stack\n      direction=\"column\"\n      spacing={4}\n      sx={{\n        p: 2,\n        backgroundColor: alpha('#000', 0.7),\n        borderRadius: '10px 10px 10px 10px',\n        boxShadow: '0 0 10px inset rgba(255, 255, 255, 0.3)',\n      }}\n    >\n      <PaddingControl\n        padding={options.padding}\n        handlePaddingChange={handlePaddingChange}\n      />\n      <RadiusControl\n        radius={options.borderRadius}\n        handleRadiusChange={handleRadiusChange}\n      />\n      <ColorControl\n        color={options.color}\n        displayColorPicker={displayColorPicker}\n        handleChange={handleColorChange}\n        handleClose={handleColorClose}\n        handleClick={handleColorClick}\n      />\n      <TextControl\n        text={options.text}\n        topText={options.topText}\n        handleTextChange={handleTextChange}\n        handlePositionChange={handlePositionChange}\n      />\n    </Stack>\n  );\n}\n\nEditControl.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n\nexport default function MBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      value={label.toLowerCase()}\n      icon={icon}\n      sx={{\n        fontWeight: 'bold',\n        color: 'gray',\n        '&.Mui-selected': { color: 'white', outline: 'none' },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\n\nMBNA.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function MobileActions({ actionsRef, onDownload, onSave }) {\n  return (\n    <BottomNavigation\n      ref={actionsRef}\n      showLabels\n      sx={{ py: 1, fontWeight: 'bold', backgroundColor: alpha('#fff', 0.2) }}\n    >\n      <MBNA label=\"Save\" icon={<SaveIcon />} handleChange={onSave} />\n      <MBNA\n        label=\"Download\"\n        icon={<DownloadIcon />}\n        handleChange={onDownload}\n      />\n      <MBNA label=\"Print\" icon={<PrintIcon />} handleChange={() => {}} />\n    </BottomNavigation>\n  );\n}\n\nMobileActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport { alpha } from '@mui/material/styles';\n\nexport default function MainControls({ value, handleChange }) {\n  return (\n    <BottomNavigation\n      showLabels\n      value={value}\n      onChange={handleChange}\n      sx={{\n        fontWeight: 'bold',\n        backgroundColor: alpha('#fff', 0.2),\n        '&.Mui-selected': { color: 'white' },\n      }}\n    >\n      <BottomNavigationAction\n        label=\"Rearrange\"\n        value=\"rearrange\"\n        icon={<AutoAwesomeMosaicIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Photos\"\n        value=\"photo\"\n        icon={<PhotoIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Edit\"\n        value=\"edit\"\n        icon={<EditIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Clear\"\n        value=\"clear\"\n        icon={<RefreshIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n    </BottomNavigation>\n  );\n}\n\nMainControls.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport Typography from '@mui/material/Typography';\nimport PaddingIcon from '@mui/icons-material/Padding';\nimport CropFreeIcon from '@mui/icons-material/CropFree';\nimport SquareIcon from '@mui/icons-material/Square';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TitleIcon from '@mui/icons-material/Title';\nimport { alpha } from '@mui/material/styles';\n\nexport default function EditOptions({\n  color,\n  editOptionsValue,\n  open,\n  handleOptionsClose,\n  handleEditOptionsClick,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={editOptionsValue}\n        onChange={handleEditOptionsClick}\n        sx={{\n          display: 'flex',\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          position: 'relative',\n          alignItems: 'center',\n        }}\n      >\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Padding\n            </Typography>\n          }\n          value=\"padding\"\n          icon={<PaddingIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Corner\n            </Typography>\n          }\n          value=\"border radius\"\n          icon={<CropFreeIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Color\n            </Typography>\n          }\n          value=\"color\"\n          icon={\n            <SquareIcon\n              sx={{\n                fill: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n                borderRadius: '5px',\n              }}\n            />\n          }\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label=\"Text\"\n          value=\"text\"\n          icon={<TitleIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nEditOptions.propTypes = {\n  editOptionsValue: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleEditOptionsClick: PropTypes.func.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function ImageOptions({\n  open,\n  value,\n  handleOptionsClose,\n  handleDelete,\n  handleAdd,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={value}\n        sx={{\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          '&.Mui-selected': { color: 'white' },\n        }}\n      >\n        <MBNA\n          label=\"Delete\"\n          icon={<DeleteIcon />}\n          handleChange={handleDelete}\n        />\n        <MBNA\n          label=\"Add\"\n          icon={<AddPhotoAlternateIcon />}\n          handleChange={handleAdd}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nImageOptions.propTypes = {\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\n\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport TextControl from 'components/collage/TextControl';\nimport { ColorPicker } from 'components/collage/ColorControl';\nimport MainControls from 'components/collage/MainControls';\nimport EditOptions from 'components/collage/EditOptions';\nimport ImageOptions from 'components/collage/ImageOptions';\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function MobileControls({\n  optionProps,\n  actionProps,\n  dimensionProps,\n  handleClear,\n}) {\n  const {\n    options,\n    handlePaddingChange,\n    handleRadiusChange,\n    handleColorClose,\n    handleColorClick,\n    handleColorChange,\n    handleTextChange,\n    handlePositionChange,\n    displayColorPicker,\n  } = optionProps;\n\n  const { onRefresh, onDelete, clearDelete } = actionProps;\n  const { footerRef, handleImageAddClick } = dimensionProps;\n\n  const [mainOpen, setMainOpen] = useState(true);\n  const [value, setValue] = useState('');\n  const [editOpen, setEditOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const [editControl, setEditControl] = useState(null);\n  const [editOptionsValue, setEditOptionsValue] = useState('');\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageValue, setImageValue] = useState('');\n\n  const handleImageOptionsClose = () => {\n    setImageOpen(false);\n    setImageValue('');\n    setMainOpen(true);\n    clearDelete();\n    setValue('');\n  };\n\n  const handleEditOptionsClose = () => {\n    setEditOpen(false);\n    setEditControl(null);\n    setEditOptionsValue('');\n    setMainOpen(true);\n    setValue('');\n  };\n\n  const handleEditOptionsClick = (e, nV) => {\n    console.log('handle edit options click');\n    setEditOptionsValue(nV);\n    if (nV === 'padding') {\n      setEditControl(\n        <PaddingControl\n          padding={options.padding}\n          handlePaddingChange={handlePaddingChange}\n        />\n      );\n    } else if (nV === 'border radius') {\n      setEditControl(\n        <RadiusControl\n          radius={options.borderRadius}\n          handleRadiusChange={handleRadiusChange}\n        />\n      );\n    } else if (nV === 'color') {\n      handleColorClick();\n      setEditControl(\n        <ColorPicker\n          open={displayColorPicker}\n          color={options.color}\n          handleChange={handleColorChange}\n          handleClose={() => {\n            setEditControl(null);\n            handleColorClose();\n          }}\n        />\n      );\n    } else if (nV === 'text') {\n      console.log(nV);\n      setEditControl(\n        <TextControl\n          text={options.text}\n          handleTextChange={handleTextChange}\n          topText={options.topText}\n          handlePositionChange={handlePositionChange}\n        />\n      );\n    } else {\n      setEditControl(<Typography color=\"secondary\">{nV}</Typography>);\n    }\n  };\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'padding') {\n      setEditControl(\n        <PaddingControl\n          padding={options.padding}\n          handlePaddingChange={handlePaddingChange}\n        />\n      );\n    }\n  }, [options.padding, editOpen]);\n  // }, [options.padding, editOpen, editOptionsValue]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'border radius') {\n      setEditControl(\n        <RadiusControl\n          radius={options.borderRadius}\n          handleRadiusChange={handleRadiusChange}\n        />\n      );\n    }\n  }, [options.borderRadius, editOpen]);\n  // }, [options.borderRadius, editOpen, editOptionsValue]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'color') {\n      setEditControl(\n        <ColorPicker\n          open={displayColorPicker}\n          color={options.color}\n          handleChange={handleColorChange}\n          handleClose={handleColorClose}\n        />\n      );\n    }\n  }, [options.color, editOpen, displayColorPicker]);\n  // }, [options.color, editOpen, editOptionsValue, displayColorPicker]);\n\n  useEffect(() => {\n    console.log('text control useEffect');\n    if (editOpen && editOptionsValue === 'text') {\n      setEditControl(\n        <TextControl\n          text={options.text}\n          handleTextChange={handleTextChange}\n          topText={options.topText}\n          handlePositionChange={handlePositionChange}\n        />\n      );\n    }\n  }, [options.text, editOpen, options.topText]);\n  // }, [options.text, editOpen, editOptionsValue, options.topText]);\n\n  const handleImageClose = () => {\n    setImageValue('');\n    setImageOpen(false);\n    setMainOpen(true);\n  };\n\n  const handleChange = (event, newValue) => {\n    clearDelete();\n    handleImageClose();\n    handleEditOptionsClose();\n    setValue(newValue);\n    if (newValue === 'rearrange') {\n      onRefresh();\n    } else if (newValue === 'photo') {\n      setMainOpen(false);\n      setImageOpen(true);\n    } else if (newValue === 'edit') {\n      setMainOpen(false);\n      setEditOpen(true);\n    } else if (newValue === 'clear') {\n      setClearOpen(true);\n      //  handleClear();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  const handleImageAdd = () => {\n    clearDelete();\n    handleImageAddClick();\n  };\n\n  const handleClearSubmit = () => {\n    handleClear();\n    setClearOpen(false);\n    setValue('');\n  };\n\n  const handleClearCancel = () => {\n    setClearOpen(false);\n    setValue('');\n  };\n\n  console.log('rerendering', editControl);\n  return (\n    <Paper\n      ref={footerRef}\n      sx={{\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        mt: 1,\n        backgroundColor: 'black',\n        borderRadius: 0,\n      }}\n      elevation={4}\n    >\n      <ClearCollageDialog\n        open={clearOpen}\n        onSubmit={handleClearSubmit}\n        onCancel={handleClearCancel}\n      />\n      {editControl ? (\n        <Box\n          sx={{\n            backgroundColor: alpha('#fff', 0.15),\n            p: 1,\n          }}\n        >\n          {editControl}\n        </Box>\n      ) : null}\n      <ImageOptions\n        open={imageOpen}\n        value={imageValue}\n        handleDelete={onDelete}\n        handleAdd={handleImageAdd}\n        handleOptionsClose={handleImageOptionsClose}\n      />\n      <EditOptions\n        color={options.color}\n        editOptionsValue={editOptionsValue}\n        open={editOpen}\n        handleOptionsClose={handleEditOptionsClose}\n        handleEditOptionsClick={handleEditOptionsClick}\n      />\n      {mainOpen ? (\n        <MainControls value={value} handleChange={handleChange} />\n      ) : null}\n    </Paper>\n  );\n}\n\nMobileControls.propTypes = {\n  optionProps: PropTypes.shape({\n    options: PropTypes.shape({\n      padding: PropTypes.number.isRequired,\n      borderRadius: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      topText: PropTypes.bool.isRequired,\n      color: PropTypes.shape({\n        r: PropTypes.number.isRequired,\n        g: PropTypes.number.isRequired,\n        b: PropTypes.number.isRequired,\n        a: PropTypes.number.isRequired,\n      }),\n    }).isRequired,\n    handlePaddingChange: PropTypes.func.isRequired,\n    handleRadiusChange: PropTypes.func.isRequired,\n    handleColorChange: PropTypes.func.isRequired,\n    handleColorClose: PropTypes.func.isRequired,\n    handleColorClick: PropTypes.func.isRequired,\n    displayColorPicker: PropTypes.bool.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handlePositionChange: PropTypes.func.isRequired,\n  }).isRequired,\n  actionProps: PropTypes.shape({\n    onRefresh: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    clearDelete: PropTypes.func.isRequired,\n  }).isRequired,\n  handleClear: PropTypes.func.isRequired,\n  dimensionProps: PropTypes.shape({\n    handleImageAddClick: PropTypes.func.isRequired,\n    footerRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n    ]).isRequired,\n  }).isRequired,\n};\n","import { useNavigate } from 'react-router-dom';\nimport useCollage from 'hooks/collage/collage';\n\nimport Collage from 'components/collage/Collage';\nimport DownloadDialog from 'components/collage/DownloadDialog';\nimport SaveDialog from 'components/collage/SaveDialog';\nimport SaveStatusDialog from 'components/collage/SaveStatusDialog';\nimport Header from 'components/collage/Header';\nimport Loading from 'components/Loading';\nimport View from 'components/collage/View';\n\nimport DesktopActions from 'components/collage/DesktopActions';\nimport DesktopControls from 'components/collage/DesktopControls';\nimport DesktopImageOptions from 'components/collage/DesktopImageOptions';\nimport EditControl from 'components/collage/EditControl';\nimport MobileActions from 'components/collage/MobileActions';\nimport MobileControls from 'components/collage/MobileControls';\n\nfunction CollageMaker() {\n  const navigate = useNavigate();\n  const [\n    ,\n    collageID,\n    constants,\n    dimensionProps,\n    optionProps,\n    actionProps,\n    imageProps,\n    treeProps,\n    handleClear,\n    collageCallback,\n    handleRemoveImage,\n    newCollage,\n    saveStatus,\n  ] = useCollage();\n  console.log(collageID, newCollage, navigate);\n  const handleSave = async (name) => {\n    actionProps.onSaveClick();\n    const res = await newCollage(name);\n    console.log('save results', res, collageID);\n    if (res) {\n      setTimeout(() => {\n        handleClear();\n        actionProps.setSaveStart(false);\n        navigate(`/collage/${collageID}`);\n      }, 3000);\n    }\n  };\n  const downloadDialog = (\n    <DownloadDialog\n      open={actionProps.open}\n      onClick={handleSave}\n      onClose={actionProps.onDownloadClose}\n      sizes={constants.paperSizes}\n    />\n  );\n\n  const saveDialog = (\n    <SaveDialog\n      open={actionProps.saveOpen}\n      onClick={handleSave}\n      onClose={actionProps.onSaveClose}\n    />\n  );\n\n  const saveStatusDialog = (\n    <SaveStatusDialog open={actionProps.saveStart} status={saveStatus} />\n  );\n\n  const collage = (\n    <Collage\n      dimensionProps={dimensionProps}\n      imageProps={imageProps}\n      actionProps={actionProps}\n      collageCallback={collageCallback}\n      handleRemoveImage={handleRemoveImage}\n      options={optionProps.options}\n      tree={treeProps.tree}\n    />\n  );\n\n  const mobileControls = (\n    <MobileControls\n      optionProps={optionProps}\n      actionProps={actionProps}\n      dimensionProps={dimensionProps}\n      handleClear={handleClear}\n    />\n  );\n\n  const header = <Header headerRef={dimensionProps.headerRef} />;\n  const desktopPhotosComp = (\n    <DesktopImageOptions\n      onDelete={actionProps.onDelete}\n      onAdd={dimensionProps.handleImageAddClick}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n  const desktopControls = (\n    <DesktopControls\n      onRefresh={actionProps.onRefresh}\n      photosComp={desktopPhotosComp}\n      editComp={<EditControl optionProps={optionProps} />}\n      handleClear={handleClear}\n      clearDelete={actionProps.clearDelete}\n    />\n  );\n\n  const isMobile = window.innerWidth < window.innerHeight;\n  const controls = isMobile ? mobileControls : desktopControls;\n\n  const actionsComp = isMobile ? (\n    <MobileActions\n      actionsRef={dimensionProps.actionsRef}\n      onDownload={actionProps.handleDownload}\n      onSave={actionProps.handleSave}\n    />\n  ) : (\n    <DesktopActions onDownload={actionProps.handleDownload} />\n  );\n\n  return (\n    <>\n      <View\n        open={actionProps.open}\n        saveOpen={actionProps.saveOpen}\n        saveStatusOpen={actionProps.saveStart}\n        dimensionProps={dimensionProps}\n        imageProps={imageProps}\n        header={header}\n        actions={actionsComp}\n        downloadDialog={downloadDialog}\n        saveDialog={saveDialog}\n        saveStatusDialog={saveStatusDialog}\n        collage={collage}\n        controls={controls}\n        loading={imageProps.loaded < imageProps.images.length}\n      />\n      <input\n        ref={dimensionProps.addImageRef}\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={imageProps.handleLoad}\n      />\n      {actionProps.generate ? <Loading title=\"Creating collage ...\" /> : null}\n    </>\n  );\n}\n\nexport default CollageMaker;\n"],"names":["url","body","params","method","fetch","then","response","resp","console","log","newCollage","collageID","collageDetails","collage_id","helpers","process","JSON","stringify","error","upload","listCollages","nextToken","next_token","get","path","newUrl","options","credentials","headers","Headers","URLSearchParams","toString","ok","status","document","cookie","json","post","apiUrl","OptionsButton","children","onClick","name","Button","id","variant","component","sx","color","borderRadius","backgroundColor","padding","defaultProps","AddPhotos","handleChange","type","hidden","multiple","accept","onChange","fontSize","Typography","fontWeight","LoginButton","authURL","next","href","target","style","textDecoration","borderColor","alpha","ProfileAvatar","picture","email","initials","Array","from","toUpperCase","referrerPolicy","alt","src","ProfileIcon","open","handleClick","avatar","display","alignItems","textAlign","marginRight","title","size","undefined","ml","ProfileMenu","handleClose","anchorEl","profileIdentifier","onClose","PaperProps","elevation","filter","mt","width","height","mr","content","position","top","right","bgcolor","transform","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","underline","Profile","React","setAnchorEl","Boolean","userInfo","commonUtils","userAvatar","event","currentTarget","ProfileLink","item","paddingTop","getClosest","arr","index1","index2","downscaleImage","image","newWidth","newHeight","fileType","canvas","createElement","getContext","drawImage","toDataURL","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","getCut","Math","round","random","findClosest","n","length","start","end","mid","findImgPair","i","j","minMatchingCost","abs","getAspectRatio","cut","ar1","ar2","handleImageLoad","maxWidth","handleImageCount","handleNewImageCount","handleImageData","files","cnt","map","Image","e","naturalWidth","naturalHeight","Date","now","aspectRatio","dataurl","originalImageDetail","imageDetail","URL","revokeObjectURL","resizeImages","originalImages","handleImages","addImagesToDB","tempImages","forEach","origImage","tempImage","push","imgs","ind","findIndex","elem","slice","wrapText","text","x","y","lineHeight","textCanvas","ctx","font","tempX","tempY","words","split","line","testLine","lineArray","testWidth","measureText","letterSpacing","convertToRGBA","value","r","g","b","a","getCollageDimension","maxW","maxH","origAR","collageDB","Dexie","version","stores","images","imgCount","collageTree","useImageCount","tableName","initialValue","useState","setValue","db","toArray","rows","count","useEffect","setDataFromDB","data","clear","put","useIndexedDBState","loadingCallback","addToDB","Node","this","left","obj","fromObject","getScore","output","concat","copyNode","copy","newImages","replaceImages","removeImageData","imageData","find","addImageData","delImg","handleRemoveImage","yOffset","xOffset","handleCollageImageLoad","newX","newY","Box","onLoad","Tooltip","IconButton","Delete","DOMDisplay","RenderImage","tempCanvas","tempCtx","scaleFactor","floor","log2","radius","clipwidth","clipheight","save","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","canvasElement","CanvasDisplay","newImg","ResizeImage","ImageStyling","clearRect","tar","imageCount","targetAspectRatioArr","closestIndex","restImages","targetAspectRatio","leftIndex","rightIndex","index","includes","first","second","generate","th","adjustments","adjust","parentWidth","parentHeight","parentX","parentY","parentCut","nodeType","addSize","TextDisplay","textArray","chunk","paddingX","fontFamily","BinaryTree","root","tempTree","canvasWidth","canvasHeight","topText","lA","textHeight","fillStyle","fillRect","textBaseline","textPart","fillText","TextCanvasDraw","score","min","trys","bestAdjust","bestAspectRatio","tolerableDifference","ajstCnt","diff","copyTree","findBestAdjustTree","tolerance","imageWidth","imageHeight","sortedImages","sort","collageArray","imgTree","generateCollageTree","aspR","bAR","toFixed","maxScore","maxElem","element","generateScore","useCollage","constants","resizeImageWidth","paperSizes","A4","A3","dimensions","headerRef","useRef","actionsRef","footerRef","addImageRef","setHeight","setImageHeight","setImageWidth","setWidth","maxHeight","setMaxHeight","setMaxWidth","setTextHeight","setDimensions","otherHeight","current","offsetHeight","window","innerWidth","innerHeight","w","h","addEventListener","removeEventListener","handleImageAddClick","click","useDimensions","optionsInitValue","setOptions","displayColorPicker","setDisplayColorPicker","handlePaddingChange","opts","handleRadiusChange","handleColorClick","dcp","handleColorClose","handleColorChange","clr","rgb","handlePositionChange","handleTextChange","useOptions","actions","setOpen","saveOpen","setSaveOpen","saveStart","setSaveStart","refresh","setRefresh","setGenerate","removeImage","setRemoveImage","paperWidth","paperHeight","printOptions","setPrintOptions","clearDelete","handleDownload","handleGenerateCallback","onDelete","ri","onDownloadClick","onDownloadClose","onRefresh","onSaveClose","onSaveClick","handleSave","useActions","newImgCount","setNewImageCount","newImagesLoaded","setNewImagesLoaded","setImageCount","loaded","setLoaded","setImages","addToImagesDB","setOriginalImages","addToOriginalImagesDB","handleLoad","remove","removeIndex","newImagesArr","imageArr","img","useImages","treeState","tree","setTree","newTree","addTreeToDB","cleanedData","reAdjust","imagesArr","treeUtils","bestAspectRatioTree","addOptions","useTree","thumbnail","setThumbnail","details","finalizing","saveStatus","setSaveStatus","updateStatus","key","st","handleClear","allSettled","clearPromises","generateThumbnail","ar","thumbnailCanvas","thumbnailTree","uploadCollageDetails","thumbnailDetails","created_at","last_updated_at","collageapi","uploadCollageImages","imageURLS","thumbnailPromise","toBlob","blob","thumbnailKey","imagePromises","uploadPromises","uploadStatus","Object","keys","tH","someTree","imgTitle","Collage","dimensionProps","imageProps","actionProps","collageCallback","collage","setCollage","isEmpty","t","createCollage","collageElem","imgPrintWidth","imgPrintHeight","canvasTree","setTimeout","pW","pH","link","download","createObjectURL","DownloadDialog","sizes","Dialog","fullWidth","DialogTitle","DialogContent","dividers","justifyContent","DialogContentText","pr","FormControl","InputLabel","Select","labelId","defaultValue","label","MenuItem","DialogActions","disabled","SaveDialog","setName","nameError","TextField","mb","InputProps","helperText","StatusIndicator","CircularProgress","Pending","CheckCircleOutline","Close","Status","pending","done","running","failed","Stack","direction","SaveStatusDialog","spacing","values","Header","cookieValue","isLoggedIn","Paper","ref","p","postion","Link","ArrowBack","EmptyCollage","loadComponent","backgroundImage","collageBack","backgroundSize","objectFit","backgroundRepeat","View","saveStatusOpen","loading","header","downloadDialog","saveDialog","saveStatusDialog","controls","Loading","DBNA","icon","BottomNavigationAction","showLabel","py","outline","DesktopDrawer","anchor","Drawer","ControlsDivider","Divider","my","DesktopActions","onDownload","newValue","List","Save","Download","Print","ClearCollageDialog","onSubmit","onCancel","noWrap","DesktopControls","photosComp","editComp","imageOptionsOpen","setImageOptionsOpen","editOptionsOpen","setEditOptionsOpen","clearOpen","setClearOpen","closeAll","handleClearClose","AutoAwesomeMosaic","Photo","Edit","Refresh","DesktopImageOptions","onAdd","AddPhotoAlternate","PaddingControl","mixBlendMode","Slider","valueLabelDisplay","step","max","RadiusControl","ColorControl","background","boxShadow","cursor","ColorPicker","bottom","border","TextControl","collageTextError","FormGroup","row","FormControlLabel","disableTypography","control","Checkbox","checked","EditControl","optionProps","MBNA","toLowerCase","MobileActions","onSave","BottomNavigation","showLabels","MainControls","EditOptions","editOptionsValue","handleOptionsClose","handleEditOptionsClick","borderTop","Padding","CropFree","Square","fill","Title","ImageOptions","handleDelete","handleAdd","MobileControls","mainOpen","setMainOpen","editOpen","setEditOpen","editControl","setEditControl","setEditOptionsValue","imageOpen","setImageOpen","imageValue","setImageValue","handleEditOptionsClose","nV","navigate","useNavigate","treeProps","res","mobileControls","desktopPhotosComp","desktopControls","isMobile","actionsComp"],"sourceRoot":""}