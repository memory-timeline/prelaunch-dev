{"version":3,"file":"static/js/533.bd9d16ad.chunk.js","mappings":"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","sources":["pages/MemoryThumbnail.jsx","pages/MemoryThumbnailCard.jsx","pages/memories/MemoryItemLoading.jsx","pages/memories/MemoryGrid.jsx","pages/memories/CreateMemoryItem.jsx","pages/memories/LoadMore.jsx","pages/memories/GridView.jsx","pages/memories/Own.jsx","components/NoMemories.jsx","pages/memories/Shared.jsx","components/ActionButton.jsx","components/OwnerInfo.jsx","components/ReviewCard.jsx","components/ReviewItem.jsx","pages/memories/Review.jsx","pages/memories/Memories.jsx","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Typography from '@mui/material/Typography';\nimport Chip from '@mui/material/Chip';\nimport MemoryThumbnailCard from './MemoryThumbnailCard';\n\nfunction ThumbnailImage({\n  imageSrc, imageSrcSet, title, handleImageLoad,\n}) {\n  return (\n    <CardMedia\n      component=\"img\"\n      src={imageSrc}\n      srcSet={imageSrcSet}\n      alt={title}\n      sx={{\n        textAlign: 'center',\n        objectFit: 'cover',\n        height: {\n          lg: 350,\n          md: 300,\n          xs: 250,\n        },\n      }}\n      onLoad={handleImageLoad}\n    />\n  );\n}\n\nfunction ThumbnailDetails({\n  title, date, avatar, shared,\n}) {\n  return (\n    <CardContent>\n      <CardHeader\n        disableTypography\n        avatar={avatar}\n        title={(\n          <Typography\n            noWrap\n            sx={{\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              width: { xs: 'calc(75%)', sm: 'calc(100%)' },\n              fontWeight: 600,\n            }}\n          >\n            {title}\n            {\n              shared !== '' ? (\n                <>\n                  {' '}\n                  <Chip\n                    label={shared}\n                    size=\"small\"\n                    variant=\"filled\"\n                    color={(shared === 'Shared') ? 'success' : 'default'}\n                    sx={{ height: 'auto' }}\n                  />\n                </>\n              ) : null\n            }\n\n          </Typography>\n        )}\n        subheader={<Typography sx={{ color: 'muted.main' }}>{date}</Typography>}\n        sx={{\n          padding: 0,\n          color: 'faded.black',\n        }}\n      />\n    </CardContent>\n  );\n}\n\nexport default function MemoryThumbnail({\n  title,\n  date,\n  avatar,\n  shared,\n  thumbnailImage,\n  thumbnailImageSrcSet,\n  handleClick,\n  handleImageLoad,\n}) {\n  return (\n    <MemoryThumbnailCard handleClick={handleClick}>\n      <ThumbnailImage\n        imageSrc={thumbnailImage}\n        imageSrcSet={thumbnailImageSrcSet}\n        title={title}\n        handleImageLoad={handleImageLoad}\n      />\n      <ThumbnailDetails title={title} date={date} avatar={avatar} shared={shared} />\n    </MemoryThumbnailCard>\n  );\n}\n\nThumbnailDetails.defaultProps = {\n  title: 'Memory Thumbnail Image',\n  date: 'Memory Date',\n  avatar: '',\n  shared: '',\n};\n\nThumbnailDetails.propTypes = {\n  title: PropTypes.string,\n  date: PropTypes.string,\n  avatar: PropTypes.node,\n  shared: PropTypes.string,\n};\n\nThumbnailImage.defaultProps = {\n  title: 'Memory Thumbnail Image',\n  imageSrc: '',\n  imageSrcSet: '',\n  handleImageLoad: () => {},\n};\n\nThumbnailImage.propTypes = {\n  title: PropTypes.string,\n  imageSrc: PropTypes.string,\n  imageSrcSet: PropTypes.string,\n  handleImageLoad: PropTypes.func,\n};\n\nMemoryThumbnail.defaultProps = {\n  thumbnailImageSrcSet: '',\n  handleImageLoad: () => {},\n  avatar: '',\n  shared: '',\n};\n\nMemoryThumbnail.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  date: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  avatar: PropTypes.node,\n  shared: PropTypes.string,\n  thumbnailImage: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  thumbnailImageSrcSet: PropTypes.string,\n  handleImageLoad: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardActionArea from '@mui/material/CardActionArea';\n//  import { useTheme, alpha } from '@mui/material/styles';\n\nexport default function MemoryThumbnailCard({ handleClick, children }) {\n  //  const theme = useTheme();\n\n  return (\n    <CardActionArea onClick={handleClick}>\n      <Card\n        elevation={2}\n        sx={{\n          bgcolor: '#fff',\n          borderRadius: 5,\n          // border: '2px solid gray',\n          color: 'black',\n          position: 'relative',\n          height: {\n            lg: 430,\n            md: 380,\n            xs: 330,\n          },\n          '&:hover': {\n            border: 3,\n            borderColor: 'secondary.main',\n            elevation: 0,\n          },\n        }}\n      >\n        {children}\n      </Card>\n    </CardActionArea>\n  );\n}\n\nMemoryThumbnailCard.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Grid from '@mui/material/Grid';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport MemoryThumbnail from 'pages/MemoryThumbnail';\nimport imageLoading from 'static/images/image-loading.png';\n\nexport default function MemoryItemLoading({ memory }) {\n  return (\n    <Grid item key={memory} lg={3} md={4} sm={6} xs={12} sx={{ p: 1 }}>\n      <MemoryThumbnail\n        title={<Skeleton type=\"rectangular\" sx={{ width: '60%' }} />}\n        date={<Skeleton type=\"rectangular\" sx={{ width: '50%' }} />}\n        thumbnailImage={imageLoading}\n        handleClick={() => {}}\n      />\n    </Grid>\n  );\n}\n\nMemoryItemLoading.propTypes = {\n  memory: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\n\nexport default function MemoryGrid({ children }) {\n  return (\n    <Grid\n      container\n      sx={{ bgcolor: 'button.main', py: 1 }}\n      justifyContent=\"left\"\n      alignItems=\"flex-start\"\n    >\n      {children}\n    </Grid>\n  );\n}\n\nMemoryGrid.defaultProps = {\n  children: '',\n};\n\nMemoryGrid.propTypes = {\n  children: PropTypes.node,\n};\n","import { useNavigate } from 'react-router-dom';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport AddOutlinedIcon from '@mui/icons-material/AddOutlined';\n\nimport MemoryThumbnailCard from '../MemoryThumbnailCard';\n\nexport default function CreateMemoryItem() {\n  const navigate = useNavigate();\n  const belowmd = useMediaQuery((theme) => theme.breakpoints.down('md'));\n\n  const handleClick = () => {\n    navigate('/memory/create');\n  };\n\n  return (\n    <Grid\n      item\n      key=\"creatememory\"\n      lg={3}\n      md={4}\n      sm={6}\n      xs={12}\n      sx={{ p: 1 }}\n    >\n      <MemoryThumbnailCard handleClick={handleClick}>\n        <Typography\n          variant={belowmd ? 'body1' : 'h5'}\n          color=\"button.main\"\n          sx={{\n            p: 1,\n            color: 'secondary.main',\n            bgcolor: 'primary.main',\n            borderRadius: '0px 10px 10px 0px',\n            borderColor: 'secondary.main',\n            position: 'absolute',\n            bottom: 15,\n            left: 0,\n          }}\n        >\n          Create a memory\n        </Typography>\n        <AddOutlinedIcon\n          sx={{\n            position: 'absolute',\n            border: 3,\n            borderRadius: '50%',\n            fontSize: '7.5rem',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            color: 'muted.main',\n          }}\n        />\n      </MemoryThumbnailCard>\n    </Grid>\n  );\n}\n","import PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\nimport MemoryThumbnailCard from '../MemoryThumbnailCard';\n\nexport default function LoadMore({ handleMoreClick }) {\n  return (\n    <Grid\n      item\n      key=\"creatememory\"\n      lg={3}\n      md={4}\n      sm={6}\n      xs={12}\n      sx={{ p: 1 }}\n    >\n      <MemoryThumbnailCard handleClick={handleMoreClick}>\n        <Typography\n          variant=\"h5\"\n          sx={{\n            p: 2,\n            color: 'secondary.main',\n            bgcolor: 'primary.main',\n            borderRadius: '30px',\n            borderColor: 'secondary.main',\n            position: 'absolute',\n            bottom: '50%',\n            left: '50%',\n            transform: 'translate(-50%, +50%)',\n            textAlign: 'center',\n          }}\n        >\n          Load More\n        </Typography>\n      </MemoryThumbnailCard>\n    </Grid>\n  );\n}\n\nLoadMore.propTypes = {\n  handleMoreClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport { ProfileAvatar } from 'components/profile';\nimport MemoryThumbnail from '../MemoryThumbnail';\n\nimport CreateMemoryItem from './CreateMemoryItem';\nimport LoadMore from './LoadMore';\n\nexport default function GridView({\n  memories, handleMoreClick, nextToken, handleImageLoad, create, handleClick,\n}) {\n  const sortedMemories = memories.sort((a, b) => (a.memory_id > b.memory_id ? 1 : -1));\n\n  const getThumbnailSrcSet = (thumbnailImage) => {\n    const srcSetList = thumbnailImage.images ? thumbnailImage.images.map(({ src, width }) => `${src} ${width}w`) : [];\n    return srcSetList.join(',');\n  };\n\n  return (\n    <Grid container sx={{ bgcolor: 'button.main', py: 1 }} justifyContent=\"left\" alignItems=\"flex-start\">\n      {(create || (memories.length === 0)) ? <CreateMemoryItem /> : null}\n      {sortedMemories.map((memory) => (\n        <Grid\n          item\n          key={memory.title}\n          lg={3}\n          md={4}\n          sm={6}\n          xs={12}\n          sx={{ p: 1 }}\n        >\n          <MemoryThumbnail\n            title={memory.title}\n            date={memory.date}\n            avatar={memory.owner ? (\n              <ProfileAvatar\n                name={memory.owner.name}\n                picture={memory.owner.picture}\n                email={memory.owner.email}\n              />\n            ) : null}\n            shared={memory.shared}\n            thumbnailImage={memory.photo.src}\n            thumbnailImageSrcSet={getThumbnailSrcSet(memory.photo)}\n            handleClick={() => handleClick(memory)}\n            handleImageLoad={handleImageLoad}\n          />\n        </Grid>\n      ))}\n      { nextToken && (<LoadMore handleMoreClick={handleMoreClick} />) }\n    </Grid>\n  );\n}\n\nGridView.defaultProps = {\n  memories: [],\n};\n\nGridView.propTypes = {\n  create: PropTypes.bool.isRequired,\n  memories: PropTypes.arrayOf(\n    PropTypes.shape({\n      memory_id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      photo: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        src: PropTypes.string,\n        title: PropTypes.string,\n        alt: PropTypes.string,\n        width: PropTypes.number,\n        height: PropTypes.number,\n      })),\n    }),\n  ),\n  nextToken: PropTypes.string.isRequired,\n  handleMoreClick: PropTypes.func.isRequired,\n  handleImageLoad: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport MemoryItemLoading from 'pages/memories/MemoryItemLoading';\nimport MemoryGrid from 'pages/memories/MemoryGrid';\nimport GridView from './GridView';\nimport api from '../Api';\nimport CreateMemoryItem from './CreateMemoryItem';\n\nasync function getMemories(\n  handleMemoryCallback,\n  handleTokenCallback,\n  handleThumbnailCallback,\n  nextToken = '',\n) {\n  try {\n    const resp = await api.getMemories(nextToken);\n    if (resp) {\n      if (resp.memories) {\n        handleThumbnailCallback(resp.memories);\n        const thumbnails = await Promise.all(\n          api.getThumbnails(resp.memories),\n        );\n        handleMemoryCallback(thumbnails);\n        handleTokenCallback(resp.next_continuation_token || '');\n      }\n    }\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nexport default function OwnMemories() {\n  const [nextToken, setNextToken] = useState('');\n  const [memoryIDs, setMemoryIDs] = useState([]);\n  const [memories, setMemories] = useState([]);\n  const [count, setCount] = useState(0);\n  const [grid, setGrid] = useState(null);\n  const navigate = useNavigate();\n\n  const handleClick = (memDetails) => {\n    navigate(`/memory/${memDetails.memory_id}`, { state: memDetails });\n  };\n\n  const picLoaded = () => setCount((cnt) => cnt + 1);\n  const handleTokenChange = (newToken) => setNextToken(newToken);\n  const addMemories = (details) => setMemories((arr) => arr.concat(details));\n  const addMemoryIDs = (ids) => setMemoryIDs((arr) => arr.concat(ids));\n\n  useEffect(() => getMemories(addMemories, handleTokenChange, addMemoryIDs, nextToken), []);\n\n  function GetThumbnailGrid() {\n    const thumbnailGrid = (\n      <GridView\n        create\n        memories={memories}\n        nextToken={nextToken}\n        handleMoreClick={() => getMemories(\n          addMemories,\n          handleTokenChange,\n          addMemoryIDs,\n          nextToken,\n        )}\n        handleImageLoad={picLoaded}\n        handleClick={handleClick}\n      />\n    );\n    setGrid(thumbnailGrid);\n  }\n\n  useEffect(() => GetThumbnailGrid(), [memories, nextToken]);\n\n  return (memories.length === memoryIDs.length) && (count >= memoryIDs.length) ? (\n    grid\n  ) : (\n    <>\n      <MemoryGrid>\n        <CreateMemoryItem />\n        {memoryIDs.map((memory) => <MemoryItemLoading memory={memory} />)}\n      </MemoryGrid>\n\n      <Box component=\"div\" sx={{ display: 'none' }}>\n        {grid}\n      </Box>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { ReactComponent as Logo } from 'static/images/icons/logo.svg';\n\nexport default function NoMemories({ message }) {\n  const navigate = useNavigate();\n  const handleClick = () => navigate('/memory/create');\n\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{\n        width: '95%',\n        maxWidth: '500px',\n        position: 'fixed',\n        top: '50%',\n        right: '50%',\n        transform: 'translate(50%, -50%)',\n        border: '2px solid gray',\n        height: '60%',\n        borderRadius: '10px',\n      }}\n    >\n      <Logo fill=\"gray\" width=\"64px\" height=\"64px\" />\n      <Typography color=\"gray\" sx={{ fontSize: '1.3rem' }}>\n        {message}\n      </Typography>\n      <Typography color=\"gray\" sx={{ pb: 8, fontSize: '1.3rem' }}>\n        Check again later.\n      </Typography>\n      <Typography color=\"primary\">\n        In the mean time, you can\n      </Typography>\n      <Button variant=\"contained\" onClick={handleClick}>Create a Memory</Button>\n    </Stack>\n  );\n}\n\nNoMemories.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport MemoryItemLoading from 'pages/memories/MemoryItemLoading';\nimport MemoryGrid from 'pages/memories/MemoryGrid';\nimport NoMemories from 'components/NoMemories';\nimport GridView from './GridView';\nimport api from '../Api';\n\nasync function getAcceptedMemories(\n  handleMemoryCallback,\n  handleTokenCallback,\n  handleThumbnailCallback,\n  nextToken = '',\n) {\n  try {\n    const resp = await api.getAcceptedMemories(nextToken);\n    if (resp) {\n      if (resp.memories) {\n        handleThumbnailCallback(resp.memories);\n        const thumbnails = await Promise.all(\n          api.getAcceptedThumbnails(resp.memories),\n        );\n        handleMemoryCallback(thumbnails);\n        handleTokenCallback(resp.next_continuation_token || '');\n      }\n    }\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nexport default function SharedMemories() {\n  const [nextToken, setNextToken] = useState('');\n  const [memoryIDs, setMemoryIDs] = useState([]);\n  const [memories, setMemories] = useState([]);\n  const [count, setCount] = useState(0);\n  const [grid, setGrid] = useState(null);\n  const navigate = useNavigate();\n\n  const handleClick = (memDetails) => {\n    navigate(`/memory/shared/${memDetails.memory_id}`, { state: memDetails });\n  };\n\n  const picLoaded = () => setCount((cnt) => cnt + 1);\n  const handleTokenChange = (newToken) => setNextToken(newToken);\n\n  const addMemories = (details) => {\n    details.map((detail) => {\n      const memDetails = detail.thumbnail;\n      memDetails.owner = detail.owner_details;\n      setMemories((arr) => arr.concat([memDetails]));\n      return 0;\n    });\n  };\n\n  const addMemoryIDs = (ids) => setMemoryIDs((arr) => arr.concat(ids));\n\n  useEffect(() => getAcceptedMemories(addMemories, handleTokenChange, addMemoryIDs, nextToken), []);\n\n  function GetThumbnailGrid() {\n    if (memories.length > 0) {\n      const thumbnailGrid = (\n        <GridView\n          create={false}\n          memories={memories}\n          nextToken={nextToken}\n          handleMoreClick={() => getAcceptedMemories(\n            addMemories,\n            handleTokenChange,\n            addMemoryIDs,\n            nextToken,\n          )}\n          handleImageLoad={picLoaded}\n          handleClick={handleClick}\n        />\n      );\n      setGrid(thumbnailGrid);\n    } else {\n      setGrid(<NoMemories message=\"No shared memories right now.\" />);\n    }\n  }\n\n  useEffect(() => GetThumbnailGrid(), [memories, nextToken]);\n\n  return (memories.length === memoryIDs.length) && (count >= memoryIDs.length) ? (\n    grid\n  ) : (\n    <>\n      <MemoryGrid>\n        {memoryIDs.map((memory) => <MemoryItemLoading memory={memory} />)}\n      </MemoryGrid>\n\n      <Box component=\"div\" sx={{ display: 'none' }}>\n        {grid}\n      </Box>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nexport default function ActionButton({\n  label, handleClick, color, disabled,\n}) {\n  return (\n    <Button\n      variant=\"contained\"\n      color={color}\n      sx={{ m: 1 }}\n      onClick={handleClick}\n      disabled={disabled}\n    >\n      <Typography variant=\"h6\">\n        {label}\n      </Typography>\n    </Button>\n  );\n}\n\nActionButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  color: PropTypes.string.isRequired,\n  disabled: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\nimport { ProfileAvatar } from './profile';\n\nexport default function OwnerInfo({ name, email, picture }) {\n  return (\n    <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" sx={{ width: '100%' }}>\n      <ProfileAvatar\n        name={name}\n        email={email}\n        picture={picture}\n      />\n      <Typography variant=\"h6\" sx={{ px: 1 }}>\n        {name}\n      </Typography>\n    </Stack>\n\n  );\n}\n\nOwnerInfo.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardActionArea from '@mui/material/CardActionArea';\n\nexport default function ReviewCard({ handleClick, children }) {\n  return (\n    <CardActionArea onClick={handleClick} sx={{ display: 'flex' }}>\n      <Card\n        elevation={0}\n        sx={{\n          bgcolor: '#fff',\n          borderRadius: 5,\n          position: 'relative',\n          maxWidth: '700px',\n          width: '95%',\n        }}\n      >\n        {children}\n      </Card>\n    </CardActionArea>\n  );\n}\n\nReviewCard.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Typography from '@mui/material/Typography';\nimport ReviewCard from './ReviewCard';\n\nfunction ReviewImage({\n  imageSrc, imageSrcSet, title, handleImageLoad,\n}) {\n  return (\n    <CardMedia\n      component=\"img\"\n      src={imageSrc}\n      srcSet={imageSrcSet}\n      alt={title}\n      sx={{\n        borderColor: 'muted.main',\n        borderRadius: 4,\n        textAlign: 'center',\n        objectFit: 'cover',\n        height: {\n          lg: 400,\n          sm: 350,\n          xs: 350,\n        },\n\n      }}\n      onLoad={handleImageLoad}\n    />\n  );\n}\n\nfunction ReviewDetails({ title, date }) {\n  return (\n    <CardContent>\n      <CardHeader\n        disableTypography\n        title={(\n          <Typography\n            noWrap\n            sx={{\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              width: { xs: 'calc(75%)', sm: 'calc(100%)' },\n              fontWeight: 600,\n            }}\n          >\n            {title}\n          </Typography>\n        )}\n        subheader={(\n          <Typography sx={{ color: 'muted.main' }}>{date}</Typography>\n        )}\n        sx={{\n          padding: 0,\n          color: 'faded.black',\n        }}\n      />\n    </CardContent>\n  );\n}\n\nexport default function ReviewItem({\n  title,\n  date,\n  thumbnailImage,\n  thumbnailImageSrcSet,\n  handleClick,\n  handleImageLoad,\n}) {\n  return (\n    <ReviewCard handleClick={handleClick}>\n      <ReviewImage\n        imageSrc={thumbnailImage}\n        imageSrcSet={thumbnailImageSrcSet}\n        title={title}\n        handleImageLoad={handleImageLoad}\n      />\n      <ReviewDetails title={title} date={date} />\n    </ReviewCard>\n  );\n}\n\nReviewDetails.defaultProps = {\n  title: '',\n  date: '',\n};\n\nReviewDetails.propTypes = {\n  title: PropTypes.string,\n  date: PropTypes.string,\n};\n\nReviewImage.defaultProps = {\n  title: 'Review Image',\n  imageSrc: '',\n  imageSrcSet: '',\n  handleImageLoad: () => {},\n};\n\nReviewImage.propTypes = {\n  title: PropTypes.string,\n  imageSrc: PropTypes.string,\n  imageSrcSet: PropTypes.string,\n  handleImageLoad: PropTypes.func,\n};\n\nReviewItem.defaultProps = {\n  title: '',\n  date: '',\n  thumbnailImageSrcSet: '',\n  handleImageLoad: () => {},\n};\n\nReviewItem.propTypes = {\n  title: PropTypes.string,\n  date: PropTypes.string,\n  thumbnailImage: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  thumbnailImageSrcSet: PropTypes.string,\n  handleImageLoad: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport ActionButton from 'components/ActionButton';\nimport OwnerInfo from 'components/OwnerInfo';\nimport SimpleSnackbar from 'components/simple_snackbar';\nimport Skeleton from '@mui/material/Skeleton';\nimport imageLoading from 'static/images/image-loading.png';\nimport commonUtils from 'utils';\nimport NoMemories from 'components/NoMemories';\nimport ReviewItem from 'components/ReviewItem';\n\nimport api from 'pages/Api';\n\nconst getThumbnailSrcSet = (thumbnailImage) => {\n  const srcSetList = thumbnailImage.images ? thumbnailImage.images.map(({ src, width }) => `${src} ${width}w`) : [];\n  return srcSetList.join(',');\n};\n\nasync function getReviewMemory(\n  handleThumbnailCallback,\n  handleMemoryCallback,\n  handleCountCallback,\n  memoryID = '',\n) {\n  try {\n    const resp = await api.getPendingMemories(memoryID);\n    if (resp) {\n      handleCountCallback(resp.count);\n      if (resp.memory) {\n        handleMemoryCallback(resp.memory);\n        const thumbnail = await api.getPendingThumbnails(resp.memory);\n        handleThumbnailCallback(thumbnail);\n      }\n    }\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nasync function acceptMemory(memoryID, handleAcceptCallback) {\n  try {\n    const userInfo = commonUtils.getUserInfo();\n    const resp = await api.acceptShare(memoryID, userInfo.email);\n    handleAcceptCallback(resp);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nasync function rejectMemory(memoryID, handleRejectCallback) {\n  try {\n    const userInfo = commonUtils.getUserInfo();\n    const resp = await api.rejectShare(memoryID, userInfo.email);\n    handleRejectCallback(resp);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nexport default function ReviewMemories({ memoryID }) {\n  const [count, setCount] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [, setMemID] = useState(null);\n  const [pendingMemory, setPendingMemory] = useState(null);\n  const [grid, setGrid] = useState(null);\n\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  const [accepting, setAccepting] = useState(false);\n  const [rejecting, setRejecting] = useState(false);\n  const [message, setMessage] = useState(null);\n\n  const startAccepting = () => {\n    setMessage('Accepting memory. Please wait...');\n    setAccepting(true);\n  };\n\n  const startRejecting = () => {\n    setMessage('Rejecting memory. Please wait...');\n    setRejecting(true);\n  };\n\n  const endRunning = () => {\n    setMessage(null);\n    setAccepting(false);\n    setRejecting(false);\n  };\n\n  const handleSnackMessage = (msg, error) => {\n    setSnack(true);\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const handleMemoryRemove = () => {\n    setPendingMemory(null);\n    setGrid(null);\n    getReviewMemory(setPendingMemory, setMemID, setCount, memoryID);\n  };\n\n  useEffect(() => getReviewMemory(setPendingMemory, setMemID, setCount, memoryID), []);\n\n  const handleAcceptActionResults = (resp) => {\n    if (resp.ok) {\n      handleSnackMessage('Memory share accepted', false);\n      setLoaded(false);\n      handleMemoryRemove();\n    } else {\n      handleSnackMessage('Error while accepting memory share', true);\n    }\n  };\n\n  const handleRejectActionResults = (resp) => {\n    if (resp.ok) {\n      handleSnackMessage('Memory share rejected', false);\n      setLoaded(false);\n      handleMemoryRemove();\n    } else {\n      handleSnackMessage('Error while rejecting memory share', true);\n    }\n  };\n\n  const handleAccept = () => {\n    startAccepting();\n    acceptMemory(pendingMemory.thumbnail.memory_id, handleAcceptActionResults);\n    endRunning();\n  };\n\n  const handleReject = () => {\n    startRejecting();\n    rejectMemory(pendingMemory.thumbnail.memory_id, handleRejectActionResults);\n    endRunning();\n  };\n\n  const handleImageLoad = () => setLoaded(true);\n\n  if ((count === 0) && (grid === null)) {\n    setGrid(<NoMemories message=\"Nothing to review right now.\" />);\n  }\n\n  function ReviewCarousel() {\n    if (pendingMemory !== null) {\n      const rc = (\n        <Box\n          sx={{\n            display: 'flex',\n            width: '100%',\n            backgroundColor: 'transparent',\n            backgroundSize: 'cover',\n            backgroundImage: 'linear-gradient(white, #0e516a)',\n            justifyContent: 'center',\n          }}\n        >\n          <Stack\n            direction=\"column\"\n            alignItems=\"center\"\n            sx={{ width: '100%', my: 3 }}\n          >\n            <OwnerInfo\n              name={pendingMemory.owner_details.name || ''}\n              email={pendingMemory.owner_details.email || 'P'}\n              picture={pendingMemory.owner_details.picture || ''}\n            />\n            <Typography sx={{ mb: 2 }}>has shared a memory with you</Typography>\n            <Stack\n              key={pendingMemory.thumbnail.memory_id}\n              direction=\"column\"\n              spacing={1}\n              alignItems=\"center\"\n            >\n              <ReviewItem\n                title={pendingMemory.thumbnail.title}\n                date={pendingMemory.thumbnail.date}\n                thumbnailImage={pendingMemory.thumbnail.photo.src}\n                thumbnailImageSrcSet={getThumbnailSrcSet(pendingMemory.thumbnail.photo)}\n                handleImageLoad={handleImageLoad}\n                handleClick={() => {}}\n              />\n            </Stack>\n            <Stack direction=\"row\" sx={{ m: 1 }}>\n              <ActionButton label=\"Accept\" color=\"primary\" handleClick={handleAccept} disabled={accepting || rejecting} />\n              <ActionButton label=\"Reject\" color=\"error\" handleClick={handleReject} disabled={accepting || rejecting} />\n            </Stack>\n          </Stack>\n        </Box>\n      );\n      setGrid(rc);\n    }\n  }\n\n  useEffect(() => ReviewCarousel(), [pendingMemory, memoryID, accepting, rejecting]);\n\n  return (((pendingMemory !== null) && loaded) || (count === 0)) ? (\n    <>\n      {\n        ((accepting === true) || (rejecting === true)) ? (\n          <Typography variant=\"h6\" sx={{ p: 2, color: 'white' }}>{message}</Typography>\n        ) : null\n      }\n      {grid}\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n        error={snackError}\n      />\n    </>\n  ) : (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          width: '100%',\n          backgroundColor: 'transparent',\n          backgroundSize: 'cover',\n          backgroundImage: 'linear-gradient(white, #0e516a)',\n          justifyContent: 'center',\n        }}\n      >\n        <Stack\n          direction=\"column\"\n          alignItems=\"center\"\n          sx={{ width: '100%', my: 3 }}\n        >\n          <OwnerInfo\n            name={<Skeleton type=\"rectangular\" sx={{ width: '35%' }} />}\n            email=\"P\"\n            picture=\"\"\n          />\n          <Typography sx={{ mb: 2 }}>has shared a memory with you</Typography>\n          <Stack\n            key=\"loading\"\n            direction=\"column\"\n            spacing={1}\n            alignItems=\"center\"\n          >\n            <ReviewItem\n              title=\"\"\n              date=\"\"\n              thumbnailImage={imageLoading}\n              thumbnailImageSrcSet=\"\"\n              handleImageLoad={() => {}}\n              handleClick={() => {}}\n            />\n          </Stack>\n          <Stack direction=\"row\" sx={{ m: 1 }}>\n            <ActionButton label=\"Accept\" color=\"primary\" handleClick={() => {}} disabled />\n            <ActionButton label=\"Reject\" color=\"error\" handleClick={() => {}} disabled />\n          </Stack>\n        </Stack>\n      </Box>\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n        error={snackError}\n      />\n      <Box component=\"div\" sx={{ display: 'none' }}>\n        {grid}\n      </Box>\n    </>\n  );\n}\n\nReviewMemories.defaultProps = {\n  memoryID: '',\n};\n\nReviewMemories.propTypes = {\n  memoryID: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport Stack from '@mui/material/Stack';\n\nimport BasePage from '../base_page';\nimport OwnMemories from './Own';\nimport SharedMemories from './Shared';\nimport ReviewMemories from './Review';\n\nfunction MemoryModes({ mode, handleChange }) {\n  return (\n    <Stack direction=\"row\" justifyContent=\"center\" sx={{ py: 1, backgroundColor: 'button.main' }}>\n      <ToggleButtonGroup\n        color=\"primary\"\n        value={mode}\n        exclusive\n        aria-label=\"Memory Modes\"\n      >\n        <ToggleButton value=\"own\" sx={{ borderRadius: '30px' }} onClick={handleChange}>\n          My Memories\n        </ToggleButton>\n        <ToggleButton value=\"shared\" onClick={handleChange}>\n          Shared With Me\n        </ToggleButton>\n        <ToggleButton value=\"review\" sx={{ borderRadius: '30px' }} onClick={handleChange}>\n          Review\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Stack>\n  );\n}\n\nfunction MemoryModeContent({ mode, memoryID }) {\n  if (mode === 'own') {\n    return <OwnMemories />;\n  }\n\n  if (mode === 'shared') {\n    return <SharedMemories />;\n  }\n\n  if (mode === 'review') {\n    return <ReviewMemories memoryID={memoryID} />;\n  }\n}\n\nexport default function Memories({ initMode }) {\n  const params = useParams();\n  const { memoryMode } = params;\n  const [searchParams] = useSearchParams();\n  const [mode, setMode] = useState(initMode);\n\n  useEffect(() => {\n    if (memoryMode) {\n      setMode(memoryMode);\n    } else {\n      setMode(initMode);\n    }\n  }, [memoryMode, initMode]);\n\n  const handleChange = (event, newMode) => {\n    setMode(newMode);\n  };\n\n  return (\n    <BasePage create>\n      <Stack direction=\"column\">\n        <MemoryModes mode={mode} handleChange={handleChange} />\n        <MemoryModeContent mode={mode} memoryID={searchParams.get('memoryID')} />\n      </Stack>\n    </BasePage>\n  );\n}\n\nMemories.propTypes = {\n  initMode: PropTypes.string.isRequired,\n};\n\nMemoryModes.propTypes = {\n  mode: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nMemoryModeContent.defaultProps = {\n  memoryID: '',\n};\n\nMemoryModeContent.propTypes = {\n  mode: PropTypes.string.isRequired,\n  memoryID: PropTypes.string,\n};\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;"],"names":["ThumbnailImage","imageSrc","imageSrcSet","title","handleImageLoad","component","src","srcSet","alt","sx","textAlign","objectFit","height","lg","md","xs","onLoad","ThumbnailDetails","date","avatar","shared","disableTypography","noWrap","overflow","textOverflow","width","sm","fontWeight","label","size","variant","color","subheader","padding","MemoryThumbnail","thumbnailImage","thumbnailImageSrcSet","handleClick","defaultProps","MemoryThumbnailCard","children","onClick","elevation","bgcolor","borderRadius","position","border","borderColor","MemoryItemLoading","memory","Grid","item","p","Skeleton","type","imageLoading","MemoryGrid","container","py","justifyContent","alignItems","CreateMemoryItem","navigate","useNavigate","belowmd","useMediaQuery","theme","breakpoints","down","Typography","bottom","left","AddOutlined","fontSize","top","transform","LoadMore","handleMoreClick","GridView","memories","nextToken","create","sortedMemories","sort","a","b","memory_id","length","map","owner","name","picture","email","photo","images","join","getMemories","handleMemoryCallback","handleTokenCallback","handleThumbnailCallback","api","resp","Promise","all","thumbnails","next_continuation_token","console","log","OwnMemories","useState","setNextToken","memoryIDs","setMemoryIDs","setMemories","count","setCount","grid","setGrid","memDetails","state","picLoaded","cnt","handleTokenChange","newToken","addMemories","details","arr","concat","addMemoryIDs","ids","useEffect","Box","display","NoMemories","message","Stack","direction","maxWidth","right","fill","pb","Button","getAcceptedMemories","SharedMemories","detail","thumbnail","owner_details","ActionButton","disabled","m","OwnerInfo","px","ReviewCard","CardActionArea","Card","ReviewImage","CardMedia","ReviewDetails","CardContent","CardHeader","ReviewItem","getReviewMemory","handleCountCallback","memoryID","handleAcceptCallback","userInfo","commonUtils","handleRejectCallback","ReviewMemories","loaded","setLoaded","setMemID","pendingMemory","setPendingMemory","snack","setSnack","snackMessage","setSnackMessage","snackError","setSnackError","accepting","setAccepting","rejecting","setRejecting","setMessage","endRunning","handleSnackMessage","msg","error","handleSnackBarClose","handleMemoryRemove","handleAcceptActionResults","ok","handleRejectActionResults","handleAccept","acceptMemory","handleReject","rejectMemory","rc","backgroundColor","backgroundSize","backgroundImage","my","mb","spacing","ReviewCarousel","snackBarOpen","onClose","MemoryModes","mode","handleChange","ToggleButtonGroup","value","exclusive","ToggleButton","MemoryModeContent","Memories","initMode","memoryMode","useParams","useSearchParams","searchParams","setMode","event","newMode","get","getSkeletonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","styled","overridesResolver","props","styles","ownerState","root","animation","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","getUnit","shape","radiusValue","toUnitless","_extends","vars","palette","bg","alpha","text","primary","marginTop","marginBottom","transformOrigin","Math","round","content","visibility","css","action","hover","React","inProps","ref","useThemeProps","className","style","other","_objectWithoutPropertiesLoose","Boolean","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx"],"sourceRoot":""}