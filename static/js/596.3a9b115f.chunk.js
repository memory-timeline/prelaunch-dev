"use strict";(self.webpackChunkprelaunch=self.webpackChunkprelaunch||[]).push([[596],{99596:(e,t,a)=>{a.r(t),a.d(t,{default:()=>g});var l=a(1413),s=a(45987),n=a(58467),i=a(70656),r=a(74601),c=a(46417);const o=["src","file"];async function u(e,t,a,l){const s=await async function(e){const t={};return await Promise.allSettled(Object.entries(e).map((e=>{let[a,l]=e;return fetch(l).then((e=>e.blob())).then((e=>{t[a]=e}))}))),t}(t);l();return(await Promise.allSettled(e.map((e=>new Promise((t=>{const{naturalWidth:l,naturalHeight:n,title:i,aspectRatio:r,type:c,targetAspectRatio:o}=e,u=s[i],g=new Image;g.onload=e=>{const{src:s}=e.target,g={title:i,src:s,naturalHeight:n,naturalWidth:l,aspectRatio:r,targetAspectRatio:o,type:c,file:u};a(),t(g)},g.src=URL.createObjectURL(u)})))))).map((e=>e.value))}function g(){const e=(0,n.UO)(),{collageID:t}=e;return(0,c.jsx)(r.Z,{getCollage:async(e,a)=>{const n=await i.Z.getCollage(t),r=await u(n.details.images,n.urls,a,(()=>{e(n.details.images.length)})),c=r.map((e=>{const{src:t,file:a}=e;return(0,s.Z)(e,o)}));return{details:(0,l.Z)((0,l.Z)({},n.details),{},{images:c}),images:r}},clearCollage:()=>i.Z.deleteCollage(t),saveType:"existing"})}}}]);