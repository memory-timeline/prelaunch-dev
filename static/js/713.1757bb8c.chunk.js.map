{"version":3,"file":"static/js/713.1757bb8c.chunk.js","mappings":"iLAIe,SAASA,EAAc,GAA8B,IAA5BC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KACzD,OACE,SAACC,EAAA,EAAM,CACLC,GAAIF,EACJG,QAAQ,YACRC,UAAU,QACVL,QAASA,EACTM,GAAI,CACFC,MAAO,aACPC,aAAc,GACdC,gBAAiB,cACjBC,QAAS,UACT,UAAW,CACTH,MAAO,aACPE,gBAAiB,gBAEnB,SAEDV,GAGP,CAEAD,EAAca,aAAe,CAC3BX,QAAS,WAAO,G,eCvBH,SAASY,EAAU,GAAmB,IAAjBC,EAAY,EAAZA,aAClC,OACE,UAACf,EAAa,CAACG,KAAK,MAAK,WACvB,kBACEa,KAAK,OACLC,QAAM,EACNC,UAAQ,EACRC,OAAO,UACPC,SAAUL,KAEZ,SAAC,IAAY,CAACP,GAAI,CAAEa,SAAU,WAC9B,SAACC,EAAA,EAAU,CAACd,GAAI,CAAEe,WAAY,QAAS,SAAC,iBAG9C,C,oHCjBMC,EAAY,I,SAAIC,IAAM,WAE5BD,EAAUE,QAAQ,GAAGC,OAAO,CAC1BC,OAAQ,oDACRC,eAAgB,oDAChBC,SAAU,cACVC,YAAa,sBAGf,OAAiBP,UAAAA,G,yHCXjB,SAASQ,EAAWC,EAAKC,EAAQC,EAAQC,GACvC,OAAIA,EAASH,EAAIC,IAAWD,EAAIE,GAAUC,EAAeD,EAClDD,CACT,CA0EA,SAASG,EAAeC,EAAOC,EAAUC,EAAWC,GAClD,IAAMC,EAASC,SAASC,cAAc,UAKtC,OAJAF,EAAOG,MAAQN,EACfG,EAAOI,OAASN,EACJE,EAAOK,WAAW,MAC1BC,UAAUV,EAAO,EAAG,EAAGC,EAAUC,GAC9BE,EAAOO,UAAUR,EAC1B,CAiCA,SAASS,EAAcC,GACrB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcN,GACzBI,EAAWG,OAAS,WAClBL,EAAQE,EAAWI,OACrB,EACAJ,EAAWK,QAAU,SAACC,GACpBP,EAAOO,EACT,CACF,GACF,CA8FA,IAUA,GACEC,OAxMF,WAEE,MADe,CAAC,IAAK,KACPC,KAAKC,MAAMD,KAAKE,UAChC,EAsMEC,YArOF,SAAqBjC,EAAKG,GACxB,IAAM+B,EAAIlC,EAAImC,OAEd,GAAIhC,GAAUH,EAAI,GAAI,OAAO,EAC7B,GAAIG,GAAUH,EAAIkC,EAAI,GAAI,OAAOA,EAAI,EAKrC,IAHA,IAAIE,EAAQ,EACRC,EAAMH,EACNI,EAAM,EACHF,EAAQC,GAAK,CAGlB,GAAIrC,EAFJsC,GAAOF,EAAQC,GAAO,KAELlC,EAAQ,OAAOmC,EAEhC,GAAInC,EAASH,EAAIsC,GAAM,CACrB,GAAIA,EAAM,GAAKnC,EAASH,EAAIsC,EAAM,GAChC,OAAOvC,EAAWC,EAAKsC,EAAM,EAAGA,EAAKnC,GACvCkC,EAAMC,CACR,KAAO,CACL,GAAIA,EAAMJ,EAAI,GAAK/B,EAASH,EAAIsC,EAAM,GACpC,OAAOvC,EAAWC,EAAKsC,EAAKA,EAAM,EAAGnC,GACvCiC,EAAQE,EAAM,CAChB,CACF,CAEA,OAAOA,CACT,EA4MEC,YArMF,SAAqBvC,EAAKG,GAMxB,IALA,IAAIiC,EAAQ,EACRC,EAAMrC,EAAImC,OAAS,EACnBK,EAAIJ,EACJK,EAAIJ,EACJK,EAAkBZ,KAAKa,IAAI3C,EAAIoC,GAASpC,EAAIqC,GAAOlC,GAChDiC,GAASC,GACd,GAAIrC,EAAIoC,GAASpC,EAAIqC,GAAOlC,EACtB2B,KAAKa,IAAI3C,EAAIoC,GAASpC,EAAIqC,GAAOlC,GAAUuC,IAE7CA,EAAkBZ,KAAKa,IAAI3C,EAAIoC,GAASpC,EAAIqC,GAAOlC,GACnDqC,EAAIJ,EACJK,EAAIJ,GAENA,GAAO,MACF,MAAIrC,EAAIoC,GAASpC,EAAIqC,IAAQlC,GAO7B,CAELqC,EAAIJ,EACJK,EAAIJ,EACJ,KACF,CAXMP,KAAKa,IAAI3C,EAAIoC,GAASpC,EAAIqC,GAAOlC,GAAUuC,IAC7CA,EAAkBZ,KAAKa,IAAI3C,EAAIoC,GAASpC,EAAIqC,GAAOlC,GACnDqC,EAAIJ,EACJK,EAAIJ,GAEND,GAAS,CAMX,CAGF,OADqBN,KAAKC,MAAMD,KAAKE,UACZ,CAACQ,EAAGC,GACtB,CAACA,EAAGD,EACb,EAsKEI,eApKF,SAAwBC,EAAKC,EAAKC,GAChC,MAAY,MAARF,EAAoBC,EAAMC,EACtBD,EAAMC,GAAQD,EAAMC,EAC9B,EAkKEC,gBA3GF,SACEC,EACAC,EACAC,EACAC,EACAC,GAEA,GAAIJ,EAAM9C,OAAOmD,MAAO,CACtBH,GAAiB,SAACI,GAAG,OAAKA,EAAMN,EAAM9C,OAAOmD,MAAMnB,MAAM,IACzDiB,EAAoBH,EAAM9C,OAAOmD,MAAMnB,QACvC,IAAMmB,EAAQE,MAAMC,KAAKR,EAAM9C,OAAOmD,OACtCA,EAAMI,IAAG,yCAAC,WAAOxC,GAAI,4EA8BjB,OA7BIb,EAAQ,IAAIsD,OACZlC,OAAS,SAACmC,GACd,MAA6CA,EAAEzD,OAAvC0D,EAAY,EAAZA,aAAcC,EAAa,EAAbA,cAAeC,EAAG,EAAHA,IAC/BC,EAAK,UAAMC,KAAKC,MAAK,YAAIhD,EAAKhD,MAC9BiG,EAAcN,EAAeC,EAE7BM,EAAUhE,EACdC,EACA6C,EACAA,EAAWiB,EACXjD,EAAKnC,MAEDsF,EAAsB,CAC1BL,MAAAA,EACAD,IAAAA,EACAD,cAAAA,EACAD,aAAAA,EACAM,YAAAA,EACApF,KAAMmC,EAAKnC,MAEPuF,EAAc,CAClBN,MAAAA,EACAD,IAAKK,EACLN,cAAeZ,EAAWiB,EAC1BN,aAAcX,EACdiB,YAAAA,EACApF,KAAMmC,EAAKnC,MAEbsE,EAAgBiB,EAAaD,EAC/B,EAAE,SACgBpD,EAAcC,GAAM,KAAD,EAArCb,EAAM0D,IAAG,kDACV,mDAhCQ,IAiCTT,EAAMI,KAAI,SAACxC,GAAI,OAAKqD,IAAIC,gBAAgBtD,EAAK,GAC/C,CACF,EA8DEuD,aAxJF,SAAsB7E,EAAgBsD,EAAUwB,EAAcC,GAC5D,IAAMC,EAAa,GACnBhF,EAAeiF,SAAQ,SAACC,GACtB,IAAMzE,EAAQ,IAAIsD,MAClBtD,EAAMoB,OAAS,WACb,IAAQuC,EAA6Bc,EAA7Bd,MAAOG,EAAsBW,EAAtBX,YAAapF,EAAS+F,EAAT/F,KAOtBgG,EAAY,CAChBf,MAAAA,EACAD,IARc3D,EACdC,EACA6C,EACAA,EAAWiB,EACXW,EAAU/F,MAKV+E,cAAeZ,EAAWiB,EAC1BN,aAAcX,EACdiB,YAAAA,EACApF,KAAAA,GAEF6F,EAAWI,KAAKD,GAChBL,GAAa,SAACO,GACZ,IAAMC,EAAMD,EAAKE,WAAU,SAACC,GAAI,OAAKA,EAAKpB,QAAUc,EAAUd,KAAK,IACnE,MAAM,GAAN,eAAWiB,EAAKI,MAAM,EAAGH,IAAI,CAAEH,IAAS,OAAKE,EAAKI,MAAMH,EAAM,IAChE,IACAP,EAAcI,EAChB,EACA1E,EAAM0D,IAAMe,EAAUf,GACxB,GACF,EA4HEuB,SA7DF,SAAkBC,EAAMC,EAAGC,EAAGvC,EAAU9D,EAAUsG,GAGhD,IAAMC,EAAajF,SAASC,cAAc,UAC1CgF,EAAW/E,MAAQsC,EACnByC,EAAW9E,OAAS,IACpB,IAAM+E,EAAMD,EAAW7E,WAAW,MAClC8E,EAAIC,KAAI,UAAMzG,EAAQ,YAStB,IARA,IAAM0G,EAAQN,EACVO,EAAQN,EACNO,EAAQT,EAAKU,MAAM,KACrBC,EAAO,GACPC,EAAW,GACTC,EAAY,GAGTlE,EAAI,EAAGA,EAAI8D,EAAM7D,OAAQD,GAAK,EAAG,CAExCiE,GAAQ,UAAOH,EAAM9D,GAAE,KACP0D,EAAIS,YAAYF,GACNvF,MAEVsC,GAAYhB,EAAI,GAE9BkE,EAAUpB,KAAK,CAACkB,EAAMJ,EAAOC,IAE7BA,GAASL,EAETQ,EAAI,UAAMF,EAAM9D,GAAE,KAClBiE,EAAQ,UAAMH,EAAM9D,GAAE,MAGtBgE,GAAI,UAAOF,EAAM9D,GAAE,KAIjBA,IAAM8D,EAAM7D,OAAS,GACvBiE,EAAUpB,KAAK,CAACkB,EAAMJ,EAAOC,GAEjC,CAEA,OAAOK,CACT,EAoBEE,cAlBoB,SAACC,GAAK,qBAClBA,EAAMC,EAAC,aAAKD,EAAME,EAAC,aAAKF,EAAMG,EAAC,aAAKH,EAAMI,EAAC,MAkBnDC,oBAhB0B,SAACC,EAAMC,EAAMH,GACvC,IAAMI,EAASF,EAAOC,EACtB,OAAIC,EAASJ,EAAU,CAACE,EAAMA,EAAOF,GACjCI,EAASJ,EAAU,CAACG,EAAOH,EAAGG,GAC3B,CAACD,EAAMC,EAChB,G,WC9NqBE,EAAI,WACvB,WAAYT,IAAQ,eAClBU,KAAKV,MAAQA,EACbU,KAAKC,KAAO,KACZD,KAAKE,MAAQ,IACf,CAigBC,OAjgBA,kCAED,SAAWC,GACT,OAAW,MAAPA,GACFH,KAAKV,MAAQa,EAAIb,MACD,MAAZa,EAAIF,OACND,KAAKC,KAAO,IAAIF,EAAKI,EAAIF,KAAKX,OAC9BU,KAAKC,KAAKG,WAAWD,EAAIF,OAEV,MAAbE,EAAID,QACNF,KAAKE,MAAQ,IAAIH,EAAKI,EAAID,MAAMZ,OAChCU,KAAKE,MAAME,WAAWD,EAAID,QAErBF,MAEF,IACT,GAAC,qBAED,WACE,IAAIK,EAAS,GACb,EAAoCL,KAAKV,MAAjC1D,EAAG,EAAHA,IAAKmB,EAAK,EAALA,MAAOG,EAAW,EAAXA,YACpB,OAAa,OAAT8C,KAAsB,MACtB,QAASA,KAAKV,OAAOe,EAAOtC,KAAK,CAACnC,EAAKsB,IACvC,UAAW8C,KAAKV,OAAOe,EAAOtC,KAAK,CAAChB,EAAOG,IAC7B,OAAd8C,KAAKC,OAAeI,EAASA,EAAOC,OAAON,KAAKC,KAAKM,YACtC,OAAfP,KAAKE,QAAgBG,EAASA,EAAOC,OAAON,KAAKE,MAAMK,YACpDF,EACT,GAAC,kBAED,WACE,GAAa,OAATL,KAAe,OAAO,KAC1B,IAAMQ,EAAW,IAAIT,GAAK,UAAKC,KAAKV,QAGpC,OAFiB,MAAbU,KAAKC,OAAcO,EAASP,KAAOD,KAAKC,KAAKQ,QAC/B,MAAdT,KAAKE,QAAeM,EAASN,MAAQF,KAAKE,MAAMO,QAC7CD,CACT,GAAC,2BAED,SAAcE,GAAY,IAAD,OACvB,GAAa,OAATV,KAAe,CACjB,GAAI,UAAWA,KAAKV,MAAO,CACzB,IAAMpB,EAAYwC,EAAUxC,WAC1B,SAACC,GAAI,OAAKA,EAAKpB,QAAU,EAAKuC,MAAMvC,KAAK,IAErCc,EAAY6C,EAAUxC,GAC5B8B,KAAKV,MAAMxC,IAAMe,EAAUf,IAC3BkD,KAAKV,MAAM1C,aAAeiB,EAAUjB,aACpCoD,KAAKV,MAAMzC,cAAgBgB,EAAUhB,aACvC,CACiB,MAAbmD,KAAKC,MAAcD,KAAKC,KAAKU,cAAcD,GAC7B,MAAdV,KAAKE,OAAeF,KAAKE,MAAMS,cAAcD,EACnD,CACF,GAAC,6BAED,WACe,OAATV,OACE,UAAWA,KAAKV,QAClBU,KAAKV,MAAMxC,IAAM,IAEF,MAAbkD,KAAKC,MAAcD,KAAKC,KAAKW,kBACf,MAAdZ,KAAKE,OAAeF,KAAKE,MAAMU,kBAEvC,GAAC,0BAED,SAAaC,GAAY,IAAD,OACtB,GAAa,OAATb,KAAe,CACjB,GAAI,UAAWA,KAAKV,MAAO,CACzB,IAAMlG,EAAQyH,EAAUC,MAAK,SAAC3C,GAAI,OAAKA,EAAKpB,QAAU,EAAKuC,MAAMvC,KAAK,IACtEiD,KAAKV,MAAMxC,IAAM1D,EAAM0D,GACzB,CACiB,MAAbkD,KAAKC,MAAcD,KAAKC,KAAKc,aAAaF,GAC5B,MAAdb,KAAKE,OAAeF,KAAKE,MAAMa,aAAaF,EAClD,CACF,GAAC,yBAED,SACEnJ,EACAF,EACAwJ,EACAC,EACAC,EACAC,EACAC,GAEA,MAAoCpB,KAAKV,MAAjC3F,EAAK,EAALA,MAAOoD,EAAK,EAALA,MAAOD,EAAG,EAAHA,IAEhBuE,EAFsB,EAAD9C,EAEV4C,EACXG,EAHyB,EAAD9C,EAGb0C,EAEjB,OACE,iCACE,SAACK,EAAA,EAAG,CAEFlK,UAAU,MACV0F,MAAOA,EACPyE,IAAKzE,EACLpD,MAAOA,EACP8H,OAAQ,WACNL,IACAM,QAAQC,IAAI,SAAU5E,EACxB,EACAD,IAAKA,EACLxF,GAAI,CACFsK,SAAU,WACVlK,QAAQ,GAAD,OAAKA,EAAO,MACnBF,aAAa,GAAD,OAAKA,EAAY,MAC7ByI,KAAMD,KAAKV,MAAMf,EAAI4C,EACrBU,IAAK7B,KAAKV,MAAMd,EAAI0C,IAfjBnE,IA8DK,IAAXiE,GACC,SAACc,EAAA,EAAO,CAAC/E,MAAM,eAAc,UAC3B,SAACgF,EAAA,EAAU,CACTC,KAAK,SACL1K,GAAI,CACFC,OAAO0K,EAAAA,EAAAA,IAAM,OAAQ,IACrBC,SAASD,EAAAA,EAAAA,IAAM,OAAQ,IACvBL,SAAU,WACVC,IAAKP,EAAO5J,EACZuI,KAAMoB,EAAO3J,EACbA,QAAQ,GAAD,OAAKA,EAAO,MACnBF,aAAc,aAEhBR,QAAS,kBAAMiK,EAAkBlE,EAAM,EAAC,UAExC,SAACoF,EAAA,EAAU,CAACH,KAAK,eAGnB,OAGV,GAAC,wBAED,SACEtK,EACAF,EACAwJ,EACAC,EACAC,EACAC,EACAC,GAEAM,QAAQC,IACN,mBACAjK,EACAF,EACAwJ,EACAC,EACAC,EACAC,EACAnB,KAAKV,MAAMvC,OAEb,IAAQnB,EAAQoE,KAAKV,MAAb1D,IACR,OAAa,OAAToE,KAAsB,KACtBpE,GACF8F,QAAQC,IAAI3B,KAAKE,MAAOF,KAAKC,OAE3B,gCACgB,MAAbD,KAAKC,KACFD,KAAKC,KAAKmC,WACR1K,EACAF,EACAwJ,EACAC,EACAC,EACAC,EACAC,GAEF,KACW,MAAdpB,KAAKE,MACFF,KAAKE,MAAMkC,WACT1K,EACAF,EACAwJ,EACAC,EACAC,EACAC,EACAC,GAEF,SAIN,UAAWpB,KAAKV,MACXU,KAAKqC,YACV3K,EACAF,EACAwJ,EACAC,EACAC,EACAC,EACAC,GAEG,IACT,GAAC,yBAED,SAAYhI,GACV,IAAMkJ,EAAa7I,SAASC,cAAc,UAC1C4I,EAAW3I,MAAQqG,KAAKV,MAAM1C,aAC9B0F,EAAW1I,OAASoG,KAAKV,MAAMzC,cAC/B,IAGIxD,EACAC,EAJEiJ,EAAUD,EAAWzI,WAAW,MAClCF,EAAQqG,KAAKV,MAAM1C,aACnBhD,EAASoG,KAAKV,MAAMzC,cAGlB2F,EAAc3H,KAAK4H,MACvB5H,KAAK6H,KAAK1C,KAAKV,MAAM1C,aAAeoD,KAAKV,MAAM3F,QAEjD,GAAoB,IAAhB6I,EACFD,EAAQzI,UACNV,EACA,EACA,EACAO,EACAC,EACA,EACA,EACAoG,KAAKV,MAAM3F,MACXqG,KAAKV,MAAM1F,YAER,CACL,IAAK,IAAI2B,EAAI,EAAGA,EAAIiH,EAAajH,GAAK,EAEpCjC,GADAD,EAAWM,GAAS,GACGqG,KAAKV,MAAMpC,YACxB,IAAN3B,EACFgH,EAAQzI,UACNV,EACA,EACA,EACAO,EACAC,EACA,EACA,EACAP,EACAC,GAGFiJ,EAAQzI,UACNwI,EACA,EACA,EACA3I,EACAC,EACA,EACA,EACAP,EACAC,GAGJK,EAAQN,EACRO,EAASN,EAGXiJ,EAAQzI,UACNwI,EACA,EACA,EACA3I,EACAC,EACA,EACA,EACAoG,KAAKV,MAAM3F,MACXqG,KAAKV,MAAM1F,OAEf,CACA,OAAO0I,CACT,GAAC,0BAED,SAAa3D,EAAK2D,EAAY5K,EAASiL,EAAQzB,EAASC,GACtD,IAAM5C,EAAIyB,KAAKV,MAAMf,EAAI7G,EAAUyJ,EAC7B3C,EAAIwB,KAAKV,MAAMd,EAAI9G,EAAUwJ,EAC7B0B,EAAY5C,KAAKV,MAAM3F,MAAQ,EAAIjC,EACnCmL,EAAaD,EAAY5C,KAAKV,MAAMpC,YAE1CyB,EAAImE,OACJnE,EAAIoE,YACJpE,EAAIqE,OAAOzE,EAAIoE,EAAQnE,GACvBG,EAAIsE,OAAO1E,EAAIqE,EAAYD,EAAQnE,GACnCG,EAAIuE,iBAAiB3E,EAAIqE,EAAWpE,EAAGD,EAAIqE,EAAWpE,EAAImE,GAC1DhE,EAAIsE,OAAO1E,EAAIqE,EAAWpE,EAAIqE,EAAaF,GAC3ChE,EAAIuE,iBACF3E,EAAIqE,EACJpE,EAAIqE,EACJtE,EAAIqE,EAAYD,EAChBnE,EAAIqE,GAENlE,EAAIsE,OAAO1E,EAAIoE,EAAQnE,EAAIqE,GAC3BlE,EAAIuE,iBAAiB3E,EAAGC,EAAIqE,EAAYtE,EAAGC,EAAIqE,EAAaF,GAC5DhE,EAAIsE,OAAO1E,EAAGC,EAAImE,GAClBhE,EAAIuE,iBAAiB3E,EAAGC,EAAGD,EAAIoE,EAAQnE,GACvCG,EAAIwE,YACJxE,EAAIyE,OAEJzE,EAAI7E,UACFwI,EACA,EACA,EACAtC,KAAKV,MAAM3F,MACXqG,KAAKV,MAAM1F,OACX2E,EACAC,EACAoE,EACAC,GAEFlE,EAAI0E,SACN,GAAC,2BAED,SAAcC,EAAe5L,EAASiL,EAAQzB,EAASC,GAAU,IAAD,OAY9D,GAXI,QAASnB,KAAKV,QAChBU,KAAKC,KAAKsD,cAAcD,EAAe5L,EAASiL,EAAQzB,EAASC,GACjEnB,KAAKE,MAAMqD,cACTD,EACA5L,EACAiL,EACAzB,EACAC,IAIA,UAAWnB,KAAKV,MAAO,CACzB,IAAMX,EAAM2E,EAAczJ,WAAW,MAC/B2J,EAAS,IAAI9G,MACnB8G,EAAOhJ,OAAS,WACd,IAAM8H,EAAa,EAAKmB,YAAYD,GAC9BjB,EAAUD,EAAWzI,WAAW,MACtC,EAAK6J,aAAa/E,EAAK2D,EAAY5K,EAASiL,EAAQzB,EAASC,GAC7DoB,EAAQoB,UAAU,EAAG,EAAGrB,EAAW3I,MAAO2I,EAAW1I,OACvD,EACA4J,EAAO1G,IAAMkD,KAAKV,MAAMxC,GAC1B,CACF,GAAC,sBAED,SAASpE,EAAQkL,EAAKC,GACpB,IAAMC,EAAuBpL,EAAO+D,KAClC,SAACrD,GAAK,OAAKA,EAAMwD,aAAexD,EAAMyD,aAAa,IAErD,GAAIgH,EAAa,EAAG,MAAO,GAC3B,GAAmB,IAAfA,EAAkB,CACpB,IAAME,EAAeC,EAAQhJ,YAAY8I,EAAsBF,GAI/D,OAHA5D,KAAKV,MAAQ5G,EAAOqL,GACpB/D,KAAKC,KAAO,KACZD,KAAKE,MAAQ,KACP,GAAN,eACKxH,EAAO0F,MAAM,EAAG2F,KAAa,OAC7BrL,EAAO0F,MAAM2F,EAAe,IAEnC,CAEA,IAmBIE,EACAC,EApBEtI,EAAMoI,EAAQpJ,SAEpB,GADAoF,KAAKV,MAAQ,CAAE1D,IAAAA,EAAKsI,kBAAmBN,GACpB,IAAfC,EAAkB,CACpB,MAAgCG,EAAQ1I,YACtCwI,EACAF,GACD,eAHMO,EAAS,KAAEC,EAAU,KAW5B,OAPApE,KAAKV,MAAMpC,YAAc8G,EAAQrI,eAC/BqE,KAAKV,MAAM1D,IACXlD,EAAOyL,GAAWjH,YAClBxE,EAAO0L,GAAYlH,aAErB8C,KAAKC,KAAO,IAAIF,EAAKrH,EAAOyL,IAC5BnE,KAAKE,MAAQ,IAAIH,EAAKrH,EAAO0L,IACtB1L,EAAO2L,QACZ,SAACC,EAAMC,GAAK,OAAM,CAACJ,EAAWC,GAAYI,SAASD,EAAM,GAE7D,CA8BA,OA1BAvE,KAAKC,KAAO,IAAIF,EAAK,CAAEnE,IAAKoI,EAAQpJ,WAEpCoF,KAAKE,MAAQ,IAAIH,EAAK,CAAEnE,IAA6B,MAAxBoE,KAAKC,KAAKX,MAAM1D,IAAc,IAAM,MAG/DsI,EADU,MAARtI,EACwB,EAANgI,EAEAA,EAAM,EAE5BK,EAAajE,KAAKC,KAAKwE,SACrB/L,EACAwL,EACAL,EAAahJ,KAAK4H,MAAMoB,EAAa,IAEvCI,EAAajE,KAAKE,MAAMuE,SACtBR,EACAC,EACArJ,KAAK4H,MAAMoB,EAAa,IAG1B7D,KAAKV,MAAMpC,YAAc8G,EAAQrI,eAC/BqE,KAAKV,MAAM1D,IACXoE,KAAKC,KAAKX,MAAMpC,YAChB8C,KAAKE,MAAMZ,MAAMpC,aAGZ+G,CACT,GAAC,oBAED,SAAOS,GACL,IAAIC,EAAc,EAClB,OAAa,OAAT3E,MAEc,OAAdA,KAAKC,MAAgC,OAAfD,KAAKE,QACzBF,KAAKV,MAAMpC,YAAc8C,KAAKV,MAAM4E,kBAAoBQ,IAC1D1E,KAAKV,MAAM1D,IAAM,IACjB+I,GAAe,GAEb3E,KAAKV,MAAMpC,YAAc8C,KAAKV,MAAM4E,kBAAoBQ,IAC1D1E,KAAKV,MAAM1D,IAAM,IACjB+I,GAAe,GAGM,MAAnB3E,KAAKV,MAAM1D,KACboE,KAAKC,KAAKX,MAAM4E,kBAAoBlE,KAAKV,MAAM4E,kBAAoB,EACnElE,KAAKE,MAAMZ,MAAM4E,kBAAoBlE,KAAKV,MAAM4E,kBAAoB,IAEpElE,KAAKC,KAAKX,MAAM4E,kBAAmD,EAA/BlE,KAAKV,MAAM4E,kBAC/ClE,KAAKE,MAAMZ,MAAM4E,kBAAmD,EAA/BlE,KAAKV,MAAM4E,mBAElDS,GAAe3E,KAAKC,KAAK2E,OAAOF,GAAM1E,KAAKE,MAAM0E,OAAOF,GACxD1E,KAAKV,MAAMpC,YAAc8G,EAAQrI,eAC/BqE,KAAKV,MAAM1D,IACXoE,KAAKC,KAAKX,MAAMpC,YAChB8C,KAAKE,MAAMZ,MAAMpC,cAvBKyH,CA4B5B,GAAC,qBAED,SAAQE,EAAaC,EAAcC,EAASC,EAASC,EAAWC,GAC5C,MAAdD,GACFjF,KAAKV,MAAM1F,OAASkL,EACpB9E,KAAKV,MAAM3F,MAAQqG,KAAKV,MAAM1F,OAASoG,KAAKV,MAAMpC,cAElD8C,KAAKV,MAAM3F,MAAQkL,EACnB7E,KAAKV,MAAM1F,OAASoG,KAAKV,MAAM3F,MAAQqG,KAAKV,MAAMpC,aAGnC,SAAbgI,GACFlF,KAAKV,MAAMf,EAAIwG,EACf/E,KAAKV,MAAMd,EAAIwG,GACQ,MAAdC,GACTjF,KAAKV,MAAMd,EAAIwG,EAAUF,EAAe9E,KAAKV,MAAM1F,OACnDoG,KAAKV,MAAMf,EAAIwG,IAEf/E,KAAKV,MAAMf,EAAIwG,EAAUF,EAAc7E,KAAKV,MAAM3F,MAClDqG,KAAKV,MAAMd,EAAIwG,GAGC,OAAdhF,KAAKC,MACPD,KAAKC,KAAKkF,QACRnF,KAAKV,MAAM3F,MACXqG,KAAKV,MAAM1F,OACXoG,KAAKV,MAAMf,EACXyB,KAAKV,MAAMd,EACXwB,KAAKV,MAAM1D,IACX,QAGe,OAAfoE,KAAKE,OACPF,KAAKE,MAAMiF,QACTnF,KAAKV,MAAM3F,MACXqG,KAAKV,MAAM1F,OACXoG,KAAKV,MAAMf,EACXyB,KAAKV,MAAMd,EACXwB,KAAKV,MAAM1D,IACX,QAGN,KAAC,EAtgBsB,GCFnByD,EAAgB,SAACC,GAAK,qBAClBA,EAAMC,EAAC,aAAKD,EAAME,EAAC,aAAKF,EAAMG,EAAC,aAAKH,EAAMI,EAAC,MAErD,SAAS0F,EAAYC,EAAWzD,GAC9B,OACE,8BAGIyD,EAAU5I,KAAI,SAAC6I,GAAK,OAClB,SAAClN,EAAA,EAAU,CAETd,GAAI,CACFqC,MAAO,OACPiI,SAAU,WACVC,IAAKD,EAAW0D,EAAM,GACtBrF,KAAM,MACNsF,UAAW,qBACXrD,SAASD,EAAAA,EAAAA,IAAM,UAAW,IAC1BuD,SAAU,EACVjO,MAAO,cACPkO,OAAQ,OACRC,UAAW,SACXnF,QAAS,eACToF,WAAY,QACZxN,SAAU,OACVsG,WAAY,QACZ,SAED6G,EAAM,IAlBFA,EAAM,GAmBA,KAKvB,CAuBC,IAEoBM,EAAU,WAC7B,WAAYtG,GACV,IADkB,oBACAuG,IAAd7F,KAAK8F,KAEP,OADA9F,KAAK8F,KAAO,IAAI/F,EAAKT,GACdU,IAEX,CAyLC,OAzLA,kCAED,SAAW+F,GAET/F,KAAK8F,KAAKC,SAAO,UAAQA,EAC3B,GAAC,qBAED,WACE,OAAkB,OAAd/F,KAAK8F,KACA9F,KAAK8F,KAAKvF,UAEZ,IACT,GAAC,2BAED,SAAcG,GACM,OAAdV,KAAK8F,MACP9F,KAAK8F,KAAKnF,cAAcD,EAE5B,GAAC,wBAED,SAAWP,GAET,OADgB,MAAZA,EAAI2F,MAAc9F,KAAK8F,KAAK1F,WAAWD,EAAI2F,MACxC9F,IACT,GAAC,6BAED,WACE,IAAMgG,EAAWhG,KAAKS,OAItB,OAHkB,OAAdT,KAAK8F,MACPE,EAASF,KAAKlF,kBAEToF,CACT,GAAC,0BAED,SAAanF,GACO,OAAdb,KAAK8F,MACP9F,KAAK8F,KAAK/E,aAAaF,EAE3B,GAAC,wBAED,SACEoF,EACAC,EACAlF,EACAC,EACAG,GAEA,MAAwDpB,KAAK8F,KAAKC,QAA1DzH,EAAI,EAAJA,KAAM6H,EAAO,EAAPA,QAASzO,EAAO,EAAPA,QAASF,EAAY,EAAZA,aAAcD,EAAK,EAALA,MAC9C,EAA0ByI,KAAK8F,KAAKxG,MAA5B3F,EAAK,EAALA,MAAOC,EAAM,EAANA,OACTwM,EAAKpC,EAAQ3F,SAASC,EAAM,EAAG,EAAG2H,EAAa,GAAI,IACnDI,EAAa/H,EAAKpD,OAAqB,GAAZkL,EAAGlL,OAAc,EAC9CgG,GAAWgF,EAAeG,EAAazM,GAAU,EAC/CuH,GAAW8E,EAActM,GAAS,EACpCiI,EAAWsE,EAAeG,EAiB9B,OAhBIF,GAAW7H,EAAKpD,OAAS,IAC3BgG,GAAWmF,EACXzE,EAAW,GAGbF,QAAQC,IACN,mBACAsE,EACAC,EACAlG,KAAK8F,KAAKC,QACVM,EACAnF,EACAC,EACAxH,EACAqG,MAEgB,OAAdA,KAAK8F,MAEL,UAACvE,EAAA,EAAG,CACF5H,MAAOsM,EACPrM,OAAQsM,EACR5O,GAAI,CACFsK,SAAU,WACVnK,gBAAiB4H,EAAc9H,GAC/B+O,QAAS,mBACT,UAEDtG,KAAK8F,KAAK1D,WACT1K,EACAF,EACAwJ,EACAC,EACAC,EACAC,EACAC,GAED9C,EAAKpD,OAASkK,EAAYgB,EAAIxE,GAAY,QAI1C,IACT,GAAC,2BAED,SAAcqE,EAAaC,EAAc5C,EAAed,GACtD,GAAkB,OAAdxC,KAAK8F,KAAe,CACtB,MAAwD9F,KAAK8F,KAAKC,QAA1DzH,EAAI,EAAJA,KAAM6H,EAAO,EAAPA,QAASzO,EAAO,EAAPA,QAASF,EAAY,EAAZA,aAAcD,EAAK,EAALA,MAC9C,EAA0ByI,KAAK8F,KAAKxG,MAA5B3F,EAAK,EAALA,MAAOC,EAAM,EAANA,OACTwM,EAAKpC,EAAQ3F,SACjBC,EACA,EACA,EACA2H,EACA,GAAKzD,EACL,GAAKA,GAED6D,EAAa/H,EAAKpD,OAAqB,GAAZkL,EAAGlL,OAAcsH,EAAc,EAC5DtB,GAAWgF,EAAeG,EAAazM,GAAU,EAC/CuH,GAAW8E,EAActM,GAAS,EACpCiI,EAAWsE,EAAeG,EAC1BF,GAAW7H,EAAKpD,OAAS,IAC3BgG,GAAWmF,EACXzE,EAAW,GAEb,IAAMjD,EAAM2E,EAAczJ,WAAW,MACrC8E,EAAI4H,UAAYlH,EAAc9H,GAC9BoH,EAAI6H,SAAS,EAAG,EAAGlD,EAAc3J,MAAO2J,EAAc1J,QACtDoG,KAAK8F,KAAKvC,cACRD,EACA5L,EAAU8K,EACVhL,EAAegL,EACftB,EACAC,GAzJR,SACExC,EACA0G,EACAzD,EACAY,EACAyD,EACAI,GAEA1H,EAAIC,KAAI,UAAoB,GAAd4D,EAAgB,YAC9B7D,EAAI+G,UAAY,SAChB/G,EAAI8H,aAAe,MACnB9H,EAAI4H,UAAY,YAChB5H,EAAI6H,SAAS,EAAG5E,EAAUqE,EAAarE,EAAWyE,GAClD1H,EAAI4H,UAAY,QAEhB7E,QAAQC,IAAI,aAAc0D,EAAWgB,GACrC,IAC6B,EAD7B,UACoBhB,GAAS,IAA7B,2BAA+B,CAAC,IAArBC,EAAK,QACd,UAAwBA,EAAK,GAAtBoB,EAAQ,KAAIlI,EAAC,KACpBG,EAAIgI,SAASD,EAAUT,EAAc,EAAGzH,EAAIoD,EAAW,IAAMY,EAC/D,CAAC,+BACH,CAsIMoE,CAAejI,EAAKyH,EAAIxE,EAAUY,EAAayD,EAAaI,EAC9D,CACF,GAAC,iCAED,SAAoB3N,EAAQkL,GAC1B5D,KAAK8F,KAAKrB,SAAS/L,EAAQkL,EAAKlL,EAAOwC,OACzC,GAAC,oBAED,SAAOwJ,GAML,IALA,IAAImC,EAAO,EACPC,EAAa9G,KAAKS,OAClBsG,EAAkB/G,KAAK8F,KAAKxG,MAAMpC,YAChC8J,EAAsBhH,KAAK8F,KAAKxG,MAAM4E,mBAAqB,EAAIQ,GACjEuC,EAAU,IACPJ,EAAO,KAAOI,EAAU,GAAG,CAChCA,EAAUjH,KAAK8F,KAAKlB,OAAOF,GAC3BmC,GAAQ,EACR,IAAMK,EACJlH,KAAK8F,KAAKxG,MAAMpC,YAAc8C,KAAK8F,KAAKxG,MAAM4E,kBAYhD,GANErJ,KAAKa,IAAIwL,GACTrM,KAAKa,IAAIqL,EAAkB/G,KAAK8F,KAAKxG,MAAM4E,qBAE3C6C,EAAkB/G,KAAK8F,KAAKxG,MAAMpC,YAClC4J,EAAa9G,KAAKS,QAEfyG,EAAO,GAAKA,EAAOF,GAAiC,IAATE,EAAY,KAC9D,CAEA,MAAO,CAACH,EAAiBD,EAC3B,GAAC,kBAED,WACE,IAAMK,EAAW,IAAIvB,EAAW,CAAC,GAGjC,OAFAuB,EAASrB,KAAO9F,KAAK8F,KAAKrF,OAC1B0G,EAASrB,KAAKC,SAAO,UAAQ/F,KAAK8F,KAAKC,SAChCoB,CACT,GAAC,qBAED,SAAQlB,EAAaC,EAAchJ,GACjC,MAAqB8G,EAAQrE,oBAC3BsG,EACAC,EACAhJ,GACD,eAJM0C,EAAI,KAAEC,EAAI,KAKjBG,KAAK8F,KAAKxG,MAAM3F,MAAQiG,EACxBI,KAAK8F,KAAKxG,MAAM1F,OAASiG,EACzB6B,QAAQC,IAAI,WAAY3B,KAAK8F,KAAKxG,MAAM3F,MAAOqG,KAAK8F,KAAKxG,MAAM1F,QAC/DoG,KAAK8F,KAAKxG,MAAMf,EAAI,EACpByB,KAAK8F,KAAKxG,MAAMd,EAAI,EACpB,MAAqCwB,KAAK8F,KAAKxG,MAAvC3F,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAQ2E,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAG5C,EAAG,EAAHA,IACN,OAAnBoE,KAAK8F,KAAK7F,MACZD,KAAK8F,KAAK7F,KAAKkF,QAAQxL,EAAOC,EAAQ2E,EAAGC,EAAG5C,EAAK,QAC3B,OAApBoE,KAAK8F,KAAK5F,OACZF,KAAK8F,KAAK5F,MAAMiF,QAAQxL,EAAOC,EAAQ2E,EAAGC,EAAG5C,EAAK,QACtD,KAAC,EA/L4B,GC9DhB,SAASwL,EACtBC,EACAC,GAEC,IADDC,EAAe,uDAAG,WAAO,EAEzB,GAA0BC,EAAAA,EAAAA,UAASF,GAAa,eAAzChI,EAAK,KAAEmI,EAAQ,MAEtBC,EAAAA,EAAAA,YAAU,WACoB,aAK3B,OAL2B,0BAA5B,yFACwB,OAAtBH,GAAgB,GAAM,SACHI,EAAGrP,UAAU+O,GAAWO,UAAU,KAAD,EAA9CC,EAAI,OACVN,GAAgB,GACZM,EAAK3M,QAAQuM,EAASI,GAAM,4CACjC,uBANc,WACa,wBAM5BC,EACF,GAAG,IAEH,IAAMC,EAAU,SAACC,GAAI,OAAKL,EAAGrP,UAAU+O,GAAWY,IAAID,EAAM,EAE5D,MAAO,CAAC1I,EAAOmI,EAAUM,EAC3B,CCpBe,SAASG,EAAcb,EAAWC,GAC/C,OAA0BE,EAAAA,EAAAA,UAASF,GAAa,eAAzChI,EAAK,KAAEmI,EAAQ,KAEM,aAI3B,OAJ2B,0BAA5B,yGACqBE,EAAGrP,UAAU+O,GAAWO,UAAU,KAAD,EAA9CC,EAAI,OACVnG,QAAQC,IAAI,YAAakG,EAAMR,GAC3BQ,EAAK3M,QAAQuM,EAASI,EAAK,GAAGM,OAAO,4CAC1C,uBACDT,EAAAA,EAAAA,YAAU,kBAPuC,WAErB,+BAKZI,EAAe,GAAE,IAajC,OANAJ,EAAAA,EAAAA,YAAU,WALM,IAACM,EAMfL,EAAGrP,UAAU+O,GAAWe,QACxB1G,QAAQC,IAAI,uBAAwB0F,EAAW/H,GAPhC0I,EAQP,CAAEG,MAAO7I,GAPjBoC,QAAQC,IAAI,OAAQqG,EAAMX,GAC1BM,EAAGrP,UAAU+O,GAAWY,IAAID,EAO9B,GAAG,CAAC1I,IAEG,CAACA,EAAOmI,EACjB,CCAA,OAAiBY,mBAtBjB,SAA4B3P,EAAQ4P,EAAWC,EAAYC,GAKzD,IAJA,IAAMC,EAAe/P,EAAOgQ,MAAK,SAAChJ,EAAGD,GAAC,OACpCC,EAAExC,aAAeuC,EAAEvC,YAAc,GAAK,CAAC,IAEnCyL,EAAe,GACZpN,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAAG,CAC/B,IAAMqN,EAAU,IAAIhD,EAAW,CAAEhK,IAAKoI,EAAQpJ,WAC9CgO,EAAQC,oBAAoBJ,EAAcF,EAAaC,GAEvDG,EAAa5K,KAAK6K,EAAQhE,OAAO,EAAI0D,GACvC,CASA,OAPAK,EAAaD,MAAK,SAAChJ,EAAGD,GACpB,IAAMqJ,EAAOP,EAAaC,EAG1B,OAFc3N,KAAKa,IAAIgE,EAAE,GAAKoJ,GAChBjO,KAAKa,IAAI+D,EAAE,GAAKqJ,EAEhC,IAEOH,EAAa,EACtB,G,iCCjBe,SAASI,EAAO,GAAgB,IAAdC,EAAS,EAATA,UAC/B,OACE,UAACC,EAAA,EAAK,CACJC,IAAKF,EACL1R,GAAI,CACFiJ,QAAS,OACT4I,WAAY,SACZC,eAAgB,SAChBC,EAAG,EACH5R,iBAAiBwK,EAAAA,EAAAA,IAAM,OAAQ,IAC/BzK,aAAc,GAEhB8R,UAAW,EAAE,WAEb,SAAC/H,EAAA,EAAG,CAACjK,GAAI,CAAEsK,SAAU,WAAY3B,KAAM,OAAQ,UAC7C,SAACsJ,EAAA,EAAI,CAACC,KAAK,YAAYjS,MAAM,aAAakS,UAAU,OAAM,UACxD,SAAClI,EAAA,EAAG,CAACjK,GAAI,CAAEiJ,QAAS,OAAQ4I,WAAY,UAAW,UACjD,SAACO,EAAA,EAAa,WAIpB,SAACtR,EAAA,EAAU,CACThB,QAAQ,KACRC,UAAU,KACVC,GAAI,CAAEC,OAAO0K,EAAAA,EAAAA,IAAM,OAAQ,KAAO,SACnC,oBAKP,C,4HCtBe,SAAS0H,EAAe,GAAoC,IAAlCC,EAAI,EAAJA,KAAM5S,EAAO,EAAPA,QAAS6S,EAAO,EAAPA,QAASC,EAAK,EAALA,MAC/D,GAA0BtC,EAAAA,EAAAA,UAAS,IAAG,eAA/BlI,EAAK,KAAEmI,EAAQ,KAYtB,OACE,SAAC,IAAY,WACX,UAACsC,EAAA,EAAM,CAACH,KAAMA,EAAMI,WAAS,aAC3B,SAACC,EAAA,EAAW,CAAC3S,GAAI,CAAEoO,UAAW,UAAW,SAAC,sBAC1C,UAACwE,EAAA,EAAa,CACZC,UAAQ,EACR7S,GAAI,CACFiJ,QAAS,OACT4I,WAAY,SACZC,eAAgB,iBAChB,WAEF,SAACgB,EAAA,EAAiB,CAAC9S,GAAI,CAAEiJ,QAAS,SAAU8J,GAAI,GAAI,SAAC,yBAGrD,UAACC,EAAA,EAAW,CAACN,WAAS,EAAC1S,GAAI,CAAE2E,SAAU,OAAQ,WAC7C,SAACsO,EAAA,EAAU,CAACpT,GAAG,2BAA0B,SAAC,mBAC1C,SAACqT,EAAA,EAAM,CACLC,QAAQ,2BACRtT,GAAG,qBACHuT,aAAa,KACbpL,MAAOA,EACPqL,MAAM,gBACNzS,SAAU,SAAC8D,GAAK,OAAKyL,EAASzL,EAAM9C,OAAOoG,MAAM,EAAC,SAEjDsL,OAAOC,KAAKf,GAAOrN,KAAI,SAACqO,GAAG,OAC1B,SAACC,EAAA,EAAQ,CAAuBzL,MAAOwL,EAAI,SACxChB,EAAMgB,GAAKxM,MADCwL,EAAMgB,GAAKxM,KAEf,aAKnB,UAAC0M,EAAA,EAAa,YACZ,SAAC9T,EAAA,EAAM,CACLE,QAAQ,WACR6T,SAA2B,IAAjB3L,EAAMpE,OAChBlE,QAhDa,WACrB0K,QAAQC,IAAImI,EAAMxK,GAAO3F,MAAOmQ,EAAMxK,GAAO1F,OAAQ5C,GACrDA,EAAQ8S,EAAMxK,GAAO3F,MAAOmQ,EAAMxK,GAAO1F,QACzC6N,EAAS,GACX,EA4CkC,SACzB,cAGD,SAACvQ,EAAA,EAAM,CAACE,QAAQ,OAAOJ,QA9CX,WAClByQ,EAAS,IACToC,GACF,EA2CoD,SAAC,kBAOvD,CCxEe,SAASqB,EAAQ,GAgB5B,IAfFC,EAAI,EAAJA,KACAzS,EAAM,EAANA,OACAC,EAAc,EAAdA,eACA4P,EAAU,EAAVA,WACAC,EAAW,EAAXA,YACAvC,EAAW,EAAXA,YACAC,EAAY,EAAZA,aACAkF,EAAW,EAAXA,YACAnK,EAAiB,EAAjBA,kBACA8E,EAAO,EAAPA,QACAsF,EAAe,EAAfA,gBACA5G,EAAQ,EAARA,SACA6G,EAAgB,EAAhBA,iBACAC,EAAY,EAAZA,aACAnK,EAAsB,EAAtBA,uBAEA,GAA8BoG,EAAAA,EAAAA,UAAS,MAAK,eAArCgE,EAAO,KAAEC,EAAU,KAOpBC,EAAU,SAACC,GAAC,OAA+B,IAA1Bf,OAAOC,KAAKc,GAAGzQ,MAAa,EAC7C0Q,EAAgB,WAMpB,GALAlK,QAAQC,IAAI,2BACZwJ,EAAKhG,QAAQoD,EAAYC,EAAa2C,EAAKrF,KAAKxG,MAAMpC,aACtDwE,QAAQC,IAAI,sBACZwJ,EAAKU,WAAW9F,GAChBrE,QAAQC,IAAI,wBAAyBjJ,EAAOwC,QACxCxC,EAAOwC,OAAS,EAAG,CACrBiQ,EAAKpK,aAAarI,GAClBgJ,QAAQC,IAAI,4BACZ,IAAMmK,EAAcX,EAAK/I,WACvB6D,EACAC,EACAkF,EACAnK,EACAG,GAEFM,QAAQC,IAAI,6BACZ8J,EAAWK,GACXT,EAAgBF,EAClB,CACF,GAEAzD,EAAAA,EAAAA,YAAU,WACHgE,EAAQP,KACXzJ,QAAQC,IAAI,8BACZiK,IAEJ,GAAG,KAEHlE,EAAAA,EAAAA,YAAU,WACHgE,EAAQP,GAIXM,EAAW,OAHX/J,QAAQC,IAAI,gCACZiK,IAIJ,GAAG,CAACT,EAAMpF,EAASwC,EAAYC,EAAa4C,EAAa1S,IAuDzD,OAzCAgP,EAAAA,EAAAA,YAAU,WACR,IAAiB,IAAbjD,EAAmB,CACrB,IAAMnB,EAAgB7J,SAASC,cAAc,UACrCqS,EAA4BR,EAA5BQ,WAAYC,EAAgBT,EAAhBS,YACpB1I,EAAc3J,MAAQoS,EACtBzI,EAAc1J,OAASoS,EACvB,IAAMxJ,EAAcuJ,EAAa9F,EAS3BI,EAAgC,GARpBrC,EAAQ3F,SACxB0H,EAAQzH,KACR,EACA,EACAyN,EACA,GAAKvJ,EACL,GAAKA,GAEsBtH,OAAcsH,EAC3C,EAAwCwB,EAAQrE,oBAC9CoM,EACAC,EAAc3F,EACd8E,EAAKrF,KAAKxG,MAAMpC,aACjB,eAJM+O,EAAa,KAAEC,EAAc,KAK9BC,EAAahB,EAAK1K,OACxB0L,EAAWxL,cAAchI,GACzBwT,EAAWhH,QACT8G,EACAC,EACAf,EAAKrF,KAAKxG,MAAMpC,aAElBiP,EAAW5I,cACTwI,EACAC,EACA1I,EACAd,GAGF4J,YACE,kBAhD2BC,EAgDUN,EAhDNO,EAgDkBN,OAA3B1I,EA/CnBiJ,QAAO,SAACC,GACb,IAAMC,EAAOhT,SAASC,cAAc,KACpC+S,EAAKC,SAAQ,kBAAcL,EAAE,YAAIC,EAAE,YAAItP,KAAKC,MAAK,QACjDwP,EAAKjD,KAAOlM,IAAIqP,gBAAgBH,GAChCC,EAAKG,QACLtP,IAAIC,gBAAgBkP,EAAKjD,MACzBiD,EAAKjD,KAAO,KACZ8B,GACF,IATsB,IAASe,EAAIC,CAgD8B,GAC7D,OAEJ,CACF,GAAG,CAAC7H,IACG+G,CACT,C,4ECpHe,SAASqB,EAAa,GAAmC,IAAjClT,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAQkT,EAAa,EAAbA,cACpD,OACE,SAACvL,EAAA,EAAG,CACFjK,GAAI,CACFqC,MAAAA,EACAC,OAAAA,EAEAgI,SAAU,WACVmL,gBAAgB,OAAD,OAASC,EAAW,KACnCC,eAAgBtT,EAChBuT,UAAW,UACXC,iBAAkB,YAClBhE,WAAY,UACZ,UAEF,SAAC5H,EAAA,EAAG,CACFjK,GAAI,CACFsK,SAAU,WACVC,IAAK,MACL5B,KAAM,MACNsF,UAAW,yBACX,SAEDuH,KAIT,C,eCzBe,SAASM,EAAK,GAiBzB,IAhBFxD,EAAI,EAAJA,KACAyD,EAAO,EAAPA,QACA1T,EAAK,EAALA,MACAC,EAAM,EAANA,OACAqC,EAAQ,EAARA,SACAqR,EAAS,EAATA,UACA9E,EAAW,EAAXA,YACA9P,EAAM,EAANA,OACAE,EAAQ,EAARA,SACA2U,EAAU,EAAVA,WACAC,EAAW,EAAXA,YACAC,EAAM,EAANA,OACAC,EAAO,EAAPA,QACAC,EAAc,EAAdA,eACAnC,EAAO,EAAPA,QACAoC,EAAQ,EAARA,SAoBA,OAlBAlM,QAAQC,IACN,OACAiI,EACAyD,EACA1T,EACAC,EACAqC,EACAqR,EACA9E,EACA9P,EAAOwC,OACPtC,EACA4U,EACAH,EACA,aACA3U,EAAOwC,SAAWtC,EACL,IAAbA,GAAkC,IAAhB4P,EAClB9P,EAAOwC,OAAS,GAAKxC,EAAOwC,SAAWtC,GAAYyU,IAGnD,UAAC9L,EAAA,EAAG,CAAClK,UAAU,MAAMC,GAAI,CAAEG,gBAAiB,SAAU,UACnDgW,EACAC,EACA9D,EAAO+D,EAAiB,MACzB,UAACpM,EAAA,EAAG,CACF5H,MAAOsC,EACPrC,OAAQ0T,EACRhW,GAAI,CACFiJ,QAAS,OACT4I,WAAY,SACZC,eAAgB,SAChB3R,gBAAiB,SACjB,UAEDiB,EAAOwC,SAAWtC,GACjB,SAACiU,EAAY,CACXlT,MAAOA,EACPC,OAAQA,EACRkT,eACE,SAACe,EAAA,EAAO,CACN9Q,MAAK,mBAAcrE,EAAOwC,OAAM,cAAMtC,EAAQ,mBAIlD,KAQU,IAAbA,GAAkC,IAAhB4P,GACjB,SAACqE,EAAY,CACXlT,MAAOA,EACPC,OAAQA,EACRkT,cACEnT,GAAQ,SAAC/B,EAAA,EAAS,CAACC,aAAc0V,KAAiB,qBAGpD,KACH/B,EACA9S,EAAOwC,OAAS,GAAKxC,EAAOwC,SAAWtC,GAAYyU,GAClD,SAACQ,EAAA,EAAO,CAAC9Q,MAAM,yBACb,QAEL6Q,IAGP,C,gECzFe,SAASE,GAAK,GAAgC,IAA9BnD,EAAK,EAALA,MAAOoD,EAAI,EAAJA,KAAMlW,EAAY,EAAZA,aAC1C,OACE,SAACmW,GAAA,EAAsB,CACrBC,WAAS,EACTtD,MAAOA,EACPrL,MAAOqL,EAAMuD,cACbH,KAAMA,EACNzW,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS+O,QAAS,SAE/CtP,QAASa,GAGf,CCTe,SAASsW,GAAc,GAA6B,IAA3BC,EAAU,EAAVA,WAAYC,EAAU,EAAVA,WAalD,OACE,UAACC,GAAA,EAAgB,CACfpF,IAAKkF,EACLG,YAAU,EACVjX,GAAI,CAAEkX,GAAI,EAAGnW,WAAY,OAAQZ,iBAAiBwK,EAAAA,EAAAA,IAAM,OAAQ,KAAO,WAEvE,SAAC6L,GAAI,CAACnD,MAAM,OAAOoD,MAAM,SAACU,GAAA,EAAQ,IAAK5W,aAAc,WAAO,KAC5D,SAACiW,GAAI,CACHnD,MAAM,WACNoD,MAAM,SAACW,GAAA,EAAY,IACnB7W,aAAcwW,KAEhB,SAACP,GAAI,CAACnD,MAAM,QAAQoD,MAAM,SAACY,GAAA,EAAS,IAAK9W,aAAc,WAAO,MAGpE,C,4BC/Be,SAAS+W,GAAe,GAAmC,IAAjClX,EAAO,EAAPA,QAASmX,EAAmB,EAAnBA,oBAChD,OACE,UAACC,GAAA,EAAK,CACJC,UAAU,SACV3F,eAAe,SACfD,WAAW,QACX7R,GAAI,CAAEG,gBAAiB,eAAgB,WAEvC,SAACW,EAAA,EAAU,CACTd,GAAI,CACFe,WAAY,OACZd,MAAO,OACPY,SAAU,UACV6W,aAAc,cACd,SACH,aAGD,SAACC,GAAA,GAAM,CACL,aAAW,UACXvE,aAAc,EACdpL,MAAO5H,EACPwX,kBAAkB,OAClBC,KAAM,GACNC,IAAK,EACLC,IAAK,GACLnX,SAAU2W,EACVvX,GAAI,CAAEC,MAAO,aAIrB,CC/Be,SAAS+X,GAAc,GAAiC,IAA/B3M,EAAM,EAANA,OAAQ4M,EAAkB,EAAlBA,mBAC9C,OACE,UAACT,GAAA,EAAK,CACJC,UAAU,SACV3F,eAAe,SACfD,WAAW,QACX7R,GAAI,CAAEG,gBAAiB,eAAgB,WAEvC,SAACW,EAAA,EAAU,CACTd,GAAI,CACFe,WAAY,OACZd,MAAO,OACPY,SAAU,WACV,SACH,mBAGD,SAAC8W,GAAA,GAAM,CACL,aAAW,gBACXvE,aAAc,EACdpL,MAAOqD,EACPuM,kBAAkB,OAClBC,KAAM,EACNC,IAAK,EACLC,IAAK,GACLnX,SAAUqX,EACVjY,GAAI,CAAEC,MAAO,aAIrB,C,oDCzBe,SAASiY,GAAY,GAKhC,IAJFlR,EAAI,EAAJA,KACAmR,EAAgB,EAAhBA,iBACAtJ,EAAO,EAAPA,QACAuJ,EAAoB,EAApBA,qBAEA,GAA2BlI,EAAAA,EAAAA,UAAS,IAA7BmI,GAAgC,YAAhB,GACvB,OACE,UAACb,GAAA,EAAK,CACJxX,GAAI,CACFG,gBAAiB,eACjB,WAEF,UAACqX,GAAA,EAAK,CACJC,UAAU,MACV5F,WAAW,SACXC,eAAe,gBACfwG,QAAS,EAAE,WAEX,SAACxX,EAAA,EAAU,CACTd,GAAI,CAAEe,WAAY,OAAQd,MAAO,OAAQY,SAAU,WAAY,SAChE,kBAGD,UAAC0X,GAAA,EAAS,CAACC,KAAG,aACZ,SAACC,GAAA,EAAgB,CACfC,mBAAiB,EACjBC,SACE,SAACC,GAAA,EAAQ,CACPlO,KAAK,QACLmO,SAAqB,IAAZhK,EACTjO,SAAU,kBAAMwX,GAAqB,EAAM,EAC3CpY,GAAI,CAAEC,MAAO,QAAS,gBAAiB,CAAEA,MAAO,YAGpDoT,OACE,SAACvS,EAAA,EAAU,CAACD,SAAS,SAASE,WAAW,OAAM,SAAC,WAIlDf,GAAI,CAAEC,MAAO,OAAQc,WAAY,WAEnC,SAAC0X,GAAA,EAAgB,CACfC,mBAAiB,EACjBC,SACE,SAACC,GAAA,EAAQ,CACPlO,KAAK,QACLmO,SAAqB,IAAZhK,EACTjO,SAAU,kBAAMwX,GAAqB,EAAK,EAC1CpY,GAAI,CAAEC,MAAO,OAAQ,gBAAiB,CAAEA,MAAO,YAGnDoT,OACE,SAACvS,EAAA,EAAU,CAACD,SAAS,SAASE,WAAW,OAAM,SAAC,QAIlDf,GAAI,CAAEC,MAAO,OAAQc,WAAY,OAAQF,SAAU,mBAIzD,SAACiY,GAAA,EAAS,CACRhZ,QAAQ,WACRuT,MAAM,GACND,aAAcpM,EACdpG,SAAUuX,EACVzN,KAAK,QACL1K,GAAI,CAAEqC,MAAO,OAAQ0W,GAAI,GACzBC,WAAY,CAAEhZ,GAAI,CAAEG,iBAAiBwK,EAAAA,EAAAA,IAAM,OAAQ,MACnDsO,YACE,SAACnY,EAAA,EAAU,CAACd,GAAI,CAAEC,MAAO,OAAQY,SAAU,WAAY,SACpDwX,IAGLhV,QAASgV,MAIjB,C,4BCjFe,SAASa,GAAa,GAMjC,IALFjZ,EAAK,EAALA,MACAkZ,EAAkB,EAAlBA,mBACAC,EAAW,EAAXA,YACAC,EAAW,EAAXA,YACA9Y,EAAY,EAAZA,aAGA,OADA6J,QAAQC,IAAI,gBAAiBpK,EAAOkZ,IAElC,UAAC3B,GAAA,EAAK,CACJC,UAAU,MACV5F,WAAW,SACXC,eAAe,gBACfwG,QAAS,EACTtY,GAAI,CAAEsZ,GAAI,GAAI,WAEd,SAACxY,EAAA,EAAU,CACTd,GAAI,CAAEe,WAAY,OAAQd,MAAO,OAAQY,SAAU,WAAY,SAChE,sBAGD,SAACoJ,EAAA,EAAG,CACFlK,UAAU,MACVC,GAAI,CACFI,QAAS,MACTmZ,WAAY,OACZrZ,aAAc,MACdsZ,UAAW,2BACXvQ,QAAS,eACTwQ,OAAQ,WAEV/Z,QAAS0Z,EAAY,UAErB,SAACnP,EAAA,EAAG,CACFlK,UAAU,MACVC,GAAI,CACFqC,MAAO,OACPC,OAAQ,OACRpC,aAAc,OACdqZ,WAAW,QAAD,OAAUtZ,EAAMgI,EAAC,aAAKhI,EAAMiI,EAAC,aAAKjI,EAAMkI,EAAC,aAAKlI,EAAMmI,EAAC,WAIrE,SAACsR,GAAW,CACVpH,KAAM6G,EACNlZ,MAAOA,EACPoZ,YAAaA,EACb9Y,aAAcA,MAItB,CAeO,SAASmZ,GAAY,GAA6C,IAA3CpH,EAAI,EAAJA,KAAMrS,EAAK,EAALA,MAAOoZ,EAAW,EAAXA,YAAa9Y,EAAY,EAAZA,aAEtD,OADA6J,QAAQC,IAAIgP,GACL/G,GACL,+BACE,UAACrI,EAAA,EAAG,CACFlK,UAAU,MACVC,GAAI,CACFsK,SAAU,WACVqP,OAAQ,EACRC,OAAQ,IACR,WAEF,SAACnP,EAAA,EAAU,CACTzK,GAAI,CACFsK,SAAU,WACVC,IAAK,EACL3B,MAAO,EACP+Q,OAAQ,EACRxZ,gBAAiB,cACjB4R,EAAG,EACH9D,UAAW,sBACX4L,OAAQ,mBAEVna,QAAS2Z,EAAY,UAErB,SAACS,GAAA,EAAS,OAEZ,SAAC,MAAY,CAAC7Z,MAAOA,EAAOW,SAAUL,SAGxC,IACN,C,oDChGe,SAASwZ,GAAa,GAA0B,IAAxB/R,EAAK,EAALA,MAAOzH,EAAY,EAAZA,aAC5C,OACE,UAACyW,GAAA,EAAgB,CACfC,YAAU,EACVjP,MAAOA,EACPpH,SAAUL,EACVP,GAAI,CACFe,WAAY,OACZZ,iBAAiBwK,EAAAA,EAAAA,IAAM,OAAQ,IAC/B,iBAAkB,CAAE1K,MAAO,UAC3B,WAEF,SAACyW,GAAA,EAAsB,CACrBrD,MAAM,YACNrL,MAAM,YACNyO,MAAM,SAACuD,GAAA,EAAqB,IAC5Bha,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS+O,QAAS,YAGjD,SAAC0H,GAAA,EAAsB,CACrBrD,MAAM,SACNrL,MAAM,QACNyO,MAAM,SAACwD,GAAA,EAAS,IAChBja,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS+O,QAAS,YAGjD,SAAC0H,GAAA,EAAsB,CACrBrD,MAAM,OACNrL,MAAM,OACNyO,MAAM,SAACyD,GAAA,EAAQ,IACfla,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS+O,QAAS,YAGjD,SAAC0H,GAAA,EAAsB,CACrBrD,MAAM,QACNrL,MAAM,QACNyO,MAAM,SAAC0D,GAAA,EAAW,IAClBna,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS+O,QAAS,aAKvD,C,mDCnDe,SAASoL,GAAY,GAMhC,IALFna,EAAK,EAALA,MACAoa,EAAgB,EAAhBA,iBACA/H,EAAI,EAAJA,KACAgI,EAAkB,EAAlBA,mBACAC,EAAsB,EAAtBA,uBAEA,OAAOjI,GACL,UAACrI,EAAA,EAAG,CAACjK,GAAI,CAAEsK,SAAU,YAAa,WAChC,UAAC0M,GAAA,EAAgB,CACfC,YAAU,EACVjP,MAAOqS,EACPzZ,SAAU2Z,EACVva,GAAI,CACFiJ,QAAS,OACTlI,WAAY,OACZZ,iBAAiBwK,EAAAA,EAAAA,IAAM,OAAQ,IAC/B6P,UAAW,iBACXlQ,SAAU,WACVuH,WAAY,UACZ,WAEF,SAAC6E,GAAA,EAAsB,CACrBrD,OACE,SAACvS,EAAA,EAAU,CAACD,SAAS,UAAUE,WAAW,OAAM,SAAC,YAInDiH,MAAM,UACNyO,MAAM,SAACgE,GAAA,EAAW,IAClBza,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS+O,QAAS,YAGjD,SAAC0H,GAAA,EAAsB,CACrBrD,OACE,SAACvS,EAAA,EAAU,CAACD,SAAS,UAAUE,WAAW,OAAM,SAAC,WAInDiH,MAAM,gBACNyO,MAAM,SAACiE,GAAA,EAAY,IACnB1a,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS+O,QAAS,YAGjD,SAAC0H,GAAA,EAAsB,CACrBrD,OACE,SAACvS,EAAA,EAAU,CAACD,SAAS,UAAUE,WAAW,OAAM,SAAC,UAInDiH,MAAM,QACNyO,MACE,SAACkE,GAAA,EAAU,CACT3a,GAAI,CACF4a,KAAK,QAAD,OAAU3a,EAAMgI,EAAC,aAAKhI,EAAMiI,EAAC,aAAKjI,EAAMkI,EAAC,aAAKlI,EAAMmI,EAAC,KACzDlI,aAAc,SAIpBF,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS+O,QAAS,YAGjD,SAAC0H,GAAA,EAAsB,CACrBrD,MAAM,OACNrL,MAAM,OACNyO,MAAM,SAACoE,GAAA,EAAS,IAChB7a,GAAI,CACFe,WAAY,OACZd,MAAO,OACP,iBAAkB,CAAEA,MAAO,QAAS+O,QAAS,eAInD,SAAC8K,GAAA,EAAS,CACRjZ,SAAS,OACTb,GAAI,CACFsK,SAAU,WACVC,IAAK,EACL3B,MAAO,EACPgS,KAAM,QACNza,gBAAiB,OACjBD,aAAc,MACdE,QAAS,OAEXV,QAAS4a,OAGX,IACN,C,gBCpGe,SAASQ,GAAa,GAMjC,IALFxI,EAAI,EAAJA,KACAtK,EAAK,EAALA,MACAsS,EAAkB,EAAlBA,mBACAS,EAAY,EAAZA,aACAC,EAAS,EAATA,UAEA,OAAO1I,GACL,UAACrI,EAAA,EAAG,CAACjK,GAAI,CAAEsK,SAAU,YAAa,WAChC,UAAC0M,GAAA,EAAgB,CACfC,YAAU,EACVjP,MAAOA,EACPhI,GAAI,CACFe,WAAY,OACZZ,iBAAiBwK,EAAAA,EAAAA,IAAM,OAAQ,IAC/B6P,UAAW,iBACX,iBAAkB,CAAEva,MAAO,UAC3B,WAEF,SAACuW,GAAI,CACHnD,MAAM,SACNoD,MAAM,SAAC5L,EAAA,EAAU,IACjBtK,aAAcwa,KAEhB,SAACvE,GAAI,CACHnD,MAAM,MACNoD,MAAM,SAACwE,GAAA,EAAqB,IAC5B1a,aAAcya,QAGlB,SAAClB,GAAA,EAAS,CACRjZ,SAAS,OACTb,GAAI,CACFsK,SAAU,WACVC,IAAK,EACL3B,MAAO,EACPgS,KAAM,QACNza,gBAAiB,OACjBD,aAAc,MACdE,QAAS,OAEXV,QAAS4a,OAGX,IACN,CC5Ce,SAASY,GAAmB,GAA+B,IAA7B5I,EAAI,EAAJA,KAAM6I,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAC3D,OACE,UAAC3I,EAAA,EAAM,CAACH,KAAMA,EAAK,WACjB,SAACK,EAAA,EAAW,CACV3S,GAAI,CACFoO,UAAW,SACXrN,WAAY,OACZd,OAAO0K,EAAAA,EAAAA,IAAM,OAAQ,KACrB,SACH,mBAGD,UAACiI,EAAA,EAAa,CAACC,UAAQ,aACrB,SAACC,EAAA,EAAiB,CAAC9S,GAAI,CAAEe,WAAY,OAAQd,MAAO,QAAS,SAAC,mCAG9D,SAACa,EAAA,EAAU,CACThB,QAAQ,YACRE,GAAI,CAAEC,MAAO,MAAOc,WAAY,QAChCsa,QAAM,WACP,WAGD,SAACva,EAAA,EAAU,CAACd,GAAI,CAAEa,SAAU,SAAUZ,MAAO,QAAS,SAAC,sCAIzD,UAACyT,EAAA,EAAa,YACZ,UAAC9T,EAAA,EAAM,CAACF,QAASyb,EAAUnb,GAAI,CAAEC,MAAO,OAAQ,UAC7C,IAAI,QACC,QAER,UAACL,EAAA,EAAM,CAACE,QAAQ,WAAWJ,QAAS0b,EAAS,UAC1C,IAAI,SACE,YAKjB,CC5Be,SAASE,GAAe,GAgBnC,IAfFC,EAAW,EAAXA,YACAC,EAAS,EAATA,UACAC,EAAQ,EAARA,SACAC,EAAK,EAALA,MACAC,EAAW,EAAXA,YACAlN,EAAO,EAAPA,QACA0K,EAAkB,EAAlBA,mBACA5B,EAAmB,EAAnBA,oBACAU,EAAkB,EAAlBA,mBACA2D,EAAgB,EAAhBA,iBACAC,EAAgB,EAAhBA,iBACAC,EAAiB,EAAjBA,kBACA3D,EAAgB,EAAhBA,iBACAC,EAAoB,EAApBA,qBACA2D,EAAW,EAAXA,YAEA3R,QAAQC,IAAIoE,GACZ,OAAgCyB,EAAAA,EAAAA,WAAS,GAAK,eAAvC8L,EAAQ,KAAEC,EAAW,KAC5B,GAA0B/L,EAAAA,EAAAA,UAAS,IAAG,eAA/BlI,EAAK,KAAEmI,EAAQ,KACtB,GAAgCD,EAAAA,EAAAA,WAAS,GAAM,eAAxCgM,EAAQ,KAAEC,EAAW,KAC5B,GAAkCjM,EAAAA,EAAAA,WAAS,GAAM,eAA1CkM,EAAS,KAAEC,EAAY,KAC9B,GAAsCnM,EAAAA,EAAAA,UAAS,MAAK,eAA7CoM,EAAW,KAAEC,EAAc,KAClC,GAAgDrM,EAAAA,EAAAA,UAAS,IAAG,eAArDmK,EAAgB,KAAEmC,EAAmB,KAC5C,GAAkCtM,EAAAA,EAAAA,WAAS,GAAM,eAA1CuM,EAAS,KAAEC,EAAY,KAC9B,GAAoCxM,EAAAA,EAAAA,UAAS,IAAG,eAAzCyM,EAAU,KAAEC,GAAa,KAU1BC,GAAyB,WAC7BV,GAAY,GACZI,EAAe,MACfC,EAAoB,IACpBP,GAAY,GACZ9L,EAAS,GACX,GA+CAC,EAAAA,EAAAA,YAAU,WACJ8L,GAAiC,YAArB7B,GACdkC,GACE,SAACjF,GAAc,CACblX,QAASqO,EAAQrO,QACjBmX,oBAAqBA,IAI7B,GAAG,CAAC9I,EAAQrO,QAAS8b,KAGrB9L,EAAAA,EAAAA,YAAU,WACJ8L,GAAiC,kBAArB7B,GACdkC,GACE,SAACvE,GAAa,CACZ3M,OAAQoD,EAAQvO,aAChB+X,mBAAoBA,IAI5B,GAAG,CAACxJ,EAAQvO,aAAcgc,KAG1B9L,EAAAA,EAAAA,YAAU,WACJ8L,GAAiC,UAArB7B,GACdkC,GACE,SAAC7C,GAAW,CACVpH,KAAM6G,EACNlZ,MAAOwO,EAAQxO,MACfM,aAAcub,EACdzC,YAAauC,IAIrB,GAAG,CAACnN,EAAQxO,MAAOic,EAAU/C,KAG7B/I,EAAAA,EAAAA,YAAU,WACRhG,QAAQC,IAAI,0BACR6R,GAAiC,SAArB7B,GACdkC,GACE,SAACrE,GAAW,CACVlR,KAAMyH,EAAQzH,KACdmR,iBAAkBA,EAClBtJ,QAASJ,EAAQI,QACjBuJ,qBAAsBA,IAI9B,GAAG,CAAC3J,EAAQzH,KAAMkV,EAAUzN,EAAQI,UA+CpC,OADAzE,QAAQC,IAAI,cAAeiS,IAEzB,UAAC3K,EAAA,EAAK,CACJC,IAAK2J,EACLvb,GAAI,CACFsK,SAAU,QACVsP,OAAQ,EACRjR,KAAM,EACNC,MAAO,EACPkU,GAAI,EACJ3c,gBAAiB,QACjBD,aAAc,GAEhB8R,UAAW,EAAE,WAEb,SAACkJ,GAAkB,CACjB5I,KAAM8J,EACNjB,SA5BoB,WACxBY,IACAM,GAAa,GACblM,EAAS,GACX,EAyBMiL,SAvBoB,WACxBiB,GAAa,GACblM,EAAS,GACX,IAuDKmM,GACC,SAACrS,EAAA,EAAG,CACFjK,GAAI,CACFG,iBAAiBwK,EAAAA,EAAAA,IAAM,OAAQ,KAC/BoH,EAAG,GACH,SAEDuK,IAED,MACJ,SAACxB,GAAY,CACXxI,KAAMmK,EACNzU,MAAO2U,EACP5B,aAAcU,EACdT,UAnFiB,WACrBW,IACAD,GACF,EAiFMpB,mBAjO0B,WAC9BoC,GAAa,GACbE,GAAc,IACdX,GAAY,GACZN,IACAxL,EAAS,GACX,KA6NI,SAACiK,GAAW,CACVna,MAAOwO,EAAQxO,MACfoa,iBAAkBA,EAClB/H,KAAM4J,EACN5B,mBAAoBuC,GACpBtC,uBAxNyB,SAAClV,EAAG0X,GACjC3S,QAAQC,IAAI,6BACZmS,EAAoBO,GACT,YAAPA,EACFR,GACE,SAACjF,GAAc,CACblX,QAASqO,EAAQrO,QACjBmX,oBAAqBA,KAGT,kBAAPwF,EACTR,GACE,SAACvE,GAAa,CACZ3M,OAAQoD,EAAQvO,aAChB+X,mBAAoBA,KAGR,UAAP8E,GACTlB,IACAU,GACE,SAAC7C,GAAW,CACVpH,KAAM6G,EACNlZ,MAAOwO,EAAQxO,MACfM,aAAcub,EACdzC,YAAa,WACXkD,EAAe,MACfX,GACF,MAGY,SAAPmB,GACT3S,QAAQC,IAAI0S,GACZR,GACE,SAACrE,GAAW,CACVlR,KAAMyH,EAAQzH,KACdmR,iBAAkBA,EAClBtJ,QAASJ,EAAQI,QACjBuJ,qBAAsBA,MAI1BmE,GAAe,SAACzb,EAAA,EAAU,CAACb,MAAM,YAAW,SAAE8c,IAElD,IA+KKf,GACC,SAACjC,GAAY,CAAC/R,MAAOA,EAAOzH,aAnHb,SAACmE,EAAOsY,GAC3BrB,IANAiB,GAAc,IACdF,GAAa,GACbT,GAAY,GAMZY,KACA1M,EAAS6M,GACQ,cAAbA,EACFxB,IACsB,UAAbwB,GACTf,GAAY,GACZS,GAAa,IACS,SAAbM,GACTf,GAAY,GACZE,GAAY,IACU,UAAba,EACTX,GAAa,GAGbjS,QAAQC,IAAI,qBAAsB2S,EAAU,sBAEhD,IAiGQ,OAGV,C,gBC3Re,SAASC,GAAK,GAAgC,IAA9B5J,EAAK,EAALA,MAAOoD,EAAI,EAAJA,KAAMlW,EAAY,EAAZA,aAC1C,OACE,SAACmW,GAAA,EAAsB,CACrBC,WAAS,EACTtD,MAAOA,EACPoD,KAAMA,EACNzW,GAAI,CACFkX,GAAI,EACJnW,WAAY,OACZd,MAAO,OACP+O,QAAS,OACT,UAAW,CACT/O,OAAO0K,EAAAA,EAAAA,IAAM,OAAQ,IACrBqE,QAAS,SAGbtP,QAASa,GAGf,CACA0c,GAAK5c,aAAe,CAClBE,aAAc,WAAO,G,eCrBR,SAAS2c,GAAc,GAAuB,IAArBC,EAAM,EAANA,OAAQ1d,EAAQ,EAARA,SAC9C,OACE,SAAC2d,GAAA,GAAM,CACLD,OAAQA,EACRrd,QAAQ,YACRud,WAAY,CACVrd,GAAI,CACFsC,OAAQ,cACRiI,IAAK,MACLpK,gBAAiB,cACjBF,MAAO,OACPc,WAAY,OACZb,aAAyB,SAAXid,EAAoB,gBAAkB,gBACpDlP,UAAW,uBAEb,SAEDxO,GAGP,C,gBCtBe,SAAS6d,KACtB,OAAO,SAACC,GAAA,EAAO,CAACvd,GAAI,CAAEG,gBAAiB,OAAQmZ,GAAI,GAAKxZ,QAAQ,UAClE,CCQe,SAAS0d,GAAe,GAAiB,IAAfzG,EAAU,EAAVA,WACjCxW,EAAe,SAACyc,GACpB5S,QAAQC,IAAI2S,GACK,aAAbA,EACFjG,IAEA3M,QAAQC,IAAI,qBAAsB2S,EAAU,sBAEhD,EAEA,OACE,SAACE,GAAa,CAACC,OAAO,QAAO,UAC3B,UAACM,GAAA,EAAI,CAACzd,GAAI,CAAEG,iBAAiBwK,EAAAA,EAAAA,IAAM,OAAQ,KAAO,WAChD,SAACsS,GAAI,CACH5J,MAAM,OACNoD,MAAM,SAACU,GAAA,EAAQ,IACf5W,aAAc,kBAAMA,EAAa,OAAO,KAE1C,SAAC+c,GAAe,KAChB,SAACL,GAAI,CACH5J,MAAM,WACNoD,MAAM,SAACW,GAAA,EAAY,IACnB7W,aAAc,kBAAMA,EAAa,WAAW,KAE9C,SAAC+c,GAAe,KAChB,SAACL,GAAI,CACH5J,OACE,iCACE,SAACvS,EAAA,EAAU,CAACd,GAAI,CAAEa,SAAU,UAAWE,WAAY,QAAS,SAAC,WAG7D,SAACD,EAAA,EAAU,CAACd,GAAI,CAAEa,SAAU,UAAWE,WAAY,QAAS,SAAC,gBAKjE0V,MAAM,SAACY,GAAA,EAAS,IAChB9W,aAAc,kBAAMA,EAAa,QAAQ,QAKnD,CCvCe,SAASmd,GAAgB,GAMpC,IALFlC,EAAS,EAATA,UACAmC,EAAU,EAAVA,WACAC,EAAQ,EAARA,SACA7B,EAAW,EAAXA,YACAJ,EAAW,EAAXA,YAEA,GAAgDzL,EAAAA,EAAAA,WAAS,GAAM,eAAxD2N,EAAgB,KAAEC,EAAmB,KAC5C,GAA8C5N,EAAAA,EAAAA,WAAS,GAAM,eAAtD6N,EAAe,KAAEC,EAAkB,KAC1C,GAAkC9N,EAAAA,EAAAA,WAAS,GAAM,eAA1CkM,EAAS,KAAEC,EAAY,KACxB4B,EAAW,WACftC,IACAmC,GAAoB,GACpBE,GAAmB,GACnB3B,GAAa,EACf,EAiCM6B,EAAmB,WAAH,OAAS7B,GAAa,EAAO,EAQnD,OAFAjS,QAAQC,IAAI,aAAc+R,GAC1BhS,QAAQC,IAAI,+BAEV,SAAC6S,GAAa,CAACC,OAAO,OAAM,UAC1B,UAAC3F,GAAA,EAAK,CAACC,UAAU,MAAMa,QAAS,EAAGzG,WAAW,SAAQ,WACpD,UAAC4L,GAAA,EAAI,CACHzd,GAAI,CACFG,iBAAiBwK,EAAAA,EAAAA,IAAM,OAAQ,IAC/BzK,aAAc,iBACd,WAEF,SAAC+c,GAAI,CACH5J,MAAM,YACNoD,MAAM,SAACuD,GAAA,EAAqB,IAC5BzZ,aAnCc,WACtB0d,IACAzC,GACF,KAkCQ,SAAC8B,GAAe,KAChB,SAACL,GAAI,CACH5J,MAAM,SACNoD,MAAM,SAACwD,GAAA,EAAS,IAChB1Z,aA1DgB,WACpBsd,EACFC,GAAoB,IAEpBG,IACAH,GAAoB,GAExB,KAqDQ,SAACR,GAAe,KAChB,SAACL,GAAI,CACH5J,MAAM,OACNoD,MAAM,SAACyD,GAAA,EAAQ,IACf3Z,aAvDc,WAClBwd,EACFC,GAAmB,IAEnBC,IACAD,GAAmB,GAEvB,KAkDQ,SAACV,GAAe,KAChB,SAACL,GAAI,CACH5J,MAAM,QACNoD,MAAM,SAAC0D,GAAA,EAAW,IAClB5Z,aAhDe,WACvB6J,QAAQC,IAAI,aAAc+R,GACtBA,EACFC,GAAa,IAEb4B,IACA5B,GAAa,GAEjB,OA2COwB,EAAmBF,EAAa,KAChCI,EAAkBH,EAAW,MAC9B,SAAC1C,GAAkB,CACjB5I,KAAM8J,EACNjB,SA5CkB,WACxB+C,IACAnC,GACF,EA0CQX,SAAU8C,QAKpB,CC1Ge,SAASC,GAAoB,GAAmC,IAAjC1C,EAAQ,EAARA,SAAUC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAM7D,OACE,UAAC8B,GAAA,EAAI,CACHzd,GAAI,CACFG,iBAAiBwK,EAAAA,EAAAA,IAAM,OAAQ,KAC/BzK,aAAc,sBACdoC,OAAQ,eACR,WAEF,SAAC2a,GAAI,CACH5J,MAAM,MACNoD,MAAM,SAACwE,GAAA,EAAqB,IAC5B1a,aAhBY,WAChBob,IACAD,GACF,KAeI,SAAC4B,GAAe,KAChB,SAACL,GAAI,CAAC5J,MAAM,SAASoD,MAAM,SAAC5L,EAAA,EAAU,IAAKtK,aAAckb,MAG/D,CCvBe,SAAS2C,GAAY,GAUhC,IATF3P,EAAO,EAAPA,QACA8I,EAAmB,EAAnBA,oBACA4B,EAAkB,EAAlBA,mBACA2C,EAAiB,EAAjBA,kBACAF,EAAgB,EAAhBA,iBACAC,EAAgB,EAAhBA,iBACA5D,EAAkB,EAAlBA,mBACAE,EAAgB,EAAhBA,iBACAC,EAAoB,EAApBA,qBAEA,OACE,UAACZ,GAAA,EAAK,CACJC,UAAU,SACVa,QAAS,EACTtY,GAAI,CACF+R,EAAG,EACH5R,iBAAiBwK,EAAAA,EAAAA,IAAM,OAAQ,KAC/BzK,aAAc,uBACd,WAEF,SAACoX,GAAc,CACblX,QAASqO,EAAQrO,QACjBmX,oBAAqBA,KAEvB,SAACS,GAAa,CACZ3M,OAAQoD,EAAQvO,aAChB+X,mBAAoBA,KAEtB,SAACiB,GAAY,CACXjZ,MAAOwO,EAAQxO,MACfkZ,mBAAoBA,EACpB5Y,aAAcub,EACdzC,YAAauC,EACbxC,YAAayC,KAEf,SAAC3D,GAAW,CACVlR,KAAMyH,EAAQzH,KACd6H,QAASJ,EAAQI,QACjBsJ,iBAAkBA,EAClBC,qBAAsBA,MAI9B,CC+UA,OA7WA,WACE,IAOM1G,GAAY2M,EAAAA,EAAAA,UACZvH,GAAauH,EAAAA,EAAAA,UACbC,GAAYD,EAAAA,EAAAA,UAEZE,GAAcF,EAAAA,EAAAA,UAEpB,GAAwCnO,EAAAA,EAAAA,UAAS,GAAE,eAA5CsO,EAAW,KAAEC,EAAgB,KACpC,GAA8CvO,EAAAA,EAAAA,UAAS,GAAE,eAAlDwO,EAAe,KAAEC,EAAkB,KAC1C,EAAkC/N,EAAc,WAAY,GAAE,eAAvDtP,EAAQ,KAAEsd,EAAa,KAC9B,GAA4B1O,EAAAA,EAAAA,UAAS,GAAE,eAAhC2O,EAAM,KAAEC,EAAS,KACxB,EAA2ChP,EACzC,SACA,IACA,WAAO,IACR,eAJM1O,EAAM,KAAE2d,EAAS,KAAEC,EAAa,KAKvC,EACElP,EAAkB,iBAAkB,IAAG,eADlCzO,EAAc,KAAE4d,EAAiB,KAAEC,EAAqB,KAG/D,GAAwChP,EAAAA,EAAAA,UAAS,CAC/CuE,WAAY,EACZC,YAAa,IACb,eAHKT,EAAY,KAAEkL,EAAe,KAIpC,GAAgCjP,EAAAA,EAAAA,WAAS,GAAM,eAAxC/C,GAAQ,KAAEiS,GAAW,KAC5B,IAA4BlP,EAAAA,EAAAA,UAAS,GAAE,iBAAhC5N,GAAM,MAAE+c,GAAS,MACxB,IAAsCnP,EAAAA,EAAAA,UAAS,GAAE,iBAA1CgB,GAAW,MAAEoO,GAAc,MAClC,IAAoCpP,EAAAA,EAAAA,UAAS,GAAE,iBAAxCe,GAAU,MAAEsO,GAAa,MAChC,IAA8BrP,EAAAA,EAAAA,WAAS,GAAM,iBAAtCsP,GAAO,MAAEC,GAAU,MAC1B,IAAsCvP,EAAAA,EAAAA,WAAS,GAAM,iBAA9C4D,GAAW,MAAE4L,GAAc,MAClC,IAA0BxP,EAAAA,EAAAA,UAAS,GAAE,iBAA9B7N,GAAK,MAAEsd,GAAQ,MACtB,IAAkCzP,EAAAA,EAAAA,UAAS,GAAE,iBAAtC8F,GAAS,MAAE4J,GAAY,MAC9B,IAAgC1P,EAAAA,EAAAA,UAAS,GAAE,iBAApCvL,GAAQ,MAAEkb,GAAW,MAC5B,IAAwB3P,EAAAA,EAAAA,WAAS,GAAM,iBAAhCoC,GAAI,MAAEwN,GAAO,MACpB,IAAoD5P,EAAAA,EAAAA,WAAS,GAAM,iBAA5DiJ,GAAkB,MAAE4G,GAAqB,MAEhD,IAA8B7P,EAAAA,EAAAA,UAAS,CACrC9P,QAAS,EACTF,aAAc,EACdD,MAAO,CACLgI,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,GAELpB,KAAM,GACN6H,SAAS,IACT,iBAXKJ,GAAO,MAAEuR,GAAU,MAa1B,IAAoC9P,EAAAA,EAAAA,UAAS,GAAE,iBAAxCnB,GAAU,MAAEkR,GAAa,MAChC,GC1Ea,SACbjQ,GAEC,IADDC,EAAe,uDAAG,WAAO,EAEnBF,EAAY,cAClB,GAA0BG,EAAAA,EAAAA,UAASF,GAAa,eAAzChI,EAAK,KAAEmI,EAAQ,KAA2B,SAElCK,IAAa,4CAU3B,OAV2B,0BAA5B,2GACqBH,EAAGrP,UAAU+O,GAAWO,UAAU,KAAD,GAA9CC,EAAI,QACD3M,OAAS,KACVsc,EAAU,IAAI5R,EAAW,CAAC,IACxBxF,WAAW,CAAE0F,KAAM+B,EAAK,GAAG/B,OAC/B,YAAa+B,EAAK,GAAG/B,MACvByB,GAAgB,SAACkQ,GAAI,yBAAWA,GAAS5P,EAAK,GAAG/B,KAAKC,QAAO,IAE/D0B,EAAS+P,IACV,4CACF,uBAED9P,EAAAA,EAAAA,YAAU,WACRI,GACF,GAAG,IAEH,IAAMC,EAAO,yCAAG,WAAOC,GAAI,4EACiB,OAApC0P,EAAc1P,EAAKpH,kBAAkB,EAAD,OACpC+G,EAAGrP,UAAU+O,GAAWY,IAAIyP,GAAa,KAAD,sCAC/C,gBAHY,sCAKb,MAAO,CAACpY,EAAOmI,EAAUM,EAC3B,CD6CuC4P,CAAe,CAAC,EAAGL,IAAW,iBAA5DnM,GAAI,MAAEyM,GAAO,MAAEC,GAAW,MAE3BxE,GAAc,WAClB1L,EAAGrP,UAAUO,YAAYuP,QACzBwP,GAAQ,CAAC,GACTjQ,EAAGrP,UAAUI,OAAO0P,QACpBiO,EAAU,IACV1O,EAAGrP,UAAUK,eAAeyP,QAC5BiO,EAAU,IACV1O,EAAGrP,UAAUM,SAASwP,QACtB8N,EAAc,GACdoB,GAAW,CACT5f,QAAS,EACTF,aAAc,EACdD,MAAO,CACLgI,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,GAELpB,KAAM,GACN6H,SAAS,GAEb,EAEM2R,GAAgB,WACpB,IAKMC,GALe/O,EAAUgP,QAAUhP,EAAUgP,QAAQC,aAAe,IACpD7J,EAAW4J,QAC7B5J,EAAW4J,QAAQC,aACnB,IACiBrC,EAAUoC,QAAUpC,EAAUoC,QAAQC,aAAe,GAE1Ed,GAAYe,OAAOC,YACnBjB,GAAagB,OAAOE,YAAcL,GAClC,MAAe/T,EAAQrE,oBACrBuY,OAAOC,WACPD,OAAOE,YAAcL,EAAc,EAjFnB,IAmFjB,eAJMM,EAAC,KAAEC,EAAC,KAKX5W,QAAQC,IAAI,eAAgBoW,GAC5Bd,GAASoB,GACT1B,GAAU2B,EACZ,GAEA5Q,EAAAA,EAAAA,YAAU,WACRhG,QAAQC,IAAI,sBACZmW,IACF,GAAG,CACDI,OAAOE,YACPF,OAAOC,WACPnP,EAAUgP,QACV5J,EAAW4J,QACXpC,EAAUoC,WAGZtQ,EAAAA,EAAAA,YAAU,WACR,GAAKoO,EAAc,GAAKA,IAAgBE,GAAoBc,GAAS,CACnEf,EAAiB,GACjBE,EAAmB,GACnB,MAAgCsC,EAAUlQ,mBACxC3P,EAnHY,GAqHZiB,GACAC,GAASyM,IAJFmS,GAKR,YAL2B,GAM5BA,EAAoB3M,WAAW9F,IAC/B6R,GAAQY,GACR7Q,EAAGrP,UAAUO,YAAYuP,QACzByP,GAAYW,GACZzB,IAAW,EACb,CACF,GAAG,CAACjB,EAAaE,EAAiBc,KAElC,IA6BM1a,GAAkB,SAACiB,EAAaD,GACpCmZ,GAAkB,SAACxd,GAAG,OAAKA,EAAIuH,OAAO,CAAClD,GAAqB,IAC5DiZ,GAAU,SAACtd,GAAG,OAAKA,EAAIuH,OAAO,CAACjD,GAAa,IAC5CiZ,EAAcjZ,GACdmZ,EAAsBpZ,GACtB6Y,GAAmB,SAAC3Z,GAAG,OAAKA,EAAM,CAAC,GACrC,EAEMiR,GAAa,SAACvR,GAClBgI,EAAQjI,gBACNC,EAtKqB,KAwKrBka,EACAH,EACA3Z,GAEJ,EAEMqc,GAAsB,WACtB5C,EAAYmC,SAASnC,EAAYmC,QAAQpL,OAC/C,EAEMiC,GAAsB,SAAClS,GAAC,OAC5B2a,IAAW,SAACG,GAAI,yBAAWA,GAAI,IAAE/f,QAASiF,EAAEzD,OAAOoG,OAAK,GAAK,EACzDiQ,GAAqB,SAAC5S,GAC1B2a,IAAW,SAACG,GAAI,yBAAWA,GAAI,IAAEjgB,aAAcmF,EAAEzD,OAAOoG,OAAK,GAC/D,EAEM6T,GAAmB,WAAH,OAASkE,IAAsB,SAACqB,GAAG,OAAMA,CAAG,GAAE,EAC9DxF,GAAmB,WAAH,OAASmE,IAAsB,EAAO,EACtDjE,GAAoB,SAACuF,GAAG,OAC5BrB,IAAW,SAACG,GAAI,yBAAWA,GAAI,IAAElgB,MAAOohB,EAAIC,KAAG,GAAK,EAChDlJ,GAAuB,SAACpQ,GAAK,OACjCgY,IAAW,SAACG,GAAI,yBAAWA,GAAI,IAAEtR,QAAS7G,GAAK,GAAK,EAEhDmQ,GAAmB,SAAC9S,GACxB,IAAQzD,EAAWyD,EAAXzD,OACRoe,IAAW,SAACG,GAAI,yBAAWA,GAAI,IAAEnZ,KAAMpF,EAAOoG,OAAK,GACrD,EAEMuZ,GAAiB,WAAH,OAASzB,IAAQ,EAAM,GAa3C1P,EAAAA,EAAAA,YAAU,WAIR,OAHAoQ,KACAI,OAAOY,iBAAiB,SAAUhB,IAE3B,kBAAMI,OAAOa,oBAAoB,SAAUjB,GAAe,CACnE,GAAG,IAEH,IAAMhF,GAAY,WAAH,OAASiE,IAAW,EAAM,EACnChE,GAAW,WAAH,OAASiE,IAAe,SAACgC,GAAE,OAAMA,CAAE,GAAE,EAC7C/F,GAAc,WAAH,OAAS+D,IAAe,EAAO,GAEhDtP,EAAAA,EAAAA,YAAU,WACR,GAAI3B,GAAQzH,KAAKpD,OAAS,GAAK0P,OAAOC,KAAKM,IAAMjQ,OAAS,EAAG,CAC3D,IAAM+d,EAAKjV,EAAQ3F,SAAS0H,GAAQzH,KAAM,EAAG,EAAG3E,GAAO,GAAI,IAC3D4d,GAA0B,GAAZ0B,EAAG/d,QACjB,MAAe8I,EAAQrE,oBACrBhG,GACAC,GAAqB,GAAZqf,EAAG/d,OACZiQ,GAAKrF,KAAKxG,MAAMpC,aACjB,eAJMmb,EAAC,KAAEC,EAAC,KAKXzB,GAAcwB,GACdzB,GAAe0B,EACjB,MACEf,GAAc,GACd7H,IAAqB,GACrBmH,GAAcld,IACdid,GAAehd,GAEnB,GAAG,CAACD,GAAOC,GAAQuR,GAAMpF,GAAQzH,OAEjC,IAAMqP,IACJ,SAAChE,EAAc,CACbC,KAAMA,GACN5S,QA5CoB,SAACqhB,EAAGC,GAC1B7B,EAAgB,CAAE1K,WAAYsM,EAAGrM,YAAasM,IAC9C5B,IAAY,GACZU,IAAQ,EACV,EAyCIvN,QA9CoB,WAAH,OAASuN,IAAQ,EAAO,EA+CzCtN,MAnPe,CACjBoP,GAAI,CAAEvf,MAAO,KAAMC,OAAQ,KAAM0E,KAAM,iBACvC6a,GAAI,CAAExf,MAAO,KAAMC,OAAQ,KAAM0E,KAAM,qBAqPnCkN,IACJ,SAACN,EAAO,CACNhO,YAjPgB,GAkPhBiO,KAAMA,GACNzS,OAAQA,EACRC,eAAgB8L,GAAW9L,EAAiB,GAC5C6P,YAAaA,GACbD,WAAYA,GACZrC,aAActM,GACdqM,YAAatM,GACbyR,YAAaA,GACbnK,kBAAmBmK,GA7HG,SAACgO,GACzB,IAAMC,EAAc3gB,EAAOwF,WAAU,SAACC,GAAI,OAAKA,EAAKpB,QAAUqc,CAAQ,IAChEE,EAAY,kBACb5gB,EAAO0F,MAAM,EAAGib,KAAY,OAC5B3gB,EAAO0F,MAAMib,EAAc,KAEhChD,EAAUiD,GACVpD,GAAc,SAAC5Z,GAAG,OAAKA,EAAM,CAAC,IAC9B,MAAgCic,EAAUlQ,mBACxCiR,EAhJc,GAkJd/Q,GACAC,IAJOgQ,GAKR,YAL2B,GAM5BA,EAAoB3M,WAAW9F,IAC/B6R,GAAQY,GACR7Q,EAAGrP,UAAUO,YAAYuP,QACzByP,GAAYW,GACZ7Q,EAAGrP,UAAUI,OAAbiP,OAA2ByR,GAC3BzR,EAAGrP,UAAUK,eAAbgP,OAAmCyR,EACrC,EAyGyD,WAAO,EAC5DrT,QAASA,GACTwF,aAAcA,EACdF,gBAvIoB,SAACkO,GACvB7X,QAAQC,IAAI,uBACZgG,EAAGrP,UAAUO,YAAYuP,QACzByP,GAAY0B,GACZ7X,QAAQC,IAAI,iBACd,EAmII8C,SAAUA,GACV6G,iBA5D2B,WAC7BoL,IAAY,GACZD,EAAgB,CAAE1K,WAAY,EAAGC,YAAa,GAChD,EA0DI5K,uBAAwB,kBAAMgV,GAAU,SAAC9Z,GAAG,OAAKA,EAAM,CAAC,GAAC,IAIvDkd,IACJ,SAAC5G,GAAc,CACb7M,QAASA,GACT8I,oBAAqBA,GACrBU,mBAAoBA,GACpB4D,iBAAkBA,GAClBD,iBAAkBA,GAClBE,kBAAmBA,GACnB3D,iBAAkBA,GAClBC,qBAAsBA,GACtBe,mBAAoBA,GACpBoC,YAAa+C,EACb9C,UAAWA,GACXC,SAAUA,GACVC,MAAOyF,GACPxF,YAAaA,GACbI,YAAaA,KAIX5F,IAAS,SAAC1E,EAAM,CAACC,UAAWA,IAC5ByQ,IACJ,SAAChE,GAAmB,CAClB1C,SAAUA,GACVC,MAAOyF,GACPxF,YAAaA,KAGXyG,IACJ,SAAChE,GAAW,CACV3P,QAASA,GACT8I,oBAAqBA,GACrBU,mBAAoBA,GACpB4D,iBAAkBA,GAClBD,iBAAkBA,GAClBE,kBAAmBA,GACnB3C,mBAAoBA,GACpBhB,iBAAkBA,GAClBC,qBAAsBA,KAGpBiK,IACJ,SAAC3E,GAAe,CACdlC,UAAWA,GACXmC,WAAYwE,GACZvE,SAAUwE,GACVrG,YAAaA,GACbJ,YAAaA,KAGXzF,GAA2C,IAA7B5C,OAAOC,KAAKM,IAAMjQ,OAChC0e,GAAW1B,OAAOC,WAAaD,OAAOE,YACtCxK,GAAWgM,GAAWJ,GAAiBG,GAEvCjM,GAAUkM,IACd,SAACzL,GAAa,CAACC,WAAYA,EAAYC,WAAYwK,MAEnD,SAAC/D,GAAc,CAACzG,WAAYwK,KAI9B,OADAnX,QAAQC,IAAI,SAAUwU,EAAQzd,EAAOwC,SAEnC,iCACE,SAACkS,EAAI,CACHxD,KAAMA,GACNjQ,MAAOA,GACPC,OAAQA,GACRqC,SAAUA,GACVqR,UAAWA,GACX9E,YAAaA,GACb9P,OAAQA,EACRE,SAAUA,EACV2U,WAAYA,GACZC,YAAaA,GACbC,OAAQA,GACRC,QAASA,GACTC,eAAgBA,GAChBnC,QAASA,GACToC,SAAUA,GACVP,QAAS8I,EAASzd,EAAOwC,UAE3B,kBACEgO,IAAK2M,EACL/d,KAAK,OACLC,QAAM,EACNC,UAAQ,EACRC,OAAO,UACPC,SAAUqV,KAEX9I,IAAW,SAACoJ,EAAA,EAAO,CAAC9Q,MAAM,yBAA4B,OAG7D,C","sources":["components/OptionsButton.jsx","components/AddPhotos.jsx","db.js","components/collage/helpers.js","components/collage/node.jsx","components/collage/binaryTree.jsx","hooks/indexedDBState.jsx","hooks/imageCount.jsx","components/collage/treeUtils.js","components/collage/Header.jsx","components/collage/DownloadDialog.jsx","components/collage/Collage.jsx","components/collage/EmptyCollage.jsx","components/collage/View.jsx","components/collage/MobileActionItem.jsx","components/collage/MobileActions.jsx","components/collage/PaddingControl.jsx","components/collage/RadiusControl.jsx","components/collage/TextControl.jsx","components/collage/ColorControl.jsx","components/collage/MainControls.jsx","components/collage/EditOptions.jsx","components/collage/ImageOptions.jsx","components/collage/ClearCollageDialog.jsx","components/collage/MobileControls.jsx","components/collage/DesktopActionItem.jsx","components/collage/DesktopDrawer.jsx","components/collage/ControlsDivider.jsx","components/collage/DesktopActions.jsx","components/collage/DesktopControls.jsx","components/collage/DesktopImageOptions.jsx","components/collage/EditControl.jsx","pages/collage/CollageMaker.jsx","hooks/collageTree.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\n\nexport default function OptionsButton({ children, onClick, name }) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: 'muted.main',\n        borderRadius: 15,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: 'muted.main',\n          backgroundColor: 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  //  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport OptionsButton from 'components/OptionsButton';\nimport Typography from '@mui/material/Typography';\n\nexport default function AddPhotos({ handleChange }) {\n  return (\n    <OptionsButton name=\"add\">\n      <input\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={handleChange}\n      />\n      <AddPhotoIcon sx={{ fontSize: '2rem' }} />\n      <Typography sx={{ fontWeight: 'bold' }}>Add Images</Typography>\n    </OptionsButton>\n  );\n}\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import Dexie from 'dexie';\n\nconst collageDB = new Dexie('collage');\n\ncollageDB.version(1).stores({\n  images: 'title, url,naturalWidth,naturalHeight,aspectRatio', // Primary key and indexed props\n  originalImages: 'title, url,naturalWidth,naturalHeight,aspectRatio', // Primary key and indexed props\n  imgCount: '++id, count',\n  collageTree: '++id, collageTree',\n});\n\nexport default { collageDB };\n","function getClosest(arr, index1, index2, target) {\n  if (target - arr[index1] >= arr[index2] - target) return index2;\n  return index1;\n}\n\nfunction findClosest(arr, target) {\n  const n = arr.length;\n\n  if (target <= arr[0]) return 0;\n  if (target >= arr[n - 1]) return n - 1;\n\n  let start = 0;\n  let end = n;\n  let mid = 0;\n  while (start < end) {\n    mid = (start + end) / 2;\n\n    if (arr[mid] === target) return mid;\n\n    if (target < arr[mid]) {\n      if (mid > 0 && target > arr[mid - 1])\n        return getClosest(arr, mid - 1, mid, target);\n      end = mid;\n    } else {\n      if (mid < n - 1 && target < arr[mid + 1])\n        return getClosest(arr, mid, mid + 1, target);\n      start = mid + 1;\n    }\n  }\n\n  return mid;\n}\n\nfunction getCut() {\n  const cutArr = ['v', 'h'];\n  return cutArr[Math.round(Math.random())];\n}\n\nfunction findImgPair(arr, target) {\n  let start = 0;\n  let end = arr.length - 1;\n  let i = start;\n  let j = end;\n  let minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n  while (start <= end) {\n    if (arr[start] + arr[end] > target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        // update fetched pair and matching cost\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      end -= 1;\n    } else if (arr[start] + arr[end] <= target) {\n      if (Math.abs(arr[start] + arr[end] - target) < minMatchingCost) {\n        minMatchingCost = Math.abs(arr[start] + arr[end] - target);\n        i = start;\n        j = end;\n      }\n      start += 1;\n    } else {\n      // best pair (m === 0) found\n      i = start;\n      j = end;\n      break;\n    }\n  }\n  const randomNumber = Math.round(Math.random());\n  if (randomNumber) return [i, j];\n  return [j, i];\n}\n\nfunction getAspectRatio(cut, ar1, ar2) {\n  if (cut === 'v') return ar1 + ar2;\n  return (ar1 * ar2) / (ar1 + ar2);\n}\n\nfunction downscaleImage(image, newWidth, newHeight, fileType) {\n  const canvas = document.createElement('canvas');\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, newWidth, newHeight);\n  return canvas.toDataURL(fileType);\n}\n\nfunction resizeImages(originalImages, maxWidth, handleImages, addImagesToDB) {\n  const tempImages = [];\n  originalImages.forEach((origImage) => {\n    const image = new Image();\n    image.onload = () => {\n      const { title, aspectRatio, type } = origImage;\n      const dataurl = downscaleImage(\n        image,\n        maxWidth,\n        maxWidth / aspectRatio,\n        origImage.type\n      );\n      const tempImage = {\n        title,\n        src: dataurl,\n        naturalHeight: maxWidth / aspectRatio,\n        naturalWidth: maxWidth,\n        aspectRatio,\n        type,\n      };\n      tempImages.push(tempImage);\n      handleImages((imgs) => {\n        const ind = imgs.findIndex((elem) => elem.title === origImage.title);\n        return [...imgs.slice(0, ind), tempImage, ...imgs.slice(ind + 1)];\n      });\n      addImagesToDB(tempImage);\n    };\n    image.src = origImage.src;\n  });\n}\n\nfunction convertBase64(file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\n\nfunction handleImageLoad(\n  event,\n  maxWidth,\n  handleImageCount,\n  handleNewImageCount,\n  handleImageData\n) {\n  if (event.target.files) {\n    handleImageCount((cnt) => cnt + event.target.files.length);\n    handleNewImageCount(event.target.files.length);\n    const files = Array.from(event.target.files);\n    files.map(async (file) => {\n      const image = new Image();\n      image.onload = (e) => {\n        const { naturalWidth, naturalHeight, src } = e.target;\n        const title = `${Date.now()}-${file.name}`;\n        const aspectRatio = naturalWidth / naturalHeight;\n\n        const dataurl = downscaleImage(\n          image,\n          maxWidth,\n          maxWidth / aspectRatio,\n          file.type\n        );\n        const originalImageDetail = {\n          title,\n          src,\n          naturalHeight,\n          naturalWidth,\n          aspectRatio,\n          type: file.type,\n        };\n        const imageDetail = {\n          title,\n          src: dataurl,\n          naturalHeight: maxWidth / aspectRatio,\n          naturalWidth: maxWidth,\n          aspectRatio,\n          type: file.type,\n        };\n        handleImageData(imageDetail, originalImageDetail);\n      };\n      image.src = await convertBase64(file);\n    });\n    files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n  }\n}\n\nfunction wrapText(text, x, y, maxWidth, fontSize, lineHeight) {\n  // First, start by splitting all of our text into words,\n  // but splitting it into an array split by spaces\n  const textCanvas = document.createElement('canvas');\n  textCanvas.width = maxWidth;\n  textCanvas.height = 1000;\n  const ctx = textCanvas.getContext('2d');\n  ctx.font = `${fontSize}px Arial`;\n  const tempX = x;\n  let tempY = y;\n  const words = text.split(' ');\n  let line = ''; // This will store the text of the current line\n  let testLine = ''; // This will store the text when we add a word, to test if it's too long\n  const lineArray = []; // This is an array of lines, which the function will return\n\n  // Lets iterate over each word\n  for (let n = 0; n < words.length; n += 1) {\n    // Create a test line, and measure it..\n    testLine += `${words[n]} `;\n    const metrics = ctx.measureText(testLine);\n    const testWidth = metrics.width;\n    // If the width of this test line is more than the max width\n    if (testWidth > maxWidth && n > 0) {\n      // Then the line is finished, push the current line into \"lineArray\"\n      lineArray.push([line, tempX, tempY]);\n      // Increase the line height, so a new line is started\n      tempY += lineHeight;\n      // Update line and test line to use this word as the first word on the next line\n      line = `${words[n]} `;\n      testLine = `${words[n]} `;\n    } else {\n      // If the test line is still less than the max width, then add the word to the current line\n      line += `${words[n]} `;\n    }\n    // If we never reach the full max width, then there is only one line..\n    // so push it into the lineArray so we return something\n    if (n === words.length - 1) {\n      lineArray.push([line, tempX, tempY]);\n    }\n  }\n  // Return the line array\n  return lineArray;\n}\n\nconst convertToRGBA = (value) =>\n  `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nconst getCollageDimension = (maxW, maxH, a) => {\n  const origAR = maxW / maxH;\n  if (origAR < a) return [maxW, maxW / a];\n  if (origAR > a) return [maxH * a, maxH];\n  return [maxW, maxH];\n};\n\nexport default {\n  getCut,\n  findClosest,\n  findImgPair,\n  getAspectRatio,\n  handleImageLoad,\n  resizeImages,\n  wrapText,\n  convertToRGBA,\n  getCollageDimension,\n};\n","import Box from '@mui/material/Box';\n//  import Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Tooltip from '@mui/material/Tooltip';\nimport { alpha } from '@mui/material/styles';\nimport helpers from 'components/collage/helpers';\n\nexport default class Node {\n  constructor(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n  }\n\n  fromObject(obj) {\n    if (obj != null) {\n      this.value = obj.value;\n      if (obj.left != null) {\n        this.left = new Node(obj.left.value);\n        this.left.fromObject(obj.left);\n      }\n      if (obj.right != null) {\n        this.right = new Node(obj.right.value);\n        this.right.fromObject(obj.right);\n      }\n      return this;\n    }\n    return null;\n  }\n\n  display() {\n    let output = [];\n    const { cut, title, aspectRatio } = this.value;\n    if (this === null) return null;\n    if ('cut' in this.value) output.push([cut, aspectRatio]);\n    if ('title' in this.value) output.push([title, aspectRatio]);\n    if (this.left !== null) output = output.concat(this.left.display());\n    if (this.right !== null) output = output.concat(this.right.display());\n    return output;\n  }\n\n  copy() {\n    if (this === null) return null;\n    const copyNode = new Node({ ...this.value });\n    if (this.left != null) copyNode.left = this.left.copy();\n    if (this.right != null) copyNode.right = this.right.copy();\n    return copyNode;\n  }\n\n  replaceImages(newImages) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const findIndex = newImages.findIndex(\n          (elem) => elem.title === this.value.title\n        );\n        const origImage = newImages[findIndex];\n        this.value.src = origImage.src;\n        this.value.naturalWidth = origImage.naturalWidth;\n        this.value.naturalHeight = origImage.naturalHeight;\n      }\n      if (this.left != null) this.left.replaceImages(newImages);\n      if (this.right != null) this.right.replaceImages(newImages);\n    }\n  }\n\n  removeImageData() {\n    if (this !== null) {\n      if ('title' in this.value) {\n        this.value.src = '';\n      }\n      if (this.left != null) this.left.removeImageData();\n      if (this.right != null) this.right.removeImageData();\n    }\n  }\n\n  addImageData(imageData) {\n    if (this !== null) {\n      if ('title' in this.value) {\n        const image = imageData.find((elem) => elem.title === this.value.title);\n        this.value.src = image.src;\n      }\n      if (this.left != null) this.left.addImageData(imageData);\n      if (this.right != null) this.right.addImageData(imageData);\n    }\n  }\n\n  RenderImage(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    const { width, title, src, x, y } = this.value;\n\n    const newX = x + xOffset;\n    const newY = y + yOffset;\n\n    return (\n      <>\n        <Box\n          key={title}\n          component=\"img\"\n          title={title}\n          alt={title}\n          width={width}\n          onLoad={() => {\n            handleCollageImageLoad();\n            console.log('loaded', title);\n          }}\n          src={src}\n          sx={{\n            position: 'absolute',\n            padding: `${padding}px`,\n            borderRadius: `${borderRadius}px`,\n            left: this.value.x + xOffset,\n            top: this.value.y + yOffset,\n          }}\n        />\n        {/*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    top: newY,\n         *    left: newX,\n         *    backgroundColor: 'white',\n         *    fontSize: '15px',\n         *  }}\n         *>\n         *  {newX.toFixed(2)}\n         *  ,\n         *  {newY.toFixed(2)}\n         *</Typography>\n         */\n        /*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    top: this.value.y + yOffset + padding,\n         *    left: this.value.x + xOffset + padding,\n         *    backgroundColor: 'white',\n         *  }}\n         *>\n         *  {width.toFixed(2)}\n         *  ,\n         *  {height.toFixed(2)}\n         *</Typography>\n         */\n        /*\n         *<Typography\n         *  sx={{\n         *    position: 'absolute',\n         *    bottom: 38,\n         *    right: 10,\n         *    backgroundColor: 'white',\n         *    fontSize: '0.5rem',\n         *    fontWeight: 700,\n         *  }}\n         *>\n         *  {title}\n         *</Typography>\n         */}\n\n        {delImg === true ? (\n          <Tooltip title=\"Remove Image\">\n            <IconButton\n              size=\"medium\"\n              sx={{\n                color: alpha('#000', 0.7),\n                bgcolor: alpha('#fff', 0.5),\n                position: 'absolute',\n                top: newY + padding,\n                left: newX + padding,\n                padding: `${padding}px`,\n                borderRadius: '0 0 5px 0',\n              }}\n              onClick={() => handleRemoveImage(title)}\n            >\n              <DeleteIcon size=\"medium\" />\n            </IconButton>\n          </Tooltip>\n        ) : null}\n      </>\n    );\n  }\n\n  DOMDisplay(\n    padding,\n    borderRadius,\n    delImg,\n    handleRemoveImage,\n    yOffset,\n    xOffset,\n    handleCollageImageLoad\n  ) {\n    console.log(\n      'node dom display',\n      padding,\n      borderRadius,\n      delImg,\n      handleRemoveImage,\n      yOffset,\n      xOffset,\n      this.value.title\n    );\n    const { cut } = this.value;\n    if (this === null) return null;\n    if (cut) {\n      console.log(this.right, this.left);\n      return (\n        <>\n          {this.left != null\n            ? this.left.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n          {this.right != null\n            ? this.right.DOMDisplay(\n                padding,\n                borderRadius,\n                delImg,\n                handleRemoveImage,\n                yOffset,\n                xOffset,\n                handleCollageImageLoad\n              )\n            : null}\n        </>\n      );\n    }\n    if ('title' in this.value)\n      return this.RenderImage(\n        padding,\n        borderRadius,\n        delImg,\n        handleRemoveImage,\n        yOffset,\n        xOffset,\n        handleCollageImageLoad\n      );\n    return null;\n  }\n\n  ResizeImage(image) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = this.value.naturalWidth;\n    tempCanvas.height = this.value.naturalHeight;\n    const tempCtx = tempCanvas.getContext('2d');\n    let width = this.value.naturalWidth;\n    let height = this.value.naturalHeight;\n    let newWidth;\n    let newHeight;\n    const scaleFactor = Math.floor(\n      Math.log2(this.value.naturalWidth / this.value.width)\n    );\n    if (scaleFactor === 0) {\n      tempCtx.drawImage(\n        image,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    } else {\n      for (let i = 0; i < scaleFactor; i += 1) {\n        newWidth = width >> 1; // eslint-disable-line no-bitwise\n        newHeight = newWidth / this.value.aspectRatio; // eslint-disable-line no-bitwise\n        if (i === 0) {\n          tempCtx.drawImage(\n            image,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        } else {\n          tempCtx.drawImage(\n            tempCanvas,\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            newWidth,\n            newHeight\n          );\n        }\n        width = newWidth;\n        height = newHeight;\n      }\n\n      tempCtx.drawImage(\n        tempCanvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        0,\n        this.value.width,\n        this.value.height\n      );\n    }\n    return tempCanvas;\n  }\n\n  ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset) {\n    const x = this.value.x + padding + xOffset;\n    const y = this.value.y + padding + yOffset;\n    const clipwidth = this.value.width - 2 * padding;\n    const clipheight = clipwidth / this.value.aspectRatio;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + clipwidth - radius, y);\n    ctx.quadraticCurveTo(x + clipwidth, y, x + clipwidth, y + radius);\n    ctx.lineTo(x + clipwidth, y + clipheight - radius);\n    ctx.quadraticCurveTo(\n      x + clipwidth,\n      y + clipheight,\n      x + clipwidth - radius,\n      y + clipheight\n    );\n    ctx.lineTo(x + radius, y + clipheight);\n    ctx.quadraticCurveTo(x, y + clipheight, x, y + clipheight - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.clip();\n\n    ctx.drawImage(\n      tempCanvas,\n      0,\n      0,\n      this.value.width,\n      this.value.height,\n      x,\n      y,\n      clipwidth,\n      clipheight\n    );\n    ctx.restore();\n  }\n\n  CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset) {\n    if ('cut' in this.value) {\n      this.left.CanvasDisplay(canvasElement, padding, radius, yOffset, xOffset);\n      this.right.CanvasDisplay(\n        canvasElement,\n        padding,\n        radius,\n        yOffset,\n        xOffset\n      );\n    }\n\n    if ('title' in this.value) {\n      const ctx = canvasElement.getContext('2d');\n      const newImg = new Image();\n      newImg.onload = () => {\n        const tempCanvas = this.ResizeImage(newImg);\n        const tempCtx = tempCanvas.getContext('2d');\n        this.ImageStyling(ctx, tempCanvas, padding, radius, yOffset, xOffset);\n        tempCtx.clearRect(0, 0, tempCanvas.width, tempCanvas.height);\n      };\n      newImg.src = this.value.src;\n    }\n  }\n\n  generate(images, tar, imageCount) {\n    const targetAspectRatioArr = images.map(\n      (image) => image.naturalWidth / image.naturalHeight\n    );\n    if (imageCount < 1) return [];\n    if (imageCount === 1) {\n      const closestIndex = helpers.findClosest(targetAspectRatioArr, tar);\n      this.value = images[closestIndex];\n      this.left = null;\n      this.right = null;\n      return [\n        ...images.slice(0, closestIndex),\n        ...images.slice(closestIndex + 1),\n      ];\n    }\n\n    const cut = helpers.getCut();\n    this.value = { cut, targetAspectRatio: tar };\n    if (imageCount === 2) {\n      const [leftIndex, rightIndex] = helpers.findImgPair(\n        targetAspectRatioArr,\n        tar\n      );\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        images[leftIndex].aspectRatio,\n        images[rightIndex].aspectRatio\n      );\n      this.left = new Node(images[leftIndex]);\n      this.right = new Node(images[rightIndex]);\n      return images.filter(\n        (item, index) => ![leftIndex, rightIndex].includes(index)\n      );\n    }\n\n    let restImages;\n    let targetAspectRatio;\n    this.left = new Node({ cut: helpers.getCut() });\n    //  this.right = new Node({ cut: helpers.getCut() });\n    this.right = new Node({ cut: this.left.value.cut === 'v' ? 'h' : 'v' });\n\n    if (cut === 'v') {\n      targetAspectRatio = tar * 2;\n    } else {\n      targetAspectRatio = tar / 2;\n    }\n    restImages = this.left.generate(\n      images,\n      targetAspectRatio,\n      imageCount - Math.floor(imageCount / 2)\n    );\n    restImages = this.right.generate(\n      restImages,\n      targetAspectRatio,\n      Math.floor(imageCount / 2)\n    );\n\n    this.value.aspectRatio = helpers.getAspectRatio(\n      this.value.cut,\n      this.left.value.aspectRatio,\n      this.right.value.aspectRatio\n    );\n\n    return restImages;\n  }\n\n  adjust(th) {\n    let adjustments = 0;\n    if (this === null) return adjustments;\n\n    if (this.left !== null && this.right !== null) {\n      if (this.value.aspectRatio > this.value.targetAspectRatio * th) {\n        this.value.cut = 'h';\n        adjustments += 1;\n      }\n      if (this.value.aspectRatio < this.value.targetAspectRatio / th) {\n        this.value.cut = 'v';\n        adjustments += 1;\n      }\n\n      if (this.value.cut === 'v') {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio / 2;\n      } else {\n        this.left.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n        this.right.value.targetAspectRatio = this.value.targetAspectRatio * 2;\n      }\n      adjustments += this.left.adjust(th) + this.right.adjust(th);\n      this.value.aspectRatio = helpers.getAspectRatio(\n        this.value.cut,\n        this.left.value.aspectRatio,\n        this.right.value.aspectRatio\n      );\n    }\n\n    return adjustments;\n  }\n\n  addSize(parentWidth, parentHeight, parentX, parentY, parentCut, nodeType) {\n    if (parentCut === 'v') {\n      this.value.height = parentHeight;\n      this.value.width = this.value.height * this.value.aspectRatio;\n    } else {\n      this.value.width = parentWidth;\n      this.value.height = this.value.width / this.value.aspectRatio;\n    }\n\n    if (nodeType === 'left') {\n      this.value.x = parentX;\n      this.value.y = parentY;\n    } else if (parentCut === 'h') {\n      this.value.y = parentY + parentHeight - this.value.height;\n      this.value.x = parentX;\n    } else {\n      this.value.x = parentX + parentWidth - this.value.width;\n      this.value.y = parentY;\n    }\n\n    if (this.left !== null) {\n      this.left.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'left'\n      );\n    }\n    if (this.right !== null) {\n      this.right.addSize(\n        this.value.width,\n        this.value.height,\n        this.value.x,\n        this.value.y,\n        this.value.cut,\n        'right'\n      );\n    }\n  }\n}\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { alpha } from '@mui/material/styles';\nimport Node from './node';\nimport helpers from './helpers';\n\nconst convertToRGBA = (value) =>\n  `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n\nfunction TextDisplay(textArray, position) {\n  return (\n    <>\n      {\n        // eslint-disable-next-line react/destructuring-assignment\n        textArray.map((chunk) => (\n          <Typography\n            key={chunk[2]}\n            sx={{\n              width: '100%',\n              position: 'absolute',\n              top: position + chunk[2],\n              left: '50%',\n              transform: 'translate(-50%, 0)',\n              bgcolor: alpha('#1c1c1c', 0.7),\n              paddingX: 1,\n              color: 'button.main',\n              margin: 'auto',\n              textAlign: 'center',\n              display: 'inline-block',\n              fontFamily: 'Arial',\n              fontSize: '20px',\n              lineHeight: '25px',\n            }}\n          >\n            {chunk[0]}\n          </Typography>\n        ))\n      }\n    </>\n  );\n}\n\nfunction TextCanvasDraw(\n  ctx,\n  textArray,\n  position,\n  scaleFactor,\n  canvasWidth,\n  textHeight\n) {\n  ctx.font = `${scaleFactor * 20}px Arial`;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'top';\n  ctx.fillStyle = '#1c1c1cb3';\n  ctx.fillRect(0, position, canvasWidth, position + textHeight);\n  ctx.fillStyle = 'white';\n\n  console.log('text array', textArray, textHeight);\n  // eslint-disable-next-line no-restricted-syntax\n  for (const chunk of textArray) {\n    const [textPart, , y] = chunk;\n    ctx.fillText(textPart, canvasWidth / 2, y + position + 2.5 * scaleFactor);\n  }\n}\n\nexport default class BinaryTree {\n  constructor(value) {\n    if (this.root === undefined) {\n      this.root = new Node(value);\n      return this;\n    }\n  }\n\n  addOptions(options) {\n    //  const convertToRGBA = (value) => `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\n    this.root.options = { ...options };\n  }\n\n  display() {\n    if (this.root !== null) {\n      return this.root.display();\n    }\n    return null;\n  }\n\n  replaceImages(newImages) {\n    if (this.root !== null) {\n      this.root.replaceImages(newImages);\n    }\n  }\n\n  fromObject(obj) {\n    if (obj.root != null) this.root.fromObject(obj.root);\n    return this;\n  }\n\n  removeImageData() {\n    const tempTree = this.copy();\n    if (this.root !== null) {\n      tempTree.root.removeImageData();\n    }\n    return tempTree;\n  }\n\n  addImageData(imageData) {\n    if (this.root !== null) {\n      this.root.addImageData(imageData);\n    }\n  }\n\n  DOMDisplay(\n    canvasWidth,\n    canvasHeight,\n    delImg,\n    handleRemoveImage,\n    handleCollageImageLoad\n  ) {\n    const { text, topText, padding, borderRadius, color } = this.root.options;\n    const { width, height } = this.root.value;\n    const lA = helpers.wrapText(text, 0, 0, canvasWidth, 20, 25);\n    const textHeight = text.length ? lA.length * 25 : 0;\n    let yOffset = (canvasHeight - textHeight - height) / 2;\n    const xOffset = (canvasWidth - width) / 2;\n    let position = canvasHeight - textHeight;\n    if (topText && text.length > 0) {\n      yOffset += textHeight;\n      position = 0;\n    }\n\n    console.log(\n      'tree dom display',\n      canvasWidth,\n      canvasHeight,\n      this.root.options,\n      textHeight,\n      yOffset,\n      xOffset,\n      width,\n      this\n    );\n    if (this.root !== null) {\n      return (\n        <Box\n          width={canvasWidth}\n          height={canvasHeight}\n          sx={{\n            position: 'relative',\n            backgroundColor: convertToRGBA(color),\n            outline: '1px solid black',\n          }}\n        >\n          {this.root.DOMDisplay(\n            padding,\n            borderRadius,\n            delImg,\n            handleRemoveImage,\n            yOffset,\n            xOffset,\n            handleCollageImageLoad\n          )}\n          {text.length ? TextDisplay(lA, position) : null}\n        </Box>\n      );\n    }\n    return null;\n  }\n\n  CanvasDisplay(canvasWidth, canvasHeight, canvasElement, scaleFactor) {\n    if (this.root !== null) {\n      const { text, topText, padding, borderRadius, color } = this.root.options;\n      const { width, height } = this.root.value;\n      const lA = helpers.wrapText(\n        text,\n        0,\n        0,\n        canvasWidth,\n        20 * scaleFactor,\n        25 * scaleFactor\n      );\n      const textHeight = text.length ? lA.length * 25 * scaleFactor : 0;\n      let yOffset = (canvasHeight - textHeight - height) / 2;\n      const xOffset = (canvasWidth - width) / 2;\n      let position = canvasHeight - textHeight;\n      if (topText && text.length > 0) {\n        yOffset += textHeight;\n        position = 0;\n      }\n      const ctx = canvasElement.getContext('2d');\n      ctx.fillStyle = convertToRGBA(color);\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n      this.root.CanvasDisplay(\n        canvasElement,\n        padding * scaleFactor,\n        borderRadius * scaleFactor,\n        yOffset,\n        xOffset\n      );\n      TextCanvasDraw(ctx, lA, position, scaleFactor, canvasWidth, textHeight);\n    }\n  }\n\n  generateCollageTree(images, tar) {\n    this.root.generate(images, tar, images.length);\n  }\n\n  adjust(th) {\n    let trys = 0;\n    let bestAdjust = this.copy();\n    let bestAspectRatio = this.root.value.aspectRatio;\n    const tolerableDifference = this.root.value.targetAspectRatio * (1 - th);\n    let ajstCnt = 1000;\n    while (trys < 100 && ajstCnt > 0) {\n      ajstCnt = this.root.adjust(th);\n      trys += 1;\n      const diff =\n        this.root.value.aspectRatio - this.root.value.targetAspectRatio;\n      // console.log('adjust', this.root.value.aspectRatio, this.root.value.targetAspectRatio);\n      if (\n        // (diff > 0 && this.root.value.aspectRatio < bestAspectRatio)\n        // || (bestAspectRatio < this.root.value.targetAspectRatio\n        //   && this.root.value.aspectRatio > this.root.value.targetAspectRatio)\n        Math.abs(diff) <\n        Math.abs(bestAspectRatio - this.root.value.targetAspectRatio)\n      ) {\n        bestAspectRatio = this.root.value.aspectRatio;\n        bestAdjust = this.copy();\n      }\n      if ((diff > 0 && diff < tolerableDifference) || diff === 0) break;\n    }\n\n    return [bestAspectRatio, bestAdjust];\n  }\n\n  copy() {\n    const copyTree = new BinaryTree({});\n    copyTree.root = this.root.copy();\n    copyTree.root.options = { ...this.root.options };\n    return copyTree;\n  }\n\n  addSize(canvasWidth, canvasHeight, aspectRatio) {\n    const [maxW, maxH] = helpers.getCollageDimension(\n      canvasWidth,\n      canvasHeight,\n      aspectRatio\n    );\n    this.root.value.width = maxW;\n    this.root.value.height = maxH;\n    console.log('add size', this.root.value.width, this.root.value.height);\n    this.root.value.x = 0;\n    this.root.value.y = 0;\n    const { width, height, x, y, cut } = this.root.value;\n    if (this.root.left !== null)\n      this.root.left.addSize(width, height, x, y, cut, 'left');\n    if (this.root.right !== null)\n      this.root.right.addSize(width, height, x, y, cut, 'right');\n  }\n}\n","import { useState, useEffect } from 'react';\nimport db from 'db';\n\nexport default function useIndexedDBState(\n  tableName,\n  initialValue,\n  loadingCallback = () => {}\n) {\n  const [value, setValue] = useState(initialValue);\n\n  useEffect(() => {\n    async function setDataFromDB() {\n      loadingCallback(true);\n      const rows = await db.collageDB[tableName].toArray();\n      loadingCallback(false);\n      if (rows.length) setValue(rows);\n    }\n    setDataFromDB();\n  }, []);\n\n  const addToDB = (data) => db.collageDB[tableName].put(data);\n\n  return [value, setValue, addToDB];\n}\n","import { useState, useEffect } from 'react';\nimport db from 'db';\n\nexport default function useImageCount(tableName, initialValue) {\n  const [value, setValue] = useState(initialValue);\n\n  async function setDataFromDB() {\n    const rows = await db.collageDB[tableName].toArray();\n    console.log('rows data', rows, tableName);\n    if (rows.length) setValue(rows[0].count);\n  }\n  useEffect(() => setDataFromDB(), []);\n\n  const addToDB = (data) => {\n    console.log('data', data, tableName);\n    db.collageDB[tableName].put(data);\n  };\n\n  useEffect(() => {\n    db.collageDB[tableName].clear();\n    console.log('Adding data to table', tableName, value);\n    addToDB({ count: value });\n  }, [value]);\n\n  return [value, setValue];\n}\n","import BinaryTree from './binaryTree';\nimport helpers from './helpers';\n\nfunction findBestAdjustTree(images, tolerance, imageWidth, imageHeight) {\n  const sortedImages = images.sort((a, b) =>\n    a.aspectRatio <= b.aspectRatio ? 1 : -1\n  );\n  const collageArray = [];\n  for (let i = 0; i < 100; i += 1) {\n    const imgTree = new BinaryTree({ cut: helpers.getCut() });\n    imgTree.generateCollageTree(sortedImages, imageWidth / imageHeight);\n\n    collageArray.push(imgTree.adjust(1 - tolerance));\n  }\n\n  collageArray.sort((a, b) => {\n    const aspR = imageWidth / imageHeight;\n    const diffA = Math.abs(a[0] - aspR);\n    const diffB = Math.abs(b[0] - aspR);\n    return diffA - diffB;\n  });\n\n  return collageArray[0];\n}\n\nexport default { findBestAdjustTree };\n","import PropTypes from 'prop-types';\nimport Paper from '@mui/material/Paper';\nimport { Typography, Box, Link } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { alpha } from '@mui/material/styles';\n\nexport default function Header({ headerRef }) {\n  return (\n    <Paper\n      ref={headerRef}\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        p: 1,\n        backgroundColor: alpha('#fff', 0.1),\n        borderRadius: 0,\n      }}\n      elevation={3}\n    >\n      <Box sx={{ position: 'absolute', left: '5px' }}>\n        <Link href=\"/collages\" color=\"muted.main\" underline=\"none\">\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <ArrowBackIcon />\n          </Box>\n        </Link>\n      </Box>\n      <Typography\n        variant=\"h4\"\n        component=\"h4\"\n        sx={{ color: alpha('#fff', 0.5) }}\n      >\n        Collage Maker\n      </Typography>\n    </Paper>\n  );\n}\n\nHeader.propTypes = {\n  headerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Authenticate from 'hocs/require-authentication';\n\nexport default function DownloadDialog({ open, onClick, onClose, sizes }) {\n  const [value, setValue] = useState('');\n  const handleDownload = () => {\n    console.log(sizes[value].width, sizes[value].height, onClick);\n    onClick(sizes[value].width, sizes[value].height);\n    setValue('');\n  };\n\n  const handleClose = () => {\n    setValue('');\n    onClose();\n  };\n\n  return (\n    <Authenticate>\n      <Dialog open={open} fullWidth>\n        <DialogTitle sx={{ textAlign: 'center' }}>Download Collage</DialogTitle>\n        <DialogContent\n          dividers\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <DialogContentText sx={{ display: 'inline', pr: 1 }}>\n            Choose collage size\n          </DialogContentText>\n          <FormControl fullWidth sx={{ maxWidth: '60%' }}>\n            <InputLabel id=\"demo-simple-select-label\">Download Size</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              defaultValue=\"A4\"\n              value={value}\n              label=\"Download Size\"\n              onChange={(event) => setValue(event.target.value)}\n            >\n              {Object.keys(sizes).map((key) => (\n                <MenuItem key={sizes[key].text} value={key}>\n                  {sizes[key].text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"outlined\"\n            disabled={value.length === 0}\n            onClick={handleDownload}\n          >\n            Download\n          </Button>\n          <Button variant=\"text\" onClick={handleClose}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Authenticate>\n  );\n}\n\nDownloadDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  sizes: PropTypes.objectOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport helpers from './helpers';\n\nexport default function Collage({\n  tree,\n  images,\n  originalImages,\n  imageWidth,\n  imageHeight,\n  canvasWidth,\n  canvasHeight,\n  removeImage,\n  handleRemoveImage,\n  options,\n  collageCallback,\n  generate,\n  generateCallback,\n  printOptions,\n  handleCollageImageLoad,\n}) {\n  const [collage, setCollage] = useState(null);\n\n  //  const getTextHeight = () => {\n  //  if (options.text.length === 0) return 0;\n  //  return (50 * printOptions.paperHeight) / canvasHeight;\n  //  };\n\n  const isEmpty = (t) => Object.keys(t).length === 0;\n  const createCollage = () => {\n    console.log('started collage loading');\n    tree.addSize(imageWidth, imageHeight, tree.root.value.aspectRatio);\n    console.log('collage added size');\n    tree.addOptions(options);\n    console.log('collage added options', images.length);\n    if (images.length > 0) {\n      tree.addImageData(images);\n      console.log('collage added image data');\n      const collageElem = tree.DOMDisplay(\n        canvasWidth,\n        canvasHeight,\n        removeImage,\n        handleRemoveImage,\n        handleCollageImageLoad\n      );\n      console.log('collage added dom display');\n      setCollage(collageElem);\n      collageCallback(tree);\n    }\n  };\n\n  useEffect(() => {\n    if (!isEmpty(tree)) {\n      console.log('collage, tree is not empty');\n      createCollage();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(tree)) {\n      console.log('collage, tree is not empty 1');\n      createCollage();\n    } else {\n      setCollage(null);\n    }\n  }, [tree, options, imageWidth, imageHeight, removeImage, images]);\n\n  const downloadCollage = (canvas, pW, pH) => {\n    canvas.toBlob((blob) => {\n      const link = document.createElement('a');\n      link.download = `collage-${pW}X${pH}-${Date.now()}.png`;\n      link.href = URL.createObjectURL(blob);\n      link.click();\n      URL.revokeObjectURL(link.href);\n      link.href = null;\n      generateCallback();\n    });\n  };\n\n  useEffect(() => {\n    if (generate === true) {\n      const canvasElement = document.createElement('canvas');\n      const { paperWidth, paperHeight } = printOptions;\n      canvasElement.width = paperWidth;\n      canvasElement.height = paperHeight;\n      const scaleFactor = paperWidth / canvasWidth;\n      const lineArray = helpers.wrapText(\n        options.text,\n        0,\n        0,\n        paperWidth,\n        20 * scaleFactor,\n        25 * scaleFactor\n      );\n      const textHeight = lineArray.length * 25 * scaleFactor;\n      const [imgPrintWidth, imgPrintHeight] = helpers.getCollageDimension(\n        paperWidth,\n        paperHeight - textHeight,\n        tree.root.value.aspectRatio\n      );\n      const canvasTree = tree.copy();\n      canvasTree.replaceImages(originalImages);\n      canvasTree.addSize(\n        imgPrintWidth,\n        imgPrintHeight,\n        tree.root.value.aspectRatio\n      );\n      canvasTree.CanvasDisplay(\n        paperWidth,\n        paperHeight,\n        canvasElement,\n        scaleFactor\n      );\n\n      setTimeout(\n        () => downloadCollage(canvasElement, paperWidth, paperHeight),\n        '5000'\n      );\n    }\n  }, [generate]);\n  return collage;\n}\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport collageBack from 'static/images/collage_back1.webp';\n\nexport default function EmptyCollage({ width, height, loadComponent }) {\n  return (\n    <Box\n      sx={{\n        width,\n        height,\n        //  border: '2px solid white',\n        position: 'relative',\n        backgroundImage: `url(${collageBack})`,\n        backgroundSize: width,\n        objectFit: 'contain',\n        backgroundRepeat: 'no-repeat',\n        alignItems: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      >\n        {loadComponent}\n      </Box>\n    </Box>\n  );\n}\n\nEmptyCollage.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  loadComponent: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport EmptyCollage from 'components/collage/EmptyCollage';\nimport Loading from 'components/Loading';\nimport AddPhotos from 'components/AddPhotos';\n\nexport default function View({\n  open,\n  loading,\n  width,\n  height,\n  maxWidth,\n  maxHeight,\n  imageHeight,\n  images,\n  imgCount,\n  handleLoad,\n  isTreeEmpty,\n  header,\n  actions,\n  downloadDialog,\n  collage,\n  controls,\n}) {\n  console.log(\n    'view',\n    open,\n    loading,\n    width,\n    height,\n    maxWidth,\n    maxHeight,\n    imageHeight,\n    images.length,\n    imgCount,\n    isTreeEmpty,\n    loading,\n    'conditions',\n    images.length !== imgCount,\n    imgCount === 0 || imageHeight === 0,\n    images.length > 0 && images.length === imgCount && loading\n  );\n  return (\n    <Box component=\"div\" sx={{ backgroundColor: 'black' }}>\n      {header}\n      {actions}\n      {open ? downloadDialog : null}\n      <Box\n        width={maxWidth}\n        height={maxHeight}\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'black',\n        }}\n      >\n        {images.length !== imgCount /* && !loading */ ? (\n          <EmptyCollage\n            width={width}\n            height={height}\n            loadComponent={\n              <Loading\n                title={`Loading (${images.length} / ${imgCount}) images...`}\n              />\n            }\n          />\n        ) : null}\n        {/* loading ? (\n          <EmptyCollage\n            width={width}\n            height={height}\n            loadComponent={<Loading title=\"Loading images. Wait...\" />}\n          />\n        ) : null */}\n        {imgCount === 0 || imageHeight === 0 ? (\n          <EmptyCollage\n            width={width}\n            height={height}\n            loadComponent={\n              width ? <AddPhotos handleChange={handleLoad} /> : <div />\n            }\n          />\n        ) : null}\n        {collage}\n        {images.length > 0 && images.length === imgCount && loading ? (\n          <Loading title=\"Preparing collage...\" />\n        ) : null}\n      </Box>\n      {controls}\n    </Box>\n  );\n}\n\nView.propTypes = {\n  maxWidth: PropTypes.number.isRequired,\n  maxHeight: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  imageHeight: PropTypes.number.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      src: PropTypes.string.isRequired,\n      naturalHeight: PropTypes.number.isRequired,\n      naturalWidth: PropTypes.number.isRequired,\n      aspectRatio: PropTypes.number.isRequired,\n      type: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  imgCount: PropTypes.number.isRequired,\n  handleLoad: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  isTreeEmpty: PropTypes.bool.isRequired,\n  header: PropTypes.node.isRequired,\n  actions: PropTypes.node.isRequired,\n  collage: PropTypes.node.isRequired,\n  controls: PropTypes.node.isRequired,\n  downloadDialog: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\n\nexport default function MBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      value={label.toLowerCase()}\n      icon={icon}\n      sx={{\n        fontWeight: 'bold',\n        color: 'gray',\n        '&.Mui-selected': { color: 'white', outline: 'none' },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\n\nMBNA.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n// import { useState } from 'react';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function MobileActions({ actionsRef, onDownload }) {\n  // const [value, setValue] = useState();\n\n  // const handleChange = (event, newValue) => {\n  //   console.log(newValue);\n  //   setValue(newValue);\n  //   if (newValue === 'download') {\n  //     onDownload();\n  //   } else {\n  //     console.log('functionality for ', newValue, 'not yet implemented');\n  //   }\n  // };\n\n  return (\n    <BottomNavigation\n      ref={actionsRef}\n      showLabels\n      sx={{ py: 1, fontWeight: 'bold', backgroundColor: alpha('#fff', 0.2) }}\n    >\n      <MBNA label=\"Save\" icon={<SaveIcon />} handleChange={() => {}} />\n      <MBNA\n        label=\"Download\"\n        icon={<DownloadIcon />}\n        handleChange={onDownload}\n      />\n      <MBNA label=\"Print\" icon={<PrintIcon />} handleChange={() => {}} />\n    </BottomNavigation>\n  );\n}\n\nMobileActions.propTypes = {\n  actionsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onDownload: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function PaddingControl({ padding, handlePaddingChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n          mixBlendMode: 'difference',\n        }}\n      >\n        Padding\n      </Typography>\n      <Slider\n        aria-label=\"Padding\"\n        defaultValue={0}\n        value={padding}\n        valueLabelDisplay=\"auto\"\n        step={0.1}\n        min={0}\n        max={10}\n        onChange={handlePaddingChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nPaddingControl.propTypes = {\n  padding: PropTypes.number.isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport Stack from '@mui/material/Stack';\n// import { alpha } from '@mui/material/styles';\n\nexport default function RadiusControl({ radius, handleRadiusChange }) {\n  return (\n    <Stack\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      sx={{ backgroundColor: 'transparent' }}\n    >\n      <Typography\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          fontSize: '0.87rem',\n        }}\n      >\n        Corner Radius\n      </Typography>\n      <Slider\n        aria-label=\"Corner Radius\"\n        defaultValue={0}\n        value={radius}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        min={0}\n        max={40}\n        onChange={handleRadiusChange}\n        sx={{ color: 'white' }}\n      />\n    </Stack>\n  );\n}\n\nRadiusControl.propTypes = {\n  radius: PropTypes.number.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n//  import FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function TextControl({\n  text,\n  handleTextChange,\n  topText,\n  handlePositionChange,\n}) {\n  const [collageTextError] = useState('');\n  return (\n    <Stack\n      sx={{\n        backgroundColor: 'transparent',\n      }}\n    >\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        spacing={2}\n      >\n        <Typography\n          sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n        >\n          Collage Text\n        </Typography>\n        <FormGroup row>\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === false}\n                onChange={() => handlePositionChange(false)}\n                sx={{ color: 'white', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Bottom\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold' }}\n          />\n          <FormControlLabel\n            disableTypography\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={topText === true}\n                onChange={() => handlePositionChange(true)}\n                sx={{ color: 'gray', '&.Mui-checked': { color: 'white' } }}\n              />\n            }\n            label={\n              <Typography fontSize=\"0.8rem\" fontWeight=\"bold\">\n                Top\n              </Typography>\n            }\n            sx={{ color: 'gray', fontWeight: 'bold', fontSize: '0.8rem' }}\n          />\n        </FormGroup>\n      </Stack>\n      <TextField\n        variant=\"outlined\"\n        label=\"\"\n        defaultValue={text}\n        onChange={handleTextChange}\n        size=\"small\"\n        sx={{ width: '100%', mb: 1 }}\n        InputProps={{ sx: { backgroundColor: alpha('#fff', 0.9) } }}\n        helperText={\n          <Typography sx={{ color: 'gray', fontSize: '0.75rem' }}>\n            {collageTextError}\n          </Typography>\n        }\n        error={!!collageTextError}\n      />\n    </Stack>\n  );\n}\n\nTextControl.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  topText: PropTypes.bool.isRequired,\n  handlePositionChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { ChromePicker } from 'react-color';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function ColorControl({\n  color,\n  displayColorPicker,\n  handleClick,\n  handleClose,\n  handleChange,\n}) {\n  console.log('color control', color, displayColorPicker);\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      spacing={2}\n      sx={{ my: 2 }}\n    >\n      <Typography\n        sx={{ fontWeight: 'bold', color: 'gray', fontSize: '0.87rem' }}\n      >\n        Background Color\n      </Typography>\n      <Box\n        component=\"div\"\n        sx={{\n          padding: '2px',\n          background: '#fff',\n          borderRadius: '5px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        }}\n        onClick={handleClick}\n      >\n        <Box\n          component=\"div\"\n          sx={{\n            width: '70px',\n            height: '30px',\n            borderRadius: '18px',\n            background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n          }}\n        />\n      </Box>\n      <ColorPicker\n        open={displayColorPicker}\n        color={color}\n        handleClose={handleClose}\n        handleChange={handleChange}\n      />\n    </Stack>\n  );\n}\n\nColorControl.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport function ColorPicker({ open, color, handleClose, handleChange }) {\n  console.log(handleClose);\n  return open ? (\n    <>\n      <Box\n        component=\"div\"\n        sx={{\n          position: 'absolute',\n          zIndex: 3,\n          bottom: 10,\n        }}\n      >\n        <IconButton\n          sx={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            zIndex: 2,\n            backgroundColor: 'button.main',\n            p: 0,\n            transform: 'translate(0, -110%)',\n            border: '2px solid black',\n          }}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n        <ChromePicker color={color} onChange={handleChange} />\n      </Box>\n    </>\n  ) : null;\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport { alpha } from '@mui/material/styles';\n\nexport default function MainControls({ value, handleChange }) {\n  return (\n    <BottomNavigation\n      showLabels\n      value={value}\n      onChange={handleChange}\n      sx={{\n        fontWeight: 'bold',\n        backgroundColor: alpha('#fff', 0.2),\n        '&.Mui-selected': { color: 'white' },\n      }}\n    >\n      <BottomNavigationAction\n        label=\"Rearrange\"\n        value=\"rearrange\"\n        icon={<AutoAwesomeMosaicIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Photos\"\n        value=\"photo\"\n        icon={<PhotoIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Edit\"\n        value=\"edit\"\n        icon={<EditIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n      <BottomNavigationAction\n        label=\"Clear\"\n        value=\"clear\"\n        icon={<RefreshIcon />}\n        sx={{\n          fontWeight: 'bold',\n          color: 'gray',\n          '&.Mui-selected': { color: 'white', outline: 'none' },\n        }}\n      />\n    </BottomNavigation>\n  );\n}\n\nMainControls.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport Typography from '@mui/material/Typography';\nimport PaddingIcon from '@mui/icons-material/Padding';\nimport CropFreeIcon from '@mui/icons-material/CropFree';\nimport SquareIcon from '@mui/icons-material/Square';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TitleIcon from '@mui/icons-material/Title';\nimport { alpha } from '@mui/material/styles';\n\nexport default function EditOptions({\n  color,\n  editOptionsValue,\n  open,\n  handleOptionsClose,\n  handleEditOptionsClick,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={editOptionsValue}\n        onChange={handleEditOptionsClick}\n        sx={{\n          display: 'flex',\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          position: 'relative',\n          alignItems: 'center',\n        }}\n      >\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Padding\n            </Typography>\n          }\n          value=\"padding\"\n          icon={<PaddingIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Corner\n            </Typography>\n          }\n          value=\"border radius\"\n          icon={<CropFreeIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label={\n            <Typography fontSize=\"0.70rem\" fontWeight=\"bold\">\n              Color\n            </Typography>\n          }\n          value=\"color\"\n          icon={\n            <SquareIcon\n              sx={{\n                fill: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n                borderRadius: '5px',\n              }}\n            />\n          }\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n        <BottomNavigationAction\n          label=\"Text\"\n          value=\"text\"\n          icon={<TitleIcon />}\n          sx={{\n            fontWeight: 'bold',\n            color: 'gray',\n            '&.Mui-selected': { color: 'white', outline: 'none' },\n          }}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nEditOptions.propTypes = {\n  editOptionsValue: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleEditOptionsClick: PropTypes.func.isRequired,\n  color: PropTypes.shape({\n    r: PropTypes.number.isRequired,\n    g: PropTypes.number.isRequired,\n    b: PropTypes.number.isRequired,\n    a: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\nimport MBNA from 'components/collage/MobileActionItem';\n\nexport default function ImageOptions({\n  open,\n  value,\n  handleOptionsClose,\n  handleDelete,\n  handleAdd,\n}) {\n  return open ? (\n    <Box sx={{ position: 'relative' }}>\n      <BottomNavigation\n        showLabels\n        value={value}\n        sx={{\n          fontWeight: 'bold',\n          backgroundColor: alpha('#fff', 0.2),\n          borderTop: '1px solid gray',\n          '&.Mui-selected': { color: 'white' },\n        }}\n      >\n        <MBNA\n          label=\"Delete\"\n          icon={<DeleteIcon />}\n          handleChange={handleDelete}\n        />\n        <MBNA\n          label=\"Add\"\n          icon={<AddPhotoAlternateIcon />}\n          handleChange={handleAdd}\n        />\n      </BottomNavigation>\n      <CloseIcon\n        fontSize=\"1rem\"\n        sx={{\n          position: 'absolute',\n          top: 5,\n          right: 5,\n          fill: 'white',\n          backgroundColor: 'gray',\n          borderRadius: '50%',\n          padding: '2px',\n        }}\n        onClick={handleOptionsClose}\n      />\n    </Box>\n  ) : null;\n}\n\nImageOptions.propTypes = {\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  handleOptionsClose: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\n\nexport default function ClearCollageDialog({ open, onSubmit, onCancel }) {\n  return (\n    <Dialog open={open}>\n      <DialogTitle\n        sx={{\n          textAlign: 'center',\n          fontWeight: 'bold',\n          color: alpha('#000', 0.8),\n        }}\n      >\n        Clear Collage\n      </DialogTitle>\n      <DialogContent dividers>\n        <DialogContentText sx={{ fontWeight: 'bold', color: 'gray' }}>\n          Do you want to clear collage?\n        </DialogContentText>\n        <Typography\n          variant=\"subtitle2\"\n          sx={{ color: 'red', fontWeight: 'bold' }}\n          noWrap\n        >\n          Note:\n        </Typography>\n        <Typography sx={{ fontSize: '0.8rem', color: 'gray' }}>\n          This change is not reversible\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onSubmit} sx={{ color: 'red' }}>\n          {' '}\n          Clear{' '}\n        </Button>\n        <Button variant=\"outlined\" onClick={onCancel}>\n          {' '}\n          Cancel{' '}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nClearCollageDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n// import Dialog from '@mui/material/Dialog';\n// import DialogTitle from '@mui/material/DialogTitle';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogActions from '@mui/material/DialogActions';\n// import Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\n\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport TextControl from 'components/collage/TextControl';\nimport { ColorPicker } from 'components/collage/ColorControl';\nimport MainControls from 'components/collage/MainControls';\nimport EditOptions from 'components/collage/EditOptions';\nimport ImageOptions from 'components/collage/ImageOptions';\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function MobileControls({\n  controlsRef,\n  onRefresh,\n  onDelete,\n  onAdd,\n  clearDelete,\n  options,\n  displayColorPicker,\n  handlePaddingChange,\n  handleRadiusChange,\n  handleColorClose,\n  handleColorClick,\n  handleColorChange,\n  handleTextChange,\n  handlePositionChange,\n  handleClear,\n}) {\n  console.log(options);\n  const [mainOpen, setMainOpen] = useState(true);\n  const [value, setValue] = useState('');\n  const [editOpen, setEditOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const [editControl, setEditControl] = useState(null);\n  const [editOptionsValue, setEditOptionsValue] = useState('');\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageValue, setImageValue] = useState('');\n\n  const handleImageOptionsClose = () => {\n    setImageOpen(false);\n    setImageValue('');\n    setMainOpen(true);\n    clearDelete();\n    setValue('');\n  };\n\n  const handleEditOptionsClose = () => {\n    setEditOpen(false);\n    setEditControl(null);\n    setEditOptionsValue('');\n    setMainOpen(true);\n    setValue('');\n  };\n\n  const handleEditOptionsClick = (e, nV) => {\n    console.log('handle edit options click');\n    setEditOptionsValue(nV);\n    if (nV === 'padding') {\n      setEditControl(\n        <PaddingControl\n          padding={options.padding}\n          handlePaddingChange={handlePaddingChange}\n        />\n      );\n    } else if (nV === 'border radius') {\n      setEditControl(\n        <RadiusControl\n          radius={options.borderRadius}\n          handleRadiusChange={handleRadiusChange}\n        />\n      );\n    } else if (nV === 'color') {\n      handleColorClick();\n      setEditControl(\n        <ColorPicker\n          open={displayColorPicker}\n          color={options.color}\n          handleChange={handleColorChange}\n          handleClose={() => {\n            setEditControl(null);\n            handleColorClose();\n          }}\n        />\n      );\n    } else if (nV === 'text') {\n      console.log(nV);\n      setEditControl(\n        <TextControl\n          text={options.text}\n          handleTextChange={handleTextChange}\n          topText={options.topText}\n          handlePositionChange={handlePositionChange}\n        />\n      );\n    } else {\n      setEditControl(<Typography color=\"secondary\">{nV}</Typography>);\n    }\n  };\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'padding') {\n      setEditControl(\n        <PaddingControl\n          padding={options.padding}\n          handlePaddingChange={handlePaddingChange}\n        />\n      );\n    }\n  }, [options.padding, editOpen]);\n  // }, [options.padding, editOpen, editOptionsValue]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'border radius') {\n      setEditControl(\n        <RadiusControl\n          radius={options.borderRadius}\n          handleRadiusChange={handleRadiusChange}\n        />\n      );\n    }\n  }, [options.borderRadius, editOpen]);\n  // }, [options.borderRadius, editOpen, editOptionsValue]);\n\n  useEffect(() => {\n    if (editOpen && editOptionsValue === 'color') {\n      setEditControl(\n        <ColorPicker\n          open={displayColorPicker}\n          color={options.color}\n          handleChange={handleColorChange}\n          handleClose={handleColorClose}\n        />\n      );\n    }\n  }, [options.color, editOpen, displayColorPicker]);\n  // }, [options.color, editOpen, editOptionsValue, displayColorPicker]);\n\n  useEffect(() => {\n    console.log('text control useEffect');\n    if (editOpen && editOptionsValue === 'text') {\n      setEditControl(\n        <TextControl\n          text={options.text}\n          handleTextChange={handleTextChange}\n          topText={options.topText}\n          handlePositionChange={handlePositionChange}\n        />\n      );\n    }\n  }, [options.text, editOpen, options.topText]);\n  // }, [options.text, editOpen, editOptionsValue, options.topText]);\n\n  const handleImageClose = () => {\n    setImageValue('');\n    setImageOpen(false);\n    setMainOpen(true);\n  };\n\n  const handleChange = (event, newValue) => {\n    clearDelete();\n    handleImageClose();\n    handleEditOptionsClose();\n    setValue(newValue);\n    if (newValue === 'rearrange') {\n      onRefresh();\n    } else if (newValue === 'photo') {\n      setMainOpen(false);\n      setImageOpen(true);\n    } else if (newValue === 'edit') {\n      setMainOpen(false);\n      setEditOpen(true);\n    } else if (newValue === 'clear') {\n      setClearOpen(true);\n      //  handleClear();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  const handleImageAdd = () => {\n    clearDelete();\n    onAdd();\n  };\n\n  const handleClearSubmit = () => {\n    handleClear();\n    setClearOpen(false);\n    setValue('');\n  };\n\n  const handleClearCancel = () => {\n    setClearOpen(false);\n    setValue('');\n  };\n\n  console.log('rerendering', editControl);\n  return (\n    <Paper\n      ref={controlsRef}\n      sx={{\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        mt: 1,\n        backgroundColor: 'black',\n        borderRadius: 0,\n      }}\n      elevation={4}\n    >\n      <ClearCollageDialog\n        open={clearOpen}\n        onSubmit={handleClearSubmit}\n        onCancel={handleClearCancel}\n      />\n      {/* <Dialog open={clearOpen}>\n        <DialogTitle sx={{ textAlign: 'center', fontWeight: 'bold' }}>\n          Clear Collage\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography sx={{ fontWeight: 'bold' }}>\n            Do you want to clear collage?\n          </Typography>\n          <Typography sx={{ fontSize: '0.8rem', color: 'red' }}>\n            ( This change is not reversible )\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              handleClear();\n              setClearOpen(false);\n              setValue('');\n            }}\n          >\n            OK\n          </Button>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              setClearOpen(false);\n              setValue('');\n            }}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog> */}\n      {editControl ? (\n        <Box\n          sx={{\n            backgroundColor: alpha('#fff', 0.15),\n            p: 1,\n          }}\n        >\n          {editControl}\n        </Box>\n      ) : null}\n      <ImageOptions\n        open={imageOpen}\n        value={imageValue}\n        handleDelete={onDelete}\n        handleAdd={handleImageAdd}\n        handleOptionsClose={handleImageOptionsClose}\n      />\n      <EditOptions\n        color={options.color}\n        editOptionsValue={editOptionsValue}\n        open={editOpen}\n        handleOptionsClose={handleEditOptionsClose}\n        handleEditOptionsClick={handleEditOptionsClick}\n      />\n      {mainOpen ? (\n        <MainControls value={value} handleChange={handleChange} />\n      ) : null}\n    </Paper>\n  );\n}\n\nMobileControls.propTypes = {\n  options: PropTypes.shape({\n    padding: PropTypes.number.isRequired,\n    borderRadius: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    topText: PropTypes.bool.isRequired,\n    color: PropTypes.shape({\n      r: PropTypes.number.isRequired,\n      g: PropTypes.number.isRequired,\n      b: PropTypes.number.isRequired,\n      a: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n  handleColorChange: PropTypes.func.isRequired,\n  handleColorClose: PropTypes.func.isRequired,\n  handleColorClick: PropTypes.func.isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  handlePositionChange: PropTypes.func.isRequired,\n  controlsRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n  handleClear: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport { alpha } from '@mui/material/styles';\n\nexport default function DBNA({ label, icon, handleChange }) {\n  return (\n    <BottomNavigationAction\n      showLabel\n      label={label}\n      icon={icon}\n      sx={{\n        py: 1,\n        fontWeight: 'bold',\n        color: 'gray',\n        outline: 'none',\n        '&:focus': {\n          color: alpha('#fff', 0.8),\n          outline: 'none',\n        },\n      }}\n      onClick={handleChange}\n    />\n  );\n}\nDBNA.defaultProps = {\n  handleChange: () => {},\n};\n\nDBNA.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n  icon: PropTypes.node.isRequired,\n  handleChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Drawer from '@mui/material/Drawer';\n// import { alpha } from '@mui/material/styles';\n\nexport default function DesktopDrawer({ anchor, children }) {\n  return (\n    <Drawer\n      anchor={anchor}\n      variant=\"permanent\"\n      PaperProps={{\n        sx: {\n          height: 'fit-content',\n          top: '50%',\n          backgroundColor: 'transparent',\n          color: 'gray',\n          fontWeight: 'bold',\n          borderRadius: anchor === 'left' ? '0 10px 10px 0' : '10px 0 0 10px',\n          transform: 'translate(0, -50%)',\n        },\n      }}\n    >\n      {children}\n    </Drawer>\n  );\n}\n\nDesktopDrawer.propTypes = {\n  anchor: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import Divider from '@mui/material/Divider';\n\nexport default function ControlsDivider() {\n  return <Divider sx={{ backgroundColor: 'gray', my: 1 }} variant=\"middle\" />;\n}\n","import PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PrintIcon from '@mui/icons-material/Print';\nimport List from '@mui/material/List';\nimport { alpha } from '@mui/material/styles';\n\nimport DBNA from 'components/collage/DesktopActionItem';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport ControlsDivider from 'components/collage/ControlsDivider';\n\nexport default function DesktopActions({ onDownload }) {\n  const handleChange = (newValue) => {\n    console.log(newValue);\n    if (newValue === 'download') {\n      onDownload();\n    } else {\n      console.log('functionality for ', newValue, 'not yet implemented');\n    }\n  };\n\n  return (\n    <DesktopDrawer anchor=\"right\">\n      <List sx={{ backgroundColor: alpha('#fff', 0.1) }}>\n        <DBNA\n          label=\"Save\"\n          icon={<SaveIcon />}\n          handleChange={() => handleChange('save')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label=\"Download\"\n          icon={<DownloadIcon />}\n          handleChange={() => handleChange('download')}\n        />\n        <ControlsDivider />\n        <DBNA\n          label={\n            <>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Order\n              </Typography>\n              <Typography sx={{ fontSize: '0.75rem', fontWeight: 'bold' }}>\n                Print(s)\n              </Typography>\n            </>\n          }\n          icon={<PrintIcon />}\n          handleChange={() => handleChange('print')}\n        />\n      </List>\n    </DesktopDrawer>\n  );\n}\n\nDesktopActions.propTypes = {\n  onDownload: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Stack from '@mui/material/Stack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PhotoIcon from '@mui/icons-material/Photo';\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\nimport DesktopDrawer from 'components/collage/DesktopDrawer';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport { alpha } from '@mui/material/styles';\n\nimport ClearCollageDialog from 'components/collage/ClearCollageDialog';\n\nexport default function DesktopControls({\n  onRefresh,\n  photosComp,\n  editComp,\n  handleClear,\n  clearDelete,\n}) {\n  const [imageOptionsOpen, setImageOptionsOpen] = useState(false);\n  const [editOptionsOpen, setEditOptionsOpen] = useState(false);\n  const [clearOpen, setClearOpen] = useState(false);\n  const closeAll = () => {\n    clearDelete();\n    setImageOptionsOpen(false);\n    setEditOptionsOpen(false);\n    setClearOpen(false);\n  };\n  const handlePhotosClick = () => {\n    if (imageOptionsOpen) {\n      setImageOptionsOpen(false);\n    } else {\n      closeAll();\n      setImageOptionsOpen(true);\n    }\n  };\n\n  const handleEditClick = () => {\n    if (editOptionsOpen) {\n      setEditOptionsOpen(false);\n    } else {\n      closeAll();\n      setEditOptionsOpen(true);\n    }\n  };\n  const handleRearrange = () => {\n    closeAll();\n    onRefresh();\n  };\n\n  const handleClearClick = () => {\n    console.log('clear open', clearOpen);\n    if (clearOpen) {\n      setClearOpen(false);\n    } else {\n      closeAll();\n      setClearOpen(true);\n    }\n  };\n\n  const handleClearClose = () => setClearOpen(false);\n  const handleClearSubmit = () => {\n    handleClearClose();\n    handleClear();\n  };\n\n  console.log('clear open', clearOpen);\n  console.log('rendering desktop controls');\n  return (\n    <DesktopDrawer anchor=\"left\">\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n        <List\n          sx={{\n            backgroundColor: alpha('#fff', 0.1),\n            borderRadius: '0 10px 10px 0',\n          }}\n        >\n          <DBNA\n            label=\"Rearrange\"\n            icon={<AutoAwesomeMosaicIcon />}\n            handleChange={handleRearrange}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Photos\"\n            icon={<PhotoIcon />}\n            handleChange={handlePhotosClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Edit\"\n            icon={<EditIcon />}\n            handleChange={handleEditClick}\n          />\n          <ControlsDivider />\n          <DBNA\n            label=\"Clear\"\n            icon={<RefreshIcon />}\n            handleChange={handleClearClick}\n          />\n        </List>\n        {imageOptionsOpen ? photosComp : null}\n        {editOptionsOpen ? editComp : null}\n        <ClearCollageDialog\n          open={clearOpen}\n          onSubmit={handleClearSubmit}\n          onCancel={handleClearClose}\n        />\n      </Stack>\n    </DesktopDrawer>\n  );\n}\n\nDesktopControls.propTypes = {\n  onRefresh: PropTypes.func.isRequired,\n  photosComp: PropTypes.node.isRequired,\n  editComp: PropTypes.node.isRequired,\n  handleClear: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport DBNA from 'components/collage/DesktopActionItem';\nimport ControlsDivider from 'components/collage/ControlsDivider';\nimport List from '@mui/material/List';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { alpha } from '@mui/material/styles';\n\nexport default function DesktopImageOptions({ onDelete, onAdd, clearDelete }) {\n  const handleAdd = () => {\n    clearDelete();\n    onAdd();\n  };\n\n  return (\n    <List\n      sx={{\n        backgroundColor: alpha('#fff', 0.15),\n        borderRadius: '10px 10px 10px 10px',\n        height: 'fit-content',\n      }}\n    >\n      <DBNA\n        label=\"Add\"\n        icon={<AddPhotoAlternateIcon />}\n        handleChange={handleAdd}\n      />\n      <ControlsDivider />\n      <DBNA label=\"Delete\" icon={<DeleteIcon />} handleChange={onDelete} />\n    </List>\n  );\n}\n\nDesktopImageOptions.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  clearDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport PaddingControl from 'components/collage/PaddingControl';\nimport RadiusControl from 'components/collage/RadiusControl';\nimport ColorControl from 'components/collage/ColorControl';\nimport TextControl from 'components/collage/TextControl';\n\nexport default function EditControl({\n  options,\n  handlePaddingChange,\n  displayColorPicker,\n  handleColorChange,\n  handleColorClose,\n  handleColorClick,\n  handleRadiusChange,\n  handleTextChange,\n  handlePositionChange,\n}) {\n  return (\n    <Stack\n      direction=\"column\"\n      spacing={4}\n      sx={{\n        p: 2,\n        backgroundColor: alpha('#fff', 0.15),\n        borderRadius: '10px 10px 10px 10px',\n      }}\n    >\n      <PaddingControl\n        padding={options.padding}\n        handlePaddingChange={handlePaddingChange}\n      />\n      <RadiusControl\n        radius={options.borderRadius}\n        handleRadiusChange={handleRadiusChange}\n      />\n      <ColorControl\n        color={options.color}\n        displayColorPicker={displayColorPicker}\n        handleChange={handleColorChange}\n        handleClose={handleColorClose}\n        handleClick={handleColorClick}\n      />\n      <TextControl\n        text={options.text}\n        topText={options.topText}\n        handleTextChange={handleTextChange}\n        handlePositionChange={handlePositionChange}\n      />\n    </Stack>\n  );\n}\n\nEditControl.propTypes = {\n  options: PropTypes.shape({\n    padding: PropTypes.number.isRequired,\n    borderRadius: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    topText: PropTypes.bool.isRequired,\n    color: PropTypes.shape({\n      r: PropTypes.number.isRequired,\n      g: PropTypes.number.isRequired,\n      b: PropTypes.number.isRequired,\n      a: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n  handlePaddingChange: PropTypes.func.isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  handleColorClose: PropTypes.func.isRequired,\n  handleColorChange: PropTypes.func.isRequired,\n  handleColorClick: PropTypes.func.isRequired,\n  handleRadiusChange: PropTypes.func.isRequired,\n  handleTextChange: PropTypes.func.isRequired,\n  handlePositionChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport db from 'db';\n\nimport useCollageTree from 'hooks/collageTree';\nimport useIndexedDBState from 'hooks/indexedDBState';\nimport useImageCount from 'hooks/imageCount';\n\nimport helpers from 'components/collage/helpers';\nimport treeUtils from 'components/collage/treeUtils';\nimport Header from 'components/collage/Header';\nimport DownloadDialog from 'components/collage/DownloadDialog';\nimport Collage from 'components/collage/Collage';\nimport Loading from 'components/Loading';\nimport View from 'components/collage/View';\n\nimport MobileActions from 'components/collage/MobileActions';\nimport MobileControls from 'components/collage/MobileControls';\nimport DesktopActions from 'components/collage/DesktopActions';\nimport DesktopControls from 'components/collage/DesktopControls';\nimport DesktopImageOptions from 'components/collage/DesktopImageOptions';\nimport EditControl from 'components/collage/EditControl';\n\nfunction CollageMaker() {\n  const tolerance = 0.1;\n  const resizeImageWidth = 1500;\n  const paperSizes = {\n    A4: { width: 2480, height: 3508, text: '8 X 11 inches' },\n    A3: { width: 3508, height: 4961, text: '11 X 16 inches' },\n  };\n\n  const headerRef = useRef();\n  const actionsRef = useRef();\n  const footerRef = useRef();\n  const aspectRatio = 0.7;\n  const addImageRef = useRef();\n\n  const [newImgCount, setNewImageCount] = useState(0);\n  const [newImagesLoaded, setNewImagesLoaded] = useState(0);\n  const [imgCount, setImageCount] = useImageCount('imgCount', 0);\n  const [loaded, setLoaded] = useState(0);\n  const [images, setImages, addToImagesDB] = useIndexedDBState(\n    'images',\n    [],\n    () => {}\n  );\n  const [originalImages, setOriginalImages, addToOriginalImagesDB] =\n    useIndexedDBState('originalImages', []);\n\n  const [printOptions, setPrintOptions] = useState({\n    paperWidth: 0,\n    paperHeight: 0,\n  });\n  const [generate, setGenerate] = useState(false);\n  const [height, setHeight] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [imageWidth, setImageWidth] = useState(0);\n  const [refresh, setRefresh] = useState(false);\n  const [removeImage, setRemoveImage] = useState(false);\n  const [width, setWidth] = useState(0);\n  const [maxHeight, setMaxHeight] = useState(0);\n  const [maxWidth, setMaxWidth] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n  const [options, setOptions] = useState({\n    padding: 2,\n    borderRadius: 5,\n    color: {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1,\n    },\n    text: '',\n    topText: true,\n  });\n\n  const [textHeight, setTextHeight] = useState(0);\n  const [tree, setTree, addTreeToDB] = useCollageTree({}, setOptions);\n\n  const handleClear = () => {\n    db.collageDB.collageTree.clear();\n    setTree({});\n    db.collageDB.images.clear();\n    setImages([]);\n    db.collageDB.originalImages.clear();\n    setImages([]);\n    db.collageDB.imgCount.clear();\n    setImageCount(0);\n    setOptions({\n      padding: 2,\n      borderRadius: 5,\n      color: {\n        r: 255,\n        g: 255,\n        b: 255,\n        a: 1,\n      },\n      text: '',\n      topText: true,\n    });\n  };\n\n  const setDimensions = () => {\n    const headerHeight = headerRef.current ? headerRef.current.offsetHeight : 0;\n    const actionsHeight = actionsRef.current\n      ? actionsRef.current.offsetHeight\n      : 0;\n    const footerHeight = footerRef.current ? footerRef.current.offsetHeight : 0;\n    const otherHeight = headerHeight + actionsHeight + footerHeight;\n    setMaxWidth(window.innerWidth);\n    setMaxHeight(window.innerHeight - otherHeight);\n    const [w, h] = helpers.getCollageDimension(\n      window.innerWidth,\n      window.innerHeight - otherHeight - 6,\n      aspectRatio\n    );\n    console.log('other height', otherHeight);\n    setWidth(w);\n    setHeight(h);\n  };\n\n  useEffect(() => {\n    console.log('dimensions changed');\n    setDimensions();\n  }, [\n    window.innerHeight,\n    window.innerWidth,\n    headerRef.current,\n    actionsRef.current,\n    footerRef.current,\n  ]);\n\n  useEffect(() => {\n    if ((newImgCount > 0 && newImgCount === newImagesLoaded) || refresh) {\n      setNewImageCount(0);\n      setNewImagesLoaded(0);\n      const [, bestAspectRatioTree] = treeUtils.findBestAdjustTree(\n        images,\n        tolerance,\n        width,\n        height - textHeight\n      );\n      bestAspectRatioTree.addOptions(options);\n      setTree(bestAspectRatioTree);\n      db.collageDB.collageTree.clear();\n      addTreeToDB(bestAspectRatioTree);\n      setRefresh(false);\n    }\n  }, [newImgCount, newImagesLoaded, refresh]);\n\n  const collageCallback = (someTree) => {\n    console.log('in collage callback');\n    db.collageDB.collageTree.clear();\n    addTreeToDB(someTree);\n    console.log('loaded collage');\n  };\n\n  const handleRemoveImage = (imgTitle) => {\n    const removeIndex = images.findIndex((elem) => elem.title === imgTitle);\n    const newImagesArr = [\n      ...images.slice(0, removeIndex),\n      ...images.slice(removeIndex + 1),\n    ];\n    setImages(newImagesArr);\n    setImageCount((cnt) => cnt - 1);\n    const [, bestAspectRatioTree] = treeUtils.findBestAdjustTree(\n      newImagesArr,\n      tolerance,\n      imageWidth,\n      imageHeight\n    );\n    bestAspectRatioTree.addOptions(options);\n    setTree(bestAspectRatioTree);\n    db.collageDB.collageTree.clear();\n    addTreeToDB(bestAspectRatioTree);\n    db.collageDB.images.delete(imgTitle);\n    db.collageDB.originalImages.delete(imgTitle);\n  };\n\n  const handleImageData = (imageDetail, originalImageDetail) => {\n    setOriginalImages((arr) => arr.concat([originalImageDetail]));\n    setImages((arr) => arr.concat([imageDetail]));\n    addToImagesDB(imageDetail);\n    addToOriginalImagesDB(originalImageDetail);\n    setNewImagesLoaded((cnt) => cnt + 1);\n  };\n\n  const handleLoad = (event) => {\n    helpers.handleImageLoad(\n      event,\n      resizeImageWidth,\n      setImageCount,\n      setNewImageCount,\n      handleImageData\n    );\n  };\n\n  const handleImageAddClick = () => {\n    if (addImageRef.current) addImageRef.current.click();\n  };\n\n  const handlePaddingChange = (e) =>\n    setOptions((opts) => ({ ...opts, padding: e.target.value }));\n  const handleRadiusChange = (e) => {\n    setOptions((opts) => ({ ...opts, borderRadius: e.target.value }));\n  };\n\n  const handleColorClick = () => setDisplayColorPicker((dcp) => !dcp);\n  const handleColorClose = () => setDisplayColorPicker(false);\n  const handleColorChange = (clr) =>\n    setOptions((opts) => ({ ...opts, color: clr.rgb }));\n  const handlePositionChange = (value) =>\n    setOptions((opts) => ({ ...opts, topText: value }));\n\n  const handleTextChange = (e) => {\n    const { target } = e;\n    setOptions((opts) => ({ ...opts, text: target.value }));\n  };\n\n  const handleDownload = () => setOpen(true);\n  const onDownloadClose = () => setOpen(false);\n  const onDownloadClick = (w, h) => {\n    setPrintOptions({ paperWidth: w, paperHeight: h });\n    setGenerate(true);\n    setOpen(false);\n  };\n\n  const handleGenerateCallback = () => {\n    setGenerate(false);\n    setPrintOptions({ paperWidth: 0, paperHeight: 0 });\n  };\n\n  useEffect(() => {\n    setDimensions();\n    window.addEventListener('resize', setDimensions);\n\n    return () => window.removeEventListener('resize', setDimensions);\n  }, []);\n\n  const onRefresh = () => setRefresh(true);\n  const onDelete = () => setRemoveImage((ri) => !ri);\n  const clearDelete = () => setRemoveImage(false);\n\n  useEffect(() => {\n    if (options.text.length > 0 && Object.keys(tree).length > 0) {\n      const tH = helpers.wrapText(options.text, 0, 0, width, 20, 25);\n      setTextHeight(tH.length * 25);\n      const [w, h] = helpers.getCollageDimension(\n        width,\n        height - tH.length * 25,\n        tree.root.value.aspectRatio\n      );\n      setImageWidth(w);\n      setImageHeight(h);\n    } else {\n      setTextHeight(0);\n      handlePositionChange(true);\n      setImageWidth(width);\n      setImageHeight(height);\n    }\n  }, [width, height, tree, options.text]);\n\n  const downloadDialog = (\n    <DownloadDialog\n      open={open}\n      onClick={onDownloadClick}\n      onClose={onDownloadClose}\n      sizes={paperSizes}\n    />\n  );\n\n  const collage = (\n    <Collage\n      aspectRatio={aspectRatio}\n      tree={tree}\n      images={images}\n      originalImages={generate ? originalImages : []}\n      imageHeight={imageHeight}\n      imageWidth={imageWidth}\n      canvasHeight={height}\n      canvasWidth={width}\n      removeImage={removeImage}\n      handleRemoveImage={removeImage ? handleRemoveImage : () => {}}\n      options={options}\n      printOptions={printOptions}\n      collageCallback={collageCallback}\n      generate={generate}\n      generateCallback={handleGenerateCallback}\n      handleCollageImageLoad={() => setLoaded((cnt) => cnt + 1)}\n    />\n  );\n\n  const mobileControls = (\n    <MobileControls\n      options={options}\n      handlePaddingChange={handlePaddingChange}\n      handleRadiusChange={handleRadiusChange}\n      handleColorClick={handleColorClick}\n      handleColorClose={handleColorClose}\n      handleColorChange={handleColorChange}\n      handleTextChange={handleTextChange}\n      handlePositionChange={handlePositionChange}\n      displayColorPicker={displayColorPicker}\n      controlsRef={footerRef}\n      onRefresh={onRefresh}\n      onDelete={onDelete}\n      onAdd={handleImageAddClick}\n      clearDelete={clearDelete}\n      handleClear={handleClear}\n    />\n  );\n\n  const header = <Header headerRef={headerRef} />;\n  const desktopPhotosComp = (\n    <DesktopImageOptions\n      onDelete={onDelete}\n      onAdd={handleImageAddClick}\n      clearDelete={clearDelete}\n    />\n  );\n  const desktopEditComp = (\n    <EditControl\n      options={options}\n      handlePaddingChange={handlePaddingChange}\n      handleRadiusChange={handleRadiusChange}\n      handleColorClick={handleColorClick}\n      handleColorClose={handleColorClose}\n      handleColorChange={handleColorChange}\n      displayColorPicker={displayColorPicker}\n      handleTextChange={handleTextChange}\n      handlePositionChange={handlePositionChange}\n    />\n  );\n  const desktopControls = (\n    <DesktopControls\n      onRefresh={onRefresh}\n      photosComp={desktopPhotosComp}\n      editComp={desktopEditComp}\n      handleClear={handleClear}\n      clearDelete={clearDelete}\n    />\n  );\n  const isTreeEmpty = Object.keys(tree).length === 0;\n  const isMobile = window.innerWidth < window.innerHeight;\n  const controls = isMobile ? mobileControls : desktopControls;\n\n  const actions = isMobile ? (\n    <MobileActions actionsRef={actionsRef} onDownload={handleDownload} />\n  ) : (\n    <DesktopActions onDownload={handleDownload} />\n  );\n\n  console.log('loaded', loaded, images.length);\n  return (\n    <>\n      <View\n        open={open}\n        width={width}\n        height={height}\n        maxWidth={maxWidth}\n        maxHeight={maxHeight}\n        imageHeight={imageHeight}\n        images={images}\n        imgCount={imgCount}\n        handleLoad={handleLoad}\n        isTreeEmpty={isTreeEmpty}\n        header={header}\n        actions={actions}\n        downloadDialog={downloadDialog}\n        collage={collage}\n        controls={controls}\n        loading={loaded < images.length}\n      />\n      <input\n        ref={addImageRef}\n        type=\"file\"\n        hidden\n        multiple\n        accept=\"image/*\"\n        onChange={handleLoad}\n      />\n      {generate ? <Loading title=\"Creating collage ...\" /> : null}\n    </>\n  );\n}\n\nexport default CollageMaker;\n","import { useState, useEffect } from 'react';\nimport db from 'db';\nimport BinaryTree from 'components/collage/binaryTree';\n\nexport default function useCollageTree(\n  initialValue,\n  loadingCallback = () => {}\n) {\n  const tableName = 'collageTree';\n  const [value, setValue] = useState(initialValue);\n\n  async function setDataFromDB() {\n    const rows = await db.collageDB[tableName].toArray();\n    if (rows.length > 0) {\n      const newTree = new BinaryTree({});\n      newTree.fromObject({ root: rows[0].root });\n      if ('options' in rows[0].root) {\n        loadingCallback((opts) => ({ ...opts, ...rows[0].root.options }));\n      }\n      setValue(newTree);\n    }\n  }\n\n  useEffect(() => {\n    setDataFromDB();\n  }, []);\n\n  const addToDB = async (data) => {\n    const cleanedData = data.removeImageData();\n    await db.collageDB[tableName].put(cleanedData);\n  };\n\n  return [value, setValue, addToDB];\n}\n"],"names":["OptionsButton","children","onClick","name","Button","id","variant","component","sx","color","borderRadius","backgroundColor","padding","defaultProps","AddPhotos","handleChange","type","hidden","multiple","accept","onChange","fontSize","Typography","fontWeight","collageDB","Dexie","version","stores","images","originalImages","imgCount","collageTree","getClosest","arr","index1","index2","target","downscaleImage","image","newWidth","newHeight","fileType","canvas","document","createElement","width","height","getContext","drawImage","toDataURL","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","getCut","Math","round","random","findClosest","n","length","start","end","mid","findImgPair","i","j","minMatchingCost","abs","getAspectRatio","cut","ar1","ar2","handleImageLoad","event","maxWidth","handleImageCount","handleNewImageCount","handleImageData","files","cnt","Array","from","map","Image","e","naturalWidth","naturalHeight","src","title","Date","now","aspectRatio","dataurl","originalImageDetail","imageDetail","URL","revokeObjectURL","resizeImages","handleImages","addImagesToDB","tempImages","forEach","origImage","tempImage","push","imgs","ind","findIndex","elem","slice","wrapText","text","x","y","lineHeight","textCanvas","ctx","font","tempX","tempY","words","split","line","testLine","lineArray","measureText","convertToRGBA","value","r","g","b","a","getCollageDimension","maxW","maxH","origAR","Node","this","left","right","obj","fromObject","output","concat","display","copyNode","copy","newImages","replaceImages","removeImageData","imageData","find","addImageData","delImg","handleRemoveImage","yOffset","xOffset","handleCollageImageLoad","newX","newY","Box","alt","onLoad","console","log","position","top","Tooltip","IconButton","size","alpha","bgcolor","Delete","DOMDisplay","RenderImage","tempCanvas","tempCtx","scaleFactor","floor","log2","radius","clipwidth","clipheight","save","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","canvasElement","CanvasDisplay","newImg","ResizeImage","ImageStyling","clearRect","tar","imageCount","targetAspectRatioArr","closestIndex","helpers","restImages","targetAspectRatio","leftIndex","rightIndex","filter","item","index","includes","generate","th","adjustments","adjust","parentWidth","parentHeight","parentX","parentY","parentCut","nodeType","addSize","TextDisplay","textArray","chunk","transform","paddingX","margin","textAlign","fontFamily","BinaryTree","undefined","root","options","tempTree","canvasWidth","canvasHeight","topText","lA","textHeight","outline","fillStyle","fillRect","textBaseline","textPart","fillText","TextCanvasDraw","trys","bestAdjust","bestAspectRatio","tolerableDifference","ajstCnt","diff","copyTree","useIndexedDBState","tableName","initialValue","loadingCallback","useState","setValue","useEffect","db","toArray","rows","setDataFromDB","addToDB","data","put","useImageCount","count","clear","findBestAdjustTree","tolerance","imageWidth","imageHeight","sortedImages","sort","collageArray","imgTree","generateCollageTree","aspR","Header","headerRef","Paper","ref","alignItems","justifyContent","p","elevation","Link","href","underline","ArrowBack","DownloadDialog","open","onClose","sizes","Dialog","fullWidth","DialogTitle","DialogContent","dividers","DialogContentText","pr","FormControl","InputLabel","Select","labelId","defaultValue","label","Object","keys","key","MenuItem","DialogActions","disabled","Collage","tree","removeImage","collageCallback","generateCallback","printOptions","collage","setCollage","isEmpty","t","createCollage","addOptions","collageElem","paperWidth","paperHeight","imgPrintWidth","imgPrintHeight","canvasTree","setTimeout","pW","pH","toBlob","blob","link","download","createObjectURL","click","EmptyCollage","loadComponent","backgroundImage","collageBack","backgroundSize","objectFit","backgroundRepeat","View","loading","maxHeight","handleLoad","isTreeEmpty","header","actions","downloadDialog","controls","Loading","MBNA","icon","BottomNavigationAction","showLabel","toLowerCase","MobileActions","actionsRef","onDownload","BottomNavigation","showLabels","py","Save","Download","Print","PaddingControl","handlePaddingChange","Stack","direction","mixBlendMode","Slider","valueLabelDisplay","step","min","max","RadiusControl","handleRadiusChange","TextControl","handleTextChange","handlePositionChange","collageTextError","spacing","FormGroup","row","FormControlLabel","disableTypography","control","Checkbox","checked","TextField","mb","InputProps","helperText","ColorControl","displayColorPicker","handleClick","handleClose","my","background","boxShadow","cursor","ColorPicker","zIndex","bottom","border","Close","MainControls","AutoAwesomeMosaic","Photo","Edit","Refresh","EditOptions","editOptionsValue","handleOptionsClose","handleEditOptionsClick","borderTop","Padding","CropFree","Square","fill","Title","ImageOptions","handleDelete","handleAdd","AddPhotoAlternate","ClearCollageDialog","onSubmit","onCancel","noWrap","MobileControls","controlsRef","onRefresh","onDelete","onAdd","clearDelete","handleColorClose","handleColorClick","handleColorChange","handleClear","mainOpen","setMainOpen","editOpen","setEditOpen","clearOpen","setClearOpen","editControl","setEditControl","setEditOptionsValue","imageOpen","setImageOpen","imageValue","setImageValue","handleEditOptionsClose","mt","nV","newValue","DBNA","DesktopDrawer","anchor","Drawer","PaperProps","ControlsDivider","Divider","DesktopActions","List","DesktopControls","photosComp","editComp","imageOptionsOpen","setImageOptionsOpen","editOptionsOpen","setEditOptionsOpen","closeAll","handleClearClose","DesktopImageOptions","EditControl","useRef","footerRef","addImageRef","newImgCount","setNewImageCount","newImagesLoaded","setNewImagesLoaded","setImageCount","loaded","setLoaded","setImages","addToImagesDB","setOriginalImages","addToOriginalImagesDB","setPrintOptions","setGenerate","setHeight","setImageHeight","setImageWidth","refresh","setRefresh","setRemoveImage","setWidth","setMaxHeight","setMaxWidth","setOpen","setDisplayColorPicker","setOptions","setTextHeight","newTree","opts","cleanedData","useCollageTree","setTree","addTreeToDB","setDimensions","otherHeight","current","offsetHeight","window","innerWidth","innerHeight","w","h","treeUtils","bestAspectRatioTree","handleImageAddClick","dcp","clr","rgb","handleDownload","addEventListener","removeEventListener","ri","tH","A4","A3","imgTitle","removeIndex","newImagesArr","someTree","mobileControls","desktopPhotosComp","desktopEditComp","desktopControls","isMobile"],"sourceRoot":""}